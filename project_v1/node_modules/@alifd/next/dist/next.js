/*!
 * @alifd/next@1.27.11 (https://fusion.design)
 * Copyright 2018-present Alibaba Group,
 * Licensed under MIT (https://github.com/alibaba-fusion/next/blob/master/LICENSE)
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"), require("moment"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-dom", "moment"], factory);
	else if(typeof exports === 'object')
		exports["Next"] = factory(require("react"), require("react-dom"), require("moment"));
	else
		root["Next"] = factory(root["React"], root["ReactDOM"], root["moment"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_20__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 476);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) {
  var ReactIs = require('react-is');

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(202)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__(230);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.pickAttrs = exports.datejs = exports.htmlId = exports.KEYCODE = exports.guid = exports.focus = exports.support = exports.str = exports.obj = exports.log = exports.func = exports.events = exports.env = exports.dom = void 0;
var tslib_1 = __webpack_require__(9);
var _dom = tslib_1.__importStar(__webpack_require__(110));
var _env = tslib_1.__importStar(__webpack_require__(122));
var _events = tslib_1.__importStar(__webpack_require__(234));
var _func = tslib_1.__importStar(__webpack_require__(235));
var _log = tslib_1.__importStar(__webpack_require__(83));
var _object = tslib_1.__importStar(__webpack_require__(37));
var _string = tslib_1.__importStar(__webpack_require__(121));
var _support = tslib_1.__importStar(__webpack_require__(244));
var _focus = tslib_1.__importStar(__webpack_require__(245));
var _htmlId = tslib_1.__importStar(__webpack_require__(246));
var guid_1 = tslib_1.__importDefault(__webpack_require__(125));
var keycode_1 = tslib_1.__importDefault(__webpack_require__(124));
var date_1 = tslib_1.__importDefault(__webpack_require__(84));
var pick_attrs_1 = tslib_1.__importDefault(__webpack_require__(247));
exports.dom = _dom;
exports.env = _env;
exports.events = _events;
exports.func = _func;
exports.log = _log;
exports.obj = _object;
exports.str = _string;
exports.support = _support;
exports.focus = _focus;
exports.guid = guid_1.default;
exports.KEYCODE = keycode_1.default;
exports.htmlId = _htmlId;
exports.datejs = date_1.default;
exports.pickAttrs = pick_attrs_1.default;
tslib_1.__exportStar(__webpack_require__(248), exports);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(269);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(273);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;
	var nativeCodeString = '[native code]';

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
					classes.push(arg.toString());
					continue;
				}

				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = __webpack_require__(0);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var get_context_props_1 = tslib_1.__importDefault(__webpack_require__(126));
var config_1 = __webpack_require__(249);
var consumer_1 = tslib_1.__importDefault(__webpack_require__(253));
var error_boundary_1 = tslib_1.__importDefault(__webpack_require__(127));
var cache_1 = tslib_1.__importDefault(__webpack_require__(254));
var date_1 = tslib_1.__importDefault(__webpack_require__(84));
var childContextCache = new cache_1.default();
var setMomentLocale = function setMomentLocale(locale) {
    return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var moment, e_1;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2,, 3]);
                    return [4 /*yield*/, Promise.resolve().then(function () {
                        return tslib_1.__importStar(__webpack_require__(20));
                    })];
                case 1:
                    moment = _a.sent();
                    if (moment && moment.default && moment.default.isMoment) moment = moment.default;
                    return [3 /*break*/, 3];
                case 2:
                    e_1 = _a.sent();
                    return [3 /*break*/, 3];
                case 3:
                    if (moment && moment.locale && locale) {
                        moment.locale(locale.momentLocale);
                    }
                    return [2 /*return*/];
            }
        });
    });
};
var setDateLocale = function setDateLocale(locale) {
    if (locale) {
        date_1.default.locale(locale.dateLocale || locale.momentLocale);
    }
};
var ConfigProvider = /** @class */function (_super) {
    tslib_1.__extends(ConfigProvider, _super);
    function ConfigProvider(props, context) {
        var _this = _super.call(this, props, context) || this;
        childContextCache.add(_this, (0, _extends3.default)({}, childContextCache.get(_this, {}), _this.getChildContext()));
        setMomentLocale(_this.props.locale);
        setDateLocale(_this.props.locale);
        _this.state = {
            locale: _this.props.locale
        };
        return _this;
    }
    ConfigProvider.prototype.getChildContext = function () {
        var _a = this.props,
            prefix = _a.prefix,
            locale = _a.locale,
            defaultPropsConfig = _a.defaultPropsConfig,
            pure = _a.pure,
            warning = _a.warning,
            rtl = _a.rtl,
            device = _a.device,
            popupContainer = _a.popupContainer,
            errorBoundary = _a.errorBoundary;
        var _b = this.context,
            nextPrefix = _b.nextPrefix,
            nextDefaultPropsConfig = _b.nextDefaultPropsConfig,
            nextLocale = _b.nextLocale,
            nextPure = _b.nextPure,
            nextRtl = _b.nextRtl,
            nextWarning = _b.nextWarning,
            nextDevice = _b.nextDevice,
            nextPopupContainer = _b.nextPopupContainer,
            nextErrorBoundary = _b.nextErrorBoundary;
        return {
            nextPrefix: prefix || nextPrefix,
            nextDefaultPropsConfig: defaultPropsConfig || nextDefaultPropsConfig,
            nextLocale: locale || nextLocale,
            nextPure: typeof pure === 'boolean' ? pure : nextPure,
            nextRtl: typeof rtl === 'boolean' ? rtl : nextRtl,
            nextWarning: typeof warning === 'boolean' ? warning : nextWarning,
            nextDevice: device || nextDevice,
            nextPopupContainer: popupContainer || nextPopupContainer,
            nextErrorBoundary: errorBoundary || nextErrorBoundary
        };
    };
    ConfigProvider.getDerivedStateFromProps = function (nextProps, prevState) {
        if (nextProps.locale !== prevState.locale) {
            setMomentLocale(nextProps.locale);
            setDateLocale(nextProps.locale);
            return {
                locale: nextProps.locale
            };
        }
        return null;
    };
    ConfigProvider.prototype.componentDidUpdate = function () {
        childContextCache.add(this, (0, _extends3.default)({}, childContextCache.get(this, {}), this.getChildContext()));
    };
    ConfigProvider.prototype.componentWillUnmount = function () {
        childContextCache.remove(this);
    };
    ConfigProvider.prototype.render = function () {
        return react_1.Children.only(this.props.children);
    };
    ConfigProvider.propTypes = {
        /**
         * 样式类名的品牌前缀
         */
        prefix: prop_types_1.default.string,
        /**
         * 国际化文案对象，属性为组件的 displayName
         */
        locale: prop_types_1.default.object,
        /**
         * 组件 API 的默认配置
         */
        defaultPropsConfig: prop_types_1.default.object,
        /**
         * 是否开启错误捕捉 errorBoundary
         * 如需自定义参数，请传入对象 对象接受参数列表如下：
         *
         * fallbackUI `Function(error?: {}, errorInfo?: {}) => Element` 捕获错误后的展示
         * afterCatch `Function(error?: {}, errorInfo?: {})` 捕获错误后的行为，比如埋点上传
         */
        errorBoundary: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object]),
        /**
         * 是否开启 Pure Render 模式，会提高性能，但是也会带来副作用
         */
        pure: prop_types_1.default.bool,
        /**
         * 是否在开发模式下显示组件属性被废弃的 warning 提示
         */
        warning: prop_types_1.default.bool,
        /**
         * 是否开启 rtl 模式
         */
        rtl: prop_types_1.default.bool,
        /**
         * 设备类型，针对不同的设备类型组件做出对应的响应式变化
         */
        device: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']),
        /**
         * 组件树
         */
        children: prop_types_1.default.any,
        /**
         * 指定浮层渲染的父节点，可以为节点 id 的字符串，也可以返回节点的函数
         */
        popupContainer: prop_types_1.default.any
    };
    ConfigProvider.defaultProps = {
        warning: true,
        errorBoundary: false
    };
    ConfigProvider.contextTypes = {
        nextPrefix: prop_types_1.default.string,
        nextLocale: prop_types_1.default.object,
        nextDefaultPropsConfig: prop_types_1.default.object,
        nextPure: prop_types_1.default.bool,
        nextRtl: prop_types_1.default.bool,
        nextWarning: prop_types_1.default.bool,
        nextDevice: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']),
        nextPopupContainer: prop_types_1.default.any,
        nextErrorBoundary: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object])
    };
    ConfigProvider.childContextTypes = {
        nextPrefix: prop_types_1.default.string,
        nextLocale: prop_types_1.default.object,
        nextDefaultPropsConfig: prop_types_1.default.object,
        nextPure: prop_types_1.default.bool,
        nextRtl: prop_types_1.default.bool,
        nextWarning: prop_types_1.default.bool,
        nextDevice: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']),
        nextPopupContainer: prop_types_1.default.any,
        nextErrorBoundary: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object])
    };
    /**
     * 传入组件，生成受 ConfigProvider 控制的 HOC 组件
     * @param Component - 组件类
     * @param options - 可选项
     * @returns 被 HOC 后的组件
     */
    ConfigProvider.config = config_1.config;
    ConfigProvider.initLocales = config_1.initLocales;
    ConfigProvider.setLanguage = config_1.setLanguage;
    ConfigProvider.setLocale = config_1.setLocale;
    ConfigProvider.setDirection = config_1.setDirection;
    ConfigProvider.getLanguage = config_1.getLanguage;
    ConfigProvider.getLocale = config_1.getLocale;
    ConfigProvider.getDirection = config_1.getDirection;
    ConfigProvider.Consumer = consumer_1.default;
    ConfigProvider.ErrorBoundary = error_boundary_1.default;
    /**
     * 传入组件的 props 和 displayName，得到和 childContext 计算过的包含有 preifx/locale/pure 的对象，一般用于通过静态方法生成脱离组件树的组件
     * @param props - 组件的 props
     * @param displayName - 组件的 displayName
     * @returns 新的 context props
     */
    ConfigProvider.getContextProps = function (props, displayName) {
        return (0, get_context_props_1.default)(props, childContextCache.root() || {}, displayName);
    };
    ConfigProvider.clearCache = function () {
        childContextCache.clear();
    };
    ConfigProvider.getContext = function () {
        var _a = childContextCache.root() || {},
            nextPrefix = _a.nextPrefix,
            nextLocale = _a.nextLocale,
            nextDefaultPropsConfig = _a.nextDefaultPropsConfig,
            nextPure = _a.nextPure,
            nextRtl = _a.nextRtl,
            nextWarning = _a.nextWarning,
            nextDevice = _a.nextDevice,
            nextPopupContainer = _a.nextPopupContainer,
            nextErrorBoundary = _a.nextErrorBoundary;
        return {
            prefix: nextPrefix,
            locale: nextLocale,
            defaultPropsConfig: nextDefaultPropsConfig,
            pure: nextPure,
            rtl: nextRtl,
            warning: nextWarning,
            device: nextDevice,
            popupContainer: nextPopupContainer,
            errorBoundary: nextErrorBoundary
        };
    };
    return ConfigProvider;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(ConfigProvider);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["__extends"] = __extends;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (immutable) */ __webpack_exports__["__rest"] = __rest;
/* harmony export (immutable) */ __webpack_exports__["__decorate"] = __decorate;
/* harmony export (immutable) */ __webpack_exports__["__param"] = __param;
/* harmony export (immutable) */ __webpack_exports__["__esDecorate"] = __esDecorate;
/* harmony export (immutable) */ __webpack_exports__["__runInitializers"] = __runInitializers;
/* harmony export (immutable) */ __webpack_exports__["__propKey"] = __propKey;
/* harmony export (immutable) */ __webpack_exports__["__setFunctionName"] = __setFunctionName;
/* harmony export (immutable) */ __webpack_exports__["__metadata"] = __metadata;
/* harmony export (immutable) */ __webpack_exports__["__awaiter"] = __awaiter;
/* harmony export (immutable) */ __webpack_exports__["__generator"] = __generator;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (immutable) */ __webpack_exports__["__exportStar"] = __exportStar;
/* harmony export (immutable) */ __webpack_exports__["__values"] = __values;
/* harmony export (immutable) */ __webpack_exports__["__read"] = __read;
/* harmony export (immutable) */ __webpack_exports__["__spread"] = __spread;
/* harmony export (immutable) */ __webpack_exports__["__spreadArrays"] = __spreadArrays;
/* harmony export (immutable) */ __webpack_exports__["__spreadArray"] = __spreadArray;
/* harmony export (immutable) */ __webpack_exports__["__await"] = __await;
/* harmony export (immutable) */ __webpack_exports__["__asyncGenerator"] = __asyncGenerator;
/* harmony export (immutable) */ __webpack_exports__["__asyncDelegator"] = __asyncDelegator;
/* harmony export (immutable) */ __webpack_exports__["__asyncValues"] = __asyncValues;
/* harmony export (immutable) */ __webpack_exports__["__makeTemplateObject"] = __makeTemplateObject;
/* harmony export (immutable) */ __webpack_exports__["__importStar"] = __importStar;
/* harmony export (immutable) */ __webpack_exports__["__importDefault"] = __importDefault;
/* harmony export (immutable) */ __webpack_exports__["__classPrivateFieldGet"] = __classPrivateFieldGet;
/* harmony export (immutable) */ __webpack_exports__["__classPrivateFieldSet"] = __classPrivateFieldSet;
/* harmony export (immutable) */ __webpack_exports__["__classPrivateFieldIn"] = __classPrivateFieldIn;
/* harmony export (immutable) */ __webpack_exports__["__addDisposableResource"] = __addDisposableResource;
/* harmony export (immutable) */ __webpack_exports__["__disposeResources"] = __disposeResources;
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};

function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};

function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        env.stack.push({ value: value, dispose: dispose, async: async });
    }
    else if (async) {
        env.stack.push({ async: true });
    }
    return value;
}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    function next() {
        while (env.stack.length) {
            var rec = env.stack.pop();
            try {
                var result = rec.dispose && rec.dispose.call(rec.value);
                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
            }
            catch (e) {
                fail(e);
            }
        }
        if (env.hasError) throw env.error;
    }
    return next();
}

/* harmony default export */ __webpack_exports__["default"] = ({
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources,
});


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyfill", function() { return polyfill; });
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
  // Call this.constructor.gDSFP to support sub-classes.
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== undefined) {
    this.setState(state);
  }
}

function componentWillReceiveProps(nextProps) {
  // Call this.constructor.gDSFP to support sub-classes.
  // Use the setState() updater to ensure state isn't stale in certain edge cases.
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== undefined ? state : null;
  }
  // Binding "this" is important for shallow renderer support.
  this.setState(updater.bind(this));
}

function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

function polyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  }

  if (
    typeof Component.getDerivedStateFromProps !== 'function' &&
    typeof prototype.getSnapshotBeforeUpdate !== 'function'
  ) {
    return Component;
  }

  // If new component APIs are defined, "unsafe" lifecycles won't be called.
  // Error if any of these lifecycles are present,
  // Because they would work differently between older and newer (16.3+) versions of React.
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === 'function') {
    foundWillMountName = 'componentWillMount';
  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
    foundWillMountName = 'UNSAFE_componentWillMount';
  }
  if (typeof prototype.componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'componentWillReceiveProps';
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
  }
  if (typeof prototype.componentWillUpdate === 'function') {
    foundWillUpdateName = 'componentWillUpdate';
  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
  }
  if (
    foundWillMountName !== null ||
    foundWillReceivePropsName !== null ||
    foundWillUpdateName !== null
  ) {
    var componentName = Component.displayName || Component.name;
    var newApiName =
      typeof Component.getDerivedStateFromProps === 'function'
        ? 'getDerivedStateFromProps()'
        : 'getSnapshotBeforeUpdate()';

    throw Error(
      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
        componentName +
        ' uses ' +
        newApiName +
        ' but also contains the following legacy lifecycles:' +
        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
        (foundWillReceivePropsName !== null
          ? '\n  ' + foundWillReceivePropsName
          : '') +
        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
        'https://fb.me/react-async-component-lifecycle-hooks'
    );
  }

  // React <= 16.2 does not support static getDerivedStateFromProps.
  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
  // Newer versions of React will ignore these lifecycles if gDSFP exists.
  if (typeof Component.getDerivedStateFromProps === 'function') {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }

  // React <= 16.2 does not support getSnapshotBeforeUpdate.
  // As a workaround, use cWU to invoke the new lifecycle.
  // Newer versions of React will ignore that lifecycle if gSBU exists.
  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
    if (typeof prototype.componentDidUpdate !== 'function') {
      throw new Error(
        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
      );
    }

    prototype.componentWillUpdate = componentWillUpdate;

    var componentDidUpdate = prototype.componentDidUpdate;

    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
      prevProps,
      prevState,
      maybeSnapshot
    ) {
      // 16.3+ will not execute our will-update method;
      // It will pass a snapshot value to did-update though.
      // Older versions will require our polyfilled will-update value.
      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
      // Because for <= 15.x versions this might be a "prevContext" object.
      // We also can't just check "__reactInternalSnapshot",
      // Because get-snapshot might return a falsy value.
      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
      var snapshot = this.__reactInternalSnapshotFlag
        ? this.__reactInternalSnapshot
        : maybeSnapshot;

      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }

  return Component;
}




/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _iconFont = __webpack_require__(283);

var _iconFont2 = _interopRequireDefault(_iconFont);

var _icon = __webpack_require__(137);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

_icon2.default.createFromIconfontCN = _iconFont2.default;

exports.default = _configProvider2.default.config(_icon2.default);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var locale = {
    momentLocale: 'zh-cn',
    Timeline: {
        expand: '展开',
        fold: '收起'
    },
    Balloon: {
        close: '关闭'
    },
    Card: {
        expand: '展开',
        fold: '收起'
    },
    Calendar: {
        today: '今天',
        now: '此刻',
        ok: '确定',
        clear: '清除',
        month: '月',
        year: '年',
        prevYear: '上一年',
        nextYear: '下一年',
        prevMonth: '上个月',
        nextMonth: '下个月',
        prevDecade: '上十年',
        nextDecade: '后十年',
        yearSelectAriaLabel: '选择年份',
        monthSelectAriaLabel: '选择月份'
    },
    DatePicker: {
        placeholder: '请选择日期',
        datetimePlaceholder: '请选择日期和时间',
        monthPlaceholder: '请选择月',
        yearPlaceholder: '请选择年',
        weekPlaceholder: '请选择周',
        now: '此刻',
        selectTime: '选择时间',
        selectDate: '选择日期',
        ok: '确定',
        clear: '清除',
        startPlaceholder: '起始日期',
        endPlaceholder: '结束日期',
        hour: '时',
        minute: '分',
        second: '秒'
    },
    Dialog: {
        close: '关闭',
        ok: '确定',
        cancel: '取消'
    },
    Drawer: {
        close: '关闭'
    },
    Message: {
        closeAriaLabel: '关闭'
    },
    Pagination: {
        prev: '上一页',
        next: '下一页',
        goTo: '到第',
        page: '页',
        go: '确定',
        total: '第{current}页，共{total}页',
        labelPrev: '上一页，当前第{current}页',
        labelNext: '下一页，当前第{current}页',
        inputAriaLabel: '请输入跳转到第几页',
        selectAriaLabel: '请选择每页显示几条',
        pageSize: '每页显示：'
    },
    Input: {
        clear: '清除'
    },
    TextArea: {
        clear: '清除'
    },
    List: {
        empty: '没有数据'
    },
    Select: {
        selectPlaceholder: '请选择',
        autoCompletePlaceholder: '请输入',
        notFoundContent: '无选项',
        maxTagPlaceholder: '已选择 {selected}/{total} 项',
        selectAll: '全选'
    },
    TreeSelect: {
        maxTagPlaceholder: '已选择 {selected}/{total} 项',
        shortMaxTagPlaceholder: '已选择 {selected} 项'
    },
    Table: {
        empty: '没有数据',
        ok: '确认',
        reset: '重置',
        asc: '升序',
        desc: '降序',
        expanded: '已展开',
        folded: '已折叠',
        filter: '筛选',
        selectAll: '全选'
    },
    TimePicker: {
        placeholder: '请选择时间',
        clear: '清除',
        hour: '时',
        minute: '分',
        second: '秒',
        ok: '确定'
    },
    Transfer: {
        items: '项',
        item: '项',
        moveAll: '移动全部',
        searchPlaceholder: '请输入',
        moveToLeft: '撤销选中元素',
        moveToRight: '提交选中元素'
    },
    Upload: {
        card: {
            cancel: '取消',
            addPhoto: '上传图片',
            download: '下载',
            delete: '删除'
        },
        drag: {
            text: '点击或者拖动文件到虚线框内上传',
            hint: '支持 docx, xls, PDF, rar, zip, PNG, JPG 等类型的文件'
        },
        upload: {
            delete: '删除'
        }
    },
    Search: {
        buttonText: '搜索'
    },
    Tag: {
        delete: '删除'
    },
    Rating: {
        description: '评分选项'
    },
    Switch: {
        on: '已打开',
        off: '已关闭'
    },
    Tab: {
        closeAriaLabel: '关闭'
    },
    Form: {
        Validate: {
            default: '%s 校验失败',
            required: '%s 是必填字段',
            format: {
                number: '%s 不是合法的数字',
                email: '%s 不是合法的 email 地址',
                url: '%s 不是合法的 URL 地址',
                tel: '%s 不是合法的电话号码'
            },
            number: {
                length: '%s 长度必须是 %s',
                min: '%s 不得小于 %s',
                max: '%s 不得大于 %s',
                minLength: '%s 字段字符长度不得少于 %s',
                maxLength: '%s 字段字符长度不得超过 %s'
            },
            string: {
                length: '%s 长度必须是 %s',
                min: '%s 不得小于 %s',
                max: '%s 不得大于 %s',
                minLength: '%s 长度不得少于 %s',
                maxLength: '%s 长度不得超过 %s'
            },
            array: {
                length: '%s 个数必须是 %s',
                minLength: '%s 个数不得少于 %s',
                maxLength: '%s 个数不得超过 %s'
            },
            pattern: '%s 数值 %s 不匹配正则 %s'
        }
    }
};
exports.default = locale;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(204);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(220);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _overlay = __webpack_require__(132);

var _overlay2 = _interopRequireDefault(_overlay);

var _overlayV = __webpack_require__(278);

var _overlayV2 = _interopRequireDefault(_overlayV);

var _gateway = __webpack_require__(133);

var _gateway2 = _interopRequireDefault(_gateway);

var _position = __webpack_require__(134);

var _position2 = _interopRequireDefault(_position);

var _popup = __webpack_require__(281);

var _popup2 = _interopRequireDefault(_popup);

var _popupV = __webpack_require__(282);

var _popupV2 = _interopRequireDefault(_popupV);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Overlay = function (_React$Component) {
    (0, _inherits3.default)(Overlay, _React$Component);

    function Overlay(props) {
        (0, _classCallCheck3.default)(this, Overlay);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.overlayRef = null;
        _this.saveRef = _this.saveRef.bind(_this);
        return _this;
    }

    Overlay.prototype.saveRef = function saveRef(ref) {
        this.overlayRef = ref;
    };
    /**
     * 兼容 1.x API, will be removed in 2.1.0
     */

    Overlay.prototype.getContent = function getContent() {
        if (this.overlayRef) {
            return this.overlayRef.getContent();
        }
        return null;
    };
    /**
     * 兼容 1.x API, will be removed in 2.1.0
     */

    Overlay.prototype.getContentNode = function getContentNode() {
        if (this.overlayRef) {
            return this.overlayRef.getContentNode();
        }
        return null;
    };

    Overlay.prototype.render = function render() {
        var _props = this.props,
            v2 = _props.v2,
            others = (0, _objectWithoutProperties3.default)(_props, ['v2']);

        if (v2) {
            if ('needAdjust' in others) {
                _util.log.deprecated('needAdjust', 'autoAdjust', 'Overlay v2');
                others.autoAdjust = others.needAdjust;
                delete others.needAdjust;
            }
            return _react2.default.createElement(_overlayV2.default, others);
        } else {
            return _react2.default.createElement(_overlay2.default, (0, _extends3.default)({}, others, { ref: this.saveRef }));
        }
    };

    return Overlay;
}(_react2.default.Component);
// eslint-disable-next-line


Overlay.displayName = 'Overlay';

var Popup = function (_React$Component2) {
    (0, _inherits3.default)(Popup, _React$Component2);

    function Popup(props) {
        (0, _classCallCheck3.default)(this, Popup);

        var _this2 = (0, _possibleConstructorReturn3.default)(this, _React$Component2.call(this, props));

        _this2.overlay = null;
        _this2.saveRef = _this2.saveRef.bind(_this2);
        return _this2;
    }

    Popup.prototype.saveRef = function saveRef(ref) {
        if (ref) {
            this.overlay = ref.overlay;
        }
    };

    Popup.prototype.render = function render() {
        var _props2 = this.props,
            v2 = _props2.v2,
            others = (0, _objectWithoutProperties3.default)(_props2, ['v2']);

        if (v2) {
            if ('needAdjust' in others) {
                _util.log.deprecated('needAdjust', 'needAdjust', 'Popup v2');
                others.autoAdjust = others.needAdjust;
                delete others.needAdjust;
            }

            if ('shouldUpdatePosition' in others) {
                delete others.shouldUpdatePosition;
            }

            return _react2.default.createElement(_popupV2.default, others);
        } else {
            return _react2.default.createElement(_popup2.default, (0, _extends3.default)({}, others, { ref: this.saveRef }));
        }
    };

    return Popup;
}(_react2.default.Component);

Popup.displayName = 'Popup';

Overlay.Gateway = _gateway2.default;
Overlay.Position = _position2.default;
Overlay.Popup = _configProvider2.default.config(Popup, {
    exportNames: ['overlay']
});

exports.default = _configProvider2.default.config(Overlay, {
    exportNames: ['getContent', 'getContentNode']
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _menu = __webpack_require__(139);

var _menu2 = _interopRequireDefault(_menu);

var _subMenu = __webpack_require__(140);

var _subMenu2 = _interopRequireDefault(_subMenu);

var _selectableItem = __webpack_require__(88);

var _selectableItem2 = _interopRequireDefault(_selectableItem);

var _checkboxItem = __webpack_require__(287);

var _checkboxItem2 = _interopRequireDefault(_checkboxItem);

var _radioItem = __webpack_require__(292);

var _radioItem2 = _interopRequireDefault(_radioItem);

var _popupItem = __webpack_require__(141);

var _popupItem2 = _interopRequireDefault(_popupItem);

var _group = __webpack_require__(293);

var _group2 = _interopRequireDefault(_group);

var _divider = __webpack_require__(294);

var _divider2 = _interopRequireDefault(_divider);

var _create = __webpack_require__(295);

var _create2 = _interopRequireDefault(_create);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_menu2.default.SubMenu = _subMenu2.default;
_menu2.default.Item = _selectableItem2.default;
_menu2.default.CheckboxItem = _checkboxItem2.default;
_menu2.default.RadioItem = _radioItem2.default;
_menu2.default.PopupItem = _popupItem2.default;
_menu2.default.Group = _group2.default;
_menu2.default.Divider = _divider2.default;
_menu2.default.create = _create2.default;

/* istanbul ignore next */
var transform = function transform(props, deprecated) {
    if ('indentSize' in props) {
        deprecated('indentSize', 'inlineIndent', 'Menu');

        var _props = props,
            indentSize = _props.indentSize,
            others = (0, _objectWithoutProperties3.default)(_props, ['indentSize']);

        props = (0, _extends3.default)({ inlineIndent: indentSize }, others);
    }

    if ('onDeselect' in props) {
        deprecated('onDeselect', 'onSelect', 'Menu');
        if (props.onDeselect) {
            var _props2 = props,
                onDeselect = _props2.onDeselect,
                onSelect = _props2.onSelect,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['onDeselect', 'onSelect']);

            var newOnSelect = function newOnSelect(selectedKeys, item, extra) {
                if (!extra.select) {
                    onDeselect(extra.key);
                }
                if (onSelect) {
                    onSelect(selectedKeys, item, extra);
                }
            };

            props = (0, _extends3.default)({ onSelect: newOnSelect }, _others);
        }
    }

    return props;
};

exports.default = _configProvider2.default.config(_menu2.default, {
    transform: transform
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var component_1 = __webpack_require__(22);
var button_1 = tslib_1.__importDefault(__webpack_require__(297));
var group_1 = tslib_1.__importDefault(__webpack_require__(298));
var WithSubButton = (0, component_1.assignSubComponent)(button_1.default, { Group: group_1.default });
exports.default = config_provider_1.default.config(WithSubButton, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'text | warning | ghost', 'Button');
            var shape = props.shape,
                type = props.type,
                others = tslib_1.__rest(props, ["shape", "type"]);
            var newType = type;
            if (type === 'light' || type === 'dark' || type === 'secondary' && shape === 'warning') {
                newType = 'normal';
            }
            var ghost = void 0;
            if (shape === 'ghost') {
                ghost = {
                    primary: 'dark',
                    secondary: 'dark',
                    normal: 'light',
                    dark: 'dark',
                    light: 'light'
                }[type || button_1.default.defaultProps.type];
            }
            var text = shape === 'text';
            var warning = shape === 'warning';
            return tslib_1.__assign({ type: newType, ghost: ghost, text: text, warning: warning }, others);
        }
        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _input = __webpack_require__(147);

var _input2 = _interopRequireDefault(_input);

var _password = __webpack_require__(305);

var _password2 = _interopRequireDefault(_password);

var _textarea = __webpack_require__(306);

var _textarea2 = _interopRequireDefault(_textarea);

var _group = __webpack_require__(149);

var _group2 = _interopRequireDefault(_group);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_input2.default.Password = _configProvider2.default.config(_password2.default, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');
            var _props = props,
                hasLimitHint = _props.hasLimitHint,
                others = (0, _objectWithoutProperties3.default)(_props, ['hasLimitHint']);

            props = (0, _extends3.default)({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
});

_input2.default.TextArea = _configProvider2.default.config(_textarea2.default, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');
            var _props2 = props,
                hasLimitHint = _props2.hasLimitHint,
                others = (0, _objectWithoutProperties3.default)(_props2, ['hasLimitHint']);

            props = (0, _extends3.default)({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
});
_input2.default.Group = _group2.default;

// 用来自动生成文档的工具底层依赖的 react-docgen，无法解析生成 HOC 的方法中存在第二个参数的情况
// 所以不能在 input.jsx／textarea.jsx 中生成 HOC
exports.default = _configProvider2.default.config(_input2.default, {
    exportNames: ['getInputNode', 'focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasLimitHint' in props) {
            deprecated('hasLimitHint', 'showLimitHint', 'Input');
            var _props3 = props,
                hasLimitHint = _props3.hasLimitHint,
                others = (0, _objectWithoutProperties3.default)(_props3, ['hasLimitHint']);

            props = (0, _extends3.default)({ showLimitHint: hasLimitHint }, others);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_20__;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var component_1 = __webpack_require__(22);
var animate_1 = tslib_1.__importDefault(__webpack_require__(128));
var expand_1 = tslib_1.__importDefault(__webpack_require__(264));
var overlay_animate_1 = tslib_1.__importDefault(__webpack_require__(265));
var AnimateWithSubComponent = (0, component_1.assignSubComponent)(animate_1.default, { Expand: expand_1.default, OverlayAnimate: overlay_animate_1.default });
exports.default = AnimateWithSubComponent;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.assignSubComponent = void 0;
function assignSubComponent(Component, SubComponents) {
    for (var key in SubComponents) {
        if (Object.prototype.hasOwnProperty.call(SubComponents, key)) {
            Component[key] = SubComponents[key];
        }
    }
    return Component;
}
exports.assignSubComponent = assignSubComponent;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.setStickyStyle = exports.fetchDataByPath = exports.statics = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var blackList = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes', 'displayName', 'getDerivedStateFromProps'];

var statics = exports.statics = function statics(Target, Component) {
    Object.keys(Component).forEach(function (property) {
        if (blackList.indexOf(property) === -1) {
            Target[property] = Component[property];
        }
    });
};

var fetchDataByPath = exports.fetchDataByPath = function fetchDataByPath(object, path) {
    if (!object || !path) {
        return false;
    }
    path = path.toString();
    var field = path.split('.');
    var val = void 0,
        key = void 0;
    if (field.length) {
        key = field[0];
        // lists[1].name
        if (key.indexOf('[') >= 0) {
            key = key.match(/(.*)\[(.*)\]/);
            if (key && (0, _typeof3.default)(key[1]) === 'object' && (0, _typeof3.default)(object[key[1]]) === 'object') {
                val = object[key[1]][key[2]];
            }
        } else {
            val = object[field[0]];
        }
        if (val) {
            for (var colIndex = 1; colIndex < field.length; colIndex++) {
                val = val[field[colIndex]];
                if (typeof val === 'undefined') {
                    break;
                }
            }
        }
    }
    return val;
};

/**
 * @param {Array} lockChildren
 * @param {String} dir 'left', 'right'
 */
var setStickyStyle = exports.setStickyStyle = function setStickyStyle(lockChildren, flatenChildren, dir) {
    var offsetArr = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var prefix = arguments[4];

    var len = flatenChildren.length;

    flatenChildren.forEach(function (col, index) {
        var _classnames;

        var isLeftLast = dir === 'left' && index === len - 1;
        var isRightFirst = dir === 'right' && index === 0;
        var style = {
            position: 'sticky'
        };
        var offset = offsetArr[index];

        if (offset > -1) {
            style[dir] = offset;
        }

        col.className = (0, _classnames4.default)(col.className, (_classnames = {}, _classnames[prefix + 'table-fix-' + dir] = true, _classnames[prefix + 'table-fix-left-last'] = isLeftLast, _classnames[prefix + 'table-fix-right-first'] = isRightFirst, _classnames));
        col.style = (0, _extends3.default)({}, col.style, style);
        col.cellStyle = style;
    });

    var setOffset = function setOffset(col, index, dir, isBorder) {
        var _classnames2;

        var style = {
            position: 'sticky'
        };
        var offset = offsetArr[index];

        if (offset > -1) {
            style[dir] = offset;
        }

        col.className = (0, _classnames4.default)(col.className, (_classnames2 = {}, _classnames2[prefix + 'table-fix-' + dir] = true, _classnames2[prefix + 'table-fix-left-last'] = dir === 'left' && isBorder, _classnames2[prefix + 'table-fix-right-first'] = dir === 'right' && isBorder, _classnames2));
        col.style = (0, _extends3.default)({}, col.style, style);
        col.cellStyle = style;
    };

    // 查看当前元素的叶子结点数量
    var getLeafNodes = function getLeafNodes(node) {
        var nodesLen = 0;
        var arrLen = Array.isArray(node && node.children) && node.children.length || 0;
        if (arrLen > 0) {
            nodesLen = node.children.reduce(function (ret, item, idx) {
                return ret + getLeafNodes(item.children);
            }, 0);
        } else {
            nodesLen = 1;
        }
        return nodesLen;
    };

    var getPreNodes = function getPreNodes(arr, idx) {
        return arr.reduce(function (ret, item, i) {
            if (i < idx) {
                return ret + getLeafNodes(item);
            }
            return ret;
        }, 0);
    };

    // for multiple header
    // nodesLen 前序叶子结点数
    var loop = function loop(arr, i) {
        dir === 'right' && arr.reverse();
        arr.forEach(function (child, j) {
            var p = dir === 'right' ? i - getPreNodes(arr, j) : i + getPreNodes(arr, j);
            if (child.children) {
                // 合并单元格的节点
                loop(child.children, p);
                // 查询当前元素下的 前序叶子结点数 比如为n
                // const isBorder = (dir === 'right' && j === 0) || (dir === 'left' && j === (arr.length - 1));
                setOffset(child, p, dir, j === arr.length - 1);
            }
        });
        dir === 'right' && arr.reverse();
    };

    loop(lockChildren, dir === 'left' ? 0 : len - 1);
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getLocaleData = exports.CALENDAR_MODES = exports.CALENDAR_MODE_DATE = exports.CALENDAR_MODE_MONTH = exports.CALENDAR_MODE_YEAR = exports.YEAR_TABLE_COL_COUNT = exports.YEAR_TABLE_ROW_COUNT = exports.MONTH_TABLE_COL_COUNT = exports.MONTH_TABLE_ROW_COUNT = exports.CALENDAR_TABLE_ROW_COUNT = exports.CALENDAR_TABLE_COL_COUNT = exports.DAYS_OF_WEEK = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

exports.isDisabledDate = isDisabledDate;
exports.checkMomentObj = checkMomentObj;
exports.formatDateValue = formatDateValue;
exports.getVisibleMonth = getVisibleMonth;
exports.isSameYearMonth = isSameYearMonth;
exports.preFormatDateValue = preFormatDateValue;
exports.getYears = getYears;
exports.getMonths = getMonths;

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DAYS_OF_WEEK = exports.DAYS_OF_WEEK = 7;

var CALENDAR_TABLE_COL_COUNT = exports.CALENDAR_TABLE_COL_COUNT = 7;

var CALENDAR_TABLE_ROW_COUNT = exports.CALENDAR_TABLE_ROW_COUNT = 6;

var MONTH_TABLE_ROW_COUNT = exports.MONTH_TABLE_ROW_COUNT = 4;

var MONTH_TABLE_COL_COUNT = exports.MONTH_TABLE_COL_COUNT = 3;

var YEAR_TABLE_ROW_COUNT = exports.YEAR_TABLE_ROW_COUNT = 4;

var YEAR_TABLE_COL_COUNT = exports.YEAR_TABLE_COL_COUNT = 3;

var CALENDAR_MODE_YEAR = exports.CALENDAR_MODE_YEAR = 'year';

var CALENDAR_MODE_MONTH = exports.CALENDAR_MODE_MONTH = 'month';

var CALENDAR_MODE_DATE = exports.CALENDAR_MODE_DATE = 'date';

var CALENDAR_MODES = exports.CALENDAR_MODES = [CALENDAR_MODE_DATE, CALENDAR_MODE_MONTH, CALENDAR_MODE_YEAR];

function isDisabledDate(date, fn, view) {
    if (typeof fn === 'function' && fn(date, view)) {
        return true;
    }
    return false;
}

function checkMomentObj(props, propName, componentName) {
    if (props[propName] && !_moment2.default.isMoment(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');
    }
}

function formatDateValue(value) {
    var reservedValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    if (value && _moment2.default.isMoment(value)) {
        return value;
    }
    return reservedValue;
}

function getVisibleMonth(defaultVisibleMonth, value) {
    var getVM = defaultVisibleMonth;
    if (typeof getVM !== 'function' || !_moment2.default.isMoment(getVM())) {
        getVM = function getVM() {
            if (value) {
                return value;
            }
            return (0, _moment2.default)();
        };
    }
    return getVM();
}

function isSameYearMonth(dateA, dateB) {
    return dateA.month() === dateB.month() && dateA.year() === dateB.year();
}

function preFormatDateValue(value, format) {
    var val = typeof value === 'string' ? (0, _moment2.default)(value, format, false) : value;
    if (val && _moment2.default.isMoment(val) && val.isValid()) {
        return val;
    }

    return null;
}

function getLocaleData(_ref, localeData) {
    var _months = _ref.months,
        shortMonths = _ref.shortMonths,
        _firstDayOfWeek = _ref.firstDayOfWeek,
        _weekdays = _ref.weekdays,
        shortWeekdays = _ref.shortWeekdays,
        veryShortWeekdays = _ref.veryShortWeekdays;

    return (0, _extends3.default)({}, localeData, {
        monthsShort: function monthsShort() {
            return shortMonths || localeData.monthsShort();
        },
        months: function months() {
            return _months || localeData.months();
        },
        firstDayOfWeek: function firstDayOfWeek() {
            return _firstDayOfWeek || localeData.firstDayOfWeek();
        },
        weekdays: function weekdays() {
            return _weekdays || localeData.weekdays;
        },
        weekdaysShort: function weekdaysShort() {
            return shortWeekdays || localeData.weekdaysShort();
        },
        weekdaysMin: function weekdaysMin() {
            return veryShortWeekdays || localeData.weekdaysMin();
        }
    });
}

/* istanbul ignore next */
exports.getLocaleData = getLocaleData;
function getYears(yearRange, yearRangeOffset, year) {
    var options = [];
    var startYear = yearRange[0],
        endYear = yearRange[1];

    if (!startYear || !endYear) {
        startYear = year - yearRangeOffset;
        endYear = year + yearRangeOffset;
    }

    for (var i = startYear; i <= endYear; i++) {
        options.push({
            label: i,
            value: i
        });
    }
    return options;
}

/* istanbul ignore next */
function getMonths(momentLocale) {
    var localeMonths = momentLocale.monthsShort();
    var options = [];
    for (var i = 0; i < 12; i++) {
        options.push({
            value: i,
            label: localeMonths[i]
        });
    }
    return options;
}

/***/ }),
/* 25 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 26 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(46)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(45);
var IE8_DOM_DEFINE = __webpack_require__(113);
var toPrimitive = __webpack_require__(72);
var dP = Object.defineProperty;

exports.f = __webpack_require__(27) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _select = __webpack_require__(301);

var _select2 = _interopRequireDefault(_select);

var _autoComplete = __webpack_require__(309);

var _autoComplete2 = _interopRequireDefault(_autoComplete);

var _option = __webpack_require__(310);

var _option2 = _interopRequireDefault(_option);

var _optionGroup = __webpack_require__(311);

var _optionGroup2 = _interopRequireDefault(_optionGroup);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_select2.default.AutoComplete = _configProvider2.default.config(_autoComplete2.default, {
    componentName: 'Select'
});

_select2.default.Option = _option2.default;
_select2.default.OptionGroup = _optionGroup2.default;

// compatible with 0.x version
/* istanbul ignore next */
function _transform(props, deprecated) {
    var shape = props.shape,
        container = props.container,
        multiple = props.multiple,
        filterBy = props.filterBy,
        overlay = props.overlay,
        safeNode = props.safeNode,
        noFoundContent = props.noFoundContent,
        others = (0, _objectWithoutProperties3.default)(props, ['shape', 'container', 'multiple', 'filterBy', 'overlay', 'safeNode', 'noFoundContent']);

    var newprops = others;
    if (shape === 'arrow-only') {
        deprecated('shape=arrow-only', 'hasBorder=false', 'Select');
        newprops.hasBorder = false;
    }
    if (container) {
        deprecated('container', 'popupContainer', 'Select');
        newprops.popupContainer = container;
    }
    if (multiple) {
        deprecated('multiple', 'mode=multiple', 'Select');
        newprops.mode = 'multiple';
    }
    if (filterBy) {
        deprecated('filterBy', 'filter', 'Select');
        newprops.filter = filterBy;
    }
    if (overlay) {
        deprecated('overlay', 'popupContent', 'Select');
        newprops.popupContent = overlay;
        newprops.autoWidth = false;
    }

    if (noFoundContent) {
        deprecated('noFoundContent', 'notFoundContent', 'Select');
        newprops.notFoundContent = noFoundContent;
    }

    if (safeNode) {
        deprecated('safeNode', 'popupProps={safeNode}', 'Select');
        newprops.popupProps = {
            safeNode: safeNode
        };
    }

    return newprops;
}

// compatible with 0.x version: Select.Combobox
_select2.default.Combobox = _configProvider2.default.config(_select2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Select.Combobox', '<Select showSearch={true}/>', 'Select');

        var newprops = _transform(props, deprecated);
        if (props.onInputUpdate) {
            newprops.onSearch = props.onInputUpdate;
            newprops.showSearch = true;
        }
        return newprops;
    }
});

exports.default = _configProvider2.default.config(_select2.default, {
    transform: _transform,
    exportNames: ['focusInput', 'handleSearchClear']
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.DEFAULT_TIME_FORMAT = exports.PANEL = undefined;
exports.isFunction = isFunction;
exports.resetValueTime = resetValueTime;
exports.formatDateValue = formatDateValue;
exports.checkDateValue = checkDateValue;
exports.getDateTimeFormat = getDateTimeFormat;
exports.extend = extend;
exports.onDateKeydown = onDateKeydown;
exports.onTimeKeydown = onTimeKeydown;

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var PANEL = exports.PANEL = {
    TIME: 'time-panel',
    DATE: 'date-panel'
};

var DEFAULT_TIME_FORMAT = exports.DEFAULT_TIME_FORMAT = 'HH:mm:ss';

function isFunction(obj) {
    return !!(obj && obj.constructor && obj.call && obj.apply);
}

/**
 * 将 source 的 time 替换为 target 的 time
 * @param {Object} source 输入值
 * @param {Object} target 目标值
 */
function resetValueTime(source, target) {
    if (!_moment2.default.isMoment(source) || !_moment2.default.isMoment(target)) {
        return source;
    }
    return source.clone().hour(target.hour()).minute(target.minute()).second(target.second());
}

function formatDateValue(value, format) {
    var val = typeof value === 'string' ? (0, _moment2.default)(value, format, false) : value;
    if (val && _moment2.default.isMoment(val) && val.isValid()) {
        return val;
    }

    return null;
}

function checkDateValue(props, propName, componentName) {
    // 支持传入 moment 对象或字符串，字符串不检测是否为日期字符串
    if (props[propName] && !_moment2.default.isMoment(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');
    }
}

function getDateTimeFormat(format, showTime, type) {
    if (!format && type) {
        format = {
            date: 'YYYY-MM-DD',
            month: 'YYYY-MM',
            year: 'YYYY',
            time: ''
        }[type];
    }
    var timeFormat = showTime ? showTime.format || DEFAULT_TIME_FORMAT : '';
    var dateTimeFormat = timeFormat ? format + ' ' + timeFormat : format;
    return {
        format: format,
        timeFormat: timeFormat,
        dateTimeFormat: dateTimeFormat
    };
}

function extend(source, target) {
    for (var key in source) {
        if (source.hasOwnProperty(key)) {
            target[key] = source[key];
        }
    }
    return target;
}

/**
 * 监听键盘事件，操作日期字符串
 * @param {KeyboardEvent} e 事件对象
 * @param {Object} param1
 * @param {String} type 类型 year month day
 */
function onDateKeydown(e, _ref, type) {
    var format = _ref.format,
        dateInputStr = _ref.dateInputStr,
        value = _ref.value;

    if ([_util.KEYCODE.UP, _util.KEYCODE.DOWN, _util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) {
        return;
    }

    if (e.altKey && [_util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) {
        return;
    }

    var date = (0, _moment2.default)(dateInputStr, format, true);

    if (date.isValid()) {
        var stepUnit = e.altKey ? 'year' : 'month';
        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                date.subtract(1, type);
                break;
            case _util.KEYCODE.DOWN:
                date.add(1, type);
                break;
            case _util.KEYCODE.PAGE_UP:
                date.subtract(1, stepUnit);
                break;
            case _util.KEYCODE.PAGE_DOWN:
                date.add(1, stepUnit);
                break;
        }
    } else if (value) {
        date = value.clone();
    } else {
        date = (0, _moment2.default)();
    }

    e.preventDefault();
    return date.format(format);
}

/**
 * 监听键盘事件，操作时间
 * @param {KeyboardEvent} e
 * @param {Object} param1
 * @param {String} type second hour minute
 */
function onTimeKeydown(e, _ref2, type) {
    var format = _ref2.format,
        timeInputStr = _ref2.timeInputStr,
        steps = _ref2.steps,
        value = _ref2.value;

    if ([_util.KEYCODE.UP, _util.KEYCODE.DOWN, _util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) return;
    if (e.altKey && [_util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) return;

    var time = (0, _moment2.default)(timeInputStr, format, true);

    if (time.isValid()) {
        var stepUnit = e.altKey ? 'hour' : 'minute';
        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                time.subtract(steps[type], type);
                break;
            case _util.KEYCODE.DOWN:
                time.add(steps[type], type);
                break;
            case _util.KEYCODE.PAGE_UP:
                time.subtract(steps[stepUnit], stepUnit);
                break;
            case _util.KEYCODE.PAGE_DOWN:
                time.add(steps[stepUnit], stepUnit);
                break;
        }
    } else if (value) {
        time = value.clone();
    } else {
        time = (0, _moment2.default)().hours(0).minutes(0).seconds(0);
    }

    e.preventDefault();
    return time.format(format);
}

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(25);
var core = __webpack_require__(26);
var ctx = __webpack_require__(112);
var hide = __webpack_require__(33);
var has = __webpack_require__(29);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(28);
var createDesc = __webpack_require__(54);
module.exports = __webpack_require__(27) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(117);
var defined = __webpack_require__(71);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(76)('wks');
var uid = __webpack_require__(56);
var Symbol = __webpack_require__(25).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
exports.values = exports.isReactFragment = exports.isForwardRefComponent = exports.isClassComponent = exports.isFunctionComponent = exports.deepMerge = exports.isNil = exports.pickAttrsWith = exports.pickProps = exports.pickOthers = exports.each = exports.shallowEqual = exports.isPlainObject = exports.isPromise = exports.isArrayLike = exports.typeOf = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
/**
 * 获取对象的类型
 * @example
 * typeOf([]) === 'Array'
 * typeOf() === 'Undefined'
 * typeOf(1) === 'Number'
 */
function typeOf(obj) {
    return Object.prototype.toString.call(obj).replace(/\[object\s|]/g, '');
}
exports.typeOf = typeOf;
/**
 * 判断是否是数组或类数组对象
 * @example
 * isArrayLike([]) === true
 * isArrayLike(arguments) === true
 * isArrayLike(this.props.children) === true
 */
function isArrayLike(obj) {
    if (!obj || (typeof obj === "undefined" ? "undefined" : (0, _typeof3.default)(obj)) !== 'object') {
        return false;
    }
    var length = !!obj && 'length' in obj && obj.length;
    var type = typeOf(obj);
    return type === 'Array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
}
exports.isArrayLike = isArrayLike;
/**
 * 判断对象是否是一个 promise，即是否可以用.then
 */
function isPromise(obj) {
    return !!obj && ((typeof obj === "undefined" ? "undefined" : (0, _typeof3.default)(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
exports.isPromise = isPromise;
/**
 * 是否是一个纯净的对象
 * @see https://github.com/jonschlinkert/is-plain-object
 */
function isPlainObject(obj) {
    if (typeOf(obj) !== 'Object') {
        return false;
    }
    var ctor = obj.constructor;
    if (typeof ctor !== 'function') {
        return false;
    }
    var prot = ctor.prototype;
    if (typeOf(prot) !== 'Object') {
        return false;
    }
    if (!prot.hasOwnProperty('isPrototypeOf')) {
        return false;
    }
    return true;
}
exports.isPlainObject = isPlainObject;
/**
 * 对象浅比较
 * @example
 * object.shallowEqual(\{a: 100\}, \{a: 100\}); // true
 */
function shallowEqual(objA, objB, compare) {
    if (objA === objB) {
        return true;
    }
    // 其中一个不是 object，则不相等
    if (!objA || !objB || (typeof objA === "undefined" ? "undefined" : (0, _typeof3.default)(objA)) + (typeof objB === "undefined" ? "undefined" : (0, _typeof3.default)(objB)) !== 'objectobject') {
        return false;
    }
    var keyA = Object.keys(objA);
    var keyB = Object.keys(objB);
    var len = keyA.length;
    // key 数量不一致则不相等
    if (len !== keyB.length) {
        return false;
    }
    var hasCallback = typeof compare === 'function';
    for (var i = 0; i < len; i++) {
        var key = keyA[i];
        if (!Object.prototype.hasOwnProperty.call(objB, key)) {
            return false;
        }
        var valA = objA[key];
        var valB = objB[key];
        var ret = hasCallback ? compare(valA, valB, key) : void 0;
        if (ret === false || ret === void 0 && valA !== valB) {
            return false;
        }
    }
    return true;
}
exports.shallowEqual = shallowEqual;
/**
 * 遍历对象或数组，或者类数组，例如 React 中的 children 对象、arguments 等
 * @param obj - 目标对象或类数组
 * @param callback - fn(n, i) or fn(val, key)
 * @param direction - 是否倒序遍历，只对数组有效，传入 -1 则是倒序
 *
 * @example
 * // 遍历数组
 * object.each([100, 200, 300], (n, i) =\> console.log(n, i));
 * // 遍历json对象
 * object.each(\{a: 100, b: 200\}, (value, key) =\> console.log(key, value));
 * // 遍历React子节点
 * object.each(this.props.children, (child, index) =\> console.log(child));
 * // 遍历arguments
 * object.each(arguments, (arg, i) =\> console.log(arg));
 */
function each(obj, callback, direction) {
    var reversed = direction === -1;
    if (isArrayLike(obj)) {
        var length_1 = obj.length;
        for (var i = reversed ? length_1 - 1 : 0; i < length_1 && i >= 0; reversed ? i-- : i++) {
            var shouldContinue = callback.call(obj[i], obj[i], i);
            if (shouldContinue === false) {
                break;
            }
        }
    } else {
        for (var key in obj) {
            /* istanbul ignore else */
            if (obj.hasOwnProperty(key)) {
                var shouldContinue = callback.call(obj[key], obj[key], key);
                if (shouldContinue === false) {
                    break;
                }
            }
        }
    }
    return obj;
}
exports.each = each;
// @private 判断 key 是否在数组或对象中
var _isInObj = function _isInObj(key, obj, isArray) {
    return isArray ? obj.indexOf(key) > -1 : key in obj;
};
/**
 * 过滤出其它属性
 * @param holdProps - 过滤的参照对象，最终的结果只保留不在参照对象中的 key
 * @param props - 被过滤的对象
 *
 * @example
 * object.pickOthers(FooComponent.propTypes, this.props);
 * object.pickOthers(['className', 'onChange'], this.props);
 */
function pickOthers(holdProps, props) {
    var others = {};
    var isArray = typeOf(holdProps) === 'Array';
    for (var key in props) {
        if (!_isInObj(key, holdProps, isArray)) {
            others[key] = props[key];
        }
    }
    return others;
}
exports.pickOthers = pickOthers;
/**
 * 过滤出需要的属性
 * @param holdProps - 过滤的参照对象，最终的结果只保留在参照对象中的 key
 * @param props - 被过滤的对象
 *
 * @example
 * object.pickProps(FooComponent.propTypes, this.props);
 * object.pickProps(['className', 'onChange'], this.props);
 */
function pickProps(holdProps, props) {
    var others = {};
    var isArray = typeOf(holdProps) === 'Array';
    for (var key in props) {
        if (_isInObj(key, holdProps, isArray)) {
            others[key] = props[key];
        }
    }
    return others;
}
exports.pickProps = pickProps;
/**
 * 过滤出带 prefix 的属性
 * @param holdProps - 过滤的参照对象，最终的结果只保留不在参照对象中的 key
 * @param prefix - 包含的字符串
 *
 * @example
 * object.pickAttrsWith(FooComponent.propTypes, 'data-');
 */
function pickAttrsWith(holdProps, prefix) {
    var others = {};
    for (var key in holdProps) {
        if (key.match(prefix)) {
            others[key] = holdProps[key];
        }
    }
    return others;
}
exports.pickAttrsWith = pickAttrsWith;
/**
 * Checks if value is `null` or `undefined`.
 */
function isNil(value) {
    // It will returns `true` only if `null` or `undefined` compare with `null`
    // with loose equaliy
    return value == null; // eslint-disable-line eqeqeq
}
exports.isNil = isNil;
/**
 * Deep merge two objects.
 * @see https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge?page=1&tab=votes#tab-top
 */
function deepMerge(target) {
    var _a, _b;
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    if (!sources.length) return target;
    var source = sources.shift();
    if (!isPlainObject(target)) {
        target = {};
    }
    if (isPlainObject(target) && isPlainObject(source)) {
        for (var key in source) {
            // 如果是 object 进行深拷贝
            if (isPlainObject(source[key]) && !react_1.default.isValidElement(source[key])) {
                if (!target[key]) (0, _extends3.default)(target, (_a = {}, _a[key] = {}, _a));
                // fix {a: 'te'}, {a:{b:3}}
                if (!isPlainObject(target[key])) {
                    target[key] = source[key];
                }
                deepMerge(target[key], source[key]);
                // string/number/function/react node 等直接复制
            } else {
                (0, _extends3.default)(target, (_b = {}, _b[key] = source[key], _b));
            }
        }
    }
    return deepMerge.apply(void 0, tslib_1.__spreadArray([target], tslib_1.__read(sources), false));
}
exports.deepMerge = deepMerge;
/**
 * 组件是否为 Fucntion Component
 * @param component - 传入的组件
 */
function isFunctionComponent(component) {
    return typeOf(component) === 'Function' && component.prototype && component.prototype.isReactComponent === undefined;
}
exports.isFunctionComponent = isFunctionComponent;
/**
 * 组件是否为 Class Component
 * @param component - 传入的组件
 */
function isClassComponent(component) {
    return typeOf(component) === 'Function' && component.prototype && component.prototype.isReactComponent !== undefined;
}
exports.isClassComponent = isClassComponent;
function isForwardRefComponent(component) {
    if (!component || (typeof component === "undefined" ? "undefined" : (0, _typeof3.default)(component)) !== 'object') {
        return false;
    }
    var $$typeof = component.$$typeof;
    // FIXME 依据 react 内部实现代码来判断，有可能因 react 版本变更错误判断，先用测试用例来保证运行正常，关注测试用例异常适时调整此处代码
    return !!$$typeof && $$typeof.toString().includes('react.forward_ref') || $$typeof === 0xead0;
}
exports.isForwardRefComponent = isForwardRefComponent;
/**
 * 判断是否为 ReactFragment
 * @param component - 传入的组件
 */
function isReactFragment(component) {
    if (isNil(component)) {
        return false;
    }
    if (component.type) {
        return component.type === react_1.default.Fragment;
    }
    return component === react_1.default.Fragment;
}
exports.isReactFragment = isReactFragment;
/**
 * Creates an array of the own enumerable string keyed property values of object.
 * @example
 * // returns [1, 2]
 * values(\{a: 1, b: 2\})
 */
function values(obj) {
    if (Object.values) {
        return Object.values(obj);
    }
    var vals = [];
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            vals.push(obj[key]);
        }
    }
    return vals;
}
exports.values = values;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends3 = __webpack_require__(2);

var _extends4 = _interopRequireDefault(_extends3);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;
var Item = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Item, _Component);

    function Item(props) {
        (0, _classCallCheck3.default)(this, Item);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['handleClick', 'handleKeyDown']);
        return _this;
    }

    Item.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = (0, _reactDom.findDOMNode)(this);

        var _props = this.props,
            parentMode = _props.parentMode,
            root = _props.root,
            menu = _props.menu;

        if (menu) {
            this.menuNode = (0, _reactDom.findDOMNode)(menu);
        } else if (parentMode === 'popup') {
            this.menuNode = this.itemNode.parentNode;
        } else {
            this.menuNode = (0, _reactDom.findDOMNode)(root);
            var _root$props = root.props,
                prefix = _root$props.prefix,
                header = _root$props.header,
                footer = _root$props.footer;

            if (header || footer) {
                this.menuNode = this.menuNode.querySelector('.' + prefix + 'menu-content');
            }
        }

        this.setFocus();
    };

    Item.prototype.componentDidUpdate = function componentDidUpdate() {
        var root = this.props.root;

        if (root.props.focusable && root.state.focusedKey !== this.lastFocusedKey) {
            this.setFocus();
        }
    };

    Item.prototype.focusable = function focusable() {
        var _props2 = this.props,
            root = _props2.root,
            type = _props2.type,
            disabled = _props2.disabled;
        var focusable = root.props.focusable;

        return focusable && (type === 'submenu' || !disabled);
    };

    Item.prototype.getFocused = function getFocused() {
        var _props3 = this.props,
            _key = _props3._key,
            root = _props3.root;
        var focusedKey = root.state.focusedKey;

        return focusedKey === _key;
    };

    Item.prototype.setFocus = function setFocus() {
        var focused = this.getFocused();
        this.lastFocusedKey = this.props.root.state.focusedKey;
        if (focused) {
            if (this.focusable()) {
                this.itemNode.focus({ preventScroll: true });
            }
            if (this.menuNode && this.menuNode.scrollHeight > this.menuNode.clientHeight) {
                var scrollBottom = this.menuNode.clientHeight + this.menuNode.scrollTop;
                var itemBottom = this.itemNode.offsetTop + this.itemNode.offsetHeight;
                if (itemBottom > scrollBottom) {
                    this.menuNode.scrollTop = itemBottom - this.menuNode.clientHeight;
                } else if (this.itemNode.offsetTop < this.menuNode.scrollTop) {
                    this.menuNode.scrollTop = this.itemNode.offsetTop;
                }
            }
        }
    };

    Item.prototype.handleClick = function handleClick(e) {
        e.stopPropagation();

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            disabled = _props4.disabled;

        if (!disabled) {
            root.handleItemClick(_key, this, e);

            this.props.onClick && this.props.onClick(e);
        } else {
            e.preventDefault();
        }
    };

    Item.prototype.handleKeyDown = function handleKeyDown(e) {
        var _props5 = this.props,
            _key = _props5._key,
            root = _props5.root,
            type = _props5.type;

        if (this.focusable()) {
            root.handleItemKeyDown(_key, type, this, e);

            switch (e.keyCode) {
                case _util.KEYCODE.ENTER:
                    {
                        if (!(type === 'submenu')) {
                            this.handleClick(e);
                        }
                        break;
                    }
            }
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    Item.prototype.getTitle = function getTitle(children) {
        if (typeof children === 'string') {
            return children;
        }
        return;
    };

    Item.prototype.render = function render() {
        var _cx;

        var _props6 = this.props,
            inlineLevel = _props6.inlineLevel,
            root = _props6.root,
            replaceClassName = _props6.replaceClassName,
            groupIndent = _props6.groupIndent,
            component = _props6.component,
            disabled = _props6.disabled,
            className = _props6.className,
            children = _props6.children,
            needIndent = _props6.needIndent,
            parentMode = _props6.parentMode,
            _key = _props6._key;

        var others = pickOthers(Object.keys(Item.propTypes), this.props);

        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            focusable = _root$props2.focusable,
            inlineIndent = _root$props2.inlineIndent,
            itemClassName = _root$props2.itemClassName,
            rtl = _root$props2.rtl;

        var focused = this.getFocused();

        var newClassName = replaceClassName ? className : (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-item'] = true, _cx[prefix + 'disabled'] = disabled, _cx[prefix + 'focused'] = !focusable && focused, _cx[itemClassName] = !!itemClassName, _cx[className] = !!className, _cx));
        if (disabled) {
            others['aria-disabled'] = true;
            others['aria-hidden'] = true;
        }

        others.tabIndex = root.state.tabbableKey === _key ? '0' : '-1';

        if (parentMode === 'inline' && inlineLevel > 1 && inlineIndent > 0 && needIndent) {
            var _extends2;

            var paddingProp = rtl ? 'paddingRight' : 'paddingLeft';
            others.style = (0, _extends4.default)({}, others.style || {}, (_extends2 = {}, _extends2[paddingProp] = inlineLevel * inlineIndent - (groupIndent || 0) * 0.4 * inlineIndent + 'px', _extends2));
        }
        var TagName = component;

        var role = 'menuitem';
        if ('selectMode' in root.props) {
            role = 'option';
        }

        return _react2.default.createElement(TagName, (0, _extends4.default)({
            role: role,
            title: this.getTitle(children)
        }, others, {
            className: newClassName,
            onClick: this.handleClick,
            onKeyDown: this.handleKeyDown
        }), _react2.default.createElement('div', { className: prefix + 'menu-item-inner' }, children));
    };

    return Item;
}(_react.Component), _class.propTypes = {
    _key: _propTypes2.default.string,
    level: _propTypes2.default.number,
    inlineLevel: _propTypes2.default.number,
    groupIndent: _propTypes2.default.number,
    root: _propTypes2.default.object,
    menu: _propTypes2.default.any,
    parent: _propTypes2.default.object,
    parentMode: _propTypes2.default.oneOf(['inline', 'popup']),
    type: _propTypes2.default.oneOf(['submenu', 'item']),
    component: _propTypes2.default.string,
    disabled: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    onClick: _propTypes2.default.func,
    onKeyDown: _propTypes2.default.func,
    needIndent: _propTypes2.default.bool,
    replaceClassName: _propTypes2.default.bool
}, _class.defaultProps = {
    component: 'li',
    groupIndent: 0,
    replaceClassName: false,
    needIndent: true
}, _temp);
Item.displayName = 'Item';
exports.default = Item;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _utils = __webpack_require__(24);

var _calendar = __webpack_require__(299);

var _calendar2 = _interopRequireDefault(_calendar);

var _rangeCalendar = __webpack_require__(157);

var _rangeCalendar2 = _interopRequireDefault(_rangeCalendar);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore next */
var transform = function transform(props, deprecated) {
    var type = props.type,
        onChange = props.onChange,
        base = props.base,
        disabledMonth = props.disabledMonth,
        disabledYear = props.disabledYear,
        others = (0, _objectWithoutProperties3.default)(props, ['type', 'onChange', 'base', 'disabledMonth', 'disabledYear']);

    var newProps = others;

    if ('type' in props) {
        deprecated('type', 'shape', 'Calendar');

        newProps.shape = type;

        if ('shape' in props) {
            newProps.shape = props.shape;
        }
    }

    if ('base' in props) {
        deprecated('base', 'defaultVisibleMonth', 'Calendar');

        var newDefaultVisibleMonth = function newDefaultVisibleMonth() {
            (0, _utils.preFormatDateValue)(base, 'YYYY-MM-DD');
        };

        if ('defaultVisibleMonth' in props) {
            newDefaultVisibleMonth = props.defaultVisibleMonth;
        }

        newProps.defaultVisibleMonth = newDefaultVisibleMonth;
    }

    if ('onChange' in props && typeof onChange === 'function') {
        deprecated('onChange', 'onSelect', 'Calendar');

        var newOnSelect = function newOnSelect(date) {
            onChange({ mode: others.mode, value: date });

            if ('onSelect' in props) {
                props.onSelect(date);
            }
        };

        newProps.onSelect = newOnSelect;
    }

    if ('disabledMonth' in props && typeof disabledMonth === 'function') {
        deprecated('disabledMonth', 'disabledDate', 'Calendar');
    }

    if ('disabledYear' in props && typeof disabledYear === 'function') {
        deprecated('disabledYear', 'disabledDate', 'Calendar');
    }

    if ('yearCellRender' in props && typeof yearCellRender === 'function') {
        deprecated('yearCellRender', 'monthCellRender/dateCellRender', 'Calendar');
    }

    if ('language' in props) {
        deprecated('language', 'moment.locale', 'Calendar');
    }

    return newProps;
};

_calendar2.default.RangeCalendar = _rangeCalendar2.default;
exports.default = _configProvider2.default.config(_calendar2.default, {
    transform: transform
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.inRange = inRange;
exports.getPercent = getPercent;
exports.getPrecision = getPrecision;
exports.isEqual = isEqual;
exports.getDragging = getDragging;
function inRange(value, range, min) {
    if (!Array.isArray(range)) {
        range = [min, range];
    }

    return value >= range[0] && value <= range[1];
}

function getPercent(min, max, value) {
    return (value - min) * 100 / (max - min);
}

function getPrecision(step) {
    var precision = 0;
    var stepString = step.toString();
    if (stepString.indexOf('.') !== -1) {
        precision = stepString.length - stepString.indexOf('.') - 1;
    }
    return precision;
}

function isEqual(left, right) {
    if (Array.isArray(left)) {
        return left[0] === right[0] && left[1] === right[1];
    } else {
        return left === right;
    }
}

function getDragging(current, preValue) {
    var dragging = 'upper';

    if (current > preValue[1]) {
        dragging = 'upper';
    } else if (current < preValue[0]) {
        dragging = 'lower';
    } else {
        var mid = (preValue[0] + preValue[1]) / 2;

        dragging = current < mid ? 'lower' : 'upper';
    }

    return dragging;
}

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.uid = uid;
exports.fileToObject = fileToObject;
exports.getFileItem = getFileItem;
exports.removeFileItem = removeFileItem;
exports.previewFile = previewFile;
var now = +new Date();

/**
 * 生成唯一的id
 * @return {String} uid
 */
function uid() {
    return (now++).toString(36);
}

function fileToObject(file) {
    if (!file.uid) {
        file.uid = uid();
    }

    return {
        lastModified: file.lastModified,
        lastModifiedDate: file.lastModifiedDate,
        name: file.filename || file.name,
        size: file.size,
        type: file.type,
        uid: file.uid,
        error: file.error,
        percent: 0,
        originFileObj: file
    };
}

function getFileItem(file, fileList) {
    var matchKey = file.uid !== undefined ? 'uid' : 'name';
    return fileList.filter(function (item) {
        return item[matchKey] === file[matchKey];
    })[0];
}

function removeFileItem(file, fileList) {
    var matchKey = file.uid !== undefined ? 'uid' : 'name';
    var removed = fileList.filter(function (item) {
        return item[matchKey] !== file[matchKey];
    });
    if (removed.length === fileList.length) {
        return null;
    }
    return removed;
}

// https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL
function previewFile(file, callback) {
    var reader = new FileReader();
    reader.onloadend = function () {
        return callback(reader.result);
    };
    reader.readAsDataURL(file);
}

var errorCode = exports.errorCode = {
    EXCEED_LIMIT: 'EXCEED_LIMIT',
    BEFOREUPLOAD_REJECT: 'BEFOREUPLOAD_REJECT',
    RESPONSE_FAIL: 'RESPONSE_FAIL'
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.setTime = setTime;
exports.switchInputType = switchInputType;
exports.mode2unit = mode2unit;
exports.fmtValue = fmtValue;
exports.isValueChanged = isValueChanged;

var _util = __webpack_require__(4);

var _constant = __webpack_require__(43);

function setTime(targetVal, sourceVal) {
    if (sourceVal && targetVal) {
        return targetVal.hour(sourceVal.hour()).minute(sourceVal.minute()).second(sourceVal.second()).millisecond(sourceVal.millisecond());
    }
    return targetVal;
}

function switchInputType(inputType) {
    var BEGIN = _constant.DATE_INPUT_TYPE.BEGIN,
        END = _constant.DATE_INPUT_TYPE.END;

    return inputType === BEGIN ? END : BEGIN;
}

function mode2unit(mode) {
    return mode === 'date' ? 'day' : mode;
}

/**
 * 获取输入框值
 * @param {*} value 日期值
 * @param {string | funtion} format 日期格式
 * @returns {string | string[]}
 */
function fmtValue(value, fmt) {
    var formater = function formater(v, idx) {
        var _fmt = fmt;

        if (Array.isArray(fmt)) {
            _fmt = fmt[idx];
        }

        return v ? typeof _fmt === 'function' ? _fmt(v) : v.format(_fmt) : '';
    };

    return Array.isArray(value) ? value.map(function (v, idx) {
        return formater(v, idx);
    }) : formater(value);
}

/**
 * 判断值是否改变
 * @param {dayjs.ConfigType}} newValue
 * @param {dayjs.ConfigType} oldValue
 * @returns {boolean}
 */
function isValueChanged(newValue, oldValue) {
    return Array.isArray(newValue) ? isValueChanged(newValue[0], oldValue && oldValue[0]) || isValueChanged(newValue[1], oldValue && oldValue[1]) : newValue !== oldValue && !(0, _util.datejs)(newValue).isSame(oldValue);
}

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var DATE_PICKER_TYPE = exports.DATE_PICKER_TYPE = {
    DATE: 'date',
    RANGE: 'range'
};

var DATE_INPUT_TYPE = exports.DATE_INPUT_TYPE = {
    BEGIN: 0,
    END: 1
};

var DATE_PICKER_MODE = exports.DATE_PICKER_MODE = {
    DATE: 'date',
    MONTH: 'month',
    WEEK: 'week',
    QUARTER: 'quarter',
    YEAR: 'year'
};

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.error = undefined;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constant = __webpack_require__(43);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var error = exports.error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

function checkType(type) {
    return function (props, propName, componentName) {
        var value = props[propName];
        if (value) {
            if (!Array.isArray(value)) {
                value = [value];
            }

            if (!Array.isArray(type)) {
                type = [type];
            }

            if (!value.every(function (v) {
                return type.includes(typeof v === 'undefined' ? 'undefined' : (0, _typeof3.default)(v));
            })) {
                throw error(propName, componentName);
            }
        }
    };
}

var SharedPT = {
    date: function date(props, propName, componentName) {
        if (propName in props && !(0, _util.datejs)(props.propName).isValid()) {
            throw error(propName, componentName);
        }
    },
    value: function value(props, propName, componentName) {
        if (props[propName]) {
            var value = props[propName];

            if (props.type === _constant.DATE_PICKER_TYPE.RANGE && !Array.isArray(value)) {
                throw error(propName, componentName);
            } else if (!Array.isArray(value)) {
                value = [value];
            }

            if (!value.every(function (v) {
                return !v || (0, _util.datejs)(v).isValid();
            })) {
                throw error(propName, componentName);
            }
        }
    },

    format: checkType(['string', 'function']),
    inputValue: checkType('string'),
    placeholder: checkType('string'),
    readOnly: checkType('boolean'),
    disabled: checkType('boolean'),
    disabledTime: checkType(['object', 'function']),
    ariaLabel: checkType('string'),

    render: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    mode: _propTypes2.default.oneOf(Object.values(_constant.DATE_PICKER_MODE)),
    type: _propTypes2.default.oneOf(Object.values(_constant.DATE_PICKER_TYPE)),
    inputType: _propTypes2.default.oneOf(Object.values(_constant.DATE_INPUT_TYPE)),
    size: _propTypes2.default.oneOf(['small', 'medium', 'large'])
};

exports.default = SharedPT;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(34);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _dropdown = __webpack_require__(286);

var _dropdown2 = _interopRequireDefault(_dropdown);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_dropdown2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('triggerType' in props) {
            var triggerType = Array.isArray(props.triggerType) ? [].concat(props.triggerType) : [props.triggerType];

            if (triggerType.indexOf('focus') > -1) {
                deprecated('triggerType[focus]', 'triggerType[hover, click]', 'Balloon');
            }
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var checkbox_1 = tslib_1.__importDefault(__webpack_require__(143));
var checkbox_group_1 = tslib_1.__importDefault(__webpack_require__(289));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var component_1 = __webpack_require__(22);
var CheckboxWithGroup = (0, component_1.assignSubComponent)(checkbox_1.default, {
    Group: config_provider_1.default.config(checkbox_group_1.default, {
        transform: /* istanbul ignore next */function transform(props, deprecated) {
            if ('itemDirection' in props) {
                deprecated('itemDirection', 'direction', 'Checkbox');
                var itemDirection = props.itemDirection,
                    others = tslib_1.__rest(props, ["itemDirection"]);
                props = tslib_1.__assign({ direction: itemDirection }, others);
            }
            return props;
        }
    })
});
exports.default = CheckboxWithGroup;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var radio_1 = tslib_1.__importDefault(__webpack_require__(145));
var radio_group_1 = tslib_1.__importDefault(__webpack_require__(291));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var component_1 = __webpack_require__(22);
var RadioWithSub = (0, component_1.assignSubComponent)(radio_1.default, {
    Group: config_provider_1.default.config(radio_group_1.default, {
        transform: function transform(props, deprecated) {
            if ('itemDirection' in props) {
                deprecated('itemDirection', 'direction', 'Radio');
                var itemDirection = props.itemDirection,
                    others = tslib_1.__rest(props, ["itemDirection"]);
                props = tslib_1.__assign({ direction: itemDirection }, others);
            }
            return props;
        }
    })
});
exports.default = RadioWithSub;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _virtualList = __webpack_require__(308);

var _virtualList2 = _interopRequireDefault(_virtualList);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_virtualList2.default);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
// 日历shape
var CALENDAR_SHAPE = exports.CALENDAR_SHAPE = {
    FULLSCREEN: 'fullscreen',
    CARD: 'card',
    PANEL: 'panel'
};

// 日历模式
var CALENDAR_MODE = exports.CALENDAR_MODE = {
    MONTH: 'month',
    YEAR: 'year'
};

// 日期面板的模式
var DATE_PANEL_MODE = exports.DATE_PANEL_MODE = {
    DATE: 'date',
    WEEK: 'week',
    MONTH: 'month',
    QUARTER: 'quarter',
    YEAR: 'year',
    DECADE: 'decade'
};

// 单元格选中状态
var CALENDAR_CELL_STATE = exports.CALENDAR_CELL_STATE = {
    UN_SELECTED: 0,
    SELECTED: 1,
    SELECTED_BEGIN: 2,
    SELECTED_END: 3
};

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["default"] = (index);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(69)))

/***/ }),
/* 53 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(116);
var enumBugKeys = __webpack_require__(77);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 56 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 57 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _balloon = __webpack_require__(268);

var _balloon2 = _interopRequireDefault(_balloon);

var _tooltip = __webpack_require__(284);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _inner = __webpack_require__(86);

var _inner2 = _interopRequireDefault(_inner);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_balloon2.default.Tooltip = _configProvider2.default.config(_tooltip2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('text' in props) {
            deprecated('text', 'children', 'Tooltip');
            var _props = props,
                text = _props.text,
                others = (0, _objectWithoutProperties3.default)(_props, ['text']);

            props = (0, _extends3.default)({ children: text }, others);
        }

        return props;
    }
});
_balloon2.default.Inner = _inner2.default;

exports.default = _configProvider2.default.config(_balloon2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if (props.alignment) {
            deprecated('alignment', 'alignEdge', 'Balloon');
            var _props2 = props,
                alignment = _props2.alignment,
                others = (0, _objectWithoutProperties3.default)(_props2, ['alignment']);

            props = (0, _extends3.default)({ alignEdge: alignment === 'edge' }, others);
        }
        if (props.onCloseClick) {
            deprecated('onCloseClick', 'onVisibleChange(visible, [type = "closeClick"])', 'Balloon');

            var _props3 = props,
                onCloseClick = _props3.onCloseClick,
                onVisibleChange = _props3.onVisibleChange,
                _others = (0, _objectWithoutProperties3.default)(_props3, ['onCloseClick', 'onVisibleChange']);

            var newOnVisibleChange = function newOnVisibleChange(visible, type) {
                if (type === 'closeClick') {
                    onCloseClick();
                }
                if (onVisibleChange) {
                    onVisibleChange(visible, type);
                }
            };
            props = (0, _extends3.default)({ onVisibleChange: newOnVisibleChange }, _others);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = findNode;

var _reactDom = __webpack_require__(13);

function findNode(target, param) {
    if (!target) {
        return null;
    }

    if (typeof target === 'string') {
        return document.getElementById(target);
    }

    if (typeof target === 'function') {
        try {
            target = target(param);
        } catch (err) {
            target = null;
        }
    }

    if (!target) {
        return null;
    }

    try {
        return (0, _reactDom.findDOMNode)(target);
    } catch (err) {
        return target;
    }
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/extends.js
var helpers_extends = __webpack_require__(135);
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var objectWithoutPropertiesLoose = __webpack_require__(136);
var objectWithoutPropertiesLoose_default = /*#__PURE__*/__webpack_require__.n(objectWithoutPropertiesLoose);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inheritsLoose.js
var inheritsLoose = __webpack_require__(279);
var inheritsLoose_default = /*#__PURE__*/__webpack_require__.n(inheritsLoose);

// EXTERNAL MODULE: external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"}
var external___root___React___commonjs2___react___commonjs___react___amd___react__ = __webpack_require__(0);
var external___root___React___commonjs2___react___commonjs___react___amd___react___default = /*#__PURE__*/__webpack_require__.n(external___root___React___commonjs2___react___commonjs___react___amd___react__);

// EXTERNAL MODULE: external {"root":"ReactDOM","commonjs2":"react-dom","commonjs":"react-dom","amd":"react-dom"}
var external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__ = __webpack_require__(13);
var external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom___default = /*#__PURE__*/__webpack_require__.n(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__);

// EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es = __webpack_require__(52);

// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/utils.js


function useListener(nodeList, eventName, callback, useCapture, condition) {
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (condition) {
      if (!Array.isArray(nodeList)) {
        nodeList = [nodeList];
      }
      nodeList.forEach(function (n) {
        n && n.addEventListener && n.addEventListener(eventName, callback, useCapture || false);
      });
      return function () {
        Array.isArray(nodeList) && nodeList.forEach(function (n) {
          n && n.removeEventListener && n.removeEventListener(eventName, callback, useCapture || false);
        });
      };
    }
    return undefined;
  }, [condition]);
}

/**
 * 将N个方法合并为一个链式调用的方法
 * @return {Function}     合并后的方法
 *
 * @example
 * func.makeChain(this.handleChange, this.props.onChange);
 */
function makeChain() {
  var _this2 = this;
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    for (var i = 0, j = fns.length; i < j; i++) {
      if (fns[i] && fns[i].apply) {
        // @ts-ignore
        fns[i].apply(_this2, args);
      }
    }
  };
}
function callRef(ref, element) {
  if (!ref) {
    return;
  }
  if (typeof ref === 'string') {
    throw new Error("can not set ref string for " + ref);
  } else if (typeof ref === 'function') {
    ref(element);
  } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
    ref.current = element;
  }
}
function saveRef(ref) {
  if (!ref) {
    return null;
  }
  return function (element) {
    if (typeof ref === 'string') {
      throw new Error("can not set ref string for " + ref);
    } else if (typeof ref === 'function') {
      ref(element);
    } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
      ref.current = element;
    }
  };
}

/**
 * 获取 position != static ，用来计算相对位置的容器
 * @param container
 * @returns
 */
var getRelativeContainer = function getRelativeContainer(container) {
  if (typeof document === 'undefined') {
    return container;
  }
  var calcContainer = container;
  while (getStyle(calcContainer, 'position') === 'static') {
    if (!calcContainer || calcContainer === document.documentElement) {
      return document.documentElement;
    }
    calcContainer = calcContainer.parentNode;
  }
  return calcContainer;
};

/**
 * 获取 target 和 container 之间会滚动的元素 (不包含 target、container)
 * 用来监听滚动元素，自动更新弹窗位置
 * @param targetNode
 * @param container
 * @returns
 */
var getOverflowNodes = function getOverflowNodes(targetNode, container) {
  if (typeof document === 'undefined') {
    return [];
  }
  var overflowNodes = [];
  // 使用getViewPort方式获取滚动节点，考虑元素可能会跳出最近的滚动容器的情况（绝对定位，containingBlock等原因）
  // 原先的只获取了可滚动的滚动容器（滚动高度超出容器高度），改成只要具有滚动属性即可，因为后面可能会发生内容变化导致其变得可滚动了
  var overflowNode = getViewPort(targetNode.parentElement);
  while (overflowNode && container.contains(overflowNode) && container !== overflowNode) {
    overflowNodes.push(overflowNode);
    if (overflowNode.parentElement) {
      overflowNode = getViewPort(overflowNode.parentElement);
    } else {
      break;
    }
  }
  return overflowNodes;
};

/**
 * 是否是webkit内核
 */
function isWebKit() {
  if (typeof CSS === 'undefined' || !CSS.supports) {
    return false;
  }
  return CSS.supports('-webkit-backdrop-filter', 'none');
}

/**
 * 判断元素是否是会影响后代节点定位的 containing block
 * https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
 */
function isContainingBlock(ele) {
  var webkit = isWebKit();
  var css = getComputedStyle(ele);
  return Boolean(css.transform && css.transform !== 'none' || css.perspective && css.perspective !== 'none' || css.containerType && css.containerType !== 'normal' || !webkit && css.backdropFilter && css.backdropFilter !== 'none' || !webkit && css.filter && css.filter !== 'none' || ['transform', 'perspective', 'filter'].some(function (value) {
    return (css.willChange || '').includes(value);
  }) || ['paint', 'layout', 'strict', 'content'].some(function (value) {
    return (css.contain || '').includes(value);
  }));
}

/**
 * 判断元素是否是 html 或 body 元素
 */
function isLastTraversableElement(ele) {
  return ['html', 'body'].includes(ele.tagName.toLowerCase());
}

/**
 * 获取 containing block
 * https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
 */
function getContainingBlock(element) {
  var currentElement = element.parentElement;
  while (currentElement && !isLastTraversableElement(currentElement)) {
    if (isContainingBlock(currentElement)) {
      return currentElement;
    } else {
      currentElement = currentElement.parentElement;
    }
  }
  return null;
}

/**
 * 判断元素是否会裁剪内容区域
 * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow
 */
var isContentClippedElement = function isContentClippedElement(element) {
  var overflow = getStyle(element, 'overflow');
  // 测试环境overflow默认为 ''
  return overflow && overflow !== 'visible';
};

/**
 * 获取最近的裁剪内容区域的祖先节点
 */
function getContentClippedElement(element) {
  if (isContentClippedElement(element)) {
    return element;
  }
  var parent = element.parentElement;
  while (parent) {
    if (isContentClippedElement(parent)) {
      return parent;
    }
    parent = parent.parentElement;
  }
  return null;
}

/**
 * 获取定位节点，忽略表格元素影响
 * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent
 * @param element
 * @returns closest positioned ancestor element
 */
function getOffsetParent(element) {
  var offsetParent = element.offsetParent;
  while (offsetParent && ['table', 'th', 'td'].includes(offsetParent.tagName.toLowerCase())) {
    offsetParent = offsetParent.offsetParent;
  }
  return offsetParent;
}

/**
 * 获取可视区域，用来计算弹窗应该相对哪个节点做上下左右的位置变化。
 * @param container
 * @returns
 */
function getViewPort(container) {
  var fallbackViewportElement = document.documentElement;
  if (!container) {
    return fallbackViewportElement;
  }

  // 若 container 本身就是滚动容器，则直接返回
  if (isContentClippedElement(container)) {
    return container;
  }

  // 若 container 的 position 是 absolute 或 fixed，则有可能会脱离其最近的滚动容器，需要根据 offsetParent 和 containing block来综合判断
  if (['fixed', 'absolute'].includes(getStyle(container, 'position'))) {
    // 先获取定位节点（若无则使用 containerBlock）
    var offsetParent = getOffsetParent(container) || getContainingBlock(container);
    // 拥有定位节点
    if (offsetParent) {
      // 从定位节点开始寻找父级滚动容器
      return getViewPort(offsetParent);
    } else {
      // 无定位节点，也无containingBlock影响，则用 fallback元素
      return fallbackViewportElement;
    }
  }
  if (container.parentElement) {
    return getViewPort(container.parentElement) || fallbackViewportElement;
  }
  return fallbackViewportElement;
}
function getStyle(elt, name) {
  if (!elt || elt.nodeType !== 1) {
    return null;
  }
  var style = window.getComputedStyle(elt, null);
  return style.getPropertyValue(name);
}
var PIXEL_PATTERN = /margin|padding|width|height|max|min|offset|size|top|left/i;
function setStyle(node, name, value) {
  if (!node) {
    return;
  }
  if (typeof name === 'string') {
    if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {
      value = value + "px";
    }
    // @ts-ignore
    node.style[name] = value;
  } else if (typeof name === 'object' && arguments.length === 2) {
    // @ts-ignore
    Object.keys(name).forEach(function (key) {
      return setStyle(node, key, name[key]);
    });
  }
}

// 默认首次调用是立刻执行
function throttle(func, wait) {
  var previous = -wait;
  return function () {
    var now = Date.now();
    var args = arguments;
    if (now - previous > wait) {
      // @ts-ignore
      var _this = this;
      window.requestAnimationFrame(function () {
        func.apply(_this, args);
      });
      previous = now;
    }
  };
}
function debounce(func, wait) {
  var _arguments = arguments,
    _this3 = this;
  var timeoutID;
  return function () {
    var args = _arguments;
    clearTimeout(timeoutID);
    timeoutID = setTimeout(function () {
      // @ts-ignore
      func.apply(_this3, args);
    }, wait);
  };
}

/**
 * 元素相对于可视区的 left/top
 * @param node
 * @returns
 */
function getViewTopLeft(node) {
  /**
   * document.body 向下滚动后 scrollTop 一直为0，同时 top=-xx 为负数，相当于本身是没有滚动条的，这个逻辑是正确的。
   * document.documentElement 向下滚动后 scrollTop/top 都在变化，会影响计算逻辑，所以这里写死 0
   */
  if (node === document.documentElement) {
    return {
      top: 0,
      left: 0
    };
  }
  var _node$getBoundingClie = node.getBoundingClientRect(),
    left = _node$getBoundingClie.left,
    top = _node$getBoundingClie.top;
  return {
    top: top,
    left: left
  };
}

/**
 * get element size
 * offsetWidth/offsetHeight 更容易获取真实大小，不会受到动画影响优先使用。
 * @param       {Element} element
 * @return      {Object}
 */
function getWidthHeight(element) {
  // element like `svg` do not have offsetWidth and offsetHeight prop
  // then getBoundingClientRect
  if ('offsetWidth' in element && 'offsetHeight' in element) {
    return {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
  } else {
    var _getBoundingClientRec = element.getBoundingClientRect(),
      width = _getBoundingClientRec.width,
      height = _getBoundingClientRec.height;
    return {
      width: width,
      height: height
    };
  }
}

/**
 * 获取默认的滚动条大小
 * @return {Number} width
 */
function getScrollbarWidth() {
  var scrollDiv = document.createElement('div');
  scrollDiv.className += 'just-to-get-scrollbar-size';
  setStyle(scrollDiv, {
    position: 'absolute',
    width: '100px',
    height: '100px',
    overflow: 'scroll',
    top: '-9999px'
  });
  document.body && document.body.appendChild(scrollDiv);
  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  document.body.removeChild(scrollDiv);
  return scrollbarWidth;
}

/**
 * 元素是否可见
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */
function _isVisible(node) {
  while (node) {
    if (node === document.body || node === document.documentElement) {
      break;
    }
    if (node.style.display === 'none' || node.style.visibility === 'hidden') {
      return false;
    }
    node = node.parentNode;
  }
  return true;
}

/**
 * 元素是否可以获取焦点
 * @private
 * @param   {Element}  node
 * @return  {Boolean}
 */
function _isFocusable(node) {
  var nodeName = node.nodeName.toLowerCase();
  var tabIndex = parseInt(node.getAttribute('tabindex'), 10);
  var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;
  if (_isVisible(node)) {
    if (nodeName === 'input') {
      // @ts-ignore
      return !node.disabled && node.type !== 'hidden';
    } else if (['select', 'textarea', 'button'].indexOf(nodeName) > -1) {
      // @ts-ignore
      return !node.disabled;
    } else if (nodeName === 'a') {
      return node.getAttribute('href') || hasTabIndex;
    } else {
      return hasTabIndex;
    }
  }
  return false;
}

/**
 * 列出能获取焦点的子节点
 * @param  {Element} node 容器节点
 * @return {Array<Element>}
 */
function getFocusNodeList(node) {
  var res = [];
  var nodeList = node.querySelectorAll('*');
  nodeList.forEach(function (item) {
    if (_isFocusable(item)) {
      var method = item.getAttribute('data-auto-focus') ? 'unshift' : 'push';
      res[method](item);
    }
  });
  if (_isFocusable(node)) {
    res.unshift(node);
  }
  return res;
}
function getHTMLElement(node) {
  if (node) {
    if (node.nodeType) {
      if (node.nodeType === 1) {
        return node;
      } else {
        return document.body;
      }
    } else if (node === window) {
      return document.body;
    } else {
      return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(node);
    }
  }
  return node;
}
function getTargetNode(target) {
  if (typeof target === 'function') {
    return target();
  } else if (typeof target === 'string') {
    return document.getElementById(target);
  }

  // 兼容 target = HTMLElement
  return target;
}
function isSameObject(object1, object2) {
  if (!object1 || !object2) {
    return false;
  }
  var o1keys = Object.keys(object1);
  var o2keys = Object.keys(object2);
  if (o2keys.length !== o1keys.length) return false;
  for (var i = 0; i <= o1keys.length - 1; i++) {
    var _key3 = o1keys[i];
    if (!o2keys.includes(_key3)) return false;
    // @ts-ignore
    if (object2[_key3] !== object1[_key3]) return false;
  }
  return true;
}
var utils_useEvent = function useEvent(handler) {
  var handleRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(handler);
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useLayoutEffect"])(function () {
    handleRef.current = handler;
  });
  return Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(function () {
    var fn = handleRef.current;
    return fn.apply(void 0, arguments);
  }, []);
};
// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/placement.js
function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

var placementMap = {
  tl: ['bl', 'tl'],
  t: ['bc', 'tc'],
  tr: ['br', 'tr'],
  lt: ['tr', 'tl'],
  l: ['cr', 'cl'],
  lb: ['br', 'bl'],
  bl: ['tl', 'bl'],
  b: ['tc', 'bc'],
  br: ['tr', 'br'],
  rt: ['tl', 'tr'],
  r: ['cl', 'cr'],
  rb: ['bl', 'br']
};
function getXY(p, staticInfo) {
  var targetInfo = staticInfo.targetInfo,
    containerInfo = staticInfo.containerInfo,
    overlayInfo = staticInfo.overlayInfo,
    opoints = staticInfo.points,
    placementOffset = staticInfo.placementOffset,
    offset = staticInfo.offset,
    rtl = staticInfo.rtl;
  var basex = targetInfo.left - containerInfo.left + containerInfo.scrollLeft;
  var basey = targetInfo.top - containerInfo.top + containerInfo.scrollTop;
  function setPointX(point, positive, width) {
    if (positive === void 0) {
      positive = true;
    }
    var plus = positive ? 1 : -1;
    switch (point) {
      case 'l':
        basex += 0;
        break;
      case 'c':
        basex += plus * width / 2;
        break;
      case 'r':
        basex += plus * width;
        break;
      // no default
    }
  }

  function setPointY(point, positive, height) {
    if (positive === void 0) {
      positive = true;
    }
    var plus = positive ? 1 : -1;
    switch (point) {
      case 't':
        basey += 0;
        break;
      case 'c':
        basey += plus * height / 2;
        break;
      case 'b':
        basey += plus * height;
        break;
      // no default
    }
  }

  var points = [].concat(opoints);
  if (p && p in placementMap) {
    points = placementMap[p];
  }

  // rtl 左右对调
  if (rtl) {
    if (points[0].match(/l/)) {
      points[0] = points[0].replace('l', 'r');
    } else if (points[0].match(/r/)) {
      points[0] = points[0].replace('r', 'l');
    }
    if (points[1].match(/l/)) {
      points[1] = points[1].replace('l', 'r');
    } else if (points[1].match(/r/)) {
      points[1] = points[1].replace('r', 'l');
    }
  }

  // 目标元素
  setPointY(points[1][0], true, targetInfo.height);
  setPointX(points[1][1], true, targetInfo.width);
  setPointY(points[0][0], false, overlayInfo.height);
  setPointX(points[0][1], false, overlayInfo.width);
  if (placementOffset && p.length >= 1) {
    switch (p[0]) {
      case 't':
        basey -= placementOffset;
        break;
      case 'b':
        basey += placementOffset;
        break;
      case 'l':
        basex -= placementOffset;
        break;
      case 'r':
        basex += placementOffset;
        break;
      // no default
    }
  }

  return {
    points: points,
    left: basex + offset[0],
    top: basey + offset[1]
  };
}
function shouldResizePlacement(l, t, viewport, staticInfo) {
  var container = staticInfo.container,
    containerInfo = staticInfo.containerInfo,
    overlayInfo = staticInfo.overlayInfo;
  if (viewport !== container) {
    // 说明 container 不具备滚动属性
    var _getViewTopLeft = getViewTopLeft(viewport),
      vleft = _getViewTopLeft.left,
      vtop = _getViewTopLeft.top;
    var vwidth = viewport.scrollWidth,
      vheight = viewport.scrollHeight,
      vscrollTop = viewport.scrollTop,
      vscrollLeft = viewport.scrollLeft;
    var nt = t + containerInfo.top - vtop + vscrollTop;
    var nl = l + containerInfo.left - vleft + vscrollLeft;
    return nt < 0 || nl < 0 || nt + overlayInfo.height > vheight || nl + overlayInfo.width > vwidth;
  }
  return t < 0 || l < 0 || t + overlayInfo.height > containerInfo.height || l + overlayInfo.width > containerInfo.width;
}
function getNewPlacements(l, t, p, staticInfo) {
  var overlayInfo = staticInfo.overlayInfo,
    viewportInfo = staticInfo.viewportInfo;
  var _p$split = p.split(''),
    direction = _p$split[0],
    _p$split$ = _p$split[1],
    align = _p$split$ === void 0 ? '' : _p$split$;
  var topOut = t < 0;
  var leftOut = l < 0;
  var rightOut = l + overlayInfo.width > viewportInfo.width;
  var bottomOut = t + overlayInfo.height > viewportInfo.height;
  var forbiddenSet = new Set();
  var forbid = function forbid() {
    for (var _len = arguments.length, ps = new Array(_len), _key = 0; _key < _len; _key++) {
      ps[_key] = arguments[_key];
    }
    return ps.forEach(function (t) {
      return forbiddenSet.add(t);
    });
  };
  // 上方超出
  if (topOut) {
    forbid('t', 'tl', 'tr');
  }

  // 右侧超出
  if (rightOut) {
    forbid('r', 'rt', 'rb');
  }

  // 下方超出
  if (bottomOut) {
    forbid('b', 'bl', 'br');
  }

  // 左侧超出
  if (leftOut) {
    forbid('l', 'lt', 'lb');
  }
  var allPlacements = Object.keys(placementMap);
  // 过滤出所有可用的
  var canTryPlacements = allPlacements.filter(function (t) {
    return !forbiddenSet.has(t);
  });

  // 无可用
  if (!canTryPlacements.length) {
    return null;
  }

  // 排序规则: 同向 > 对向 > 其他方向; 同align > 其他align; 中间 > l = t > r = b; align规则仅在同侧比较时生效
  // 参考： https://github.com/alibaba-fusion/overlay/issues/23

  var reverseMap = {
    l: 'r',
    r: 'l',
    t: 'b',
    b: 't',
    '': ''
  };
  // direction权重, l=t > r=b
  // 权重差值 4
  var directionOrderWeights = {
    t: 10,
    b: 6,
    l: 10,
    r: 6
  };
  // 用户的 direction 最高
  directionOrderWeights[direction] = 12;
  // 用户 direction 的反转方向其次
  directionOrderWeights[reverseMap[direction]] = 11;

  // align排序权重: '' > l=t > r=b
  // 此处取值 2, 1, 0 意为远小于 direction 权重值和其差值，使得在加权和比较时不影响 direction，达到"仅同向比较align的目的"
  var alignOrderWeights = {
    '': 2,
    l: 1,
    r: 0,
    t: 1,
    b: 0
  };
  // 用户的 align 权重最高
  alignOrderWeights[align] = 3;
  canTryPlacements.sort(function (after, before) {
    var _after$split = after.split(''),
      afterDirection = _after$split[0],
      _after$split$ = _after$split[1],
      afterAlign = _after$split$ === void 0 ? '' : _after$split$;
    var _before$split = before.split(''),
      beforeDirection = _before$split[0],
      _before$split$ = _before$split[1],
      beforeAlign = _before$split$ === void 0 ? '' : _before$split$;
    var afterDirectionWeight = directionOrderWeights[afterDirection];
    var afterAlignWeight = alignOrderWeights[afterAlign];
    var beforeDirectionWeight = directionOrderWeights[beforeDirection];
    var beforeAlighWeight = alignOrderWeights[beforeAlign];
    // direction都相同，比较align weight
    if (afterDirection === beforeDirection) {
      return afterAlignWeight > beforeAlighWeight ? -1 : 1;
    }

    // align 相同，比较 direction weight
    if (afterAlign === beforeAlign) {
      return afterDirectionWeight > beforeDirectionWeight ? -1 : 1;
    }

    // 都不同
    // 与用户 direction相同情况优先最高
    if ([afterDirection, beforeDirection].includes(direction)) {
      return afterDirection === direction ? -1 : 1;
    }
    var reverseDirection = reverseMap[direction];
    // 与用户 reverse direction 相同则优先级其次
    if ([afterDirection, beforeDirection].includes(reverseDirection)) {
      return afterDirection === reverseDirection ? -1 : 1;
    }

    // 与用户align相同,则优先级更高
    if ([afterAlign, beforeAlign].includes(align)) {
      return afterAlign === align ? -1 : 1;
    }

    // 没有特殊情况，进行加权和比较
    return afterDirectionWeight + afterAlignWeight > beforeDirectionWeight + beforeAlighWeight ? -1 : 1;
  });
  return canTryPlacements;
}

/**
 * 任意预设位置都无法完全容纳overlay，则走兜底逻辑，原则是哪边空间大用哪边
 * fixme: 在overlay尺寸宽高超过滚动容器宽高情况没有考虑，先走adjustXY逻辑
 */
function getBackupPlacement(l, t, p, staticInfo) {
  var overlayInfo = staticInfo.overlayInfo,
    viewportInfo = staticInfo.viewportInfo;
  var _p$split2 = p.split(''),
    direction = _p$split2[0],
    align = _p$split2[1];
  var topOut = t < 0;
  var leftOut = l < 0;
  var rightOut = l + overlayInfo.width > viewportInfo.width;
  var bottomOut = t + overlayInfo.height > viewportInfo.height;
  var outNumber = [topOut, leftOut, rightOut, bottomOut].filter(Boolean).length;
  if (outNumber === 3) {
    var _maps$find;
    // 三面超出，则使用未超出的方向
    var maps = [{
      direction: 't',
      value: topOut
    }, {
      direction: 'r',
      value: rightOut
    }, {
      direction: 'b',
      value: bottomOut
    }, {
      direction: 'l',
      value: leftOut
    }];
    var backDirection = (_maps$find = maps.find(function (t) {
      return !t.value;
    })) === null || _maps$find === void 0 ? void 0 : _maps$find.direction;
    // 若原来的方向跟调整后不一致，则使用调整后的
    if (backDirection && backDirection !== direction) {
      return backDirection;
    }
  }
  return null;
}

/**
 * 基于xy的兜底调整
 * @param left overlay距离定位节点左侧距离
 * @param top overlay距离定位节点上方距离
 * @param placement 位置
 * @param staticInfo 其它信息
 */
function adjustXY(left, top, placement, staticInfo) {
  var viewport = staticInfo.viewport,
    viewportInfo = staticInfo.viewportInfo,
    container = staticInfo.container,
    containerInfo = staticInfo.containerInfo,
    overlayInfo = staticInfo.overlayInfo,
    rtl = staticInfo.rtl;
  if (!shouldResizePlacement(left, top, viewport, staticInfo)) {
    // 无需调整
    return null;
  }
  // 仍然需要调整
  var x = left;
  var y = top;
  var xAdjust = 0;
  var yAdjust = 0;
  // 调整为基于 viewport 的xy
  if (viewport !== container) {
    var cLeft = containerInfo.left,
      cTop = containerInfo.top,
      scrollLeft = containerInfo.scrollLeft,
      scrollTop = containerInfo.scrollTop;
    xAdjust = cLeft - scrollLeft;
    yAdjust = cTop - scrollTop;
    x += xAdjust;
    y += yAdjust;
  }
  var oWidth = overlayInfo.width,
    oHeight = overlayInfo.height;
  var vWidth = viewportInfo.width,
    vHeight = viewportInfo.height;
  var leftOut = x < 0;
  var topOut = y < 0;
  var rightOut = x + oWidth > vWidth;
  var bottomOut = y + oHeight > vHeight;
  if (oWidth > vWidth || oHeight > vHeight) {
    // overlay 比 可视区域还要大，方案有：
    // 1. 根据rtl模式，强制对齐习惯侧边缘，忽略另一侧超出
    // 2. 强制调整overlay宽高，并设置overflow
    // 第二种会影响用户布局，先采用第一种办法吧

    if (oWidth > vWidth) {
      if (rtl) {
        x = vWidth - oWidth;
      } else {
        x = 0;
      }
    }
    if (oHeight > vHeight) {
      y = 0;
    }
  } else {
    // viewport可以容纳 overlay
    // 则哪边超出，哪边重置为边缘位置
    if (leftOut) {
      x = 0;
    }
    if (topOut) {
      y = 0;
    }
    if (rightOut) {
      x = vWidth - oWidth;
    }
    if (bottomOut) {
      y = vHeight - oHeight;
    }
  }
  return {
    left: x - xAdjust,
    top: y - yAdjust,
    placement: placement
  };
}
function autoAdjustPosition(l, t, p, staticInfo) {
  var left = l;
  var top = t;
  var viewport = staticInfo.viewport,
    container = staticInfo.container,
    containerInfo = staticInfo.containerInfo;
  var cLeft = containerInfo.left,
    cTop = containerInfo.top,
    scrollLeft = containerInfo.scrollLeft,
    scrollTop = containerInfo.scrollTop;

  // 此时left&top是相对于container的，若container不是 viewport，则需要调整为相对 viewport 的 left & top 再计算
  if (viewport !== container) {
    left += cLeft - scrollLeft;
    top += cTop - scrollTop;
  }

  // 根据位置超出情况，获取所有可以尝试的位置列表
  var placements = getNewPlacements(left, top, p, staticInfo);
  // 按顺序寻找能够容纳的位置
  for (var _iterator = _createForOfIteratorHelperLoose(placements), _step; !(_step = _iterator()).done;) {
    var placement = _step.value;
    var _getXY2 = getXY(placement, staticInfo),
      _nLeft = _getXY2.left,
      _nTop = _getXY2.top;
    if (!shouldResizePlacement(_nLeft, _nTop, viewport, staticInfo)) {
      return {
        left: _nLeft,
        top: _nTop,
        placement: placement
      };
    }
  }
  var backupPlacement = getBackupPlacement(left, top, p, staticInfo);
  if (backupPlacement) {
    var _getXY = getXY(backupPlacement, staticInfo),
      nLeft = _getXY.left,
      nTop = _getXY.top;
    return {
      left: nLeft,
      top: nTop,
      placement: backupPlacement
    };
  }
  return null;
}

/**
 * 获取滚动容器的尺寸位置信息
 * 滚动宽高代替宽高
 */
function getScrollerRect(scroller) {
  var _getViewTopLeft2 = getViewTopLeft(scroller),
    left = _getViewTopLeft2.left,
    top = _getViewTopLeft2.top;
  var width = scroller.scrollWidth,
    height = scroller.scrollHeight,
    scrollTop = scroller.scrollTop,
    scrollLeft = scroller.scrollLeft;
  return {
    left: left,
    top: top,
    width: width,
    height: height,
    scrollLeft: scrollLeft,
    scrollTop: scrollTop
  };
}

/**
 * 计算相对于 container 的偏移位置
 * @param config
 * @returns
 */
function getPlacements(config) {
  var target = config.target,
    overlay = config.overlay,
    container = config.container,
    scrollNode = config.scrollNode,
    oplacement = config.placement,
    _config$placementOffs = config.placementOffset,
    placementOffset = _config$placementOffs === void 0 ? 0 : _config$placementOffs,
    _config$points = config.points,
    opoints = _config$points === void 0 ? ['tl', 'bl'] : _config$points,
    _config$offset = config.offset,
    offset = _config$offset === void 0 ? [0, 0] : _config$offset,
    _config$position = config.position,
    position = _config$position === void 0 ? 'absolute' : _config$position,
    beforePosition = config.beforePosition,
    _config$autoAdjust = config.autoAdjust,
    autoAdjust = _config$autoAdjust === void 0 ? true : _config$autoAdjust,
    _config$autoHideScrol = config.autoHideScrollOverflow,
    autoHideScrollOverflow = _config$autoHideScrol === void 0 ? true : _config$autoHideScrol,
    rtl = config.rtl;
  var placement = oplacement;

  /**
   * 可视窗口是浏览器给用户展示的窗口
   * getBoundingClientRect(): top/left 是相对 viewport
   * node: offsetTop/offsetarget.Left 是相对 parent 元素的
   *
   * top: 元素上边  距离可视窗口 上边框的距离
   * left: 元素左边 距离可视窗口 左边框的距离
   *
   * scrollTop: 容器上下滚动距离
   * scrollLeft: 容器左右滚动距离
   */
  var _getWidthHeight = getWidthHeight(overlay),
    owidth = _getWidthHeight.width,
    oheight = _getWidthHeight.height;
  if (position === 'fixed') {
    var _result = {
      config: {
        placement: undefined,
        points: undefined
      },
      style: {
        position: position,
        left: offset[0],
        top: offset[1]
      }
    };
    if (beforePosition && typeof beforePosition) {
      return beforePosition(_result, {
        overlay: {
          node: overlay,
          width: owidth,
          height: oheight
        }
      });
    }
    return _result;
  }
  var _target$getBoundingCl = target.getBoundingClientRect(),
    twidth = _target$getBoundingCl.width,
    theight = _target$getBoundingCl.height,
    tleft = _target$getBoundingCl.left,
    ttop = _target$getBoundingCl.top;
  var containerInfo = getScrollerRect(container);

  // 获取可视区域，来计算容器相对位置
  var viewport = getViewPort(container);
  var viewportInfo = containerInfo;
  if (viewport !== container) {
    viewportInfo = getScrollerRect(viewport);
  }
  var staticInfo = {
    targetInfo: {
      width: twidth,
      height: theight,
      left: tleft,
      top: ttop
    },
    containerInfo: containerInfo,
    overlay: overlay,
    overlayInfo: {
      width: owidth,
      height: oheight
    },
    points: opoints,
    placementOffset: placementOffset,
    offset: offset,
    container: container,
    rtl: rtl,
    viewport: viewport,
    viewportInfo: viewportInfo
  };

  // step1: 根据 placement 计算位置
  var _getXY3 = getXY(placement, staticInfo),
    left = _getXY3.left,
    top = _getXY3.top,
    points = _getXY3.points;

  // step2: 根据 viewport（挂载容器不一定是可视区, eg: 挂载在父节点，但是弹窗超出父节点）重新计算位置. 根据可视区域优化位置
  // 位置动态优化思路见 https://github.com/alibaba-fusion/overlay/issues/23
  if (autoAdjust && placement && shouldResizePlacement(left, top, viewport, staticInfo)) {
    var adjustResult = autoAdjustPosition(left, top, placement, staticInfo);
    if (adjustResult) {
      left = adjustResult.left;
      top = adjustResult.top;
      placement = adjustResult.placement;
    }
    var adjustXYResult = adjustXY(left, top, placement, staticInfo);
    if (adjustXYResult) {
      left = adjustXYResult.left;
      top = adjustXYResult.top;
      placement = adjustXYResult.placement;
    }
  }
  var result = {
    config: {
      placement: placement,
      points: points
    },
    style: {
      position: position,
      left: Math.round(left),
      top: Math.round(top)
    }
  };

  /**
   * step3: 滚动隐藏弹窗逻辑。避免出现 target 已经滚动消失，弹层飘在页面最上方的情况。详细见 https://github.com/alibaba-fusion/overlay/issues/3
   * 触发条件: target 和 document.body 之间存在 overflow 滚动元素， target 进入不可见区域
   */
  if (autoHideScrollOverflow && placement && scrollNode !== null && scrollNode !== void 0 && scrollNode.length) {
    // 滚动改成 transform 提高性能, 但是有动效问题
    // result.style.transform = `translate3d(${result.style.left}px, ${result.style.top}px, 0px)`;
    // result.style.left = 0;
    // result.style.top = 0;

    for (var _iterator2 = _createForOfIteratorHelperLoose(scrollNode), _step2; !(_step2 = _iterator2()).done;) {
      var node = _step2.value;
      var _node$getBoundingClie = node.getBoundingClientRect(),
        _top = _node$getBoundingClie.top,
        _left = _node$getBoundingClie.left,
        width = _node$getBoundingClie.width,
        height = _node$getBoundingClie.height;
      if (ttop + theight < _top || ttop > _top + height || tleft + twidth < _left || tleft > _left + width) {
        result.style.display = 'none';
        break;
      } else {
        result.style.display = '';
      }
    }
  }
  if (beforePosition && typeof beforePosition) {
    return beforePosition(result, {
      target: {
        node: target,
        width: twidth,
        height: theight,
        left: tleft,
        top: ttop
      },
      overlay: {
        node: overlay,
        width: owidth,
        height: oheight
      }
    });
  }
  return result;
}
// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/overlay-context.js

var OverlayContext = /*#__PURE__*/Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["createContext"])({
  setVisibleOverlayToParent: function setVisibleOverlayToParent() {}
});
/* harmony default export */ var overlay_context = (OverlayContext);
// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/overlay.js



var _excluded = ["target", "children", "wrapperClassName", "maskClassName", "maskStyle", "hasMask", "canCloseByMask", "maskRender", "points", "offset", "fixed", "visible", "onRequestClose", "onOpen", "onClose", "container", "placement", "placementOffset", "disableScroll", "canCloseByOutSideClick", "canCloseByEsc", "safeNode", "beforePosition", "onPosition", "cache", "autoAdjust", "autoFocus", "isAnimationEnd", "rtl", "wrapperStyle"],
  _excluded2 = ["setVisibleOverlayToParent"];
function overlay__createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = overlay__unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function overlay__unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return overlay__arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return overlay__arrayLikeToArray(o, minLen); }
function overlay__arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }






var isScrollDisplay = function isScrollDisplay(element) {
  try {
    var scrollbarStyle = window.getComputedStyle(element, '::-webkit-scrollbar');
    return !scrollbarStyle || scrollbarStyle.getPropertyValue('display') !== 'none';
  } catch (e) {
    // ignore error for firefox
  }
  return true;
};
var overlay_hasScroll = function hasScroll(containerNode) {
  var overflow = getStyle(containerNode, 'overflow');
  if (overflow === 'hidden') {
    return false;
  }
  var parentNode = containerNode.parentNode;
  return parentNode && parentNode.scrollHeight > parentNode.clientHeight && getScrollbarWidth() > 0 && isScrollDisplay(parentNode) && isScrollDisplay(containerNode);
};

/**
 * 传入的组件可能是没有 forwardRef 包裹的 Functional Component, 会导致取不到 ref
 */
var overlay_RefWrapper = /*#__PURE__*/function (_React$Component) {
  inheritsLoose_default()(RefWrapper, _React$Component);
  function RefWrapper() {
    return _React$Component.apply(this, arguments) || this;
  }
  var _proto = RefWrapper.prototype;
  _proto.render = function render() {
    return this.props.children;
  };
  return RefWrapper;
}(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Component);
var Overlay = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
  var _overflowRef$current;
  var body = function body() {
    return document.body;
  };
  var target = props.target,
    children = props.children,
    wrapperClassName = props.wrapperClassName,
    maskClassName = props.maskClassName,
    maskStyle = props.maskStyle,
    hasMask = props.hasMask,
    _props$canCloseByMask = props.canCloseByMask,
    canCloseByMask = _props$canCloseByMask === void 0 ? true : _props$canCloseByMask,
    maskRender = props.maskRender,
    points = props.points,
    offset = props.offset,
    fixed = props.fixed,
    visible = props.visible,
    _props$onRequestClose = props.onRequestClose,
    onRequestClose = _props$onRequestClose === void 0 ? function () {} : _props$onRequestClose,
    onOpen = props.onOpen,
    onClose = props.onClose,
    _props$container = props.container,
    popupContainer = _props$container === void 0 ? body : _props$container,
    placement = props.placement,
    placementOffset = props.placementOffset,
    _props$disableScroll = props.disableScroll,
    disableScroll = _props$disableScroll === void 0 ? false : _props$disableScroll,
    _props$canCloseByOutS = props.canCloseByOutSideClick,
    canCloseByOutSideClick = _props$canCloseByOutS === void 0 ? true : _props$canCloseByOutS,
    _props$canCloseByEsc = props.canCloseByEsc,
    canCloseByEsc = _props$canCloseByEsc === void 0 ? true : _props$canCloseByEsc,
    safeNode = props.safeNode,
    beforePosition = props.beforePosition,
    onPosition = props.onPosition,
    _props$cache = props.cache,
    cache = _props$cache === void 0 ? false : _props$cache,
    autoAdjust = props.autoAdjust,
    _props$autoFocus = props.autoFocus,
    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,
    _props$isAnimationEnd = props.isAnimationEnd,
    isAnimationEnd = _props$isAnimationEnd === void 0 ? true : _props$isAnimationEnd,
    rtl = props.rtl,
    owrapperStyle = props.wrapperStyle,
    others = objectWithoutPropertiesLoose_default()(props, _excluded);
  var position = fixed ? 'fixed' : 'absolute';
  var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(visible),
    firstVisible = _useState[0],
    setFirst = _useState[1];
  var _useState2 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(null),
    forceUpdate = _useState2[1];
  var positionStyleRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])({
    position: position
  });
  var getContainer = typeof popupContainer === 'string' ? function () {
    return document.getElementById(popupContainer);
  } : typeof popupContainer !== 'function' ? function () {
    return popupContainer;
  } : popupContainer;
  var _useState3 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(null),
    container = _useState3[0],
    setContainer = _useState3[1];
  var targetRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var preTarget = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(target);
  var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var containerRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var maskRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overflowRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])([]);
  var lastFocus = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var ro = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var _useState4 = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(Date.now().toString(36)),
    uuid = _useState4[0];
  var _useContext = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useContext"])(overlay_context),
    setVisibleOverlayToParent = _useContext.setVisibleOverlayToParent,
    otherContext = objectWithoutPropertiesLoose_default()(_useContext, _excluded2);
  var childIDMap = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(new Map());
  var handleOpen = function handleOpen(node) {
    setVisibleOverlayToParent(uuid, node);
    onOpen === null || onOpen === void 0 ? void 0 : onOpen(node);
  };
  var handleClose = function handleClose() {
    positionStyleRef.current = null;
    setVisibleOverlayToParent(uuid, null);
    onClose === null || onClose === void 0 ? void 0 : onClose();
  };
  var getVisibleOverlayFromChild = function getVisibleOverlayFromChild(id, node) {
    if (node) {
      childIDMap.current.set(id, node);
    } else {
      childIDMap.current["delete"](id);
    }
    // 让父级也感知
    setVisibleOverlayToParent(id, node);
  };
  var child = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(children);
  if (typeof child.ref === 'string') {
    throw new Error('Can not set ref by string in Overlay, use function instead.');
  }
  var updatePosition = utils_useEvent(function () {
    var overlayNode = overlayRef.current;
    var containerNode = containerRef.current;
    var targetNode = targetRef.current;
    if (!overlayNode || !containerNode || !targetNode) {
      return;
    }
    var placements = getPlacements({
      target: targetNode,
      overlay: overlayNode,
      container: containerNode,
      scrollNode: overflowRef.current,
      points: points,
      offset: offset,
      position: position,
      placement: placement,
      placementOffset: placementOffset,
      beforePosition: beforePosition,
      autoAdjust: autoAdjust,
      rtl: rtl,
      autoHideScrollOverflow: others.autoHideScrollOverflow
    });
    if (!isSameObject(positionStyleRef.current, placements.style)) {
      positionStyleRef.current = placements.style;
      setStyle(overlayNode, placements.style);
      typeof onPosition === 'function' && onPosition(placements);
    }
  });

  // 弹窗挂载
  var overlayRefCallback = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(function (nodeRef) {
    var node = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(nodeRef);
    overlayRef.current = node;
    callRef(ref, node);
    if (node !== null && container) {
      var containerNode = getRelativeContainer(getHTMLElement(container));
      containerRef.current = containerNode;
      var targetElement = target === 'viewport' ? hasMask ? maskRef.current : body() : getTargetNode(target) || body();
      var targetNode = getHTMLElement(targetElement);
      targetRef.current = targetNode;
      overflowRef.current = getOverflowNodes(targetNode, containerNode);

      // fixme: 在followTrigger且空间受限且overlay自动宽度情况下，overlay宽度会跟随left设定自动撑满containing block最右侧，这里建议手动设定overlay宽度或拥有固定内容宽度的overlay来解决，这里暂时使用原来的-1000位置的方案隐藏overlay并不影响容器宽高
      setStyle(node, {
        position: fixed ? 'fixed' : 'absolute',
        top: -1000,
        left: -1000
      });
      var waitTime = 100;
      var throttledUpdatePosition = throttle(updatePosition, waitTime);
      ro.current = new ResizeObserver_es["default"](throttledUpdatePosition);
      ro.current.observe(containerNode);
      ro.current.observe(node);
      // fist call, 不依赖 ResizeObserver observe时的首次执行(测试环境不会执行)，因为 throttle 原因也不会执行两次
      throttledUpdatePosition();
      forceUpdate({});
      if (autoFocus) {
        // 这里setTimeout是等弹窗位置计算完成再进行 focus，否则弹窗还在页面最低端，会出现突然滚动到页面最下方的情况
        setTimeout(function () {
          var focusableNodes = getFocusNodeList(node);
          if (focusableNodes.length > 0 && focusableNodes[0]) {
            lastFocus.current = document.activeElement;
            focusableNodes[0].focus();
          }
        }, waitTime);
      }
      !cache && handleOpen(node);
    } else {
      !cache && handleClose();
      if (ro.current) {
        ro.current.disconnect();
        ro.current = null;
      }
    }
  }, [container]);
  var clickEvent = function clickEvent(e) {
    // 点击在子元素上面，则忽略。为了兼容 react16，这里用 contains 判断而不利用 e.stopPropagation() 阻止冒泡的特性来处理
    for (var _iterator = overlay__createForOfIteratorHelperLoose(childIDMap.current.entries()), _step; !(_step = _iterator()).done;) {
      var _step$value = _step.value,
        oNode = _step$value[1];
      var _node2 = getHTMLElement(oNode);
      if (_node2 && (_node2 === e.target || _node2.contains(e.target))) {
        return;
      }
    }
    if (!visible) {
      return;
    }

    // 点击遮罩关闭
    if (hasMask && maskRef.current === e.target) {
      if (canCloseByMask) {
        onRequestClose('maskClick', e); // TODO: will rename to `mask` in 1.0
      }

      return;
    }
    var safeNodeList = Array.isArray(safeNode) ? safeNode : [safeNode];

    // 弹层默认是安全节点
    if (overlayRef.current) {
      safeNodeList.push(function () {
        return overlayRef.current;
      });
    }

    // 安全节点不关闭
    for (var i = 0; i < safeNodeList.length; i++) {
      var _safeNode = getTargetNode(safeNodeList[i]);
      var _node = getHTMLElement(_safeNode);
      if (_node && (_node === e.target || _node.contains(e.target))) {
        return;
      }
    }
    if (canCloseByOutSideClick) {
      onRequestClose('docClick', e); // TODO: will rename to `doc` in 1.0
    }
  };

  // 这里用 mousedown 而不是用 click。因为 click 是 mouseup 才触发。
  // 如果用 click 带来的问题: mousedown 在弹窗内部，然后按住鼠标不放拖动到弹窗外触发 mouseup 结果弹窗关了，这是不期望的展示。 https://github.com/alibaba-fusion/next/issues/742
  // react 17 冒泡问题:
  //  - react17 中，如果弹窗 mousedown 阻止了 e.stopPropagation(), 那么 document 就不会监听到事件，因为事件冒泡到挂载节点 rootElement 就中断了。
  //  - https://reactjs.org/blog/2020/08/10/react-v17-rc.html#changes-to-event-delegation
  useListener(document, 'mousedown', clickEvent, false, !!(visible && overlayRef.current && (canCloseByOutSideClick || hasMask && canCloseByMask)));
  var keydownEvent = function keydownEvent(e) {
    if (!visible) {
      return;
    }

    // 无子元素才能 esc 取消关闭
    if (e.keyCode === 27 && canCloseByEsc && !childIDMap.current.size) {
      onRequestClose('esc', e);
    }
  };
  useListener(document, 'keydown', keydownEvent, false, !!(visible && overlayRef.current && canCloseByEsc));
  var scrollEvent = function scrollEvent(e) {
    if (!visible) {
      return;
    }
    updatePosition();
  };
  useListener(overflowRef.current, 'scroll', scrollEvent, false, !!(visible && overlayRef.current && (_overflowRef$current = overflowRef.current) !== null && _overflowRef$current !== void 0 && _overflowRef$current.length));

  // 有弹窗情况下在 body 增加 overflow:hidden，两个弹窗同时存在也没问题，会按照堆的方式依次 pop
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && disableScroll) {
      var originStyle = document.body.getAttribute('style');
      setStyle(document.body, 'overflow', 'hidden');
      if (overlay_hasScroll(document.body)) {
        var scrollWidth = getScrollbarWidth();
        if (scrollWidth) {
          setStyle(document.body, 'padding-right', "calc(" + getStyle(document.body, 'padding-right') + " + " + scrollWidth + "px)");
        }
      }
      return function () {
        document.body.setAttribute('style', originStyle || '');
      };
    }
    return undefined;
  }, [visible && disableScroll]);

  // 第一次加载并且 visible=false 的情况不挂载弹窗
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (!firstVisible && visible) {
      setFirst(true);
    }
  }, [visible]);

  // cache 情况下的模拟 onOpen/onClose
  var overlayNode = overlayRef.current; // overlayRef.current 可能会异步变化，所以要先接下
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (cache && overlayNode) {
      if (visible) {
        updatePosition();
        handleOpen(overlayNode);
      } else {
        handleClose();
      }
    }
  }, [visible, cache && overlayNode]);

  // target 动态更新则重新刷新定位
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && overlayNode) {
      if (target && targetRef.current && preTarget.current !== target) {
        var targetElement = target === 'viewport' ? hasMask ? maskRef.current : body() : getTargetNode(target) || body();
        var targetNode = getHTMLElement(targetElement);
        if (targetNode && targetRef.current !== targetNode) {
          targetRef.current = targetNode;
          updatePosition();
        }
        preTarget.current = target;
      }
    }
  }, [target]);
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible && overlayNode) {
      updatePosition();
    }
  }, [offset, placement, placementOffset, points, autoAdjust, rtl]);

  // autoFocus 弹窗关闭后回到触发点
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (!visible && autoFocus && lastFocus.current) {
      lastFocus.current.focus();
      lastFocus.current = null;
    }
  }, [!visible && autoFocus && lastFocus.current]);

  // container 异步加载, 因为 container 很可能还没渲染完成，所以 visible 后这里异步设置下
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if (visible) {
      // 首次更新
      if (!container) {
        setContainer(getContainer());
      } else if (getContainer() !== container) {
        setContainer(getContainer());
      }
    }
  }, [visible, popupContainer]);
  if (firstVisible === false || !container) {
    return null;
  }
  if (!visible && !cache && isAnimationEnd) {
    return null;
  }
  var newChildren = child ? /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_RefWrapper, {
    ref: overlayRefCallback
  }, /*#__PURE__*/Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["cloneElement"])(child, extends_default()({}, others, {
    style: extends_default()({
      top: 0,
      left: 0
    }, child.props.style, positionStyleRef.current)
  }))) : null;
  var wrapperStyle = extends_default()({}, owrapperStyle);
  if (cache && !visible && isAnimationEnd) {
    wrapperStyle.display = 'none';
  }
  var maskNode = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement("div", {
    className: maskClassName,
    style: maskStyle,
    ref: maskRef
  });
  var content = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement("div", {
    className: wrapperClassName,
    style: wrapperStyle
  }, hasMask ? maskRender ? maskRender(maskNode) : maskNode : null, newChildren);
  return /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_context.Provider, {
    value: extends_default()({}, otherContext, {
      setVisibleOverlayToParent: getVisibleOverlayFromChild
    })
  }, /*#__PURE__*/Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["createPortal"])(content, container));
});
/* harmony default export */ var es_overlay = (Overlay);
// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/popup.js


var popup__excluded = ["overlay", "triggerType", "triggerClickKeyCode", "children", "defaultVisible", "className", "onVisibleChange", "container", "style", "placement", "canCloseByTrigger", "delay", "overlayProps", "safeNode", "followTrigger", "target", "disabled"];




var Popup = /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.forwardRef(function (props, ref) {
  var body = function body() {
    return document.body;
  };
  var overlay = props.overlay,
    _props$triggerType = props.triggerType,
    triggerType = _props$triggerType === void 0 ? 'click' : _props$triggerType,
    triggerClickKeyCode = props.triggerClickKeyCode,
    children = props.children,
    defaultVisible = props.defaultVisible,
    className = props.className,
    _props$onVisibleChang = props.onVisibleChange,
    onVisibleChange = _props$onVisibleChang === void 0 ? function () {} : _props$onVisibleChang,
    _props$container = props.container,
    container = _props$container === void 0 ? body : _props$container,
    _props$style = props.style,
    style = _props$style === void 0 ? {} : _props$style,
    _props$placement = props.placement,
    placement = _props$placement === void 0 ? 'bl' : _props$placement,
    _props$canCloseByTrig = props.canCloseByTrigger,
    canCloseByTrigger = _props$canCloseByTrig === void 0 ? true : _props$canCloseByTrig,
    _props$delay = props.delay,
    delay = _props$delay === void 0 ? 200 : _props$delay,
    _props$overlayProps = props.overlayProps,
    overlayProps = _props$overlayProps === void 0 ? {} : _props$overlayProps,
    safeNode = props.safeNode,
    _props$followTrigger = props.followTrigger,
    followTrigger = _props$followTrigger === void 0 ? false : _props$followTrigger,
    otarget = props.target,
    _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    others = objectWithoutPropertiesLoose_default()(props, popup__excluded);
  var _useState = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useState"])(defaultVisible || props.visible),
    visible = _useState[0],
    setVisible = _useState[1];
  var triggerRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overlayRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var mouseLeaveTimer = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var mouseEnterTimer = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(null);
  var overlayClick = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useRef"])(false);
  var child = children && external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(children);
  var overlayChild = external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Children.only(overlay);
  Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useEffect"])(function () {
    if ('visible' in props) {
      setVisible(props.visible);
    }
  }, [props.visible]);
  var handleVisibleChange = function handleVisibleChange(visible, e, triggerType) {
    if (triggerType === void 0) {
      triggerType = 'fromTrigger';
    }
    if (disabled) {
      return;
    }
    if (!('visible' in props)) {
      if (visible || overlayRef.current) {
        setVisible(visible);
      }
    }
    onVisibleChange(visible, triggerType, e);
  };
  var handleClick = function handleClick(e) {
    if (visible && !canCloseByTrigger) {
      return;
    }
    handleVisibleChange(!visible, e); // todo: rename to trigger in 1.x
  };

  var handleKeyDown = function handleKeyDown(e) {
    var keycodes = Array.isArray(triggerClickKeyCode) ? triggerClickKeyCode : [triggerClickKeyCode];
    if (keycodes.includes(e.keyCode)) {
      handleVisibleChange(!visible, e); // todo: rename to trigger in 1.x
    }
  };

  var handleMouseEnter = function handleMouseEnter(targetType) {
    return function (e) {
      if (mouseLeaveTimer.current && visible) {
        clearTimeout(mouseLeaveTimer.current);
        mouseLeaveTimer.current = null;
        return;
      }
      if (!mouseEnterTimer.current && !visible) {
        mouseEnterTimer.current = setTimeout(function () {
          handleVisibleChange(true, e, targetType);
          mouseEnterTimer.current = null;
        }, delay);
      }
    };
  };
  var handleMouseLeave = function handleMouseLeave(targetType) {
    return function (e) {
      if (!mouseLeaveTimer.current && visible) {
        mouseLeaveTimer.current = setTimeout(function () {
          handleVisibleChange(false, e, targetType);
          mouseLeaveTimer.current = null;
        }, delay);
      }
      if (mouseEnterTimer.current && !visible) {
        clearTimeout(mouseEnterTimer.current);
        mouseEnterTimer.current = null;
      }
    };
  };
  var handleFocus = function handleFocus(e) {
    handleVisibleChange(true, e);
  };
  var handleBlur = function handleBlur(e) {
    if (overlayClick.current) {
      overlayClick.current = false;
      return;
    }
    handleVisibleChange(false, e);
  };

  // 点击弹窗的时候不能被 onBlur 关闭
  var handleOverlayClick = function handleOverlayClick(e) {
    overlayClick.current = true;
  };
  var handleRequestClose = function handleRequestClose(targetType, e) {
    handleVisibleChange(false, e, targetType);
  };
  var triggerProps = {};
  var overlayOtherProps = {};
  var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];
  if (child && !disabled) {
    var triggerTypeList = typeof triggerType === 'string' ? [triggerType] : triggerType;
    triggerTypeList.forEach(function (t) {
      var _child$props, _child$props2, _child$props3, _child$props4, _child$props5, _child$props6;
      switch (t) {
        case 'click':
          triggerProps.onClick = makeChain(handleClick, (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.onClick);
          triggerProps.onKeyDown = makeChain(handleKeyDown, (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.onKeyDown);
          break;
        case 'hover':
          triggerProps.onMouseEnter = makeChain(handleMouseEnter('fromTrigger'), (_child$props3 = child.props) === null || _child$props3 === void 0 ? void 0 : _child$props3.onMouseEnter);
          triggerProps.onMouseLeave = makeChain(handleMouseLeave('fromTrigger'), (_child$props4 = child.props) === null || _child$props4 === void 0 ? void 0 : _child$props4.onMouseLeave);
          overlayOtherProps.onMouseEnter = makeChain(handleMouseEnter('overlay'), overlayProps.onMouseEnter);
          overlayOtherProps.onMouseLeave = makeChain(handleMouseLeave('overlay'), overlayProps.onMouseLeave);
          break;
        case 'focus':
          triggerProps.onFocus = makeChain(handleFocus, (_child$props5 = child.props) === null || _child$props5 === void 0 ? void 0 : _child$props5.onFocus);
          triggerProps.onBlur = makeChain(handleBlur, (_child$props6 = child.props) === null || _child$props6 === void 0 ? void 0 : _child$props6.onBlur);
          overlayOtherProps.onMouseDown = makeChain(handleOverlayClick, overlayProps.onMouseDown);
          break;
      }
    });

    // trigger 是安全节点
    safeNodes.push(function () {
      return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current);
    });
  }
  var target = otarget || (child ? function () {
    return Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current);
  } : body);
  var getContainer = typeof container === 'string' ? function () {
    return document.getElementById(container);
  } : typeof container !== 'function' ? function () {
    return container;
  } : function () {
    return container(Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current));
  };
  var overlayContainer = followTrigger ? function () {
    var _findDOMNode;
    return (_findDOMNode = Object(external___root___ReactDOM___commonjs2___react_dom___commonjs___react_dom___amd___react_dom__["findDOMNode"])(triggerRef.current)) === null || _findDOMNode === void 0 ? void 0 : _findDOMNode.parentNode;
  } : getContainer;

  // triggerRef 可能会更新，等计算的时候再通过 findDOMNode 取真实值
  var refWrapperRef = Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(function (ref) {
    triggerRef.current = ref;
  }, []);
  return /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.Fragment, null, child && /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(overlay_RefWrapper, {
    ref: refWrapperRef
  }, /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.cloneElement(child, triggerProps)), /*#__PURE__*/external___root___React___commonjs2___react___commonjs___react___amd___react___default.a.createElement(es_overlay, extends_default()({}, others, overlayOtherProps, {
    placement: placement,
    container: overlayContainer,
    safeNode: safeNodes,
    visible: visible,
    target: target,
    onRequestClose: handleRequestClose,
    ref: Object(external___root___React___commonjs2___react___commonjs___react___amd___react__["useCallback"])(makeChain(saveRef(overlayRef), saveRef(ref)), [])
  }), overlayChild));
});
/* harmony default export */ var popup = (Popup);
// CONCATENATED MODULE: ./node_modules/@alifd/overlay/es/index.js



var es_Overlay = es_overlay;
es_Overlay.Popup = popup;
es_Overlay.OverlayContext = overlay_context;
/* harmony default export */ var es = __webpack_exports__["default"] = (es_Overlay);

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

exports.isSingle = isSingle;
exports.isNull = isNull;
exports.escapeForReg = escapeForReg;
exports.filter = filter;
exports.loopMap = loopMap;
exports.parseDataSourceFromChildren = parseDataSourceFromChildren;
exports.normalizeDataSource = normalizeDataSource;
exports.flattingDataSource = flattingDataSource;
exports.filterDataSource = filterDataSource;
exports.getValueDataSource = getValueDataSource;
exports.valueToSelectKey = valueToSelectKey;

var _react = __webpack_require__(0);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * util module
 */

/**
 * 是否是单选模式
 * @param {string} mode
 * @return {boolean} is single mode
 */
function isSingle(mode) {
    return !mode || mode === 'single';
}

/**
 * 在 Select 中，认为 null 和 undefined 都是空值
 * @param {*} n any object
 * @return {boolean}
 */
function isNull(n) {
    return n === null || n === undefined;
}

/**
 * 将字符串中的正则表达式关键字符添加转义
 * @param {string} str
 * @return {string}
 */
function escapeForReg(str) {
    return str.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
}

/**
 * filter by key
 * @param {string} key filter key
 * @param {object} item item object
 * @return {boolean} it's filtered
 */
function filter(key, item) {
    var _key = escapeForReg('' + key);
    var regExp = new RegExp('(' + _key + ')', 'ig');

    return regExp.test('' + item.value) || regExp.test('' + item.label);
}

/**
 * loop map
 * @param {Array} dataSource
 * @param {function} callback
 * @return {Array}
 * ----
 * @callback ~loopCallback
 * @param {object} option
 */
function loopMap(dataSource, callback) {
    var result = [];
    dataSource.forEach(function (option) {
        if (option.children) {
            var children = loopMap(option.children, callback);
            result.push((0, _extends3.default)({}, option, {
                children: children
            }));
        } else {
            // eslint-disable-next-line callback-return
            var tmp = callback(option);
            tmp && result.push(tmp);
        }
    });

    return result;
}

/**
 * Parse dataSource from MenuItem
 * @static
 * @param {Array<Element>} children
 * @param {number} [deep=0] recursion deep level
 */
function parseDataSourceFromChildren(children) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    var source = [];

    _react.Children.forEach(children, function (child, index) {
        if (!child) {
            return;
        }
        var type = child.type,
            childProps = child.props;

        var item2 = { deep: deep };

        var isOption = false;
        var isOptionGroup = false;

        if (typeof type === 'function' && type._typeMark === 'next_select_option' || type === 'option') {
            isOption = true;
        }
        if (typeof type === 'function' && type._typeMark === 'next_select_option_group' || type === 'optgroup') {
            isOptionGroup = true;
        }

        if (!isOption && !isOptionGroup) {
            return;
        }

        if (isOption) {
            // option
            // If children is a string, it can be used as value
            var isStrChild = typeof childProps.children === 'string';
            // value > key > string children > index
            item2.value = 'value' in childProps ? childProps.value : 'key' in childProps ? childProps.key : isStrChild ? childProps.children : '' + index;

            item2.label = childProps.label || childProps.children || '' + item2.value;
            if ('title' in childProps) {
                item2.title = childProps.title;
            }
            childProps.disabled === true && (item2.disabled = true);
            // You can put your extra data here, and use it in `itemRender` or `labelRender`
            (0, _extends3.default)(item2, childProps['data-extra'] || {});
        } else if (isOptionGroup && deep < 1) {
            // option group
            item2.label = childProps.label || 'Group';
            // parse children nodes
            item2.children = parseDataSourceFromChildren(childProps.children, deep + 1);
        }

        source.push(item2);
    });

    return source;
}

/**
 * Normalize dataSource
 * @static
 * @param {Array} dataSource
 * @param {number} [deep=0] recursion deep level
 * ----
 * value priority: value > 'index'
 * label priority: label > 'value' > 'index'
 * disabled: disabled === true
 */
function normalizeDataSource(dataSource) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var showDataSourceChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    var source = [];

    dataSource.forEach(function (item, index) {
        // enable array of basic type
        if (/string|boolean|number/.test(typeof item === 'undefined' ? 'undefined' : (0, _typeof3.default)(item)) || item === null || item === undefined) {
            item = { label: '' + item, value: item };
        }

        // filter off addon item
        if (item && item.__isAddon) {
            return;
        }

        var item2 = { deep: deep };
        // deep < 1: only 2 level allowed
        if (Array.isArray(item.children) && deep < 1 && showDataSourceChildren) {
            // handle group
            item2.label = item.label || item.value || 'Group ' + index;
            // parse children
            item2.children = normalizeDataSource(item.children, deep + 1);
        } else {
            var _item = item,
                value = _item.value,
                label = _item.label,
                disabled = _item.disabled,
                title = _item.title,
                others = (0, _objectWithoutProperties3.default)(_item, ['value', 'label', 'disabled', 'title']);
            // undefined 认为是没传取 index 值替代

            item2.value = typeof value !== 'undefined' ? value : '' + index;
            item2.label = label || '' + item2.value;
            if ('title' in item) {
                item2.title = title;
            }
            disabled === true && (item2.disabled = true);

            (0, _extends3.default)(item2, others);
        }

        source.push(item2);
    });

    return source;
}

/**
 * Get flatten dataSource
 * @static
 * @param  {Array} dataSource structured dataSource
 * @return {Array}
 */
function flattingDataSource(dataSource) {
    var source = [];

    dataSource.forEach(function (item) {
        if (Array.isArray(item.children)) {
            source.push.apply(source, flattingDataSource(item.children));
        } else {
            source.push(item);
        }
    });

    return source;
}

function filterDataSource(dataSource, key, filter, addonKey) {
    if (!Array.isArray(dataSource)) {
        return [];
    }
    if (typeof key === 'undefined' || key === null) {
        return [].concat(dataSource);
    }

    var addKey = true;
    var menuDataSource = loopMap(dataSource, function (option) {
        if (key === '' + option.value) {
            addKey = false;
        }
        return filter(key, option) && !option.__isAddon && option;
    });

    // if key not in menuDataSource, add key to dataSource
    if (addonKey && key && addKey) {
        menuDataSource.unshift({
            value: key,
            label: key,
            __isAddon: true
        });
    }

    return menuDataSource;
}

function getKeyItemByValue(value, valueMap) {
    var item = void 0;

    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {
        if (value.hasOwnProperty('value')) {
            item = value;
        } else {
            item = (0, _extends3.default)({
                value: ''
            }, value);
        }
    } else {
        item = valueMap['' + value] || {
            value: value,
            label: value
        };
    }

    return item;
}

/**
 * compute valueDataSource by new value
 * @param {Array/String} value 数据
 * @param {Object} mapValueDS   上个value的缓存数据 value => {value,label} 的映射关系表
 * @param {*} mapMenuDS  通过 dataSource 建立 value => {value,label} 的映射关系表
 * @returns {Object} value: [value]; valueDS: [{value,label}]; mapValueDS: {value: {value,label}}
 */
function getValueDataSource(value, mapValueDS, mapMenuDS) {
    if (isNull(value)) {
        return {};
    }

    var newValue = [];
    var newValueDS = [];
    var newMapValueDS = {};
    var _newMapDS = (0, _extends3.default)({}, mapValueDS, mapMenuDS);

    if (Array.isArray(value)) {
        value.forEach(function (v) {
            var item = getKeyItemByValue(v, _newMapDS);

            newValueDS.push(item);
            newMapValueDS['' + item.value] = item;
            newValue.push(item.value);
        });

        return {
            value: newValue, // [value]
            valueDS: newValueDS, // [{value,label}]
            mapValueDS: newMapValueDS // {value: {value,label}}
        };
    } else {
        var _mapValueDS;

        var item = getKeyItemByValue(value, _newMapDS);

        return {
            value: item.value,
            valueDS: item,
            mapValueDS: (_mapValueDS = {}, _mapValueDS['' + item.value] = item, _mapValueDS)
        };
    }
}

/**
 * Get flatten dataSource
 * @static
 * @param  {any} value structured dataSource
 * @return {String}
 */
function valueToSelectKey(value) {
    var val = void 0;
    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && value.hasOwnProperty('value')) {
        val = value.value;
    } else {
        val = value;
    }
    return '' + val;
}

/**
 * UP Down 改进双向链表方法
 */
// function DoubleLinkList(element){
//     this.prev = null;
//     this.next = null;
//     this.element = element;
// }
//
// export function mapDoubleLinkList(dataSource){
//
//     const mapDS = {};
//     let doubleLink = null;
//
//     let head = null;
//     let tail = null;
//
//     function  append(element) {
//         if (!doubleLink) {
//             doubleLink = new DoubleLinkList(element);
//             head = doubleLink;
//             tail = doubleLink;
//             return doubleLink;
//         }
//
//         const node = new DoubleLinkList(element);
//         tail.next = node;
//         node.prev = tail;
//         tail = node;
//
//         return tail;
//     }
//
//     dataSource.forEach((item => {
//         if (item.disabled) {
//             return;
//         }
//         mapDS[`${item.value}`] = append(item);
//     }));
//
//     return mapDS;
// }
//

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _row = __webpack_require__(63);

var _row2 = _interopRequireDefault(_row);

var _cell = __webpack_require__(64);

var _cell2 = _interopRequireDefault(_cell);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

var Body = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Body, _React$Component);

    function Body() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Body);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getRowRef = function (i, row) {
            _this.props.rowRef(i, row);
        }, _this.onRowClick = function (record, index, e) {
            _this.props.onRowClick(record, index, e);
        }, _this.onRowMouseEnter = function (record, index, e) {
            _this.props.onRowMouseEnter(record, index, e);
        }, _this.onRowMouseLeave = function (record, index, e) {
            _this.props.onRowMouseLeave(record, index, e);
        }, _this.onBodyMouseOver = function (e) {
            _this.props.onBodyMouseOver(e);
        }, _this.onBodyMouseOut = function (e) {
            _this.props.onBodyMouseOut(e);
        }, _this.getEmptyNode = function (ref) {
            _this.emptyNode = ref;
        }, _this.setEmptyDomStyle = function () {
            var tableEl = _this.props.tableEl;
            // getboundingclientRect 获取的是除 margin 之外的内容区，可能带小数点，不四舍五入

            var borderLeftWidth = _util.dom.getStyle(tableEl, 'borderLeftWidth');
            var tableWidth = tableEl && tableEl.getBoundingClientRect().width;
            var totalWidth = tableWidth - borderLeftWidth - 1 || '100%';

            _util.dom.setStyle(_this.emptyNode, { width: totalWidth });
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Body.prototype.componentDidMount = function componentDidMount() {
        _util.events.on(window, 'resize', this.setEmptyDomStyle);
    };

    Body.prototype.componentDidUpdate = function componentDidUpdate() {
        this.setEmptyDomStyle();
    };

    Body.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.setEmptyDomStyle);
    };

    Body.prototype.render = function render() {
        var _this2 = this;

        /*eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            children = _props.children,
            Tag = _props.component,
            colGroup = _props.colGroup,
            loading = _props.loading,
            emptyContent = _props.emptyContent,
            components = _props.components,
            getCellProps = _props.getCellProps,
            primaryKey = _props.primaryKey,
            getRowProps = _props.getRowProps,
            dataSource = _props.dataSource,
            cellRef = _props.cellRef,
            columns = _props.columns,
            rowRef = _props.rowRef,
            onRowClick = _props.onRowClick,
            onRowMouseEnter = _props.onRowMouseEnter,
            onRowMouseLeave = _props.onRowMouseLeave,
            onBodyMouseOver = _props.onBodyMouseOver,
            onBodyMouseOut = _props.onBodyMouseOut,
            locale = _props.locale,
            pure = _props.pure,
            expandedIndexSimulate = _props.expandedIndexSimulate,
            tableEl = _props.tableEl,
            rtl = _props.rtl,
            crossline = _props.crossline,
            tableWidth = _props.tableWidth,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'children', 'component', 'colGroup', 'loading', 'emptyContent', 'components', 'getCellProps', 'primaryKey', 'getRowProps', 'dataSource', 'cellRef', 'columns', 'rowRef', 'onRowClick', 'onRowMouseEnter', 'onRowMouseLeave', 'onBodyMouseOver', 'onBodyMouseOut', 'locale', 'pure', 'expandedIndexSimulate', 'tableEl', 'rtl', 'crossline', 'tableWidth']);

        var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';

        var _components$Row = components.Row,
            Row = _components$Row === undefined ? _row2.default : _components$Row,
            _components$Cell = components.Cell,
            Cell = _components$Cell === undefined ? _cell2.default : _components$Cell;

        var empty = loading ? _react2.default.createElement('span', null, '\xA0') : emptyContent || locale.empty;
        var rows = _react2.default.createElement('tr', null, _react2.default.createElement('td', { colSpan: columns.length }, _react2.default.createElement('div', {
            ref: this.getEmptyNode,
            className: prefix + 'table-empty',
            style: { position: 'sticky', left: 0, overflow: 'hidden', width: totalWidth }
        }, empty)));
        if (Tag === 'div') {
            rows = _react2.default.createElement('table', { role: 'table' }, _react2.default.createElement('tbody', null, rows));
        }
        if (dataSource.length) {
            rows = dataSource.map(function (record, index) {
                var _classnames;

                var rowProps = {};
                // record may be a string
                var rowIndex = (typeof record === 'undefined' ? 'undefined' : (0, _typeof3.default)(record)) === 'object' && '__rowIndex' in record ? record.__rowIndex : index;

                if (expandedIndexSimulate) {
                    rowProps = record.__expanded ? {} : getRowProps(record, index / 2);
                } else {
                    rowProps = getRowProps(record, rowIndex);
                }

                rowProps = rowProps || {};

                var rowClass = rowProps.className;
                var className = (0, _classnames3.default)((_classnames = {
                    first: index === 0,
                    last: index === dataSource.length - 1
                }, _classnames[rowClass] = rowClass, _classnames));
                var expanded = record.__expanded ? 'expanded' : '';
                return _react2.default.createElement(Row, (0, _extends3.default)({
                    key: '' + (record[primaryKey] || (record[primaryKey] === 0 ? 0 : rowIndex)) + expanded
                }, rowProps, {
                    ref: _this2.getRowRef.bind(_this2, expanded ? rowIndex + '_expanded' : rowIndex),
                    colGroup: colGroup,
                    rtl: rtl,
                    columns: columns,
                    primaryKey: primaryKey,
                    record: record,
                    rowIndex: rowIndex,
                    __rowIndex: rowIndex,
                    prefix: prefix,
                    pure: pure,
                    cellRef: cellRef,
                    getCellProps: getCellProps,
                    className: className,
                    Cell: Cell,
                    tableEl: tableEl,
                    onClick: _this2.onRowClick,
                    locale: locale,
                    onMouseEnter: _this2.onRowMouseEnter,
                    onMouseLeave: _this2.onRowMouseLeave
                }));
            });
        } else {
            // 异步设置空数据时的宽度
            this.setEmptyDomStyle();
        }
        var event = crossline ? {
            onMouseOver: this.onBodyMouseOver,
            onMouseOut: this.onBodyMouseOut
        } : {};
        return _react2.default.createElement(Tag, (0, _extends3.default)({ className: className }, others, event), rows, children);
    };

    return Body;
}(_react2.default.Component), _class.propTypes = {
    loading: _propTypes2.default.bool,
    emptyContent: _propTypes2.default.any,
    tableEl: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    components: _propTypes2.default.object,
    getCellProps: _propTypes2.default.func,
    cellRef: _propTypes2.default.func,
    primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
    getRowProps: _propTypes2.default.func,
    rowRef: _propTypes2.default.func,
    dataSource: _propTypes2.default.array,
    children: _propTypes2.default.any,
    className: _propTypes2.default.string,
    component: _propTypes2.default.string,
    colGroup: _propTypes2.default.object,
    columns: _propTypes2.default.array,
    onRowClick: _propTypes2.default.func,
    onRowMouseEnter: _propTypes2.default.func,
    onRowMouseLeave: _propTypes2.default.func,
    onBodyMouseOver: _propTypes2.default.func,
    onBodyMouseOut: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    crossline: _propTypes2.default.bool,
    tableWidth: _propTypes2.default.number
}, _class.defaultProps = {
    loading: false,
    prefix: 'next-',
    components: {},
    getCellProps: noop,
    cellRef: noop,
    primaryKey: 'id',
    getRowProps: noop,
    rowRef: noop,
    dataSource: [],
    component: 'tbody',
    columns: []
}, _temp2);
Body.displayName = 'Body';
exports.default = Body;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

var Row = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Row, _React$Component);

    function Row() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Row);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onClick = function (e) {
            var _this$props = _this.props,
                record = _this$props.record,
                rowIndex = _this$props.rowIndex;

            _this.props.onClick(record, rowIndex, e);
        }, _this.onMouseEnter = function (e) {
            var _this$props2 = _this.props,
                record = _this$props2.record,
                rowIndex = _this$props2.rowIndex,
                __rowIndex = _this$props2.__rowIndex;

            var row = __rowIndex || rowIndex;
            _this.onRowHover(record, row, true, e);
        }, _this.onMouseLeave = function (e) {
            var _this$props3 = _this.props,
                record = _this$props3.record,
                rowIndex = _this$props3.rowIndex,
                __rowIndex = _this$props3.__rowIndex;

            var row = __rowIndex || rowIndex;
            _this.onRowHover(record, row, false, e);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Row.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        if (nextProps.pure) {
            var isEqual = _util.obj.shallowEqual(this.props, nextProps);
            return !isEqual;
        }

        return true;
    };

    Row.prototype.onRowHover = function onRowHover(record, index, isEnter, e) {
        var _props = this.props,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            currentRow = (0, _reactDom.findDOMNode)(this);

        if (isEnter) {
            onMouseEnter(record, index, e);
            currentRow && _util.dom.addClass(currentRow, 'hovered');
        } else {
            onMouseLeave(record, index, e);
            currentRow && _util.dom.removeClass(currentRow, 'hovered');
        }
    };

    Row.prototype.renderCells = function renderCells(record, rowIndex) {
        var _this2 = this;

        var _props2 = this.props,
            Cell = _props2.Cell,
            columns = _props2.columns,
            getCellProps = _props2.getCellProps,
            cellRef = _props2.cellRef,
            prefix = _props2.prefix,
            primaryKey = _props2.primaryKey,
            __rowIndex = _props2.__rowIndex,
            pure = _props2.pure,
            locale = _props2.locale,
            rtl = _props2.rtl;

        // use params first, it's for list

        rowIndex = rowIndex !== undefined ? rowIndex : this.props.rowIndex;

        var lockType = this.context.lockType;

        return columns.map(function (child, index) {
            var _classnames;

            /* eslint-disable no-unused-vars, prefer-const */
            var dataIndex = child.dataIndex,
                align = child.align,
                alignHeader = child.alignHeader,
                width = child.width,
                colSpan = child.colSpan,
                style = child.style,
                cellStyle = child.cellStyle,
                __colIndex = child.__colIndex,
                others = (0, _objectWithoutProperties3.default)(child, ['dataIndex', 'align', 'alignHeader', 'width', 'colSpan', 'style', 'cellStyle', '__colIndex']);

            var colIndex = '__colIndex' in child ? __colIndex : index;
            // colSpan should show in body td by the way of <Table.Column colSpan={2} />
            // tbody's cell merge should only by the way of <Table cellProps={} />

            var value = (0, _util2.fetchDataByPath)(record, dataIndex);
            var attrs = getCellProps(rowIndex, colIndex, dataIndex, record) || {};

            if (_this2.context.notRenderCellIndex) {
                var matchCellIndex = _this2.context.notRenderCellIndex.map(function (cellIndex) {
                    return cellIndex.toString();
                }).indexOf([rowIndex, colIndex].toString());
                if (matchCellIndex > -1) {
                    _this2.context.notRenderCellIndex.splice(matchCellIndex, 1);
                    return null;
                }
            }
            if (attrs.colSpan && attrs.colSpan > 1 || attrs.rowSpan && attrs.rowSpan > 1) {
                _this2._getNotRenderCellIndex(colIndex, rowIndex, attrs.colSpan || 1, attrs.rowSpan || 1);
            }

            var cellClass = attrs.className;
            var className = (0, _classnames4.default)((_classnames = {
                first: lockType !== 'right' && colIndex === 0,
                last: lockType !== 'left' && (colIndex === columns.length - 1 || colIndex + attrs.colSpan === columns.length) }, _classnames[child.className] = child.className, _classnames[cellClass] = cellClass, _classnames));

            var newStyle = (0, _extends3.default)({}, attrs.style, cellStyle);

            return _react2.default.createElement(Cell, (0, _extends3.default)({
                key: __rowIndex + '-' + colIndex
            }, others, attrs, {
                style: newStyle,
                'data-next-table-col': colIndex,
                'data-next-table-row': rowIndex,
                ref: function ref(cell) {
                    return cellRef(__rowIndex, colIndex, cell);
                },
                prefix: prefix,
                pure: pure,
                primaryKey: primaryKey,
                record: record,
                className: className,
                value: value,
                colIndex: colIndex,
                rowIndex: rowIndex,
                align: align,
                locale: locale,
                rtl: rtl,
                width: width
            }));
        });
    };

    Row.prototype._getNotRenderCellIndex = function _getNotRenderCellIndex(colIndex, rowIndex, colSpan, rowSpan) {
        var maxColIndex = colSpan;
        var maxRowIndex = rowSpan;
        var notRenderCellIndex = [];
        for (var i = 0; i < maxColIndex; i++) {
            for (var j = 0; j < maxRowIndex; j++) {
                notRenderCellIndex.push([rowIndex + j, colIndex + i]);
            }
        }
        [].push.apply(this.context.notRenderCellIndex, notRenderCellIndex);
    };

    Row.prototype.render = function render() {
        var _classnames2;

        /* eslint-disable no-unused-vars*/
        var _props3 = this.props,
            prefix = _props3.prefix,
            className = _props3.className,
            onClick = _props3.onClick,
            onMouseEnter = _props3.onMouseEnter,
            onMouseLeave = _props3.onMouseLeave,
            columns = _props3.columns,
            Cell = _props3.Cell,
            getCellProps = _props3.getCellProps,
            rowIndex = _props3.rowIndex,
            record = _props3.record,
            __rowIndex = _props3.__rowIndex,
            children = _props3.children,
            primaryKey = _props3.primaryKey,
            cellRef = _props3.cellRef,
            colGroup = _props3.colGroup,
            pure = _props3.pure,
            locale = _props3.locale,
            expandedIndexSimulate = _props3.expandedIndexSimulate,
            tableEl = _props3.tableEl,
            rtl = _props3.rtl,
            wrapper = _props3.wrapper,
            others = (0, _objectWithoutProperties3.default)(_props3, ['prefix', 'className', 'onClick', 'onMouseEnter', 'onMouseLeave', 'columns', 'Cell', 'getCellProps', 'rowIndex', 'record', '__rowIndex', 'children', 'primaryKey', 'cellRef', 'colGroup', 'pure', 'locale', 'expandedIndexSimulate', 'tableEl', 'rtl', 'wrapper']);

        var cls = (0, _classnames4.default)((_classnames2 = {}, _classnames2[prefix + 'table-row'] = true, _classnames2[className] = className, _classnames2));

        var tr = _react2.default.createElement('tr', (0, _extends3.default)({
            className: cls,
            role: 'row'
        }, others, {
            onClick: this.onClick,
            onMouseEnter: this.onMouseEnter,
            onMouseLeave: this.onMouseLeave
        }), this.renderCells(record), children);

        return wrapper(tr);
    };

    return Row;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
    className: _propTypes2.default.string,
    columns: _propTypes2.default.array,
    record: _propTypes2.default.any,
    Cell: _propTypes2.default.func,
    rowIndex: _propTypes2.default.number,
    getCellProps: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    onMouseEnter: _propTypes2.default.func,
    onMouseLeave: _propTypes2.default.func,
    children: _propTypes2.default.any,
    cellRef: _propTypes2.default.func,
    colGroup: _propTypes2.default.object,
    locale: _propTypes2.default.object,
    wrapper: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    primaryKey: 'id',
    columns: [],
    record: {},
    getCellProps: noop,
    onClick: noop,
    onMouseEnter: noop,
    onMouseLeave: noop,
    cellRef: noop,
    colGroup: {},
    wrapper: function wrapper(row) {
        return row;
    }
}, _class.contextTypes = {
    notRenderCellIndex: _propTypes2.default.array,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}, _temp2);
Row.displayName = 'Row';
exports.default = Row;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Cell = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Cell, _React$Component);

    function Cell() {
        (0, _classCallCheck3.default)(this, Cell);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Cell.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
        if (nextProps.pure) {
            var isEqual = _util.obj.shallowEqual(this.props, nextProps);
            return !isEqual;
        }
        return true;
    };

    Cell.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            cell = _props.cell,
            value = _props.value,
            resizable = _props.resizable,
            asyncResizable = _props.asyncResizable,
            colIndex = _props.colIndex,
            rowIndex = _props.rowIndex,
            __colIndex = _props.__colIndex,
            record = _props.record,
            context = _props.context,
            align = _props.align,
            _props$style = _props.style,
            style = _props$style === undefined ? {} : _props$style,
            Tag = _props.component,
            children = _props.children,
            title = _props.title,
            width = _props.width,
            innerStyle = _props.innerStyle,
            primaryKey = _props.primaryKey,
            __normalized = _props.__normalized,
            filterMode = _props.filterMode,
            filterMenuProps = _props.filterMenuProps,
            filterProps = _props.filterProps,
            filters = _props.filters,
            sortable = _props.sortable,
            sortDirections = _props.sortDirections,
            lock = _props.lock,
            pure = _props.pure,
            locale = _props.locale,
            expandedIndexSimulate = _props.expandedIndexSimulate,
            rtl = _props.rtl,
            isIconLeft = _props.isIconLeft,
            type = _props.type,
            htmlTitle = _props.htmlTitle,
            wordBreak = _props.wordBreak,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'cell', 'value', 'resizable', 'asyncResizable', 'colIndex', 'rowIndex', '__colIndex', 'record', 'context', 'align', 'style', 'component', 'children', 'title', 'width', 'innerStyle', 'primaryKey', '__normalized', 'filterMode', 'filterMenuProps', 'filterProps', 'filters', 'sortable', 'sortDirections', 'lock', 'pure', 'locale', 'expandedIndexSimulate', 'rtl', 'isIconLeft', 'type', 'htmlTitle', 'wordBreak']);

        var tagStyle = (0, _extends3.default)({}, style);
        var cellProps = { value: value, index: rowIndex, record: record, context: context };
        var content = cell;
        if (_react2.default.isValidElement(content)) {
            // header情况下， props.cell为 column.title，不需要传递这些props
            content = _react2.default.cloneElement(content, type === 'header' ? undefined : cellProps);
        } else if (typeof content === 'function') {
            content = content(value, rowIndex, record, context);
        }
        if (align) {
            tagStyle.textAlign = align;
            if (rtl) {
                tagStyle.textAlign = align === 'left' ? 'right' : align === 'right' ? 'left' : align;
            }
        }
        var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-cell'] = true, _classnames[prefix + 'table-word-break-' + wordBreak] = !!wordBreak, _classnames[className] = className, _classnames));

        return _react2.default.createElement(Tag, (0, _extends3.default)({}, (0, _util.pickAttrs)(others), { className: cls, style: tagStyle, role: 'gridcell' }), _react2.default.createElement('div', {
            className: prefix + 'table-cell-wrapper',
            ref: this.props.getCellDomRef,
            style: innerStyle,
            title: htmlTitle,
            'data-next-table-col': __colIndex,
            'data-next-table-row': rowIndex
        }, isIconLeft ? children : content, isIconLeft ? content : children));
    };

    return Cell;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
    className: _propTypes2.default.string,
    record: _propTypes2.default.any,
    value: _propTypes2.default.any,
    isIconLeft: _propTypes2.default.bool,
    colIndex: _propTypes2.default.number,
    rowIndex: _propTypes2.default.number,
    // 经过锁列调整后的列索引，lock right的列会从非0开始
    __colIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    title: _propTypes2.default.any,
    width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    context: _propTypes2.default.any,
    cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func]),
    align: _propTypes2.default.oneOf(['left', 'center', 'right']),
    component: _propTypes2.default.oneOf(['td', 'th', 'div']),
    children: _propTypes2.default.any,
    style: _propTypes2.default.object,
    innerStyle: _propTypes2.default.object,
    filterMode: _propTypes2.default.oneOf(['single', 'multiple']),
    filterMenuProps: _propTypes2.default.object,
    filterProps: _propTypes2.default.object,
    filters: _propTypes2.default.array,
    sortable: _propTypes2.default.bool,
    sortDirections: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['desc', 'asc', 'default'])),
    lock: _propTypes2.default.any,
    type: _propTypes2.default.oneOf(['header', 'body']),
    resizable: _propTypes2.default.bool,
    asyncResizable: _propTypes2.default.bool,
    __normalized: _propTypes2.default.bool
}, _class.defaultProps = {
    component: 'td',
    type: 'body',
    isIconLeft: false,
    cell: function cell(value) {
        return value;
    },
    prefix: 'next-'
}, _temp);
Cell.displayName = 'Cell';
exports.default = Cell;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _header = __webpack_require__(179);

var _header2 = _interopRequireDefault(_header);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var FixedHeader = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(FixedHeader, _React$Component);

    function FixedHeader() {
        (0, _classCallCheck3.default)(this, FixedHeader);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    FixedHeader.prototype.componentDidMount = function componentDidMount() {
        this.context.getNode('header', (0, _reactDom.findDOMNode)(this));
    };

    // 这里的 style={{overflow: 'unset'}} 可以删掉，只是为了解决用户js升级但是样式没升级的情况
    // 这里的 style={{position: 'absolute', right: 0}} 也可以删掉，是为了兼容用户js升级但是样式没升级的情况


    FixedHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            colGroup = _props.colGroup,
            tableWidth = _props.tableWidth,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'colGroup', 'tableWidth']);
        var _context = this.context,
            onFixedScrollSync = _context.onFixedScrollSync,
            lockType = _context.lockType;

        return _react2.default.createElement('div', { className: className, onScroll: onFixedScrollSync }, _react2.default.createElement('div', { className: prefix + 'table-header-inner', style: { overflow: 'unset' } }, _react2.default.createElement('table', { style: { width: tableWidth } }, colGroup, _react2.default.createElement(_header2.default, (0, _extends3.default)({}, others, { prefix: prefix })))), !lockType && _react2.default.createElement('div', { className: prefix + 'table-header-fixer', style: { position: 'absolute', right: 0 } }));
    };

    return FixedHeader;
}(_react2.default.Component), _class.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.string,
    colGroup: _propTypes2.default.any,
    tableWidth: _propTypes2.default.number
}, _class.contextTypes = {
    getNode: _propTypes2.default.func,
    onFixedScrollSync: _propTypes2.default.func,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}, _temp);
FixedHeader.displayName = 'FixedHeader';
exports.default = FixedHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var FixedWrapper = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(FixedWrapper, _React$Component);

    function FixedWrapper() {
        (0, _classCallCheck3.default)(this, FixedWrapper);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    FixedWrapper.prototype.render = function render() {
        var _props = this.props,
            children = _props.children,
            wrapperContent = _props.wrapperContent,
            prefix = _props.prefix;

        return _react2.default.createElement('div', { className: prefix + 'table-inner' }, children, wrapperContent);
    };

    return FixedWrapper;
}(_react2.default.Component), _class.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    colGroup: _propTypes2.default.any,
    wrapperContent: _propTypes2.default.any
}, _temp);
FixedWrapper.displayName = 'FixedWrapper';
exports.default = FixedWrapper;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
/**
 * Typography.Text
 */
var Text = /** @class */function (_super) {
    tslib_1.__extends(Text, _super);
    function Text() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Text.prototype.wrapChildren = function (children, wrapper) {
        return react_1.default.createElement(wrapper, {}, children);
    };
    Text.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            className = _a.className,
            component = _a.component,
            strong = _a.strong,
            underline = _a.underline,
            deleteProp = _a.delete,
            code = _a.code,
            mark = _a.mark,
            rtl = _a.rtl,
            children = _a.children,
            others = tslib_1.__rest(_a, ["prefix", "className", "component", "strong", "underline", "delete", "code", "mark", "rtl", "children"]);
        var Component = component;
        var formattedChildren = children;
        if (strong) {
            formattedChildren = this.wrapChildren(formattedChildren, 'strong');
        }
        if (underline) {
            formattedChildren = this.wrapChildren(formattedChildren, 'u');
        }
        if (deleteProp) {
            formattedChildren = this.wrapChildren(formattedChildren, 'del');
        }
        if (code) {
            formattedChildren = this.wrapChildren(formattedChildren, 'code');
        }
        if (mark) {
            formattedChildren = this.wrapChildren(formattedChildren, 'mark');
        }
        if (rtl) {
            others.dir = 'rtl';
        }
        var cls = (0, classnames_1.default)("".concat(prefix, "typography"), className);
        return react_1.default.createElement(Component, tslib_1.__assign({}, others, { className: cls }), formattedChildren);
    };
    Text.propTypes = {
        prefix: prop_types_1.default.string,
        delete: prop_types_1.default.bool,
        mark: prop_types_1.default.bool,
        underline: prop_types_1.default.bool,
        strong: prop_types_1.default.bool,
        code: prop_types_1.default.bool,
        component: prop_types_1.default.elementType,
        children: prop_types_1.default.node,
        rtl: prop_types_1.default.bool
    };
    Text.defaultProps = {
        prefix: 'next-',
        delete: false,
        mark: false,
        underline: false,
        strong: false,
        code: false,
        component: 'span',
        rtl: false
    };
    return Text;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Text);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var resize_observer_polyfill_1 = tslib_1.__importDefault(__webpack_require__(52));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_2 = __webpack_require__(255);
/** Affix */
var Affix = /** @class */function (_super) {
    tslib_1.__extends(Affix, _super);
    function Affix(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._clearContainerEvent = function () {
            if (_this.timeout) {
                clearTimeout(_this.timeout);
                _this.timeout = null;
            }
            var container = _this.props.container;
            _this._removeEventHandlerForContainer(container);
        };
        _this.updatePosition = function () {
            _this._updateNodePosition();
        };
        _this._updateNodePosition = function () {
            var affixMode = _this.state.affixMode;
            var _a = _this.props,
                container = _a.container,
                useAbsolute = _a.useAbsolute;
            var affixContainer = container();
            if (!affixContainer || !_this.affixNode) {
                return false;
            }
            var containerScrollTop = (0, util_2.getScroll)(affixContainer, true); // 容器在垂直位置上的滚动 offset
            var affixOffset = _this._getOffset(_this.affixNode, affixContainer); // 目标节点当前相对于容器的 offset
            var containerHeight = (0, util_2.getNodeHeight)(affixContainer); // 容器的高度
            var affixHeight = _this.affixNode.offsetHeight;
            var containerRect = (0, util_2.getRect)(affixContainer);
            var affixChildHeight = _this.affixChildNode.offsetHeight;
            var affixStyle = {
                width: affixOffset.width
            };
            var containerStyle = {
                width: affixOffset.width,
                height: affixChildHeight
            };
            var positionStyle = null;
            if (affixMode.top && containerScrollTop > affixOffset.top - affixMode.offset) {
                // affix top
                if (useAbsolute) {
                    affixStyle.position = 'absolute';
                    affixStyle.top = containerScrollTop - (affixOffset.top - affixMode.offset);
                    positionStyle = 'relative';
                } else {
                    affixStyle.position = 'fixed';
                    affixStyle.top = affixMode.offset + containerRect.top;
                }
                _this._setAffixStyle(affixStyle, true);
                _this._setContainerStyle(containerStyle);
            } else if (affixMode.bottom && containerScrollTop < affixOffset.top + affixHeight + affixMode.offset - containerHeight) {
                // affix bottom
                affixStyle.height = affixHeight;
                if (useAbsolute) {
                    affixStyle.position = 'absolute';
                    affixStyle.top = containerScrollTop - (affixOffset.top + affixHeight + affixMode.offset - containerHeight);
                    positionStyle = 'relative';
                } else {
                    affixStyle.position = 'fixed';
                    affixStyle.bottom = affixMode.offset;
                }
                _this._setAffixStyle(affixStyle, true);
                _this._setContainerStyle(containerStyle);
            } else {
                _this._setAffixStyle(null);
                _this._setContainerStyle(null);
            }
            if (_this.state.positionStyle !== positionStyle) {
                _this.setState({ positionStyle: positionStyle });
            }
        };
        _this._affixNodeRefHandler = function (ref) {
            _this.affixNode = ref;
        };
        _this._affixChildNodeRefHandler = function (ref) {
            _this.affixChildNode = ref;
        };
        _this.state = {
            style: null,
            containerStyle: null,
            positionStyle: null,
            affixMode: Affix._getAffixMode(props)
        };
        _this.resizeObserver = new resize_observer_polyfill_1.default(_this._updateNodePosition);
        return _this;
    }
    Affix._getAffixMode = function (nextProps) {
        var affixMode = {
            top: false,
            bottom: false,
            offset: 0
        };
        if (!nextProps) {
            return affixMode;
        }
        var offsetTop = nextProps.offsetTop,
            offsetBottom = nextProps.offsetBottom;
        if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {
            // set default
            affixMode.top = true;
        } else if (typeof offsetTop === 'number') {
            affixMode.top = true;
            affixMode.bottom = false;
            affixMode.offset = offsetTop;
        } else if (typeof offsetBottom === 'number') {
            affixMode.bottom = true;
            affixMode.top = false;
            affixMode.offset = offsetBottom;
        }
        return affixMode;
    };
    Affix.getDerivedStateFromProps = function (nextProps) {
        if ('offsetTop' in nextProps || 'offsetBottom' in nextProps) {
            return {
                affixMode: Affix._getAffixMode(nextProps)
            };
        }
        return null;
    };
    Affix.prototype.componentDidMount = function () {
        var _this = this;
        var container = this.props.container;
        // wait for parent rendered
        this.timeout = setTimeout(function () {
            _this._updateNodePosition();
            _this._setEventHandlerForContainer(container);
        });
    };
    Affix.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (prevProps.container() !== this.props.container()) {
            this._clearContainerEvent();
            this.timeout = setTimeout(function () {
                _this._setEventHandlerForContainer(_this.props.container);
            });
        }
        setTimeout(this._updateNodePosition);
    };
    Affix.prototype.componentWillUnmount = function () {
        this._clearContainerEvent();
    };
    Affix.prototype._setEventHandlerForContainer = function (getContainer) {
        var container = getContainer();
        if (!container) {
            return;
        }
        util_1.events.on(container, 'scroll', this._updateNodePosition, false);
        this.resizeObserver.observe(this.affixNode);
    };
    Affix.prototype._removeEventHandlerForContainer = function (getContainer) {
        var container = getContainer();
        if (container) {
            util_1.events.off(container, 'scroll', this._updateNodePosition);
            this.resizeObserver.disconnect();
        }
    };
    Affix.prototype._setAffixStyle = function (affixStyle, affixed) {
        if (affixed === void 0) {
            affixed = false;
        }
        if (util_1.obj.shallowEqual(affixStyle, this.state.style)) {
            return;
        }
        this.setState({
            style: affixStyle
        });
        var onAffix = this.props.onAffix;
        if (affixed) {
            setTimeout(function () {
                return onAffix(true);
            });
        } else if (!affixStyle) {
            setTimeout(function () {
                return onAffix(false);
            });
        }
    };
    Affix.prototype._setContainerStyle = function (containerStyle) {
        if (util_1.obj.shallowEqual(containerStyle, this.state.containerStyle)) {
            return;
        }
        this.setState({ containerStyle: containerStyle });
    };
    Affix.prototype._getOffset = function (affixNode, affixContainer) {
        var affixRect = affixNode.getBoundingClientRect(); // affix 元素 相对浏览器窗口的位置
        var containerRect = (0, util_2.getRect)(affixContainer); // affix 容器 相对浏览器窗口的位置
        var containerScrollTop = (0, util_2.getScroll)(affixContainer, true);
        var containerScrollLeft = (0, util_2.getScroll)(affixContainer, false);
        return {
            top: affixRect.top - containerRect.top + containerScrollTop,
            left: affixRect.left - containerRect.left + containerScrollLeft,
            width: affixRect.width,
            height: affixRect.height
        };
    };
    Affix.prototype.render = function () {
        var _a;
        var _b = this.state,
            affixMode = _b.affixMode,
            positionStyle = _b.positionStyle;
        var _c = this.props,
            prefix = _c.prefix,
            className = _c.className,
            style = _c.style,
            children = _c.children;
        var state = this.state;
        var classNames = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "affix")] = state.style, _a["".concat(prefix, "affix-top")] = !state.style && affixMode.top, _a["".concat(prefix, "affix-bottom")] = !state.style && affixMode.bottom, _a[className] = className, _a));
        var wrapperStyle = tslib_1.__assign(tslib_1.__assign({}, style), { position: positionStyle || undefined });
        return react_1.default.createElement("div", { ref: this._affixNodeRefHandler, style: wrapperStyle }, state.style && react_1.default.createElement("div", { style: state.containerStyle, "aria-hidden": "true" }), react_1.default.createElement("div", { ref: this._affixChildNodeRefHandler, className: classNames, style: state.style }, children));
    };
    Affix.propTypes = {
        prefix: prop_types_1.default.string,
        container: prop_types_1.default.func,
        offsetTop: prop_types_1.default.number,
        offsetBottom: prop_types_1.default.number,
        onAffix: prop_types_1.default.func,
        useAbsolute: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        style: prop_types_1.default.object,
        children: prop_types_1.default.any
    };
    Affix.defaultProps = {
        prefix: 'next-',
        container: function container() {
            return window;
        },
        onAffix: util_1.func.noop
    };
    return Affix;
}(react_1.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(Affix));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 69 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 70 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 71 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(34);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 73 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(45);
var dPs = __webpack_require__(210);
var enumBugKeys = __webpack_require__(77);
var IE_PROTO = __webpack_require__(75)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(114)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(214).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(76)('keys');
var uid = __webpack_require__(56);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(26);
var global = __webpack_require__(25);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(53) ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 77 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(28).f;
var has = __webpack_require__(29);
var TAG = __webpack_require__(36)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(71);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(36);


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(25);
var core = __webpack_require__(26);
var LIBRARY = __webpack_require__(53);
var wksExt = __webpack_require__(80);
var defineProperty = __webpack_require__(28).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 82 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.warning = exports.deprecated = void 0;
var env_1 = __webpack_require__(122);
/* eslint no-console: 0 */
/**
 * 反对使用某一方法或属性的警告
 * @param props - 过时的属性或方法名
 * @param instead - 替代的属性或方法名
 * @param component - 组件名
 *
 * @example
 * log.deprecated('onBeforeClose', 'beforeClose', 'Dialog');
 * // Warning: onBeforeClose is deprecated at [ Dialog ], use [ beforeClose ] instead of it.
 */
function deprecated(props, instead, component) {
    /* istanbul ignore else */
    if (!(0, env_1.isProduction)() && typeof console !== 'undefined' && console.error) {
        return console.error("Warning: [ ".concat(props, " ] is deprecated at [ ").concat(component, " ], use [ ").concat(instead, " ] instead of it."));
    }
}
exports.deprecated = deprecated;
/**
 * 控制台警告日志
 */
function warning(msg) {
    /* istanbul ignore else */
    if (!(0, env_1.isProduction)() && typeof console !== 'undefined' && console.error) {
        return console.error("Warning: ".concat(msg));
    }
}
exports.warning = warning;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var dayjs_1 = tslib_1.__importDefault(__webpack_require__(123));
var customParseFormat_1 = tslib_1.__importDefault(__webpack_require__(236));
var updateLocale_1 = tslib_1.__importDefault(__webpack_require__(237));
var localeData_1 = tslib_1.__importDefault(__webpack_require__(238));
var quarterOfYear_1 = tslib_1.__importDefault(__webpack_require__(239));
var advancedFormat_1 = tslib_1.__importDefault(__webpack_require__(240));
var weekOfYear_1 = tslib_1.__importDefault(__webpack_require__(241));
var weekYear_1 = tslib_1.__importDefault(__webpack_require__(242));
__webpack_require__(243);
dayjs_1.default.extend(advancedFormat_1.default);
dayjs_1.default.extend(quarterOfYear_1.default);
dayjs_1.default.extend(customParseFormat_1.default);
dayjs_1.default.extend(updateLocale_1.default);
dayjs_1.default.extend(localeData_1.default);
dayjs_1.default.extend(weekOfYear_1.default);
dayjs_1.default.extend(weekYear_1.default);
dayjs_1.default.locale('zh-cn');
var datejs = dayjs_1.default;
datejs.isSelf = dayjs_1.default.isDayjs;
dayjs_1.default.localeData();
exports.default = datejs;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _CSSTransition = _interopRequireDefault(__webpack_require__(256));

var _ReplaceTransition = _interopRequireDefault(__webpack_require__(261));

var _TransitionGroup = _interopRequireDefault(__webpack_require__(131));

var _Transition = _interopRequireDefault(__webpack_require__(129));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = {
  Transition: _Transition.default,
  TransitionGroup: _TransitionGroup.default,
  ReplaceTransition: _ReplaceTransition.default,
  CSSTransition: _CSSTransition.default
};

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _alignMap = __webpack_require__(87);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Created by xiachi on 17/2/10.
 */

var noop = _util.func.noop;
var BalloonInner = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(BalloonInner, _React$Component);

    function BalloonInner() {
        (0, _classCallCheck3.default)(this, BalloonInner);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    BalloonInner.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            closable = _props.closable,
            className = _props.className,
            style = _props.style,
            isTooltip = _props.isTooltip,
            align = _props.align,
            title = _props.title,
            type = _props.type,
            onClose = _props.onClose,
            alignEdge = _props.alignEdge,
            v2 = _props.v2,
            children = _props.children,
            rtl = _props.rtl,
            locale = _props.locale,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'closable', 'className', 'style', 'isTooltip', 'align', 'title', 'type', 'onClose', 'alignEdge', 'v2', 'children', 'rtl', 'locale']);

        var alignMap = alignEdge || v2 ? _alignMap.edgeMap : _alignMap.normalMap;
        var _prefix = prefix;

        if (isTooltip) {
            _prefix = _prefix + 'balloon-tooltip';
        } else {
            _prefix = _prefix + 'balloon';
        }

        var closableInTitle = closable && title !== undefined;
        var closableInContent = closable && title === undefined;

        var classes = (0, _classnames2.default)((_classNames = {}, _classNames['' + _prefix] = true, _classNames[_prefix + '-' + type] = type, _classNames[_prefix + '-medium'] = true, _classNames[_prefix + '-' + alignMap[align].arrow] = alignMap[align], _classNames[_prefix + '-closable'] = closableInContent, _classNames[className] = className, _classNames[_prefix + '-v2'] = v2, _classNames));

        var titleCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'balloon-title'] = true, _classNames2[_prefix + '-closable'] = closableInTitle, _classNames2));

        var closeIcon = _react2.default.createElement('a', { role: 'button', 'aria-label': locale.close, tabIndex: '0', className: _prefix + '-close', onClick: onClose }, _react2.default.createElement(_icon2.default, { type: 'close', size: 'small' }));

        return _react2.default.createElement('div', (0, _extends3.default)({
            role: 'tooltip',
            'aria-live': 'polite',
            dir: rtl ? 'rtl' : undefined,
            className: classes,
            style: style
        }, _util.obj.pickOthers(Object.keys(BalloonInner.propTypes), others)), _react2.default.createElement('div', { className: prefix + 'balloon-arrow' }, _react2.default.createElement('div', { className: prefix + 'balloon-arrow-content' })), title && _react2.default.createElement('div', { className: titleCls }, title, closableInTitle && closeIcon), _react2.default.createElement('div', { className: prefix + 'balloon-content' }, children), closableInContent && closeIcon);
    };

    return BalloonInner;
}(_react2.default.Component), _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    closable: _propTypes2.default.bool,
    children: _propTypes2.default.any,
    title: _propTypes2.default.node,
    className: _propTypes2.default.string,
    alignEdge: _propTypes2.default.bool,
    onClose: _propTypes2.default.func,
    style: _propTypes2.default.any,
    align: _propTypes2.default.string,
    type: _propTypes2.default.string,
    isTooltip: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    pure: _propTypes2.default.bool,
    v2: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    closable: true,
    onClose: noop,
    locale: _zhCn2.default.Balloon,
    align: 'b',
    type: 'normal',
    alignEdge: false,
    pure: false
}, _temp);
BalloonInner.displayName = 'BalloonInner';
exports.default = BalloonInner;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
/**
 * Created by xiachi on 17/1/17.
 */

var normalMap = {
    t: {
        align: 'bc tc',
        rtlAlign: 'bc tc',
        arrow: 'bottom',
        trOrigin: 'bottom',
        rtlTrOrigin: 'bottom',
        offset: [0, -12]
    },
    r: {
        align: 'cl cr',
        rtlAlign: 'cr cl',
        arrow: 'left',
        trOrigin: 'left',
        rtlTrOrigin: 'right',
        offset: [12, 0]
    },
    b: {
        align: 'tc bc',
        rtlAlign: 'tc bc',
        arrow: 'top',
        trOrigin: 'top',
        rtlTrOrigin: 'top',
        offset: [0, 12]
    },
    l: {
        align: 'cr cl',
        rtlAlign: 'cl cr',
        arrow: 'right',
        trOrigin: 'right',
        rtlTrOrigin: 'left',
        offset: [-12, 0]
    },
    tl: {
        align: 'br tc',
        rtlAlign: 'bl tc',
        arrow: 'bottom-right',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [20, -12]
    },
    tr: {
        align: 'bl tc',
        rtlAlign: 'br tc',
        arrow: 'bottom-left',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [-20, -12]
    },
    rt: {
        align: 'bl cr',
        rtlAlign: 'br cl',
        arrow: 'left-bottom',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [12, 20]
    },
    rb: {
        align: 'tl cr',
        rtlAlign: 'tr cl',
        arrow: 'left-top',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [12, -20]
    },
    bl: {
        align: 'tr bc',
        rtlAlign: 'tl bc',
        arrow: 'top-right',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [20, 12]
    },
    br: {
        align: 'tl bc',
        rtlAlign: 'tr bc',
        arrow: 'top-left',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [-20, 12]
    },
    lt: {
        align: 'br cl',
        rtlAlign: 'bl cr',
        arrow: 'right-bottom',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [-12, 20]
    },
    lb: {
        align: 'tr cl',
        rtlAlign: 'tl cr',
        arrow: 'right-top',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [-12, -20]
    }
};
var edgeMap = {
    t: {
        align: 'bc tc',
        rtlAlign: 'bc tc',
        arrow: 'bottom',
        trOrigin: 'bottom',
        rtlTrOrigin: 'bottom',
        offset: [0, -12]
    },
    r: {
        align: 'cl cr',
        rtlAlign: 'cr cl',
        arrow: 'left',
        trOrigin: 'left',
        rtlTrOrigin: 'right',
        offset: [12, 0]
    },
    b: {
        align: 'tc bc',
        rtlAlign: 'tc bc',
        arrow: 'top',
        trOrigin: 'top',
        rtlTrOrigin: 'top',
        offset: [0, 12]
    },
    l: {
        align: 'cr cl',
        rtlAlign: 'cl cr',
        arrow: 'right',
        trOrigin: 'right',
        rtlTrOrigin: 'left',
        offset: [-12, 0]
    },
    tl: {
        align: 'bl tl',
        rtlAlign: 'br tr',
        arrow: 'bottom-left',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [0, -12]
    },
    tr: {
        align: 'br tr',
        rtlAlign: 'bl tl',
        arrow: 'bottom-right',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [0, -12]
    },
    rt: {
        align: 'tl tr',
        rtlAlign: 'tr tl',
        arrow: 'left-top',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [12, 0]
    },
    rb: {
        align: 'bl br',
        rtlAlign: 'br bl',
        arrow: 'left-bottom',
        trOrigin: 'bottom left',
        rtlTrOrigin: 'bottom right',
        offset: [12, 0]
    },
    bl: {
        align: 'tl bl',
        rtlAlign: 'tr br',
        arrow: 'top-left',
        trOrigin: 'top left',
        rtlTrOrigin: 'top right',
        offset: [0, 12]
    },
    br: {
        align: 'tr br',
        rtlAlign: 'tl bl',
        arrow: 'top-right',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [0, 12]
    },
    lt: {
        align: 'tr tl',
        rtlAlign: 'tl tr',
        arrow: 'right-top',
        trOrigin: 'top right',
        rtlTrOrigin: 'top left',
        offset: [-12, 0]
    },
    lb: {
        align: 'br bl',
        rtlAlign: 'bl br',
        arrow: 'right-bottom',
        trOrigin: 'bottom right',
        rtlTrOrigin: 'bottom left',
        offset: [-12, 0]
    }
};

exports.normalMap = normalMap;
exports.edgeMap = edgeMap;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;

/**
 * Menu.Item
 * @order 0
 */

var SelectableItem = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(SelectableItem, _Component);

    function SelectableItem(props) {
        (0, _classCallCheck3.default)(this, SelectableItem);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['handleKeyDown', 'handleClick']);
        return _this;
    }

    SelectableItem.prototype.getSelected = function getSelected() {
        var _props = this.props,
            _key = _props._key,
            root = _props.root,
            selected = _props.selected;
        var selectMode = root.props.selectMode;
        var selectedKeys = root.state.selectedKeys;

        return selected || !!selectMode && selectedKeys.indexOf(_key) > -1;
    };

    SelectableItem.prototype.handleSelect = function handleSelect(e) {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root,
            onSelect = _props2.onSelect;

        if (onSelect) {
            onSelect(!this.getSelected(), this, e);
        } else {
            root.handleSelect(_key, !this.getSelected(), this);
        }
    };

    SelectableItem.prototype.handleKeyDown = function handleKeyDown(e) {
        if (e.keyCode === _util.KEYCODE.SPACE && !this.props.disabled) {
            this.handleSelect(e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    SelectableItem.prototype.handleClick = function handleClick(e) {
        this.handleSelect(e);

        this.props.onClick && this.props.onClick(e);
    };

    SelectableItem.prototype.renderSelectedIcon = function renderSelectedIcon(selected) {
        var _cx;

        var _props3 = this.props,
            root = _props3.root,
            inlineIndent = _props3.inlineIndent,
            needIndent = _props3.needIndent,
            hasSelectedIcon = _props3.hasSelectedIcon,
            isSelectIconRight = _props3.isSelectIconRight,
            type = _props3.type;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            rootSelectedIcon = _root$props.hasSelectedIcon,
            rootSelectIconRight = _root$props.isSelectIconRight,
            icons = _root$props.icons;

        var iconsSelect = icons.select;

        if (!(0, _react.isValidElement)(icons.select) && icons.select) {
            iconsSelect = _react2.default.createElement('span', null, icons.select);
        }

        var cls = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-icon-selected'] = true, _cx[prefix + 'menu-symbol-icon-selected'] = !iconsSelect, _cx[prefix + 'menu-icon-right'] = ('isSelectIconRight' in this.props ? isSelectIconRight : rootSelectIconRight) && type !== 'submenu', _cx));

        return ('hasSelectedIcon' in this.props ? hasSelectedIcon : rootSelectedIcon) && selected ? _react2.default.cloneElement(iconsSelect || _react2.default.createElement(_icon2.default, { type: 'select' }), {
            style: needIndent && inlineIndent > 0 ? { left: inlineIndent + 'px' } : null,
            className: cls
        }) : null;
    };

    SelectableItem.prototype.render = function render() {
        var _cx2;

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            className = _props4.className,
            disabled = _props4.disabled,
            helper = _props4.helper,
            children = _props4.children,
            needIndent = _props4.needIndent;
        var prefix = root.props.prefix;

        var others = pickOthers(Object.keys(SelectableItem.propTypes), this.props);
        var selected = this.getSelected();

        var newProps = (0, _extends3.default)({
            _key: _key,
            root: root,
            disabled: disabled,
            type: 'item',
            className: (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'selected'] = selected, _cx2[className] = !!className, _cx2)),
            onKeyDown: this.handleKeyDown,
            onClick: !disabled ? this.handleClick : this.props.onClick,
            needIndent: needIndent
        }, others);

        if (!('title' in newProps) && typeof children === 'string') {
            newProps.title = children;
        }

        var textProps = {};

        if ('selectMode' in root.props) {
            textProps['aria-selected'] = selected;
        }

        return _react2.default.createElement(_item2.default, newProps, this.renderSelectedIcon(selected), _react2.default.createElement('span', (0, _extends3.default)({ className: prefix + 'menu-item-text' }, textProps), children), helper ? _react2.default.createElement('div', { className: prefix + 'menu-item-helper' }, helper) : null);
    };

    return SelectableItem;
}(_react.Component), _class.menuChildType = 'item', _class.propTypes = {
    _key: _propTypes2.default.string,
    root: _propTypes2.default.object,
    selected: _propTypes2.default.bool,
    onSelect: _propTypes2.default.func,
    inlineIndent: _propTypes2.default.number,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 帮助文本
     */
    helper: _propTypes2.default.node,
    /**
     * 菜单项标签内容
     */
    children: _propTypes2.default.node,
    className: _propTypes2.default.string,
    onKeyDown: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    needIndent: _propTypes2.default.bool,
    hasSelectedIcon: _propTypes2.default.bool,
    isSelectIconRight: _propTypes2.default.bool,
    icons: _propTypes2.default.object
}, _class.defaultProps = {
    disabled: false,
    needIndent: true,
    icons: {}
}, _temp);
SelectableItem.displayName = 'SelectableItem';
exports.default = SelectableItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var getWidth = exports.getWidth = function getWidth(elem) {
    var width = elem && typeof elem.getBoundingClientRect === 'function' && elem.getBoundingClientRect().width;
    if (width) {
        width = +width.toFixed(6);
    }
    return width || 0;
};

var normalizeToArray = exports.normalizeToArray = function normalizeToArray(items) {
    if (items) {
        if (Array.isArray(items)) {
            return items;
        }
        return [items];
    }

    return [];
};

var isSibling = exports.isSibling = function isSibling(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);

    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
};

var isAncestor = exports.isAncestor = function isAncestor(currentPos, targetPos) {
    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');

    return currentNums.length > targetNums.length && targetNums.every(function (num, index) {
        return num === currentNums[index];
    });
};

var isAvailablePos = exports.isAvailablePos = function isAvailablePos(refPos, targetPos, _p2n) {
    var _p2n$targetPos = _p2n[targetPos],
        type = _p2n$targetPos.type,
        disabled = _p2n$targetPos.disabled;

    return isSibling(refPos, targetPos) && (type === 'item' && !disabled || type === 'submenu');
};

var getFirstAvaliablelChildKey = exports.getFirstAvaliablelChildKey = function getFirstAvaliablelChildKey(parentPos, _p2n) {
    var pos = Object.keys(_p2n).find(function (p) {
        return isAvailablePos(parentPos + '-0', p, _p2n);
    });
    return pos ? _p2n[pos].key : null;
};

/**
 * 如果 key 在 SelectedKeys 的选中链上（例如 SelectedKeys 是['0-1-2'],  key是 0-1 ），那么返回true
 *
 * selectMode?: string; 当前的选择模式，一般为 multiple single
 * selectedKeys?: string[]; 选中的key值
 * k2n?: object[] mapping;
 * _key?: string; 待测试的key值
 *
 * @return bool 当前元素是否有孩子被选中
 */
var getChildSelected = exports.getChildSelected = function getChildSelected(_ref) {
    var selectMode = _ref.selectMode,
        selectedKeys = _ref.selectedKeys,
        _k2n = _ref._k2n,
        _key = _ref._key;

    if (!_k2n) {
        return false;
    }

    var _keyPos = (_k2n[_key] && _k2n[_key].pos) + '-';

    return !!selectMode && selectedKeys.some(function (key) {
        return _k2n[key] && _k2n[key].pos.indexOf(_keyPos) === 0;
    });
};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var util_1 = __webpack_require__(4);
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var noop = util_1.func.noop,
    bindCtx = util_1.func.bindCtx;
var PRESET_COLOR_REG = /blue|green|orange|red|turquoise|yellow/;
var Tag = /** @class */function (_super) {
    tslib_1.__extends(Tag, _super);
    function Tag(props) {
        var _this = _super.call(this, props) || this;
        _this.tagNode = null;
        _this.onKeyDown = function (e) {
            // 针对无障碍化要求 添加键盘 SPACE 事件
            var _a = _this.props,
                closable = _a.closable,
                closeArea = _a.closeArea,
                onClick = _a.onClick,
                disabled = _a.disabled;
            if (e.keyCode !== util_1.KEYCODE.SPACE || disabled) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            if (closable) {
                _this.handleClose(closeArea);
            } else {
                return onClick(e);
            }
        };
        _this.state = {
            visible: true
        };
        bindCtx(_this, ['handleBodyClick', 'handleTailClick', 'handleAnimationInit', 'handleAnimationEnd', 'renderTailNode']);
        return _this;
    }
    Tag.prototype.componentWillUnmount = function () {
        this.__destroyed = true;
    };
    Tag.prototype.handleClose = function (from) {
        var _this = this;
        var _a = this.props,
            animation = _a.animation,
            onClose = _a.onClose;
        var hasAnimation = util_1.support.animation && animation;
        // 先执行回调
        var result = onClose(from, this.tagNode);
        // 如果回调函数返回 false，则阻止关闭行为
        if (result !== false && !this.__destroyed) {
            this.setState({
                visible: false
            }, function () {
                // 如果没有动画，则直接执行 afterClose
                !hasAnimation && _this.props.afterClose(_this.tagNode);
            });
        }
    };
    // 标签体点击
    Tag.prototype.handleBodyClick = function (e) {
        var _a = this.props,
            closable = _a.closable,
            closeArea = _a.closeArea,
            onClick = _a.onClick;
        var node = e.currentTarget;
        if (node && (node === e.target || node.contains(e.target))) {
            if (closable && closeArea === 'tag') {
                this.handleClose('tag');
            }
            if (typeof onClick === 'function') {
                return onClick(e);
            }
        }
    };
    Tag.prototype.handleTailClick = function (e) {
        e && e.preventDefault();
        e && e.stopPropagation();
        this.handleClose('tail');
    };
    Tag.prototype.handleAnimationInit = function (node) {
        this.props.afterAppear(node);
    };
    Tag.prototype.handleAnimationEnd = function (node) {
        this.props.afterClose(node);
    };
    Tag.prototype.renderAnimatedTag = function (children, animationName) {
        return react_1.default.createElement(animate_1.default, { animation: animationName, afterAppear: this.handleAnimationInit, afterLeave: this.handleAnimationEnd }, children);
    };
    Tag.prototype.renderTailNode = function () {
        var _a = this.props,
            prefix = _a.prefix,
            closable = _a.closable,
            locale = _a.locale;
        if (!closable) {
            return null;
        }
        return react_1.default.createElement("span", { className: "".concat(prefix, "tag-close-btn"), onClick: this.handleTailClick, role: "button", "aria-label": locale.delete }, react_1.default.createElement(icon_1.default, { type: "close" }));
    };
    Tag.prototype.isPresetColor = function () {
        var color = this.props.color;
        if (!color) {
            return false;
        }
        return PRESET_COLOR_REG.test(color);
    };
    Tag.prototype.getTagStyle = function () {
        var _a = this.props,
            _b = _a.color,
            color = _b === void 0 ? '' : _b,
            style = _a.style;
        var isPresetColor = this.isPresetColor();
        var customColorStyle = {
            backgroundColor: color,
            borderColor: color,
            color: '#fff'
        };
        return tslib_1.__assign(tslib_1.__assign({}, color && !isPresetColor ? customColorStyle : null), style);
    };
    Tag.prototype.render = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            prefix = _b.prefix,
            type = _b.type,
            size = _b.size,
            color = _b.color,
            _shape = _b._shape,
            closable = _b.closable,
            closeArea = _b.closeArea,
            className = _b.className,
            children = _b.children,
            animation = _b.animation,
            disabled = _b.disabled,
            rtl = _b.rtl;
        var visible = this.state.visible;
        var isPresetColor = this.isPresetColor();
        var others = util_1.obj.pickOthers(Tag.propTypes, this.props);
        var style = others.style,
            otherTagProps = tslib_1.__rest(others, ["style"]);
        var shape = closable ? 'closable' : _shape;
        var bodyClazz = (0, classnames_1.default)(["".concat(prefix, "tag"), "".concat(prefix, "tag-").concat(shape), "".concat(prefix, "tag-").concat(size)], (_a = {}, _a["".concat(prefix, "tag-level-").concat(type)] = !color, _a["".concat(prefix, "tag-closable")] = closable, _a["".concat(prefix, "tag-body-pointer")] = closable && closeArea === 'tag', _a["".concat(prefix, "tag-").concat(color)] = color && isPresetColor && type === 'primary', _a["".concat(prefix, "tag-").concat(color, "-inverse")] = color && isPresetColor && type === 'normal', _a), className);
        // close btn
        var tailNode = this.renderTailNode();
        // tag node
        var tagNode = !visible ? null : react_1.default.createElement("div", tslib_1.__assign({ className: bodyClazz, onClick: this.handleBodyClick, onKeyDown: this.onKeyDown,
            // @ts-expect-error tagIndex required number
            tabIndex: disabled ? '' : '0', role: "button", "aria-disabled": disabled, disabled: disabled, dir: rtl ? 'rtl' : undefined, ref: function ref(n) {
                return _this.tagNode = n;
            }, style: this.getTagStyle() }, otherTagProps), react_1.default.createElement("span", { className: "".concat(prefix, "tag-body") }, children), tailNode);
        if (animation && util_1.support.animation) {
            return this.renderAnimatedTag(tagNode, "".concat(prefix, "tag-zoom"));
        }
        // 未开启或不支持动画
        return tagNode;
    };
    Tag.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { type: prop_types_1.default.oneOf(['normal', 'primary']), size: prop_types_1.default.oneOf(['small', 'medium', 'large']), color: prop_types_1.default.string, animation: prop_types_1.default.bool, closeArea: prop_types_1.default.oneOf(['tag', 'tail']), closable: prop_types_1.default.bool, onClose: prop_types_1.default.func, afterClose: prop_types_1.default.func, afterAppear: prop_types_1.default.func, className: prop_types_1.default.any, children: prop_types_1.default.node, onClick: prop_types_1.default.func, _shape: prop_types_1.default.oneOf(['default', 'closable', 'checkable']), disabled: prop_types_1.default.bool, rtl: prop_types_1.default.bool, locale: prop_types_1.default.object });
    Tag.defaultProps = {
        prefix: 'next-',
        type: 'normal',
        size: 'medium',
        closeArea: 'tail',
        animation: false,
        onClose: noop,
        afterClose: noop,
        afterAppear: noop,
        onClick: noop,
        _shape: 'default',
        disabled: false,
        rtl: false,
        locale: zh_cn_1.default.Tag
    };
    return Tag;
}(react_1.Component);
exports.default = config_provider_1.default.config(Tag);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _timeMenu = __webpack_require__(331);

var _timeMenu2 = _interopRequireDefault(_timeMenu);

var _utils = __webpack_require__(92);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;
var TimePickerPanel = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(TimePickerPanel, _Component);

    function TimePickerPanel() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TimePickerPanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onSelectMenuItem = function (index, type) {
            var value = _this.props.value;

            var clonedValue = value ? value.clone() : (0, _moment2.default)('00:00:00', 'HH:mm:ss', true);
            switch (type) {
                case 'hour':
                    clonedValue.hour(index);
                    break;
                case 'minute':
                    clonedValue.minute(index);
                    break;
                case 'second':
                    clonedValue.second(index);
                    break;
            }
            _this.props.onSelect(clonedValue);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    TimePickerPanel.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            locale = _props.locale,
            className = _props.className,
            disabled = _props.disabled,
            showHour = _props.showHour,
            showMinute = _props.showMinute,
            showSecond = _props.showSecond,
            hourStep = _props.hourStep,
            minuteStep = _props.minuteStep,
            secondStep = _props.secondStep,
            disabledHours = _props.disabledHours,
            disabledMinutes = _props.disabledMinutes,
            disabledSeconds = _props.disabledSeconds,
            renderTimeMenuItems = _props.renderTimeMenuItems,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'value', 'locale', 'className', 'disabled', 'showHour', 'showMinute', 'showSecond', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems']);

        var colLen = [showHour, showMinute, showSecond].filter(function (v) {
            return v;
        }).length;
        var classNames = (0, _classnames2.default)(prefix + 'time-picker-panel', prefix + 'time-picker-panel-col-' + colLen, className);

        var commonProps = {
            prefix: prefix,
            disabled: disabled,
            onSelect: this.onSelectMenuItem,
            renderTimeMenuItems: renderTimeMenuItems,
            value: value
        };

        var activeHour = void 0;
        var activeMinute = void 0;
        var activeSecond = void 0;

        if (value && _moment2.default.isMoment(value)) {
            activeHour = value.hour();
            activeMinute = value.minute();
            activeSecond = value.second();
        }

        return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: classNames }), showHour ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
            activeIndex: activeHour,
            title: locale.hour,
            mode: 'hour',
            step: hourStep,
            disabledItems: disabledHours
        })) : null, showMinute ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
            activeIndex: activeMinute,
            title: locale.minute,
            mode: 'minute',
            step: minuteStep,
            disabledItems: disabledMinutes
        })) : null, showSecond ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
            activeIndex: activeSecond,
            title: locale.second,
            step: secondStep,
            mode: 'second',
            disabledItems: disabledSeconds
        })) : null);
    };

    return TimePickerPanel;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 时间值（moment 对象）
     */
    value: _utils.checkMomentObj,
    /**
     * 是否显示小时
     */
    showHour: _propTypes2.default.bool,
    /**
     * 是否显示分钟
     */
    showMinute: _propTypes2.default.bool,
    /**
     * 是否显示秒
     */
    showSecond: _propTypes2.default.bool,
    /**
     * 小时选项步长
     */
    hourStep: _propTypes2.default.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _propTypes2.default.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _propTypes2.default.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _propTypes2.default.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _propTypes2.default.func,
    /**
     * 禁用秒函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _propTypes2.default.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {moment} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _propTypes2.default.func,
    /**
     * 选择某个日期值时的回调
     * @param {Object} 选中后的日期值
     */
    onSelect: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    disabled: _propTypes2.default.bool,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    showHour: true,
    showSecond: true,
    showMinute: true,
    disabledHours: noop,
    disabledMinutes: noop,
    disabledSeconds: noop,
    onSelect: noop,
    disabled: false,
    locale: _zhCn2.default.TimePicker
}, _temp2);
TimePickerPanel.displayName = 'TimePickerPanel';
exports.default = TimePickerPanel;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.checkMomentObj = checkMomentObj;
exports.checkDateValue = checkDateValue;
exports.formatDateValue = formatDateValue;

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

// 检查传入值是否为 moment 对象
function checkMomentObj(props, propName, componentName) {
    if (props[propName] && !_moment2.default.isMoment(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object');
    }
}

// 检查传入值是否为 moment 对象或时间字符串，字符串不检测是否为日期字符串
function checkDateValue(props, propName, componentName) {
    if (props[propName] && !_moment2.default.isMoment(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a moment object or format date string!');
    }
}

function formatDateValue(value, format) {
    var val = typeof value === 'string' ? (0, _moment2.default)(value, format, true) : value;
    if (val && _moment2.default.isMoment(val) && val.isValid()) {
        return val;
    }
    return null;
}

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var button_1 = tslib_1.__importDefault(__webpack_require__(18));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var makeChain = util_1.func.makeChain;
var pickOthers = util_1.obj.pickOthers;
var noop = function noop() {};
var Inner = /** @class */function (_super) {
    tslib_1.__extends(Inner, _super);
    function Inner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Inner.prototype.componentDidUpdate = function () {
        // style 作为第一优先级
        var _a = this.props,
            pheight = _a.height,
            style = _a.style,
            v2 = _a.v2;
        var _b = style,
            maxHeight = _b.maxHeight,
            _c = _b.height,
            sheight = _c === void 0 ? maxHeight || pheight : _c;
        if (this.bodyNode && v2 && sheight && sheight !== 'auto') {
            var style_1 = {};
            var headerHeight = 0,
                footerHeight = 0;
            if (this.headerNode) {
                headerHeight = this.headerNode.getBoundingClientRect().height;
            }
            if (this.footerNode) {
                footerHeight = this.footerNode.getBoundingClientRect().height;
            }
            var minHeight = headerHeight + footerHeight;
            var height = sheight;
            if (sheight && typeof sheight === 'string') {
                if (height.match(/calc|vh/)) {
                    style_1.maxHeight = "calc(".concat(sheight, " - ").concat(minHeight, "px)");
                    style_1.overflowY = 'auto';
                } else {
                    height = parseInt(sheight);
                }
            }
            if (typeof height === 'number' && height > minHeight) {
                style_1.maxHeight = height - minHeight;
                style_1.overflowY = 'auto';
            }
            util_1.dom.setStyle(this.bodyNode, style_1);
        }
    };
    Inner.prototype.getNode = function (name, ref) {
        this[name] = ref;
    };
    Inner.prototype.renderHeader = function () {
        var _a = this.props,
            prefix = _a.prefix,
            title = _a.title;
        if (title) {
            this.titleId = (0, util_1.guid)('dialog-title-');
            return react_1.default.createElement("div", { className: "".concat(prefix, "dialog-header"), id: this.titleId, ref: this.getNode.bind(this, 'headerNode'), role: "heading", "aria-level": 1 }, title);
        }
        return null;
    };
    Inner.prototype.renderBody = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            children = _b.children,
            footer = _b.footer,
            noPadding = _b.noPadding;
        if (children) {
            return react_1.default.createElement("div", { className: (0, classnames_1.default)("".concat(prefix, "dialog-body"), (_a = {}, _a["".concat(prefix, "dialog-body-no-footer")] = footer === false, _a["".concat(prefix, "dialog-body-no-padding")] = noPadding === true, _a)), ref: this.getNode.bind(this, 'bodyNode') }, children);
        }
        return null;
    };
    Inner.prototype.renderFooter = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            prefix = _b.prefix,
            footer = _b.footer,
            footerAlign = _b.footerAlign,
            footerActions = _b.footerActions,
            locale = _b.locale,
            height = _b.height;
        if (footer === false) {
            return null;
        }
        var newClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "dialog-footer")] = true, _a["".concat(prefix, "align-").concat(footerAlign)] = true, _a["".concat(prefix, "dialog-footer-fixed-height")] = !!height, _a));
        var footerContent = footer === true || !footer ? footerActions.map(function (action) {
            var btnProps = _this.props["".concat(action, "Props")];
            var newBtnProps = tslib_1.__assign(tslib_1.__assign({}, btnProps), { prefix: prefix, className: (0, classnames_1.default)("".concat(prefix, "dialog-btn"), btnProps.className), onClick: makeChain(_this.props["on".concat(action[0].toUpperCase() + action.slice(1))], btnProps.onClick), children: btnProps.children || locale[action] });
            if (action === 'ok') {
                newBtnProps.type = 'primary';
            }
            return react_1.default.createElement(button_1.default, tslib_1.__assign({ key: action }, newBtnProps));
        }) : footer;
        return react_1.default.createElement("div", { className: newClassName, ref: this.getNode.bind(this, 'footerNode') }, footerContent);
    };
    Inner.prototype.renderCloseLink = function () {
        var _a = this.props,
            prefix = _a.prefix,
            closeable = _a.closeable,
            onClose = _a.onClose,
            locale = _a.locale,
            closeIcon = _a.closeIcon;
        if (closeable) {
            return react_1.default.createElement("a", { role: "button", "aria-label": locale.close, className: "".concat(prefix, "dialog-close"), onClick: onClose }, closeIcon ? closeIcon : react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "dialog-close-icon"), type: "close" }));
        }
        return null;
    };
    Inner.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            closeable = _b.closeable,
            title = _b.title,
            role = _b.role,
            rtl = _b.rtl;
        var others = pickOthers(Inner.propTypes, this.props);
        var newClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "dialog")] = true, _a["".concat(prefix, "closeable")] = closeable, _a[className] = !!className, _a));
        var header = this.renderHeader();
        var body = this.renderBody();
        var footer = this.renderFooter();
        var closeLink = this.renderCloseLink();
        var ariaProps = {
            role: role,
            'aria-modal': 'true'
        };
        if (title) {
            ariaProps['aria-labelledby'] = this.titleId;
        }
        others.style = (0, _extends3.default)({}, util_1.obj.pickProps(['height', 'maxHeight', 'width'], this.props), others.style);
        return react_1.default.createElement("div", tslib_1.__assign({}, ariaProps, { className: newClassName }, others, { dir: rtl ? 'rtl' : undefined }), header, body, footer, closeLink);
    };
    Inner.propTypes = {
        prefix: prop_types_1.default.string,
        className: prop_types_1.default.string,
        title: prop_types_1.default.node,
        children: prop_types_1.default.node,
        footer: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.node]),
        footerAlign: prop_types_1.default.oneOf(['left', 'center', 'right']),
        footerActions: prop_types_1.default.array,
        onOk: prop_types_1.default.func,
        onCancel: prop_types_1.default.func,
        okProps: prop_types_1.default.object,
        cancelProps: prop_types_1.default.object,
        closeable: prop_types_1.default.bool,
        onClose: prop_types_1.default.func,
        locale: prop_types_1.default.object,
        role: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        width: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
        // set value for a fixed height dialog. Passing a value will absolutely position the footer to the bottom.
        height: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
        maxHeight: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
        v2: prop_types_1.default.bool,
        closeIcon: prop_types_1.default.node,
        pure: prop_types_1.default.bool,
        noPadding: prop_types_1.default.bool
    };
    Inner.defaultProps = {
        prefix: 'next-',
        footerAlign: 'right',
        footerActions: ['ok', 'cancel'],
        onOk: noop,
        onCancel: noop,
        okProps: {},
        cancelProps: {},
        closeable: true,
        onClose: noop,
        locale: zh_cn_1.default.Dialog,
        role: 'dialog'
    };
    return Inner;
}(react_1.Component);
exports.default = Inner;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _message = __webpack_require__(95);

var _message2 = _interopRequireDefault(_message);

var _toast = __webpack_require__(338);

var _toast2 = _interopRequireDefault(_toast);

var _toast3 = __webpack_require__(339);

var _toast4 = _interopRequireDefault(_toast3);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_message2.default.show = _toast2.default.show;
_message2.default.success = _toast2.default.success;
_message2.default.warning = _toast2.default.warning;
_message2.default.error = _toast2.default.error;
_message2.default.notice = _toast2.default.notice;
_message2.default.help = _toast2.default.help;
_message2.default.loading = _toast2.default.loading;
_message2.default.hide = _toast2.default.hide;
_message2.default.withContext = _toast.withContext;

var MessageProvider = _configProvider2.default.config(_message2.default, {
    componentName: 'Message'
});

exports.default = MessageProvider;

var openV2 = false;
// 调用 config 开启 v2 版本的 message
MessageProvider.config = function (config) {
    _toast4.default.config(config);

    if (!openV2) {
        MessageProvider.show = _toast4.default.open; // 兼容 show 用法, 后续计划都改成 open（ Notification 已经用了 open）
        MessageProvider.open = _toast4.default.open;
        MessageProvider.hide = _toast4.default.close; // 兼容 hide 用法, 后续计划都改成 open（ Notification 已经用了 close)
        MessageProvider.close = _toast4.default.close;
        MessageProvider.destory = _toast4.default.destory;
        MessageProvider.success = _toast4.default.success;
        MessageProvider.warning = _toast4.default.warning;
        MessageProvider.error = _toast4.default.error;
        MessageProvider.notice = _toast4.default.notice;
        MessageProvider.help = _toast4.default.help;
        MessageProvider.loading = _toast4.default.loading;

        openV2 = true;
    }
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

/**
 * Message
 */
var Message = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(Message, _Component);

    function Message() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Message);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            visible: typeof _this.props.visible === 'undefined' ? _this.props.defaultVisible : _this.props.visible
        }, _this.onClose = function () {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: false
                });
            }
            _this.props.onClose(false);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Message.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        if ('visible' in props) {
            return {
                visible: props.visible
            };
        }

        return {};
    };

    Message.prototype.render = function render() {
        var _classNames;

        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            pure = _props.pure,
            className = _props.className,
            style = _props.style,
            type = _props.type,
            shape = _props.shape,
            size = _props.size,
            title = _props.title,
            children = _props.children,
            defaultVisible = _props.defaultVisible,
            propsVisible = _props.visible,
            icon = _props.iconType,
            closeable = _props.closeable,
            onClose = _props.onClose,
            afterClose = _props.afterClose,
            animation = _props.animation,
            rtl = _props.rtl,
            locale = _props.locale;

        var others = (0, _extends3.default)({}, _util.obj.pickOthers(Object.keys(Message.propTypes), this.props));
        /* eslint-enable */
        var visible = this.state.visible;

        var messagePrefix = prefix + 'message';

        var classes = (0, _classnames2.default)((_classNames = {}, _classNames[messagePrefix] = true, _classNames[prefix + 'message-' + type] = type, _classNames['' + prefix + shape] = shape, _classNames['' + prefix + size] = size, _classNames[prefix + 'title-content'] = !!title, _classNames[prefix + 'only-content'] = !title && !!children, _classNames[className] = className, _classNames));

        var newChildren = visible ? _react2.default.createElement('div', (0, _extends3.default)({ role: 'alert', style: style }, others, { className: classes, dir: rtl ? 'rtl' : undefined }), closeable ? _react2.default.createElement('a', {
            role: 'button',
            'aria-label': locale.closeAriaLabel,
            className: messagePrefix + '-close',
            onClick: this.onClose
        }, _react2.default.createElement(_icon2.default, { type: 'close' })) : null, icon !== false ? _react2.default.createElement(_icon2.default, {
            className: messagePrefix + '-symbol ' + (!icon && messagePrefix + '-symbol-icon'),
            type: icon
        }) : null, title ? _react2.default.createElement('div', { className: messagePrefix + '-title' }, title) : null, children ? _react2.default.createElement('div', { className: messagePrefix + '-content' }, children) : null) : null;

        if (animation) {
            return _react2.default.createElement(_animate2.default.Expand, { animationAppear: false, afterLeave: afterClose }, newChildren);
        }

        return newChildren;
    };

    return Message;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    /**
     * 反馈类型
     */
    type: _propTypes2.default.oneOf(['success', 'warning', 'error', 'notice', 'help', 'loading']),
    /**
     * 反馈外观
     */
    shape: _propTypes2.default.oneOf(['inline', 'addon', 'toast']),
    /**
     * 反馈大小
     */
    size: _propTypes2.default.oneOf(['medium', 'large']),
    /**
     * 标题
     */
    title: _propTypes2.default.node,
    /**
     * 内容
     */
    children: _propTypes2.default.node,
    /**
     * 默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 当前是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 显示的图标类型，会覆盖内部设置的IconType，传false不显示图标
     */
    iconType: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
    /**
     * 显示关闭按钮
     */
    closeable: _propTypes2.default.bool,
    /**
     * 关闭按钮的回调
     */
    onClose: _propTypes2.default.func,
    /**
     * 关闭之后调用的函数
     */
    afterClose: _propTypes2.default.func,
    /**
     * 是否开启展开收起动画
     */
    animation: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    type: 'success',
    shape: 'inline',
    size: 'medium',
    defaultVisible: true,
    closeable: false,
    onClose: noop,
    afterClose: noop,
    animation: true,
    locale: _zhCn2.default.Message
}, _temp2);
Message.displayName = 'Message';
exports.default = _configProvider2.default.config((0, _reactLifecyclesCompat.polyfill)(Message));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var noop = function noop() {};
var pickOthers = util_1.obj.pickOthers;
var Inner = /** @class */function (_super) {
    tslib_1.__extends(Inner, _super);
    function Inner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Inner.prototype.renderHeader = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            title = _b.title,
            headerStyle = _b.headerStyle;
        var closeLink = this.renderCloseLink();
        var headerCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "drawer-header")] = true, _a["".concat(prefix, "drawer-no-title")] = !title, _a));
        var ariaProps = {
            role: 'heading',
            'aria-level': 1
        };
        return react_1.default.createElement("div", tslib_1.__assign({}, ariaProps, { className: headerCls, style: headerStyle }), title, closeLink);
    };
    Inner.prototype.renderBody = function () {
        var _a = this.props,
            prefix = _a.prefix,
            children = _a.children,
            bodyStyle = _a.bodyStyle;
        if (children) {
            return react_1.default.createElement("div", { className: "".concat(prefix, "drawer-body"), style: bodyStyle }, children);
        }
        return null;
    };
    Inner.prototype.renderCloseLink = function () {
        var _a = this.props,
            prefix = _a.prefix,
            closeable = _a.closeable,
            onClose = _a.onClose,
            locale = _a.locale;
        var ariaProps = {
            role: 'button',
            'aria-label': locale === null || locale === void 0 ? void 0 : locale.close
        };
        if (closeable) {
            return react_1.default.createElement("a", tslib_1.__assign({}, ariaProps, { className: "".concat(prefix, "drawer-close"), onClick: onClose }), react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "drawer-close-icon"), type: "close" }));
        }
        return null;
    };
    Inner.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            closeable = _b.closeable,
            placement = _b.placement,
            role = _b.role,
            rtl = _b.rtl,
            v2 = _b.v2;
        var others = pickOthers(Object.keys(Inner.propTypes), this.props);
        var newClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "drawer")] = true, _a["".concat(prefix, "drawer-").concat(placement)] = !v2, _a["".concat(prefix, "closeable")] = closeable, _a[className] = !!className, _a));
        var ariaProps = {
            role: role,
            'aria-modal': 'true'
        };
        var header = this.renderHeader();
        var body = this.renderBody();
        return react_1.default.createElement("div", tslib_1.__assign({}, ariaProps, { className: newClassName }, others, { dir: rtl ? 'rtl' : undefined }), v2 ? react_1.default.createElement("div", { className: "".concat(prefix, "drawer-content") }, header, body) : react_1.default.createElement("div", { style: { height: '100%', overflow: 'auto' } }, header, body));
    };
    Inner.propTypes = {
        prefix: prop_types_1.default.string,
        className: prop_types_1.default.string,
        closeable: prop_types_1.default.bool,
        role: prop_types_1.default.string,
        title: prop_types_1.default.node,
        placement: prop_types_1.default.oneOf(['top', 'right', 'bottom', 'left']),
        rtl: prop_types_1.default.bool,
        onClose: prop_types_1.default.func,
        locale: prop_types_1.default.object,
        headerStyle: prop_types_1.default.object,
        bodyStyle: prop_types_1.default.object,
        afterClose: prop_types_1.default.func,
        beforeOpen: prop_types_1.default.func,
        beforeClose: prop_types_1.default.func,
        cache: prop_types_1.default.bool,
        shouldUpdatePosition: prop_types_1.default.bool,
        v2: prop_types_1.default.bool
    };
    Inner.defaultProps = {
        prefix: 'next-',
        closeable: true,
        role: 'dialog',
        onClose: noop,
        locale: zh_cn_1.default.Drawer
    };
    return Inner;
}(react_1.Component);
exports.default = Inner;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _box = __webpack_require__(172);

var _box2 = _interopRequireDefault(_box);

var _util = __webpack_require__(4);

var _createStyle = __webpack_require__(173);

var _createStyle2 = _interopRequireDefault(_createStyle);

var _cell = __webpack_require__(350);

var _cell2 = _interopRequireDefault(_cell);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var ieVersion = _util.env.ieVersion;
var pickOthers = _util.obj.pickOthers,
    isReactFragment = _util.obj.isReactFragment;

var createChildren = function createChildren(children, device, gap) {
    var array = _react2.default.Children.toArray(children);
    if (!children) {
        return null;
    }

    return array.map(function (child) {
        if (isReactFragment(child)) {
            return createChildren(child.props.children, device, gap);
        }

        if (_react2.default.isValidElement(child) && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && ['form_item', 'responsive_grid_cell'].indexOf(child.type._typeMark) > -1) {
            return _react2.default.cloneElement(child, {
                style: (0, _extends3.default)({}, (0, _createStyle.getGridChildProps)(child.props, device, gap), child.props.style || {})
            });
        }

        return child;
    });
};

var getStyle = function getStyle() {
    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var props = arguments[1];

    return (0, _extends3.default)({}, (0, _createStyle2.default)((0, _extends3.default)({ display: 'grid' }, props)), style);
};

/**
 * ResponsiveGrid
 */
var ResponsiveGrid = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(ResponsiveGrid, _Component);

    function ResponsiveGrid() {
        (0, _classCallCheck3.default)(this, ResponsiveGrid);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    ResponsiveGrid.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            View = _props.component,
            style = _props.style,
            className = _props.className,
            children = _props.children,
            device = _props.device,
            rows = _props.rows,
            columns = _props.columns,
            gap = _props.gap,
            rowSpan = _props.rowSpan,
            colSpan = _props.colSpan,
            component = _props.component,
            dense = _props.dense;

        var styleProps = {
            rows: rows,
            columns: columns,
            gap: gap,
            device: device,
            rowSpan: rowSpan,
            colSpan: colSpan,
            component: component,
            dense: dense
        };

        var others = pickOthers(Object.keys(ResponsiveGrid.propTypes), this.props);

        var styleSheet = getStyle(style, styleProps);

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'responsive-grid'] = true, _classNames[prefix + 'responsive-grid-ie'] = ieVersion, _classNames), className);

        return ieVersion ? _react2.default.createElement(_box2.default, (0, _extends3.default)({}, this.props, { direction: 'row', wrap: true, spacing: gap, children: createChildren(children, device, gap) })) : _react2.default.createElement(View, (0, _extends3.default)({ style: styleSheet, className: cls }, others), createChildren(children, device, gap));
    };

    return ResponsiveGrid;
}(_react.Component), _class._typeMark = 'responsive_grid', _class.propTypes = {
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.any,
    /**
     * 设备，用来做自适应，默认为 PC
     * @enumdesc 手机, 平板, PC
     */
    device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
    rows: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 分为几列， 默认是 12 列
     */
    columns: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 每个 cell 之间的间距， [bottom&top, right&left]
     */
    gap: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number]),
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    /**
     * 是否开启紧密模式，开启后尽可能能紧密填满，尽量不出现空格
     */
    dense: _propTypes2.default.bool,
    style: _propTypes2.default.object
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'div',
    device: 'desktop',
    dense: false
}, _temp);
ResponsiveGrid.displayName = 'ResponsiveGrid';

ResponsiveGrid.Cell = _cell2.default;

exports.default = _configProvider2.default.config(ResponsiveGrid);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(16));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
/** Loading */
var Loading = /** @class */function (_super) {
    tslib_1.__extends(Loading, _super);
    function Loading() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Loading.prototype.render = function () {
        var _a, _b, _c, _d;
        var _e = this.props,
            tip = _e.tip,
            visible = _e.visible,
            children = _e.children,
            className = _e.className,
            style = _e.style,
            indicator = _e.indicator,
            color = _e.color,
            prefix = _e.prefix,
            fullScreen = _e.fullScreen,
            disableScroll = _e.disableScroll,
            onVisibleChange = _e.onVisibleChange,
            tipAlign = _e.tipAlign,
            size = _e.size,
            inline = _e.inline,
            rtl = _e.rtl,
            safeNode = _e.safeNode;
        var indicatorDom = null;
        var dotCls = "".concat(prefix, "loading-dot");
        if (indicator) {
            indicatorDom = indicator;
        } else {
            var backgroundColor = color;
            var fusionReactorCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "loading-fusion-reactor")] = true, _a["".concat(prefix, "loading-medium-fusion-reactor")] = size === 'medium', _a));
            indicatorDom = react_1.default.createElement("div", { className: fusionReactorCls, dir: rtl ? 'rtl' : undefined }, react_1.default.createElement("span", { className: dotCls, style: { backgroundColor: backgroundColor } }), react_1.default.createElement("span", { className: dotCls, style: { backgroundColor: backgroundColor } }), react_1.default.createElement("span", { className: dotCls, style: { backgroundColor: backgroundColor } }), react_1.default.createElement("span", { className: dotCls, style: { backgroundColor: backgroundColor } }));
        }
        var loadingCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "loading")] = true, _b["".concat(prefix, "open")] = visible, _b["".concat(prefix, "loading-inline")] = inline, _b[className] = className, _b));
        var tipCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "loading-tip")] = true, _c["".concat(prefix, "loading-tip-fullscreen")] = fullScreen,
        // 默认非 right就是 bottom
        _c["".concat(prefix, "loading-right-tip")] = tipAlign === 'right', _c));
        var others = util_1.obj.pickOthers(Loading.propTypes, this.props);
        var contentCls = (0, classnames_1.default)((_d = {}, _d["".concat(prefix, "loading-component")] = visible, _d["".concat(prefix, "loading-wrap")] = true, _d));
        return fullScreen ? [children, react_1.default.createElement(overlay_1.default, tslib_1.__assign({ key: "overlay", hasMask: true, align: "cc cc", safeNode: safeNode, disableScroll: disableScroll }, others, { className: className, style: style, visible: visible, onRequestClose: onVisibleChange }), react_1.default.createElement("div", { className: tipCls }, react_1.default.createElement("div", { className: "".concat(prefix, "loading-indicator") }, indicatorDom), react_1.default.createElement("div", { className: "".concat(prefix, "loading-tip-content") }, tip), react_1.default.createElement("div", { className: "".concat(prefix, "loading-tip-placeholder") }, tip)))] : react_1.default.createElement("div", tslib_1.__assign({ className: loadingCls, style: style }, others), visible ? react_1.default.createElement("div", { className: tipCls }, react_1.default.createElement("div", { className: "".concat(prefix, "loading-indicator") }, indicatorDom), react_1.default.createElement("div", { className: "".concat(prefix, "loading-tip-content") }, tip), react_1.default.createElement("div", { className: "".concat(prefix, "loading-tip-placeholder") }, tip)) : null, react_1.default.createElement("div", { className: contentCls }, visible ? react_1.default.createElement("div", { className: "".concat(prefix, "loading-masker") }) : null, children));
    };
    Loading.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, tip: prop_types_1.default.any, tipAlign: prop_types_1.default.oneOf(['right', 'bottom']), visible: prop_types_1.default.bool, onVisibleChange: prop_types_1.default.func, className: prop_types_1.default.string, style: prop_types_1.default.object, size: prop_types_1.default.oneOf(['large', 'medium']), indicator: prop_types_1.default.any, color: prop_types_1.default.string, fullScreen: prop_types_1.default.bool, disableScroll: prop_types_1.default.bool, safeNode: prop_types_1.default.any, children: prop_types_1.default.any, inline: prop_types_1.default.bool, rtl: prop_types_1.default.bool });
    Loading.defaultProps = {
        prefix: 'next-',
        visible: true,
        onVisibleChange: util_1.func.noop,
        animate: null,
        tipAlign: 'bottom',
        size: 'large',
        inline: true,
        disableScroll: false
    };
    return Loading;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Loading);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _progress = __webpack_require__(370);

var _progress2 = _interopRequireDefault(_progress);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_progress2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'progressive', 'Progress');

            var _props = props,
                type = _props.type,
                others = (0, _objectWithoutProperties3.default)(_props, ['type']);

            props = (0, _extends3.default)({ progressive: type === 'progressive' }, others);
        }

        if ('showInfo' in props) {
            deprecated('showInfo', 'textRender', 'Progress');

            var _props2 = props,
                showInfo = _props2.showInfo,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['showInfo']);

            if (showInfo) {
                props = _others;
            } else {
                props = (0, _extends3.default)({ textRender: function textRender() {
                        return false;
                    } }, _others);
            }
        }

        if ('suffix' in props) {
            deprecated('suffix', 'textRender', 'Progress');

            var _props3 = props,
                suffix = _props3.suffix,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['suffix']);

            props = (0, _extends3.default)({ textRender: function textRender() {
                    return suffix;
                } }, _others2);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var styleEqual = __webpack_require__(412);
var hasOwnProperty = Object.prototype.hasOwnProperty;

function type(a) {
  return Array.isArray(a) ? 'array' : typeof a;
}

function elementEquals(a, b) {
  var typeOfA = type(a);
  var typeOfB = type(b);

  if (typeOfA !== typeOfB) return false;

  switch (typeOfA) {
    case 'array':
      if (a.length !== b.length) return false;
      for (var i = 0; i < a.length; i++) {
        if (!elementEquals(a[i], b[i])) return false;
      }
      return true;
    case 'object':
      if (!a || !b) return a === b;
      if (a.type !== b.type) return false;
      if (a.key !== b.key) return false;
      if (a.ref !== b.ref) return false;
      return shallowElementEquals(a.props, b.props);
      break;
    default:
      return a === b;
  }
}

function shallowElementEquals(a, b) {
  var aCount = 0;
  var bCount = 0;

  for (var key in a) {
    if (hasOwnProperty.call(a, key)) {
      if (key === 'style') {
        // NOTE(lmr): kind of risky, but i'm assuming that a `style` prop is a React Native style,
        // and using the `styleEqual` algorithm here.
        if (!styleEqual(a[key], b[key])) return false;
      } else if (key === 'children') {
        // will compare children later
      } else {
        if (a[key] !== b[key]) return false;
      }
      aCount++;
    }
  }

  for (var key in b) {
    if (hasOwnProperty.call(b, key)) {
      bCount++;
    }
  }

  if (aCount !== bCount) return false;

  // compare children last...
  return elementEquals(a.children, b.children);
}

module.exports = shallowElementEquals;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Table.Column
 * @order 0
 **/
var Column = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(Column, _React$Component);

  function Column() {
    (0, _classCallCheck3.default)(this, Column);
    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
  }

  Column.prototype.render = function render() {
    return null;
  };

  return Column;
}(_react2.default.Component), _class.propTypes = {
  /**
   * 指定列对应的字段，支持`a.b`形式的快速取值
   */
  dataIndex: _propTypes2.default.string,
  /**
   * 行渲染的逻辑
   * value, rowIndex, record, context四个属性只可读不可被更改
   * Function(value, index, record) => Element
   */
  cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func]),
  /**
   * 表头显示的内容
   */
  title: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func]),
  /**
   * 写到 header 单元格上的title属性
   */
  htmlTitle: _propTypes2.default.string,
  /**
   * 是否支持排序
   */
  sortable: _propTypes2.default.bool,
  /**
   * 排序的方向。
   * 设置 ['desc', 'asc']，表示降序、升序
   * 设置 ['desc', 'asc', 'default']，表示表示降序、升序、不排序
   * @version 1.23
   */
  sortDirections: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['desc', 'asc', 'default'])),
  /**
   * 列宽，注意在锁列的情况下一定需要配置宽度
   */
  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  /**
   * 单元格的对齐方式
   */
  align: _propTypes2.default.oneOf(['left', 'center', 'right']),
  /**
   * 单元格标题的对齐方式, 不配置默认读取align值
   */
  alignHeader: _propTypes2.default.oneOf(['left', 'center', 'right']),
  /**
   * 生成标题过滤的菜单, 格式为`[{label:'xxx', value:'xxx'}]`
   */
  filters: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.string,
    value: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string])
  })),
  /**
   * 过滤的模式是单选还是多选
   */
  filterMode: _propTypes2.default.oneOf(['single', 'multiple']),
  /**
   * filter 模式下传递给 Menu 菜单的属性， 默认继承 `Menu` 组件的API
   * @property {Boolean} subMenuSelectable 默认为`false` subMenu是否可选择
   * @property {Boolean} isSelectIconRight 默认为`false` 是否将选中图标居右。注意：SubMenu 上的选中图标一直居左，不受此API控制
   */
  filterMenuProps: _propTypes2.default.object,
  filterProps: _propTypes2.default.object,
  /**
   * 是否支持锁列,可选值为`left`,`right`, `true`
   */
  lock: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
  /**
   * 是否支持列宽调整, 当该值设为true，table的布局方式会修改为fixed.
   */
  resizable: _propTypes2.default.bool,
  /**
   * （推荐使用）是否支持异步列宽调整, 当该值设为true，table的布局方式会修改为fixed.
   * @version 1.24
   */
  asyncResizable: _propTypes2.default.bool,
  /**
   * header cell 横跨的格数，设置为0表示不出现此 th
   */
  colSpan: _propTypes2.default.number,
  /**
   * 设置该列单元格的word-break样式，对于id类、中文类适合用all，对于英文句子适合用word
   * @enumdesc all, word
   * @default all
   * @version 1.23
   */
  wordBreak: _propTypes2.default.oneOf(['all', 'word'])
}, _class.contextTypes = {
  parent: _propTypes2.default.any
}, _class.defaultProps = {
  cell: function cell(value) {
    return value;
  },
  filterMode: 'multiple',
  filterMenuProps: {
    subMenuSelectable: false
  },
  filterProps: {},
  resizable: false,
  asyncResizable: false
}, _class._typeMark = 'column', _temp);
Column.displayName = 'Column';
exports.default = Column;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _row = __webpack_require__(63);

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var LockRow = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(LockRow, _React$Component);

    function LockRow() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, LockRow);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onMouseEnter = function (record, index, e) {
            var onRowMouseEnter = _this.context.onRowMouseEnter;
            var onMouseEnter = _this.props.onMouseEnter;

            onRowMouseEnter && onRowMouseEnter(record, index, e);
            onMouseEnter(record, index, e);
        }, _this.onMouseLeave = function (record, index, e) {
            var onRowMouseLeave = _this.context.onRowMouseLeave;
            var onMouseLeave = _this.props.onMouseLeave;

            onRowMouseLeave && onRowMouseLeave(record, index, e);
            onMouseLeave(record, index, e);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    LockRow.prototype.render = function render() {
        /* eslint-disable no-unused-vars*/
        return _react2.default.createElement(_row2.default, (0, _extends3.default)({}, this.props, { onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave }));
    };

    return LockRow;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _row2.default.propTypes), _class.contextTypes = {
    onRowMouseEnter: _propTypes2.default.func,
    onRowMouseLeave: _propTypes2.default.func
}, _class.defaultProps = (0, _extends3.default)({}, _row2.default.defaultProps), _temp2);
LockRow.displayName = 'LockRow';
exports.default = LockRow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
exports.TreeNode = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = __webpack_require__(13);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var checkbox_1 = tslib_1.__importDefault(__webpack_require__(48));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var util_1 = __webpack_require__(4);
var tree_node_input_1 = tslib_1.__importDefault(__webpack_require__(442));
var tree_node_indent_1 = tslib_1.__importDefault(__webpack_require__(443));
var Expand = animate_1.default.Expand;
var bindCtx = util_1.func.bindCtx;
var isPromise = util_1.obj.isPromise,
    pickOthers = util_1.obj.pickOthers,
    pickAttrsWith = util_1.obj.pickAttrsWith;
var isRoot = function isRoot(pos) {
    return (/^0-(\d)+$/.test(pos)
    );
};
/**
 * Tree.Node
 */
var TreeNode = /** @class */function (_super) {
    tslib_1.__extends(TreeNode, _super);
    function TreeNode(props) {
        var _this = _super.call(this, props) || this;
        _this.saveRef = function (ref) {
            _this.nodeEl = ref;
        };
        _this.saveLabelWrapperRef = function (ref) {
            _this.labelWrapperEl = ref;
        };
        _this.state = {
            editing: false,
            loading: false,
            label: props.label
        };
        bindCtx(_this, ['handleExpand', 'handleSelect', 'handleCheck', 'handleEditStart', 'handleEditFinish', 'handleRightClick', 'handleDragStart', 'handleDragEnter', 'handleDragOver', 'handleDragLeave', 'handleDragEnd', 'handleDrop', 'handleInputKeyDown', 'handleKeyDown']);
        return _this;
    }
    TreeNode.getDerivedStateFromProps = function (props) {
        if ('label' in props) {
            return {
                label: props.label
            };
        }
        return null;
    };
    TreeNode.prototype.componentDidMount = function () {
        this.itemLabelWrapperNode = (0, react_dom_1.findDOMNode)(this.labelWrapperEl);
        this.setFocus();
    };
    TreeNode.prototype.componentDidUpdate = function () {
        this.setFocus();
    };
    TreeNode.prototype.focusable = function () {
        var _a = this.props,
            root = _a.root,
            disabled = _a.disabled;
        var focusable = root.props.focusable;
        return focusable && !disabled;
    };
    TreeNode.prototype.getFocused = function () {
        var _a = this.props,
            _key = _a._key,
            root = _a.root;
        var focusedKey = root.state.focusedKey;
        return focusedKey === _key;
    };
    TreeNode.prototype.setFocus = function () {
        var focused = this.getFocused();
        if (focused && this.focusable()) {
            this.itemLabelWrapperNode.focus({ preventScroll: true });
        }
    };
    TreeNode.prototype.handleExpand = function (e) {
        var _this = this;
        var _a = this.props,
            root = _a.root,
            expanded = _a.expanded,
            eventKey = _a.eventKey;
        if (root.props.isNodeBlock) {
            e.stopPropagation();
        }
        var loading = this.state.loading;
        if (loading) {
            return;
        }
        var returnValue = root.handleExpand(!expanded, eventKey, this);
        if (isPromise(returnValue)) {
            this.setLoading(true);
            return returnValue.then(function () {
                _this.setLoading(false);
            }, function () {
                _this.setLoading(false);
            });
        }
    };
    TreeNode.prototype.setLoading = function (loading) {
        this.setState({ loading: loading });
    };
    TreeNode.prototype.handleSelect = function (e) {
        e.preventDefault();
        var _a = this.props,
            root = _a.root,
            selected = _a.selected,
            eventKey = _a.eventKey;
        root.handleSelect(!selected, eventKey, this, e);
        var checkable = typeof this.props.checkable !== 'undefined' ? this.props.checkable : root.props.checkable;
        var clickToCheck = typeof this.props.clickToCheck !== 'undefined' ? this.props.clickToCheck : root.props.clickToCheck;
        clickToCheck && checkable && this.handleCheck();
    };
    TreeNode.prototype.handleCheck = function () {
        var _a = this.props,
            root = _a.root,
            checked = _a.checked,
            eventKey = _a.eventKey;
        root.handleCheck(!checked, eventKey, this);
    };
    TreeNode.prototype.handleEditStart = function (e) {
        e.preventDefault();
        this.setState({
            editing: true
        });
    };
    TreeNode.prototype.handleEditFinish = function (e) {
        var target = e.target;
        var label = target.value;
        this.setState({
            editing: false
        });
        var _a = this.props,
            root = _a.root,
            eventKey = _a.eventKey;
        root.props.onEditFinish(eventKey, label, this);
    };
    TreeNode.prototype.handleRightClick = function (e) {
        this.props.root.props.onRightClick({
            event: e,
            node: this
        });
    };
    TreeNode.prototype.handleDragStart = function (e) {
        e.stopPropagation();
        this.props.root.handleDragStart(e, this);
    };
    TreeNode.prototype.handleDragEnter = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.props.root.handleDragEnter(e, this);
    };
    TreeNode.prototype.handleDragOver = function (e) {
        if (this.props.root.canDrop(this)) {
            e.preventDefault();
            this.props.root.handleDragOver(e, this);
        }
        e.stopPropagation();
    };
    TreeNode.prototype.handleDragLeave = function (e) {
        e.stopPropagation();
        this.props.root.handleDragLeave(e, this);
    };
    TreeNode.prototype.handleDragEnd = function (e) {
        e.stopPropagation();
        this.props.root.handleDragEnd(e, this);
    };
    TreeNode.prototype.handleDrop = function (e) {
        e.preventDefault();
        e.stopPropagation();
        this.props.root.handleDrop(e, this);
    };
    TreeNode.prototype.handleInputKeyDown = function (e) {
        if (e.keyCode === util_1.KEYCODE.ENTER) {
            this.handleEditFinish(e);
        }
        e.stopPropagation();
    };
    TreeNode.prototype.handleKeyDown = function (e) {
        var _a = this.props,
            _key = _a._key,
            root = _a.root,
            disabled = _a.disabled;
        if (disabled) {
            return;
        }
        if (this.focusable()) {
            root.handleItemKeyDown(_key, this, e);
        }
        this.props.onKeyDown && this.props.onKeyDown(e);
    };
    TreeNode.prototype.addCallbacks = function (props) {
        var _a = this.props,
            disabled = _a.disabled,
            root = _a.root;
        var checkable = typeof this.props.checkable !== 'undefined' ? this.props.checkable : root.props.checkable;
        var clickToCheck = typeof this.props.clickToCheck !== 'undefined' ? this.props.clickToCheck : root.props.clickToCheck;
        if (!disabled) {
            var selectable = typeof this.props.selectable !== 'undefined' ? this.props.selectable : root.props.selectable;
            if (selectable) {
                props.onClick = this.handleSelect;
            } else if (clickToCheck && checkable) {
                props.onClick = this.handleCheck;
            }
            var editable = typeof this.props.editable !== 'undefined' ? this.props.editable : root.props.editable;
            if (editable) {
                props.onDoubleClick = this.handleEditStart;
            }
            var draggable = typeof this.props.draggable !== 'undefined' ? this.props.draggable : root.props.draggable;
            if (draggable) {
                props.draggable = true;
                props.onDragStart = this.handleDragStart;
                props.onDragEnd = this.handleDragEnd;
            }
            props.onContextMenu = this.handleRightClick;
        }
    };
    TreeNode.prototype.renderSwitcher = function (showLine) {
        var _a, _b;
        var _c = this.props,
            prefix = _c.prefix,
            disabled = _c.disabled,
            expanded = _c.expanded,
            root = _c.root;
        var loadData = root.props.loadData;
        var loading = this.state.loading;
        var lineState = showLine ? 'line' : 'noline';
        var className = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "tree-switcher")] = true, _a["".concat(prefix).concat(lineState)] = !loading, _a["".concat(prefix, "close")] = !loading && !showLine && !expanded, _a["".concat(prefix, "disabled")] = disabled, _a["".concat(prefix, "loading")] = loading, _a["".concat(prefix, "loading-").concat(lineState)] = loading, _a));
        var iconType = loadData && loading ? 'loading' : showLine ? expanded ? 'minus' : 'add' : 'arrow-down';
        var iconCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "tree-switcher-icon")] = true, _b["".concat(prefix, "tree-fold-icon")] = iconType === 'arrow-down', _b["".concat(prefix, "tree-switcher-fold-icon")] = showLine && !expanded, _b["".concat(prefix, "tree-switcher-unfold-icon")] = showLine && expanded, _b));
        return (
            // eslint-disable-next-line jsx-a11y/click-events-have-key-events
            react_1.default.createElement("span", { className: className, onClick: disabled ? undefined : this.handleExpand }, this.renderRightAngle(showLine), react_1.default.createElement(icon_1.default, { className: iconCls, type: iconType }))
        );
    };
    TreeNode.prototype.renderNoopSwitcher = function (showLine) {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            pos = _b.pos;
        var lineState = showLine ? 'line' : 'noline';
        var className = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "tree-switcher")] = true, _a["".concat(prefix, "noop-").concat(lineState)] = true, _a["".concat(prefix, "noop-line-noroot")] = showLine && !isRoot(pos), _a));
        return react_1.default.createElement("span", { className: className }, this.renderRightAngle(showLine));
    };
    TreeNode.prototype.renderRightAngle = function (showLine) {
        var _a = this.props,
            prefix = _a.prefix,
            pos = _a.pos;
        return showLine && !isRoot(pos) ? react_1.default.createElement("span", { className: "".concat(prefix, "tree-right-angle") }) : null;
    };
    TreeNode.prototype.renderCheckbox = function () {
        var _a = this.props,
            checked = _a.checked,
            indeterminate = _a.indeterminate,
            disabled = _a.disabled,
            checkboxDisabled = _a.checkboxDisabled;
        var label = this.state.label;
        return (
            // @ts-expect-error aria-label should be undefined instead of null
            react_1.default.createElement(checkbox_1.default, { "aria-label": typeof label === 'string' ? label : null, checked: checked, tabIndex: -1, indeterminate: indeterminate, disabled: disabled || checkboxDisabled,
                // don't use onChange, fix https://github.com/alibaba-fusion/next/issues/3850
                onClick: this.handleCheck })
        );
    };
    TreeNode.prototype.renderLabel = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            root = _b.root,
            disabled = _b.disabled,
            icon = _b.icon,
            _key = _b._key;
        var isNodeBlock = root.props.isNodeBlock;
        var label = this.state.label;
        var selectable = typeof this.props.selectable !== 'undefined' ? this.props.selectable : root.props.selectable;
        var labelProps = {
            className: (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "tree-node-label")] = true, _a["".concat(prefix, "tree-node-label-selectable")] = selectable && !disabled, _a))
        };
        var labelWrapperProps = {
            onKeyDown: this.handleKeyDown,
            // @ts-expect-error should covert to number
            tabIndex: root.tabbableKey === _key ? '0' : '-1'
        };
        if (!isNodeBlock) {
            this.addCallbacks(labelProps);
        }
        var iconEl = typeof icon === 'string' ? react_1.default.createElement(icon_1.default, { type: icon }) : icon;
        return react_1.default.createElement("div", tslib_1.__assign({ className: "".concat(prefix, "tree-node-label-wrapper"), ref: this.saveLabelWrapperRef }, labelWrapperProps), react_1.default.createElement("div", tslib_1.__assign({}, labelProps), iconEl, label));
    };
    TreeNode.prototype.renderInput = function () {
        var prefix = this.props.prefix;
        var label = this.state.label;
        return react_1.default.createElement("div", { className: "".concat(prefix, "tree-node-label-wrapper"), ref: this.saveLabelWrapperRef }, react_1.default.createElement(tree_node_input_1.default, { prefix: prefix, defaultValue: label, onBlur: this.handleEditFinish, onKeyDown: this.handleInputKeyDown }));
    };
    TreeNode.prototype.renderChildTree = function () {
        var _a = this.props,
            prefix = _a.prefix,
            children = _a.children;
        return children && this.addAnimationIfNeeded(react_1.default.createElement("ul", { role: "group", className: "".concat(prefix, "tree-child-tree") }, children));
    };
    TreeNode.prototype.addAnimationIfNeeded = function (node) {
        var root = this.props.root;
        return root && root.props.animation ? react_1.default.createElement(Expand, { animationAppear: false }, node) : node;
    };
    TreeNode.prototype.render = function () {
        var _a, _b, _c;
        var _d = this.props,
            prefix = _d.prefix,
            rtl = _d.rtl,
            className = _d.className,
            isLeaf = _d.isLeaf,
            level = _d.level,
            root = _d.root,
            selected = _d.selected,
            checked = _d.checked,
            disabled = _d.disabled,
            dragOver = _d.dragOver,
            dragOverGapTop = _d.dragOverGapTop,
            dragOverGapBottom = _d.dragOverGapBottom,
            _key = _d._key,
            size = _d.size,
            posinset = _d.posinset,
            children = _d.children,
            expanded = _d.expanded,
            isLastChild = _d.isLastChild;
        var _e = root.props,
            isNodeBlock = _e.isNodeBlock,
            showLine = _e.showLine,
            rootDraggable = _e.draggable,
            filterTreeNode = _e.filterTreeNode;
        var label = this.state.label;
        var ARIA_PREFIX = 'aria-';
        var ariaProps = pickAttrsWith(this.props, ARIA_PREFIX);
        var others = pickOthers(Object.keys(TreeNode.propTypes), this.props);
        var hasRenderChildNodes = root && root.props.renderChildNodes;
        var shouldShouldLine = !isNodeBlock && showLine && !hasRenderChildNodes;
        var useVirtual = root && root.props.useVirtual;
        // remove aria keys
        Object.keys(others).forEach(function (key) {
            if (key.match(ARIA_PREFIX)) {
                delete others[key];
            }
        });
        if (rootDraggable) {
            others.onDragEnter = this.handleDragEnter;
            others.onDragOver = this.handleDragOver;
            others.onDragLeave = this.handleDragLeave;
            others.onDrop = this.handleDrop;
        }
        var newClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "tree-node")] = true, _a["".concat(prefix, "filtered")] = !!filterTreeNode && !!root.filterTreeNode(this), _a[className] = !!className, _a));
        var checkable = typeof this.props.checkable !== 'undefined' ? this.props.checkable : root.props.checkable;
        var innerClassName = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "tree-node-inner")] = true, _b["".concat(prefix, "selected")] = selected, _b["".concat(prefix, "disabled")] = disabled, _b["".concat(prefix, "drag-over")] = dragOver, _b["".concat(prefix, "drag-over-gap-top")] = dragOverGapTop, _b["".concat(prefix, "drag-over-gap-bottom")] = dragOverGapBottom, _b));
        var defaultPaddingLeft = (typeof isNodeBlock === "undefined" ? "undefined" : (0, _typeof3.default)(isNodeBlock)) === 'object' ? // @ts-expect-error should convert 0 to '0'
        parseInt(isNodeBlock.defaultPaddingLeft || 0) : 0;
        var paddingLeftProp = rtl ? 'paddingRight' : 'paddingLeft';
        var indent =
        // @ts-expect-error should convert 24 to '24'
        (typeof isNodeBlock === "undefined" ? "undefined" : (0, _typeof3.default)(isNodeBlock)) === 'object' ? parseInt(isNodeBlock.indent || 24) : 24;
        var innerStyle = isNodeBlock ? (_c = {}, _c[paddingLeftProp] = "".concat((useVirtual ? 0 : indent * (level - 1)) + defaultPaddingLeft, "px"), _c) : null;
        var innerProps = tslib_1.__assign({ className: innerClassName, style: innerStyle, onKeyDown: this.handleKeyDown }, ariaProps);
        if (isNodeBlock) {
            this.addCallbacks(innerProps);
        }
        var editing = this.state.editing;
        // @ts-expect-error should convert to number type
        innerProps.tabIndex = root.tabbableKey === _key ? '0' : '-1';
        if (rtl) {
            others.dir = 'rtl';
        }
        return this.addAnimationIfNeeded(react_1.default.createElement("li", tslib_1.__assign({ role: "presentation", className: newClassName }, others), react_1.default.createElement("div", tslib_1.__assign({ ref: this.saveRef, role: "treeitem", "aria-selected": selected, "aria-disabled": disabled, "aria-checked": checked, "aria-expanded": !isLeaf, "aria-label": typeof label === 'string' ? label : null, "aria-level": level, "aria-posinset": posinset, "aria-setsize": size }, innerProps), useVirtual && !hasRenderChildNodes && react_1.default.createElement(tree_node_indent_1.default, { prefix: prefix, level: level, isLastChild: isLastChild, showLine: shouldShouldLine }), isLeaf ? this.renderNoopSwitcher(shouldShouldLine) : this.renderSwitcher(shouldShouldLine), checkable ? this.renderCheckbox() : null, editing ? this.renderInput() : this.renderLabel()), expanded && (hasRenderChildNodes ? children : this.renderChildTree())));
    };
    TreeNode.propTypes = {
        prefix: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        _key: prop_types_1.default.string,
        className: prop_types_1.default.string,
        children: prop_types_1.default.node,
        label: prop_types_1.default.node,
        /**
         * 单独设置是否支持选中，覆盖 Tree 的 selectable
         */
        selectable: prop_types_1.default.bool,
        /**
         * 单独设置是否出现复选框，覆盖 Tree 的 checkable
         */
        checkable: prop_types_1.default.bool,
        /**
         * 单独设置是否支持编辑，覆盖 Tree 的 editable
         */
        editable: prop_types_1.default.bool,
        /**
         * 单独设置是否支持拖拽，覆盖 Tree 的 draggable
         */
        draggable: prop_types_1.default.bool,
        /**
         * 是否禁止节点响应
         */
        disabled: prop_types_1.default.bool,
        /**
         * 是否禁止勾选节点复选框
         */
        checkboxDisabled: prop_types_1.default.bool,
        /**
         * 是否是叶子节点，设置loadData时生效
         */
        isLeaf: prop_types_1.default.bool,
        root: prop_types_1.default.object,
        eventKey: prop_types_1.default.string,
        pos: prop_types_1.default.string,
        expanded: prop_types_1.default.bool,
        selected: prop_types_1.default.bool,
        checked: prop_types_1.default.bool,
        indeterminate: prop_types_1.default.bool,
        dragOver: prop_types_1.default.bool,
        dragOverGapTop: prop_types_1.default.bool,
        dragOverGapBottom: prop_types_1.default.bool,
        parentNode: prop_types_1.default.object,
        onKeyDown: prop_types_1.default.func,
        size: prop_types_1.default.number,
        posinset: prop_types_1.default.number,
        // 是否是最后一个子节点，数组类型，包含对祖先节点的判断
        isLastChild: prop_types_1.default.arrayOf(prop_types_1.default.bool),
        /**
         * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type="icon type" />`
         * @version 1.21
         */
        icon: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.node])
    };
    TreeNode.defaultProps = {
        prefix: 'next-',
        label: '---',
        rtl: false,
        disabled: false,
        checkboxDisabled: false,
        size: 1,
        posinset: 1
    };
    return TreeNode;
}(react_1.Component);
exports.TreeNode = TreeNode;
exports.default = (0, react_lifecycles_compat_1.polyfill)(TreeNode);

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _base = __webpack_require__(192);

var _base2 = _interopRequireDefault(_base);

var _index = __webpack_require__(451);

var _index2 = _interopRequireDefault(_index);

var _html5Uploader = __webpack_require__(193);

var _html5Uploader2 = _interopRequireDefault(_html5Uploader);

var _list = __webpack_require__(106);

var _list2 = _interopRequireDefault(_list);

var _util2 = __webpack_require__(41);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;

/**
 * Upload
 */
var Upload = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(Upload, _Base);

    function Upload(props) {
        (0, _classCallCheck3.default)(this, Upload);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _initialiseProps.call(_this);

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: !Array.isArray(value) ? [] : value,
            uploading: false
        };
        return _this;
    }

    Upload.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        // 上传中不允许做受控修改
        if ('value' in nextProps && nextProps.value !== prevState.value && !prevState.uploading) {
            return {
                value: !Array.isArray(nextProps.value) ? [] : nextProps.value
            };
        }

        return null;
    };

    /**
     * 对外暴露API, 添加文件
     * @param files
     */
    Upload.prototype.selectFiles = function selectFiles(files) {
        var filesArr = files.length ? Array.prototype.slice.call(files) : [files];

        this.onSelect(filesArr);
    };

    Upload.prototype.uploadFiles = function uploadFiles(files) {
        // NOTE: drag上传，当鼠标松开的时候回执行 onDrop，但此时onChange还没出发所以 value=[], 必须提前标识上传中
        this.state.uploading = true;
        var fileList = files.filter(function (file) {
            if (file.state === 'selected') {
                file.state = 'uploading';
                return true;
            }
            return false;
        }).map(function (file) {
            return file.originFileObj;
        });

        fileList.length && this.uploaderRef.startUpload(fileList);
    };

    /**
     * 对外暴露api，控制文件上传
     */

    Upload.prototype.startUpload = function startUpload() {
        this.uploadFiles(this.state.value);
    };

    Upload.prototype.replaceFiles = function replaceFiles(old, current) {
        var targetItem = (0, _util2.getFileItem)(old, this.state.value);
        if (!targetItem) {
            return;
        }

        current.uid = old.uid;
        targetItem.originFileObj = current;
    };

    // 替换掉队列里面的文件


    Upload.prototype.isUploading = function isUploading() {
        return this.state.uploading;
    };

    /**
     * 删除文件
     * @param {File} file
     * @return {void}
     */

    /**
     * 取消上传
     * @param {File} file
     * @return {void}
     */

    Upload.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            listType = _props.listType,
            prefix = _props.prefix,
            dragable = _props.dragable,
            shape = _props.shape,
            className = _props.className,
            style = _props.style,
            useDataURL = _props.useDataURL,
            disabled = _props.disabled,
            limit = _props.limit,
            closable = _props.closable,
            beforeUpload = _props.beforeUpload,
            readonly = _props.readonly,
            onRemove = _props.onRemove,
            onCancel = _props.onCancel,
            onPreview = _props.onPreview,
            list = _props.list,
            extraRender = _props.extraRender,
            progressProps = _props.progressProps,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview,
            name = _props.name,
            _props$fileKeyName = _props.fileKeyName,
            fileKeyName = _props$fileKeyName === undefined ? name : _props$fileKeyName,
            fileNameRender = _props.fileNameRender,
            actionRender = _props.actionRender,
            previewOnFileName = _props.previewOnFileName,
            others = (0, _objectWithoutProperties3.default)(_props, ['listType', 'prefix', 'dragable', 'shape', 'className', 'style', 'useDataURL', 'disabled', 'limit', 'closable', 'beforeUpload', 'readonly', 'onRemove', 'onCancel', 'onPreview', 'list', 'extraRender', 'progressProps', 'rtl', 'isPreview', 'renderPreview', 'name', 'fileKeyName', 'fileNameRender', 'actionRender', 'previewOnFileName']);

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'upload'] = true, _classNames[prefix + 'upload-dragable'] = dragable, _classNames[prefix + 'disabled'] = disabled, _classNames[prefix + 'readonly'] = readonly, _classNames[className] = className, _classNames));

        var isExceedLimit = this.state.value.length >= limit;
        var innerCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'upload-inner'] = true, _classNames2[prefix + 'hidden'] = isExceedLimit, _classNames2));

        var children = this.props.children;
        if (shape === 'card') {
            var _classNames3;

            var cardCls = (0, _classnames2.default)((_classNames3 = {}, _classNames3[prefix + 'upload-card'] = true, _classNames3[prefix + 'disabled'] = disabled, _classNames3));
            children = _react2.default.createElement('div', { className: cardCls }, _react2.default.createElement(_icon2.default, { size: 'large', type: 'add', className: prefix + 'upload-add-icon' }), _react2.default.createElement('div', { tabIndex: '0', role: 'button', className: prefix + 'upload-text' }, children));
        }

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                var _classNames4;

                var previewCls = (0, _classnames2.default)((_classNames4 = {}, _classNames4[prefix + 'form-preview'] = true, _classNames4[className] = !!className, _classNames4));
                return _react2.default.createElement('div', { style: style, className: previewCls }, renderPreview(this.state.value, this.props));
            }

            if (listType) {
                return _react2.default.createElement(_list2.default, {
                    isPreview: true,
                    listType: listType,
                    style: style,
                    className: className,
                    value: this.state.value,
                    onPreview: onPreview
                });
            }

            return null;
        }

        // disabled 状态下把 remove函数替换成禁止 remove的函数
        var onRemoveFunc = disabled ? _util.func.prevent : onRemove;
        var otherAttributes = _util.obj.pickAttrsWith(this.props, 'data-');
        return _react2.default.createElement('div', (0, _extends3.default)({ className: cls, style: style }, otherAttributes), _react2.default.createElement(_index2.default, (0, _extends3.default)({}, others, {
            name: fileKeyName,
            beforeUpload: beforeUpload,
            dragable: dragable,
            disabled: disabled || isExceedLimit,
            className: innerCls,
            onSelect: this.onSelect,
            onDrop: this.onDrop,
            onProgress: this.onProgress,
            onSuccess: this.onSuccess,
            onError: this.onError,
            ref: this.saveUploaderRef
        }), children), listType && listType !== 'none' || list ? _react2.default.createElement(_list2.default, {
            useDataURL: useDataURL,
            fileNameRender: fileNameRender,
            actionRender: actionRender,
            uploader: this,
            listType: listType,
            value: this.state.value,
            closable: closable,
            onRemove: onRemoveFunc,
            progressProps: progressProps,
            onCancel: onCancel,
            onPreview: onPreview,
            extraRender: extraRender,
            rtl: rtl,
            previewOnFileName: previewOnFileName
        }) : null);
    };

    return Upload;
}(_base2.default), _class.displayName = 'Upload', _class.propTypes = (0, _extends3.default)({}, _html5Uploader2.default.propTypes, _list2.default.propTypes, {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string.isRequired,
    /**
     * 上传的地址
     */
    action: _propTypes2.default.string,
    /**
     * 文件列表
     */
    value: _propTypes2.default.array,
    /**
     * 默认文件列表
     */
    defaultValue: _propTypes2.default.array,
    /**
     * 上传按钮形状
     */
    shape: _propTypes2.default.oneOf(['card']),
    /**
     * 上传列表的样式
     * @enumdesc 文字, 图文, 卡片
     */
    listType: _propTypes2.default.oneOf(['text', 'image', 'card', 'none']),
    list: _propTypes2.default.any,
    /**
     * 文件名字段
     */
    name: _propTypes2.default.string,
    /**
     * 上传额外传参
     */
    data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    /**
     * 数据格式化函数，配合自定义 action 使用，参数为服务器的响应数据，详见 [formatter](#formater)
     * @param {Object} response 返回
     * @param {File} file 文件对象
     */
    formatter: _propTypes2.default.func,
    /**
     * 最大文件上传个数
     */
    limit: _propTypes2.default.number,
    /**
     * 设置上传超时,单位ms
     */
    timeout: _propTypes2.default.number,
    /**
     * 可选参数，是否支持拖拽上传，`ie10+` 支持。
     */
    dragable: _propTypes2.default.bool,
    closable: _propTypes2.default.bool,
    /**
     * 可选参数，是否本地预览
     */
    useDataURL: _propTypes2.default.bool,
    /**
     * 可选参数，是否禁用上传功能
     */
    disabled: _propTypes2.default.bool,
    /**
     * 选择文件回调
     */
    onSelect: _propTypes2.default.func,
    /**
     * 上传中
     */
    onProgress: _propTypes2.default.func,
    /**
     * 上传文件改变时的状态
     * @param {Object} info 文件事件对象
     */
    onChange: _propTypes2.default.func,
    /**
     * 可选参数，上传成功回调函数，参数为请求下响应信息以及文件
     * @param {Object} file 文件
     * @param {Array<Object>} value 值
     */
    onSuccess: _propTypes2.default.func,
    /**
     * 可选参数, 用于校验文件,afterSelect仅在 autoUpload=false 的时候生效,autoUpload=true时,可以使用beforeUpload完全可以替代该功能.
     * @param {Object} file
     * @returns {Boolean} 返回false会阻止上传,其他则表示正常
     */
    afterSelect: _propTypes2.default.func,
    /**
     * 移除文件回调函数
     * @param {Object} file 文件
     * @returns {Boolean|Promise} 返回 false、Promise.resolve(false)、 Promise.reject() 将阻止文件删除
     */
    onRemove: _propTypes2.default.func,
    /**
     * 可选参数，上传失败回调函数，参数为上传失败的信息、响应信息以及文件
     * @param {Object} file 出错的文件
     * @param {Array} value 当前值
     */
    onError: _propTypes2.default.func,
    /**
     * 可选参数, 详见 [beforeUpload](#beforeUpload)
     * @param {Object} file 所有文件
     * @param {Object} options 参数
     * @returns {Boolean|Object|Promise} 返回值作用见demo
     */
    beforeUpload: _propTypes2.default.func,
    /**
     * 放文件
     */
    onDrop: _propTypes2.default.func,
    /**
     * 自定义class
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * 子元素
     */
    children: _propTypes2.default.node,
    /**
     * 自动上传
     */
    autoUpload: _propTypes2.default.bool,
    /**
     * 自定义上传方法
     * @param {Object} option
     * @return {Object} object with abort method
     */
    request: _propTypes2.default.func,
    /**
     * 透传给Progress props
     */
    progressProps: _propTypes2.default.object,
    rtl: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 文件对象的 key name
     * @version 1.21
     */
    fileKeyName: _propTypes2.default.string,
    /**
     * list 的自定义文件名渲染
     * @param {Object} file 文件
     * @return {Node} react node
     */
    fileNameRender: _propTypes2.default.func,
    /**
     * 操作区域额外渲染
     * @param {Object} file 文件
     * @return {Node} react node
     */
    actionRender: _propTypes2.default.func,
    /**
     * 点击文件名时触发 onPreview
     * @version 1.24
     */
    previewOnFileName: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _html5Uploader2.default.defaultProps, {
    prefix: 'next-',
    limit: Infinity,
    autoUpload: true,
    closable: true,
    onSelect: noop,
    onProgress: noop,
    onChange: noop,
    onSuccess: noop,
    onRemove: noop,
    onError: noop,
    onDrop: noop,
    beforeUpload: noop,
    afterSelect: noop,
    previewOnFileName: false
}), _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onSelect = function (files) {
        var _props2 = _this2.props,
            autoUpload = _props2.autoUpload,
            afterSelect = _props2.afterSelect,
            onSelect = _props2.onSelect,
            limit = _props2.limit;
        // 总数

        var total = _this2.state.value.length + files.length;
        // 差额
        var less = limit - _this2.state.value.length;
        if (less <= 0) {
            // 差额不足 则不上传
            return;
        }

        var fileList = files.map(function (file) {
            var objFile = (0, _util2.fileToObject)(file);
            objFile.state = 'selected';
            return objFile;
        });

        // 默认全量上传
        var uploadFiles = fileList;
        var discardFiles = [];
        if (total > limit) {
            // 全量上传总数会超过limit 但是 还有差额
            uploadFiles = fileList.slice(0, less);
            discardFiles = fileList.slice(less);
        }

        var value = _this2.state.value.concat(fileList);

        /* eslint-disable-next */
        _this2.state.value = value;

        if (autoUpload) {
            _this2.uploadFiles(uploadFiles);
        }

        onSelect(uploadFiles, value);
        discardFiles.forEach(function (file) {
            // 丢弃的文件
            var err = new Error(_util2.errorCode.EXCEED_LIMIT);
            err.code = _util2.errorCode.EXCEED_LIMIT;
            _this2.onError(err, null, file);
        });

        if (!autoUpload) {
            uploadFiles.forEach(function (file) {
                var isPassed = afterSelect(file);
                _util.func.promiseCall(isPassed, _util.func.noop, function (error) {
                    _this2.onError(error, null, file); // TODO: handle error message
                });
            });
            _this2.onChange(value, uploadFiles);
        }
    };

    this.onDrop = function (files) {
        _this2.onSelect(files);
        _this2.props.onDrop(files);
    };

    this.replaceWithNewFile = function (old, current) {
        var newFile = (0, _util2.fileToObject)(current);
        newFile.state = 'selected';

        var matchKey = old.uid !== undefined ? 'uid' : 'name';

        var fileList = _this2.state.value;
        for (var i = 0; i < fileList.length; i++) {
            var item = fileList[i];
            if (item[matchKey] === old[matchKey]) {
                fileList.splice(i, 1, newFile);
                break;
            }
        }

        _this2.uploadFiles([newFile]);
        return newFile;
    };

    this.onProgress = function (e, file) {
        _this2.state.uploading = true;

        var value = _this2.state.value;
        var targetItem = (0, _util2.getFileItem)(file, value);

        if (!targetItem) {
            return;
        }

        (0, _extends3.default)(targetItem, {
            state: 'uploading',
            percent: e.percent
        });

        _this2.setState({
            value: value
        });

        _this2.props.onProgress(value, targetItem);
    };

    this.onSuccess = function (response, file) {
        var formatter = _this2.props.formatter;

        if (formatter) {
            response = formatter(response, file);
        }

        try {
            if (typeof response === 'string') {
                response = JSON.parse(response);
            }
        } catch (e) {
            e.code = _util2.errorCode.RESPONSE_FAIL;
            return _this2.onError(e, response, file);
        }

        if (response.success === false) {
            var err = new Error(response.message || _util2.errorCode.RESPONSE_FAIL);
            err.code = _util2.errorCode.RESPONSE_FAIL;
            return _this2.onError(err, response, file);
        }

        var value = _this2.state.value;
        var targetItem = (0, _util2.getFileItem)(file, value);

        if (!targetItem) {
            return;
        }

        (0, _extends3.default)(targetItem, {
            state: 'done',
            response: response,
            url: response.url,
            downloadURL: response.downloadURL || response.url // 下载地址(可选)
        });

        if (!_this2.props.useDataURL) {
            targetItem.imgURL = response.imgURL || response.url; // 缩略图地址(可选)
        }

        _this2.updateUploadingState();

        _this2.onChange(value, targetItem);
        _this2.props.onSuccess(targetItem, value);
    };

    this.onError = function (err, response, file) {
        var value = _this2.state.value;
        var targetItem = (0, _util2.getFileItem)(file, value);

        if (!targetItem) {
            return;
        }

        (0, _extends3.default)(targetItem, {
            state: 'error',
            error: err,
            response: response
        });

        _this2.updateUploadingState();

        _this2.onChange(value, targetItem);
        _this2.props.onError(targetItem, value);
    };

    this.removeFile = function (file) {
        file.state = 'removed';
        _this2.uploaderRef.abort(file); // 删除组件时调用组件的 `abort` 方法中断上传

        var fileList = _this2.state.value;
        var targetItem = (0, _util2.getFileItem)(file, fileList);
        var index = fileList.indexOf(targetItem);
        if (index !== -1) {
            fileList.splice(index, 1);
            _this2.onChange(fileList, targetItem);
        }
    };

    this.updateUploadingState = function () {
        var inProgress = _this2.state.value.some(function (i) {
            return i.state === 'uploading';
        });
        if (!inProgress) {
            _this2.state.uploading = false;
        }
    };

    this.abort = function (file) {
        var fileList = _this2.state.value;
        var targetItem = (0, _util2.getFileItem)(file, fileList);
        var index = fileList.indexOf(targetItem);
        if (index !== -1) {
            fileList.splice(index, 1);
            _this2.onChange(fileList, targetItem);
        }
        _this2.uploaderRef.abort(file); // 取消上传时调用组件的 `abort` 方法中断上传
    };

    this.onChange = function (value, file) {
        _this2.setState({
            value: value
        });
        _this2.props.onChange(value, file);
    };
}, _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(Upload);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(41);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;

/**
 * Upload.Selecter
 * @description [底层能力] 可自定义样式的文件选择器
 */

var Selecter = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Selecter, _React$Component);

    function Selecter() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Selecter);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onSelect = function (e) {
            var files = e.target.files;
            var filesArr = files.length ? Array.prototype.slice.call(files) : [files];

            filesArr.forEach(function (file) {
                file.uid = (0, _util2.uid)();
            });

            _this.props.onSelect(filesArr);
        }, _this.onClick = function () {
            var el = _this.fileRef;
            if (!el) {
                return;
            }
            // NOTE: 在 IE 下，el.value = '' 在 el.click() 之后，会触发 input[type=file] 两次 onChange
            el.value = '';
            el.click();
        }, _this.onKeyDown = function (e) {
            if (e.key === 'Enter') {
                _this.onClick();
            }
        }, _this.onDrop = function (e) {
            e.preventDefault();

            var files = e.dataTransfer.files;
            var filesArr = Array.prototype.slice.call(files);

            _this.props.onDrop(filesArr);
        }, _this.onDragOver = function (e) {
            e.preventDefault();
            _this.props.onDragOver(e);
        }, _this.saveFileRef = function (ref) {
            _this.fileRef = ref;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    /**
     * 点击上传按钮
     * @return {void}
     */

    /**
     * 键盘事件
     * @param  {SyntheticEvent} e
     * @return {void}
     */

    /**
     * 拖拽
     * @param  {SyntheticEvent} e
     * @return {void}
     */

    Selecter.prototype.render = function render() {
        var _props = this.props,
            accept = _props.accept,
            multiple = _props.multiple,
            capture = _props.capture,
            webkitdirectory = _props.webkitdirectory,
            children = _props.children,
            id = _props.id,
            disabled = _props.disabled,
            dragable = _props.dragable,
            style = _props.style,
            className = _props.className,
            name = _props.name;

        var events = {};
        if (!disabled) {
            events = (0, _extends3.default)({
                onClick: this.onClick,
                onKeyDown: this.onKeyDown,
                tabIndex: '0'
            }, dragable ? {
                onDrop: this.onDrop,
                onDragOver: this.onDragOver,
                onDragLeave: this.props.onDragLeave
            } : {});
        }

        var otherProps = {};
        if (webkitdirectory) {
            otherProps.webkitdirectory = '';
        }
        if (capture) {
            otherProps.capture = capture;
        }

        return _react2.default.createElement('div', (0, _extends3.default)({ role: 'application', style: style, className: className }, events), _react2.default.createElement('input', (0, _extends3.default)({}, otherProps, {
            type: 'file',
            name: name,
            id: id,
            ref: this.saveFileRef,
            style: { display: 'none' },
            accept: accept,
            'aria-hidden': true,
            multiple: multiple,
            onChange: this.onSelect,
            disabled: disabled
        })), children);
    };

    return Selecter;
}(_react2.default.Component), _class.propTypes = {
    id: _propTypes2.default.string,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string,
    /**
     * 是否禁用上传功能
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件
     */
    multiple: _propTypes2.default.bool,
    /**
     * 是否支持上传文件夹，仅在 chorme 下生效
     */
    webkitdirectory: _propTypes2.default.bool,
    /**
     * 调用系统设备媒体
     */
    capture: _propTypes2.default.string,
    /**
     * 是否支持拖拽上传，`ie10+` 支持。
     */
    dragable: _propTypes2.default.bool,
    /**
     * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)
     */
    accept: _propTypes2.default.string,
    /**
     * 文件选择回调
     */
    onSelect: _propTypes2.default.func,
    /**
     * 拖拽经过回调
     */
    onDragOver: _propTypes2.default.func,
    /**
     * 拖拽离开回调
     */
    onDragLeave: _propTypes2.default.func,
    /**
     * 拖拽完成回调
     */
    onDrop: _propTypes2.default.func,
    children: _propTypes2.default.node,
    name: _propTypes2.default.string
}, _class.defaultProps = {
    name: 'file',
    multiple: false,
    onSelect: noop,
    onDragOver: noop,
    onDragLeave: noop,
    onDrop: noop
}, _temp2);
Selecter.displayName = 'Selecter';
exports.default = Selecter;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _progress = __webpack_require__(99);

var _progress2 = _interopRequireDefault(_progress);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util2 = __webpack_require__(41);

var _transform = __webpack_require__(191);

var _transform2 = _interopRequireDefault(_transform);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

var _selecter = __webpack_require__(105);

var _selecter2 = _interopRequireDefault(_selecter);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var isIE9 = _util.env.ieVersion === 9;

var List = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(List, _Component);

    function List() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, List);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClose = function (file) {
            var _this$props = _this.props,
                onRemove = _this$props.onRemove,
                uploader = _this$props.uploader;

            var remove = onRemove(file);

            _util.func.promiseCall(remove, function () {
                uploader && uploader.removeFile(file);
            });
        }, _this.handleCancel = function (file) {
            var _this$props2 = _this.props,
                onCancel = _this$props2.onCancel,
                uploader = _this$props2.uploader;

            var cancel = onCancel(file);

            _util.func.promiseCall(cancel, function () {
                uploader && uploader.abort(file);
            });
        }, _this.onImageError = function (file, obj) {
            obj.onerror = null;
            _this.props.onImageError(obj, file);
        }, _this.onSelect = function (oldfile, files) {
            var uploader = _this.props.uploader;
            uploader && files.length && uploader.replaceWithNewFile(oldfile, files[0]);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    List.prototype.componentDidUpdate = function componentDidUpdate() {
        var _this2 = this;

        var _props = this.props,
            listType = _props.listType,
            useDataURL = _props.useDataURL,
            value = _props.value;

        if (listType !== 'image' && listType !== 'card') {
            return;
        }

        useDataURL && value.forEach(function (file) {
            if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File) || file.imgURL !== undefined) {
                return;
            }
            file.imgURL = '';
            (0, _util2.previewFile)(file.originFileObj, function (previewDataUrl) {
                file.imgURL = previewDataUrl;
                _this2.forceUpdate();
            });
        });
    };

    List.prototype.onPreview = function onPreview(file, e) {
        var onPreview = this.props.onPreview;

        if (!onPreview) {
            return;
        }
        // e.preventDefault();
        return onPreview(file, e);
    };

    List.prototype.getInfo = function getInfo(file) {
        var _classNames;

        var prefixCls = this.props.prefix + 'upload';
        var downloadURL = file.downloadURL || file.url;
        var imgURL = file.imgURL || file.url;
        var size = this.sizeCaculator(file.size);
        var itemCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefixCls + '-list-item'] = true, _classNames[prefixCls + '-list-item-' + file.state] = file.state, _classNames[prefixCls + '-list-item-error-with-msg'] = file.state === 'error' && file.errorMsg, _classNames));
        var alt = file.name || file.alt;
        return { prefixCls: prefixCls, downloadURL: downloadURL, imgURL: imgURL, size: size, itemCls: itemCls, alt: alt };
    };
    // transfer size from number to xx K/ XxxM / xxG


    List.prototype.sizeCaculator = function sizeCaculator(size) {
        var fileSize = parseFloat(size, 10);
        // fileSize为浮点数 用 < 0.000001 替代 === 0
        if (isNaN(fileSize) || fileSize < 0.0000001) {
            return 0;
        }
        var SIZE_SUFFIX = ['B', 'K', 'M', 'G', 'T', 'P'];
        var suffixIndex = 0;

        // 在Mac上实验发现 取1024造成显示的大小和实际大小不一致
        // 因为单位制不同 见 https://superuser.com/questions/938234/size-of-files-in-windows-os-its-kb-or-kb
        var BIT_NUMBER_SYSTEM = 1024;
        while (fileSize >= BIT_NUMBER_SYSTEM && suffixIndex < SIZE_SUFFIX.length) {
            suffixIndex++;
            fileSize /= BIT_NUMBER_SYSTEM;
        }

        var suffix = SIZE_SUFFIX[suffixIndex];
        fileSize = fileSize.toFixed(2);

        return '' + fileSize + suffix;
    };

    List.prototype.getTextList = function getTextList(file) {
        var _this3 = this;

        var _props2 = this.props,
            locale = _props2.locale,
            extraRender = _props2.extraRender,
            actionRender = _props2.actionRender,
            progressProps = _props2.progressProps,
            rtl = _props2.rtl,
            fileNameRender = _props2.fileNameRender,
            previewOnFileName = _props2.previewOnFileName;

        var _getInfo = this.getInfo(file),
            prefixCls = _getInfo.prefixCls,
            downloadURL = _getInfo.downloadURL,
            size = _getInfo.size,
            itemCls = _getInfo.itemCls;

        var onClick = function onClick() {
            return file.state === 'uploading' ? _this3.handleCancel(file) : _this3.handleClose(file);
        };
        var onKeyDown = function onKeyDown(e) {
            if (e.keyCode === _util.KEYCODE.ENTER) {
                onClick();
            }
        };
        return _react2.default.createElement('div', { className: itemCls, key: file.uid || file.name }, _react2.default.createElement('div', { className: prefixCls + '-list-item-name-wrap' }, _react2.default.createElement('a', {
            onClick: previewOnFileName ? this.onPreview.bind(this, file) : _util.func.noop,
            href: downloadURL,
            target: '_blank',
            style: { pointerEvents: downloadURL ? '' : 'none' },
            className: prefixCls + '-list-item-name'
        }, _react2.default.createElement('span', null, fileNameRender(file)), !!size && _react2.default.createElement('span', { className: prefixCls + '-list-item-size', dir: rtl ? 'rtl' : undefined }, '(', size, ')'), _react2.default.createElement('span', { className: prefixCls + '-extra' }, extraRender(file)))), file.state === 'uploading' ? _react2.default.createElement('div', { className: prefixCls + '-list-item-progress' }, _react2.default.createElement(_progress2.default, (0, _extends3.default)({
            size: 'medium',
            percent: file.percent,
            textRender: _util.func.noop,
            rtl: rtl
        }, progressProps))) : null, file.state === 'error' && file.errorMsg ? _react2.default.createElement('div', { className: prefixCls + '-list-item-error-msg' }, file.errorMsg) : null, _react2.default.createElement('span', { className: prefixCls + '-list-item-op' }, actionRender(file), this.props.closable ? _react2.default.createElement(_icon2.default, {
            type: 'close',
            size: 'large',
            role: 'button',
            'aria-label': locale.upload.delete,
            tabIndex: '0',
            onClick: onClick,
            onKeyDown: onKeyDown
        }) : null));
    };

    List.prototype.getImageList = function getImageList(file) {
        var _this4 = this;

        var _props3 = this.props,
            extraRender = _props3.extraRender,
            actionRender = _props3.actionRender,
            progressProps = _props3.progressProps,
            rtl = _props3.rtl,
            fileNameRender = _props3.fileNameRender,
            previewOnFileName = _props3.previewOnFileName;

        var _getInfo2 = this.getInfo(file),
            prefixCls = _getInfo2.prefixCls,
            downloadURL = _getInfo2.downloadURL,
            imgURL = _getInfo2.imgURL,
            size = _getInfo2.size,
            itemCls = _getInfo2.itemCls,
            alt = _getInfo2.alt;

        var img = null;

        var onClick = function onClick() {
            return file.state === 'uploading' ? _this4.handleCancel(file) : _this4.handleClose(file);
        };
        var onKeyDown = function onKeyDown(e) {
            if (e.keyCode === _util.KEYCODE.ENTER) {
                onClick();
            }
        };

        if (file.state === 'uploading' || file.state === 'selected' && !imgURL) {
            img = _react2.default.createElement(_icon2.default, { type: 'picture' });
        } else if (file.state === 'error') {
            img = _react2.default.createElement(_icon2.default, { type: 'cry' });
        } else {
            img = _react2.default.createElement('img', {
                src: imgURL,
                onError: this.onImageError.bind(this, file),
                tabIndex: '0',
                alt: alt,
                onClick: this.onPreview.bind(this, file)
            });
        }

        return _react2.default.createElement('div', { className: itemCls, key: file.uid || file.name }, _react2.default.createElement('div', { className: prefixCls + '-list-item-thumbnail' }, img), _react2.default.createElement('span', { className: prefixCls + '-list-item-op' }, actionRender(file), this.props.closable ? _react2.default.createElement(_icon2.default, {
            type: 'close',
            size: 'large',
            tabIndex: '0',
            role: 'button',
            onClick: onClick,
            onKeyDown: onKeyDown
        }) : null), _react2.default.createElement('a', {
            onClick: previewOnFileName ? this.onPreview.bind(this, file) : _util.func.noop,
            href: downloadURL,
            target: '_blank',
            style: { pointerEvents: downloadURL ? '' : 'none' },
            className: prefixCls + '-list-item-name'
        }, _react2.default.createElement('span', null, fileNameRender(file)), !!size && _react2.default.createElement('span', { className: prefixCls + '-list-item-size', dir: rtl ? 'rtl' : undefined }, '(', size, ')'), _react2.default.createElement('span', { className: prefixCls + '-extra' }, extraRender(file))), file.state === 'uploading' ? _react2.default.createElement('div', { className: prefixCls + '-list-item-progress' }, _react2.default.createElement(_progress2.default, (0, _extends3.default)({ size: 'medium', percent: file.percent, textRender: _util.func.noop }, progressProps))) : null, file.state === 'error' && file.errorMsg ? _react2.default.createElement('div', { className: prefixCls + '-list-item-error-msg' }, file.errorMsg) : null);
    };

    List.prototype.getPictureCardList = function getPictureCardList(file, isPreview) {
        var _this5 = this;

        var _props4 = this.props,
            locale = _props4.locale,
            progressProps = _props4.progressProps,
            fileNameRender = _props4.fileNameRender,
            itemRender = _props4.itemRender,
            showDownload = _props4.showDownload;

        var _getInfo3 = this.getInfo(file),
            prefixCls = _getInfo3.prefixCls,
            downloadURL = _getInfo3.downloadURL,
            imgURL = _getInfo3.imgURL,
            itemCls = _getInfo3.itemCls,
            alt = _getInfo3.alt;

        var state = isPreview ? '' : file.state;

        var img = null;

        if (state === 'uploading' || state === 'selected' && !imgURL) {
            img = _react2.default.createElement('div', { className: prefixCls + '-list-item-handler' }, _react2.default.createElement(_icon2.default, { type: 'picture' }), _react2.default.createElement(_button2.default, { text: true, onClick: function onClick() {
                    return _this5.handleCancel(file);
                } }, locale.card.cancel));
        } else if (state === 'error') {
            img = _react2.default.createElement('div', { className: prefixCls + '-list-item-handler' }, _react2.default.createElement(_icon2.default, { type: 'cry' }));
        } else {
            img = _react2.default.createElement('img', {
                src: imgURL,
                tabIndex: '0',
                alt: alt,
                onError: this.onImageError.bind(this, file),
                onClick: this.onPreview.bind(this, file)
            });
        }

        var onClose = function onClose() {
            return _this5.handleClose(file);
        };
        var onKeyDownClose = function onKeyDownClose(e) {
            if (e.keyCode === _util.KEYCODE.ENTER) {
                onClose();
            }
        };

        var item = null;
        if (state === 'uploading') {
            item = [_react2.default.createElement('div', { className: prefixCls + '-list-item-thumbnail', key: 'img' }, img), _react2.default.createElement('div', { className: prefixCls + '-list-item-progress', key: 'progress' }, _react2.default.createElement(_progress2.default, (0, _extends3.default)({ size: 'medium', percent: file.percent, textRender: _util.func.noop }, progressProps)))];
        } else {
            /* eslint-disable no-lonely-if */
            if (typeof itemRender === 'function') {
                // 不处理上传态和选择态，太过复杂
                item = itemRender(file, { remove: onClose });
            } else {
                var Uploader = this.props.uploader || { props: {} };
                var UploaderProps = Uploader.props;

                // TODO: 2.x 中逻辑会修改为，只要有showDownload，那就有下载按钮（不管有没有downloadURL）
                item = [_react2.default.createElement('div', { className: prefixCls + '-list-item-thumbnail', key: 'img' }, img), _react2.default.createElement('span', { key: 'tool', className: prefixCls + '-tool' }, state !== 'error' && showDownload && downloadURL ? _react2.default.createElement('a', {
                    href: downloadURL,
                    target: '_blank',
                    className: prefixCls + '-tool-item ' + prefixCls + '-tool-download-link'
                }, _react2.default.createElement(_icon2.default, {
                    type: 'download',
                    'aria-label': locale.card.download,
                    className: prefixCls + '-tool-download-icon'
                })) : null, this.props.reUpload && !isPreview && !isIE9 ? _react2.default.createElement(_selecter2.default, {
                    className: prefixCls + '-tool-item ' + prefixCls + '-tool-reupload',
                    accept: UploaderProps.accept,
                    name: UploaderProps.fileKeyName,
                    onSelect: this.onSelect.bind(this, file)
                }, _react2.default.createElement(_icon2.default, { type: 'edit', className: prefixCls + '-tool-reupload-icon' })) : null, this.props.closable && !isPreview ? _react2.default.createElement('span', { className: prefixCls + '-tool-item ' + prefixCls + '-tool-close' }, _react2.default.createElement(_icon2.default, {
                    type: 'ashbin',
                    'aria-label': locale.card.delete,
                    tabIndex: '0',
                    role: 'button',
                    onClick: onClose,
                    onKeyDown: onKeyDownClose
                })) : null)];
            }
        }

        return _react2.default.createElement('div', { className: itemCls, key: file.uid || file.name }, _react2.default.createElement('div', { className: prefixCls + '-list-item-wrapper' }, item), _react2.default.createElement('span', { className: prefixCls + '-list-item-name' }, fileNameRender(file)));
    };

    List.prototype.render = function render() {
        var _this6 = this,
            _classNames3;

        var _props5 = this.props,
            listType = _props5.listType,
            children = _props5.children,
            prefix = _props5.prefix,
            rtl = _props5.rtl,
            className = _props5.className,
            isPreview = _props5.isPreview;

        var prefixCls = prefix + 'upload';

        var list = [];
        if (isPreview) {
            var _classNames2;

            var previewCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));
            list = this.props.value.map(function (file) {
                if (!file) {
                    return null;
                }

                var downloadURL = file.downloadURL,
                    imgURL = file.imgURL,
                    name = file.name;

                if (listType === 'text') {
                    return _react2.default.createElement('div', { className: previewCls }, _react2.default.createElement('a', { href: downloadURL, target: '_blank' }, name));
                } else if (listType === 'image' || listType === 'card') {
                    return _this6.getPictureCardList(file, true);
                }
                return null;
            });
        } else {
            list = this.props.value.map(function (file) {
                if (!file) {
                    return null;
                }

                if (listType === 'text') {
                    return _this6.getTextList(file);
                } else if (listType === 'image') {
                    return _this6.getImageList(file);
                } else if (listType === 'card') {
                    return _this6.getPictureCardList(file);
                }
                return null;
            });
        }

        if (rtl && listType === 'card' && Array.isArray(list)) {
            list = list.reverse();
        }
        var _listType = isPreview && listType === 'image' ? 'card' : this.props.listType;
        var listclassNames = (0, _classnames2.default)((_classNames3 = {}, _classNames3[prefixCls + '-list'] = true, _classNames3[prefixCls + '-list-' + _listType] = true, _classNames3[prefixCls + '-ie9'] = isIE9, _classNames3), className);

        var others = _util.obj.pickAttrsWith(this.props, 'data-');
        return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: listclassNames, dir: rtl ? 'rtl' : undefined }), rtl ? children : list, rtl ? list : children);
    };

    return List;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 多语言
     */
    locale: _propTypes2.default.object,
    /**
     * 文件列表，数据格式请参考 文件对象
     */
    listType: _propTypes2.default.oneOf(['text', 'image', 'card']),
    /**
     * 文件列表
     */
    value: _propTypes2.default.array,
    closable: _propTypes2.default.bool,
    /**
     * 删除文件回调(支持Promise)
     */
    onRemove: _propTypes2.default.func,
    /**
     * 取消上传回调(支持Promise)
     */
    onCancel: _propTypes2.default.func,
    /**
     * 头像加载出错回调
     */
    onImageError: _propTypes2.default.func,
    /**
     * 点击图片回调
     */
    onPreview: _propTypes2.default.func,
    /**
     * 点击文件名时触发 onPreview
     */
    previewOnFileName: _propTypes2.default.bool,
    /**
     * 自定义额外渲染
     */
    extraRender: _propTypes2.default.func,
    /**
     * 自定义操作渲染
     */
    actionRender: _propTypes2.default.func,
    /**
     * 卡片自定义渲染（目前只支持 Card)
     * @param {Object} file 文件对象
     * @param {Object} {remove} remove:删除回调
     * @retuns {ReactNode} React元素
     */
    itemRender: _propTypes2.default.func,
    /**
     * 透传给Progress props
     */
    progressProps: _propTypes2.default.object,
    children: _propTypes2.default.node,
    uploader: _propTypes2.default.any,
    showDownload: _propTypes2.default.bool,
    /**
     * 可选参数，是否本地预览
     */
    useDataURL: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    isPreview: _propTypes2.default.bool,
    fileNameRender: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    listType: 'text',
    value: [],
    locale: _zhCn2.default.Upload,
    closable: false,
    showDownload: true,
    onRemove: _util.func.noop,
    onCancel: _util.func.noop,
    extraRender: _util.func.noop,
    actionRender: _util.func.noop,
    onImageError: _util.func.noop,
    progressProps: {},
    fileNameRender: function fileNameRender(file) {
        return file.name;
    },
    previewOnFileName: false
}, _temp2);

// Wrap <List> with <ConfigProvider> to avoid context missing if it is
// referenced by other internal modules.
// https://github.com/alibaba-fusion/next/blob/build/1.13.9/src/upload/upload.jsx#L521

List.displayName = 'List';
exports.default = _configProvider2.default.config(List, {
    componentName: 'Upload',
    transform: _transform2.default
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.error = undefined;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constant = __webpack_require__(108);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var error = exports.error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

function checkType(type) {
    return function (props, propName, componentName) {
        var value = props[propName];
        if (value) {
            if (!Array.isArray(value)) {
                value = [value];
            }

            if (!Array.isArray(type)) {
                type = [type];
            }

            if (!value.every(function (v) {
                return type.includes(typeof v === 'undefined' ? 'undefined' : (0, _typeof3.default)(v));
            })) {
                throw error(propName, componentName);
            }
        }
    };
}

var SharedPT = {
    date: function date(props, propName, componentName) {
        if (propName in props && !(0, _util.datejs)(props.propName).isValid()) {
            throw error(propName, componentName);
        }
    },
    value: function value(props, propName, componentName) {
        if (props[propName]) {
            var value = props[propName];

            if (props.type === _constant.TIME_PICKER_TYPE.RANGE && !Array.isArray(value)) {
                throw error(propName, componentName);
            } else if (!Array.isArray(value)) {
                value = [value];
            }

            if (!value.every(function (v) {
                return !v || (0, _util.datejs)(v).isValid() || typeof v === 'string';
            })) {
                throw error(propName, componentName);
            }
        }
    },

    format: checkType(['string', 'function']),
    inputValue: checkType('string'),
    placeholder: checkType('string'),
    readOnly: checkType('boolean'),
    disabled: checkType('boolean'),

    render: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    type: _propTypes2.default.oneOf(Object.values(_constant.TIME_PICKER_TYPE)),
    inputType: _propTypes2.default.oneOf(Object.values(_constant.TIME_INPUT_TYPE)),
    size: _propTypes2.default.oneOf(['small', 'medium', 'large'])
};

exports.default = SharedPT;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var TIME_PICKER_TYPE = exports.TIME_PICKER_TYPE = {
    TIME: 'time',
    RANGE: 'range'
};

var TIME_INPUT_TYPE = exports.TIME_INPUT_TYPE = {
    BEGIN: 0,
    END: 1
};

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _calendar = __webpack_require__(471);

var _calendar2 = _interopRequireDefault(_calendar);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_calendar2.default);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
exports.saveRef = exports.getClosest = exports.getMatches = exports.getPixels = exports.getOffset = exports.hasScroll = exports.scrollbar = exports.getNodeHozWhitespace = exports.setStyle = exports.getStyle = exports.matches = exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.hasDOM = void 0;
var string_1 = __webpack_require__(121);
var object_1 = __webpack_require__(37);
/**
 * 是否能使用 DOM 方法
 */
exports.hasDOM = typeof window !== 'undefined' && !!window.document && !!document.createElement;
/**
 * 节点是否包含指定 className
 *
 * @example
 * dom.hasClass(document.body, 'foo');
 */
function hasClass(node, className) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return false;
    }
    if (node.classList) {
        // @ts-expect-error fixme: className can be undefined, conflict with containes
        return node.classList.contains(className);
    } else {
        // @ts-expect-error fixme: className can be undefined, conflict with containes
        return node.className.indexOf(className) > -1;
    }
}
exports.hasClass = hasClass;
/**
 * 添加 className
 *
 * @example
 * dom.addClass(document.body, 'foo');
 */
function addClass(node, className, _force) {
    if (_force === void 0) {
        _force = false;
    }
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return;
    }
    if (node.classList) {
        node.classList.add(className);
    } else if (_force === true || !hasClass(node, className)) {
        node.className += " ".concat(className);
    }
}
exports.addClass = addClass;
/**
 * 移除 className
 *
 * @example
 * dom.removeClass(document.body, 'foo');
 */
function removeClass(node, className, _force) {
    if (_force === void 0) {
        _force = false;
    }
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return;
    }
    if (node.classList) {
        node.classList.remove(className);
    } else if (_force === true || hasClass(node, className)) {
        node.className = node.className.replace(className, '').replace(/\s+/g, ' ').trim();
    }
}
exports.removeClass = removeClass;
/**
 * 切换 className
 * @returns 执行后节点上是否还有此 className
 *
 * @example
 * dom.toggleClass(document.body, 'foo');
 */
function toggleClass(node, className) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return false;
    }
    if (node.classList) {
        return node.classList.toggle(className);
    } else {
        var flag = hasClass(node, className);
        flag ? removeClass(node, className, true) : addClass(node, className, true);
        return !flag;
    }
}
exports.toggleClass = toggleClass;
/**
 * 元素是否匹配 CSS 选择器
 * @param node - DOM 节点
 * @param selector - CSS 选择器
 *
 * @example
 * dom.matches(mountNode, '.container'); // boolean
 */
exports.matches = function () {
    var matchesFn = null;
    /* istanbul ignore else */
    if (exports.hasDOM) {
        var _body = document.body || document.head;
        matchesFn = _body.matches ? 'matches' : _body.webkitMatchesSelector ? 'webkitMatchesSelector' : _body.msMatchesSelector ? 'msMatchesSelector' : _body.mozMatchesSelector ? 'mozMatchesSelector' : null;
    }
    return function (node, selector) {
        if (!exports.hasDOM || !node) {
            return false;
        }
        // @ts-expect-error fixme: selector can be undefined, conflict with matches
        return matchesFn ? node[matchesFn](selector) : false;
    };
}();
/**
 * 获取元素计算后的样式
 */
function _getComputedStyle(node) {
    return node && node.nodeType === 1 ? window.getComputedStyle(node, null) : {};
}
var PIXEL_PATTERN = /margin|padding|width|height|max|min|offset|size|top/i;
var removePixel = { left: 1, top: 1, right: 1, bottom: 1 };
/**
 * 校验并修正元素的样式属性值
 */
function _getStyleValue(node, type, value) {
    type = type.toLowerCase();
    if (value === 'auto') {
        if (type === 'height') {
            return node.offsetHeight || 0;
        }
        if (type === 'width') {
            return node.offsetWidth || 0;
        }
    }
    if (!(type in removePixel)) {
        // 属性值是否需要去掉 px 单位，这里假定此类的属性值都是 px 为单位的
        removePixel[type] = PIXEL_PATTERN.test(type);
    }
    return removePixel[type] ? parseFloat(value) || 0 : value;
}
var floatMap = { cssFloat: 1, styleFloat: 1, float: 1 };
/**
 * 获取元素计算后的样式
 * @param node - DOM 节点
 * @param name - 属性名
 */
function getStyle(node, name) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return null;
    }
    var style = _getComputedStyle(node);
    // 如果不指定属性名，则返回全部值
    if (!name) {
        return style;
    }
    // if style is {}(e.g. node isn't a element node), return null
    if ((0, object_1.isPlainObject)(style)) {
        return null;
    }
    name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;
    return _getStyleValue(node, name, style.getPropertyValue((0, string_1.hyphenate)(name)) || node.style[(0, string_1.camelcase)(name)]);
}
exports.getStyle = getStyle;
/**
 * 设置元素的样式
 * @param node - DOM 节点
 * @param name - 属性名，或者是一个对象，包含多个属性
 * @param value - 属性值
 *
 * @example
 * // 设置单个属性值
 * dom.setStyle(mountNode, 'width', 100);
 * // 设置多条属性值
 * dom.setStyle(mountNode, \{
 *     width: 100,
 *     height: 200
 * \});
 */
function setStyle(node, name, value) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !node) {
        return false;
    }
    // 批量设置多个值
    if ((typeof name === "undefined" ? "undefined" : (0, _typeof3.default)(name)) === 'object' && arguments.length === 2) {
        (0, object_1.each)(name, function (val, key) {
            return setStyle(node, key, val);
        });
    } else {
        name = floatMap[name] ? 'cssFloat' in node.style ? 'cssFloat' : 'styleFloat' : name;
        if (typeof value === 'number' && PIXEL_PATTERN.test(name)) {
            value = "".concat(value, "px");
        }
        node.style[(0, string_1.camelcase)(name)] = value; // IE8 support
    }
}
exports.setStyle = setStyle;
function getNodeHozWhitespace(node) {
    var paddingLeft = getStyle(node, 'paddingLeft');
    var paddingRight = getStyle(node, 'paddingRight');
    var marginLeft = getStyle(node, 'marginLeft');
    var marginRight = getStyle(node, 'marginRight');
    return paddingLeft + paddingRight + marginLeft + marginRight;
}
exports.getNodeHozWhitespace = getNodeHozWhitespace;
var isScrollDisplay = function isScrollDisplay(element) {
    try {
        var scrollbarStyle = window.getComputedStyle(element, '::-webkit-scrollbar');
        return !scrollbarStyle || scrollbarStyle.getPropertyValue('display') !== 'none';
    } catch (e) {
        // ignore error for firefox
    }
    return true;
};
/**
 * 获取默认的滚动条大小（通过创造一个滚动元素，读取滚动元素的滚动条信息）
 */
function scrollbar() {
    var scrollDiv = document.createElement('div');
    scrollDiv.className += 'just-to-get-scrollbar-size';
    setStyle(scrollDiv, {
        position: 'absolute',
        width: '100px',
        height: '100px',
        overflow: 'scroll',
        top: '-9999px'
    });
    document.body && document.body.appendChild(scrollDiv);
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;
    document.body.removeChild(scrollDiv);
    return {
        width: scrollbarWidth,
        height: scrollbarHeight
    };
}
exports.scrollbar = scrollbar;
function hasScroll(containerNode) {
    // 当元素带有 overflow: hidden 一定没有滚动条
    var overflow = getStyle(containerNode, 'overflow');
    if (overflow === 'hidden') {
        return false;
    }
    var parentNode = containerNode.parentNode;
    return parentNode && parentNode.scrollHeight > parentNode.clientHeight && scrollbar().width > 0 && isScrollDisplay(parentNode) && isScrollDisplay(containerNode);
}
exports.hasScroll = hasScroll;
/**
 * 获取元素距离视口顶部和左边的偏移距离
 */
function getOffset(node) {
    var rect = node.getBoundingClientRect();
    var win = node.ownerDocument.defaultView;
    return {
        top: rect.top + win.pageYOffset,
        left: rect.left + win.pageXOffset
    };
}
exports.getOffset = getOffset;
/**
 * 获取不同单位转为 number 的长度
 * @param len - 传入的长度
 * @returns pixels
 */
function getPixels(len) {
    var win = document.defaultView;
    if (typeof +len === 'number' && !isNaN(+len)) {
        return +len;
    }
    if (typeof len === 'string') {
        var PX_REG = /(\d+)px/;
        var VH_REG = /(\d+)vh/;
        if (Array.isArray(len.match(PX_REG))) {
            return +len.match(PX_REG)[1] || 0;
        }
        if (Array.isArray(len.match(VH_REG))) {
            var _1vh = win.innerHeight / 100;
            return +(len.match(VH_REG)[1] * _1vh) || 0;
        }
    }
    return 0;
}
exports.getPixels = getPixels;
/**
 * 如果元素被指定的选择器字符串选择，getMatches()  方法返回 true; 否则返回 false
 * @param dom - 待匹配的元素
 * @param selecotr - 选择器
 * @returns parent
 */
function getMatches(dom, selector) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !dom) {
        return null;
    }
    /* istanbul ignore if */
    if (Element.prototype.matches) {
        return dom.matches(selector);
    } else if (Element.prototype.msMatchesSelector) {
        return dom.msMatchesSelector(selector);
    } else if (Element.prototype.webkitMatchesSelector) {
        return dom.webkitMatchesSelector(selector);
    }
    return null;
}
exports.getMatches = getMatches;
/**
 * 匹配特定选择器且离当前元素最近的祖先元素（也可以是当前元素本身），如果匹配不到，则返回 null
 * @param dom - 待匹配的元素
 * @param selecotr - 选择器
 * @returns parent
 */
function getClosest(dom, selector) {
    /* istanbul ignore if */
    if (!exports.hasDOM || !dom) {
        return null;
    }
    // ie9
    /* istanbul ignore if */
    if (!Element.prototype.closest) {
        if (!document.documentElement.contains(dom)) return null;
        do {
            if (getMatches(dom, selector)) return dom;
            dom = dom.parentElement;
        } while (dom !== null);
    } else {
        return dom.closest(selector);
    }
    return null;
}
exports.getClosest = getClosest;
function saveRef(ref) {
    if (!ref) {
        return null;
    }
    return function (element) {
        if (typeof ref === 'string') {
            throw new Error("can not set ref string for ".concat(ref));
        } else if (typeof ref === 'function') {
            ref(element);
        } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {
            ref.current = element;
        }
    };
}
exports.saveRef = saveRef;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(53);
var $export = __webpack_require__(32);
var redefine = __webpack_require__(115);
var hide = __webpack_require__(33);
var Iterators = __webpack_require__(73);
var $iterCreate = __webpack_require__(209);
var setToStringTag = __webpack_require__(78);
var getPrototypeOf = __webpack_require__(215);
var ITERATOR = __webpack_require__(36)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(208);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(27) && !__webpack_require__(46)(function () {
  return Object.defineProperty(__webpack_require__(114)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(34);
var document = __webpack_require__(25).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(33);


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(29);
var toIObject = __webpack_require__(35);
var arrayIndexOf = __webpack_require__(211)(false);
var IE_PROTO = __webpack_require__(75)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(118);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 118 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(116);
var hiddenKeys = __webpack_require__(77).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(57);
var createDesc = __webpack_require__(54);
var toIObject = __webpack_require__(35);
var toPrimitive = __webpack_require__(72);
var has = __webpack_require__(29);
var IE8_DOM_DEFINE = __webpack_require__(113);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(27) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.template = exports.hyphenate = exports.camelcase = void 0;
var log_1 = __webpack_require__(83);
var object_1 = __webpack_require__(37);
/**
 * 将字符串转化为驼峰式写法
 * @param str - 例：-webkit-transition
 * @returns 例：WebkitTransition
 */
function camelcase(str) {
    if (!/-/.test(str)) {
        return str || '';
    }
    return str.toLowerCase().replace(/-([a-z])/g, function ($0, $1) {
        return $1.toUpperCase();
    });
}
exports.camelcase = camelcase;
/**
 * 将驼峰式字符串转化为连字符写法
 * @param str - 例：WebkitTransition
 * @returns 例：-webkit-transition
 */
function hyphenate(str) {
    var strType = (0, object_1.typeOf)(str);
    if (strType !== 'String') {
        (0, log_1.warning)('[ hyphenate(str: string): string ] ' + "Expected arguments[0] to be a string but get a ".concat(strType, ".") + 'It will return an empty string without any processing.');
        return '';
    }
    return str.replace(/([A-Z])/g, function ($0) {
        return "-".concat($0.toLowerCase());
    });
}
exports.hyphenate = hyphenate;
/**
 * 替换模板字符串
 * @param tpl - 例：当前\{current\}, 共\{total\}页
 * @param object - 例：\{current: 1, total: 9\}
 */
function template(tpl, object) {
    if (object === void 0) {
        object = {};
    }
    var tplType = (0, object_1.typeOf)(tpl);
    if (tplType !== 'String') {
        (0, log_1.warning)('[ template(tpl: string, object: object): string ] ' + "Expected arguments[0] to be a string but get a ".concat(tplType, ".") + 'It will return an empty string without any processing.');
        return '';
    }
    return tpl.replace(/\{[a-z]*\}/g, function (str) {
        var key = str.substring(1, str.length - 1);
        return object[key] || '';
    });
}
exports.template = template;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.isProduction = exports.ieVersion = void 0;
/**
 * IE 浏览器的渲染引擎版本号
 * 注意：此属性与浏览器版本号不同，IE 的渲染引擎版本号是可以通过 HTML header 或手动设置去更改的
 * 6 ~ 11
 */
exports.ieVersion = typeof document !== 'undefined' ? document.documentMode : undefined;
/**
 * 判断是否是生产环境
 */
var isProduction = function isProduction() {
    var PRODUCTION_ENV = 'production';
    var result = false;
    try {
        if ("production" === PRODUCTION_ENV) {
            result = true;
        }
    } catch (err) {
        //
    }
    return result;
};
exports.isProduction = isProduction;
exports.default = {
    ieVersion: exports.ieVersion,
    isProduction: exports.isProduction
};

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",c="month",f="quarter",h="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p="$isDayjsObject",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f="set"+(this.$u?"UTC":""),l=(n={},n[a]=f+"Date",n[d]=f+"Date",n[c]=f+"Month",n[h]=f+"FullYear",n[u]=f+"Hours",n[s]=f+"Minutes",n[i]=f+"Seconds",n[r]=f+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,"0")},$=f||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case"YY":return String(e.$y).slice(-2);case"YYYY":return b.s(e.$y,4,"0");case"M":return a+1;case"MM":return b.s(a+1,2,"0");case"MMM":return h(n.monthsShort,a,c,3);case"MMMM":return h(c,a);case"D":return e.$D;case"DD":return b.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return h(n.weekdaysMin,e.$W,o,2);case"ddd":return h(n.weekdaysShort,e.$W,o,3);case"dddd":return o[e.$W];case"H":return String(s);case"HH":return b.s(s,2,"0");case"h":return d(1);case"hh":return d(2);case"a":return $(s,u,!0);case"A":return $(s,u,!1);case"m":return String(u);case"mm":return b.s(u,2,"0");case"s":return String(e.$s);case"ss":return b.s(e.$s,2,"0");case"SSS":return b.s(e.$ms,3,"0");case"Z":return i}return null}(t)||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",c],["$y",h],["$D",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    BACKSPACE: 8,
    TAB: 9,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESC: 27,
    SPACE: 32,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    // version 0.x
    ESCAPE: 27,
    LEFT_ARROW: 37,
    UP_ARROW: 38,
    RIGHT_ARROW: 39,
    DOWN_ARROW: 40,
    // MacOS
    CONTROL: 17,
    OPTION: 18,
    CMD: 91,
    COMMAND: 91,
    DELETE: 8
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.guid = void 0;
var timestamp = Date.now();
/**
 * 生成全局唯一的 id
 * @param prefix - 前缀字符串，默认为空串
 *
 * @example
 * guid(); // j7jv509c
 * guid('prefix-'); // prefix-j7jv509d
 */
function guid(prefix) {
  prefix = prefix || '';
  return prefix + (timestamp++).toString(36);
}
exports.guid = guid;
exports.default = guid;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
/**
 *
 * @param input - ErrorBoundaryType
 * @returns typeof obj.open === 'boolean'
 */
function parseBoundary(input) {
    var obj;
    if (input === undefined || input === null) {
        return {};
    } else if (typeof input === 'boolean') {
        obj = { open: input };
    } else {
        obj = tslib_1.__assign({ open: true }, input);
    }
    return obj;
}
function getContextProps(props, context, displayName) {
    var prefix = props.prefix,
        locale = props.locale,
        pure = props.pure,
        rtl = props.rtl,
        device = props.device,
        popupContainer = props.popupContainer,
        errorBoundary = props.errorBoundary;
    var nextPrefix = context.nextPrefix,
        nextLocale = context.nextLocale,
        nextDefaultPropsConfig = context.nextDefaultPropsConfig,
        nextPure = context.nextPure,
        nextWarning = context.nextWarning,
        nextRtl = context.nextRtl,
        nextDevice = context.nextDevice,
        nextPopupContainer = context.nextPopupContainer,
        nextErrorBoundary = context.nextErrorBoundary;
    var newPrefix = prefix || nextPrefix;
    var localeFromContext;
    var newDisplayName = displayName;
    switch (displayName) {
        case 'DatePicker2':
            newDisplayName = 'DatePicker';
            break;
        case 'Calendar2':
            newDisplayName = 'Calendar';
            break;
        case 'TimePicker2':
            newDisplayName = 'TimePicker';
            break;
        default:
            break;
    }
    if (nextLocale) {
        localeFromContext = nextLocale[newDisplayName];
        if (localeFromContext) {
            localeFromContext.momentLocale = nextLocale.momentLocale;
        }
    }
    var newLocale;
    if (locale) {
        newLocale = util_1.obj.deepMerge({}, zh_cn_1.default[newDisplayName], localeFromContext, locale);
    } else if (localeFromContext) {
        newLocale = util_1.obj.deepMerge({}, zh_cn_1.default[newDisplayName], localeFromContext);
    }
    var newPure = typeof pure === 'boolean' ? pure : nextPure;
    var newRtl = typeof rtl === 'boolean' ? rtl : nextRtl;
    // ProtoType of [nextE|e]rrorBoundary can be one of [boolean, object]
    // but typeof newErrorBoundary === 'object'
    // newErrorBoundary should always have the key 'open', which indicates ErrorBoundary on or off
    var newErrorBoundary = tslib_1.__assign(tslib_1.__assign({}, parseBoundary(nextErrorBoundary)), parseBoundary(errorBoundary));
    if (!('open' in newErrorBoundary)) {
        newErrorBoundary.open = false;
    }
    return {
        prefix: newPrefix,
        locale: newLocale,
        pure: newPure,
        rtl: newRtl,
        warning: nextWarning,
        defaultPropsConfig: nextDefaultPropsConfig || {},
        device: device || nextDevice || undefined,
        popupContainer: popupContainer || nextPopupContainer,
        errorBoundary: newErrorBoundary
    };
}
exports.default = getContextProps;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
function DefaultUI() {
    // fixme: string is not a valid react component return type
    return '';
}
DefaultUI.propTypes = {
    error: prop_types_1.default.object,
    errorInfo: prop_types_1.default.object
};
var ErrorBoundary = /** @class */function (_super) {
    tslib_1.__extends(ErrorBoundary, _super);
    function ErrorBoundary(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { error: null, errorInfo: null };
        return _this;
    }
    ErrorBoundary.prototype.componentDidCatch = function (error, errorInfo) {
        this.setState({
            error: error,
            errorInfo: errorInfo
        });
        var afterCatch = this.props.afterCatch;
        if (typeof afterCatch === 'function') {
            afterCatch(error, errorInfo);
        }
    };
    ErrorBoundary.prototype.render = function () {
        var _a = this.props.fallbackUI,
            FallbackUI = _a === void 0 ? DefaultUI : _a;
        if (this.state.errorInfo) {
            return react_1.default.createElement(FallbackUI, { error: this.state.error, errorInfo: this.state.errorInfo });
        }
        // Normally, just render children
        return this.props.children;
    };
    ErrorBoundary.propTypes = {
        children: prop_types_1.default.element,
        afterCatch: prop_types_1.default.func,
        fallbackUI: prop_types_1.default.func
    };
    return ErrorBoundary;
}(react_1.Component);
exports.default = ErrorBoundary;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_transition_group_1 = __webpack_require__(85);
var child_1 = tslib_1.__importDefault(__webpack_require__(263));
var noop = function noop() {};
var FirstChild = function FirstChild(props) {
    var childrenArray = react_1.default.Children.toArray(props.children);
    return childrenArray[0] || null;
};
/**
 * Animate
 */
var Animate = /** @class */function (_super) {
    tslib_1.__extends(Animate, _super);
    function Animate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Animate.prototype.normalizeNames = function (names) {
        if (typeof names === 'string') {
            return {
                appear: "".concat(names, "-appear"),
                appearActive: "".concat(names, "-appear-active"),
                enter: "".concat(names, "-enter"),
                enterActive: "".concat(names, "-enter-active"),
                leave: "".concat(names, "-leave"),
                leaveActive: "".concat(names, "-leave-active")
            };
        }
        if ((typeof names === "undefined" ? "undefined" : (0, _typeof3.default)(names)) === 'object') {
            return {
                appear: names.appear,
                appearActive: "".concat(names.appear, "-active"),
                enter: "".concat(names.enter),
                enterActive: "".concat(names.enter, "-active"),
                leave: "".concat(names.leave),
                leaveActive: "".concat(names.leave, "-active")
            };
        }
    };
    Animate.prototype.render = function () {
        var _this = this;
        var _a = this.props,
            animation = _a.animation,
            children = _a.children,
            animationAppear = _a.animationAppear,
            singleMode = _a.singleMode,
            component = _a.component,
            beforeAppear = _a.beforeAppear,
            onAppear = _a.onAppear,
            afterAppear = _a.afterAppear,
            beforeEnter = _a.beforeEnter,
            onEnter = _a.onEnter,
            afterEnter = _a.afterEnter,
            beforeLeave = _a.beforeLeave,
            onLeave = _a.onLeave,
            afterLeave = _a.afterLeave,
            others = tslib_1.__rest(_a, ["animation", "children", "animationAppear", "singleMode", "component", "beforeAppear", "onAppear", "afterAppear", "beforeEnter", "onEnter", "afterEnter", "beforeLeave", "onLeave", "afterLeave"]);
        var animateChildren = react_1.Children.map(children, function (child) {
            return react_1.default.createElement(child_1.default, { key: child === null || child === void 0 ? void 0 : child.key, names: _this.normalizeNames(animation), onAppear: beforeAppear, onAppearing: onAppear, onAppeared: afterAppear, onEnter: beforeEnter, onEntering: onEnter, onEntered: afterEnter, onExit: beforeLeave, onExiting: onLeave, onExited: afterLeave }, child);
        });
        return react_1.default.createElement(react_transition_group_1.TransitionGroup, tslib_1.__assign({ appear: animationAppear, component: singleMode ? FirstChild : component }, others), animateChildren);
    };
    Animate.displayName = 'Animate';
    Animate.propTypes = {
        animation: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),
        animationAppear: prop_types_1.default.bool,
        component: prop_types_1.default.any,
        singleMode: prop_types_1.default.bool,
        children: prop_types_1.default.oneOfType([prop_types_1.default.element, prop_types_1.default.arrayOf(prop_types_1.default.element)]),
        beforeAppear: prop_types_1.default.func,
        onAppear: prop_types_1.default.func,
        afterAppear: prop_types_1.default.func,
        beforeEnter: prop_types_1.default.func,
        onEnter: prop_types_1.default.func,
        afterEnter: prop_types_1.default.func,
        beforeLeave: prop_types_1.default.func,
        onLeave: prop_types_1.default.func,
        afterLeave: prop_types_1.default.func
    };
    Animate.defaultProps = {
        animationAppear: true,
        component: 'div',
        singleMode: true,
        beforeAppear: noop,
        onAppear: noop,
        afterAppear: noop,
        beforeEnter: noop,
        onEnter: noop,
        afterEnter: noop,
        beforeLeave: noop,
        onLeave: noop,
        afterLeave: noop
    };
    return Animate;
}(react_1.Component);
exports.default = Animate;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(1));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactDom = _interopRequireDefault(__webpack_require__(13));

var _reactLifecyclesCompat = __webpack_require__(11);

var _PropTypes = __webpack_require__(130);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var UNMOUNTED = 'unmounted';
exports.UNMOUNTED = UNMOUNTED;
var EXITED = 'exited';
exports.EXITED = EXITED;
var ENTERING = 'entering';
exports.ENTERING = ENTERING;
var ENTERED = 'entered';
exports.ENTERED = ENTERED;
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

exports.EXITING = EXITING;

var Transition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(Transition, _React$Component);

  function Transition(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;

    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }

    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }

  var _proto = Transition.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: null // allows for nested Transitions

    };
  };

  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;

    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }

    return null;
  }; // getSnapshotBeforeUpdate(prevProps) {
  //   let nextStatus = null
  //   if (prevProps !== this.props) {
  //     const { status } = this.state
  //     if (this.props.in) {
  //       if (status !== ENTERING && status !== ENTERED) {
  //         nextStatus = ENTERING
  //       }
  //     } else {
  //       if (status === ENTERING || status === ENTERED) {
  //         nextStatus = EXITING
  //       }
  //     }
  //   }
  //   return { nextStatus }
  // }


  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;

    if (prevProps !== this.props) {
      var status = this.state.status;

      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }

    this.updateStatus(false, nextStatus);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };

  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;

    if (timeout != null && typeof timeout !== 'number') {
      exit = timeout.exit;
      enter = timeout.enter; // TODO: remove fallback for next major

      appear = timeout.appear !== undefined ? timeout.appear : enter;
    }

    return {
      exit: exit,
      enter: enter,
      appear: appear
    };
  };

  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }

    if (nextStatus !== null) {
      // nextStatus will always be ENTERING or EXITING.
      this.cancelNextCallback();

      var node = _reactDom.default.findDOMNode(this);

      if (nextStatus === ENTERING) {
        this.performEnter(node, mounting);
      } else {
        this.performExit(node);
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };

  _proto.performEnter = function performEnter(node, mounting) {
    var _this2 = this;

    var enter = this.props.enter;
    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
    // if we are mounting and running this it means appear _must_ be set

    if (!mounting && !enter) {
      this.safeSetState({
        status: ENTERED
      }, function () {
        _this2.props.onEntered(node);
      });
      return;
    }

    this.props.onEnter(node, appearing);
    this.safeSetState({
      status: ENTERING
    }, function () {
      _this2.props.onEntering(node, appearing);

      _this2.onTransitionEnd(node, enterTimeout, function () {
        _this2.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(node, appearing);
        });
      });
    });
  };

  _proto.performExit = function performExit(node) {
    var _this3 = this;

    var exit = this.props.exit;
    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

    if (!exit) {
      this.safeSetState({
        status: EXITED
      }, function () {
        _this3.props.onExited(node);
      });
      return;
    }

    this.props.onExit(node);
    this.safeSetState({
      status: EXITING
    }, function () {
      _this3.props.onExiting(node);

      _this3.onTransitionEnd(node, timeouts.exit, function () {
        _this3.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(node);
        });
      });
    });
  };

  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };

  _proto.safeSetState = function safeSetState(nextState, callback) {
    // This shouldn't be necessary, but there are weird race conditions with
    // setState callbacks and unmounting in testing, so always make sure that
    // we can cancel any pending setState callbacks after we unmount.
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };

  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;

    var active = true;

    this.nextCallback = function (event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };

    this.nextCallback.cancel = function () {
      active = false;
    };

    return this.nextCallback;
  };

  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
    this.setNextCallback(handler);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }

    if (this.props.addEndListener) {
      this.props.addEndListener(node, this.nextCallback);
    }

    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };

  _proto.render = function render() {
    var status = this.state.status;

    if (status === UNMOUNTED) {
      return null;
    }

    var _this$props = this.props,
        children = _this$props.children,
        childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]); // filter props for Transtition


    delete childProps.in;
    delete childProps.mountOnEnter;
    delete childProps.unmountOnExit;
    delete childProps.appear;
    delete childProps.enter;
    delete childProps.exit;
    delete childProps.timeout;
    delete childProps.addEndListener;
    delete childProps.onEnter;
    delete childProps.onEntering;
    delete childProps.onEntered;
    delete childProps.onExit;
    delete childProps.onExiting;
    delete childProps.onExited;

    if (typeof children === 'function') {
      return children(status, childProps);
    }

    var child = _react.default.Children.only(children);

    return _react.default.cloneElement(child, childProps);
  };

  return Transition;
}(_react.default.Component);

Transition.contextTypes = {
  transitionGroup: PropTypes.object
};
Transition.childContextTypes = {
  transitionGroup: function transitionGroup() {}
};
Transition.propTypes =  false ? {
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,

  /**
   * Show the component; triggers the enter or exit states
   */
  in: PropTypes.bool,

  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: PropTypes.bool,

  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: PropTypes.bool,

  /**
   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
   * If you want to transition on the first mount set `appear` to `true`, and the
   * component will transition in as soon as the `<Transition>` mounts.
   *
   * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
   */
  appear: PropTypes.bool,

  /**
   * Enable or disable enter transitions.
   */
  enter: PropTypes.bool,

  /**
   * Enable or disable exit transitions.
   */
  exit: PropTypes.bool,

  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = _PropTypes.timeoutsShape;
    if (!props.addEndListener) pt = pt.isRequired;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return pt.apply(void 0, [props].concat(args));
  },

  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. **Note:** Timeouts are still used as a fallback if provided.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: PropTypes.func,

  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: PropTypes.func,

  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: PropTypes.func,

  /**
   * Callback fired before the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: PropTypes.func,

  /**
   * Callback fired after the "exiting" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: PropTypes.func,

  /**
   * Callback fired after the "exited" status is applied.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: PropTypes.func // Name the function so it is clearer in the documentation

} : {};

function noop() {}

Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = 0;
Transition.EXITED = 1;
Transition.ENTERING = 2;
Transition.ENTERED = 3;
Transition.EXITING = 4;

var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

exports.default = _default;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.classNamesShape = exports.timeoutsShape = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(1));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var timeoutsShape =  false ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
  enter: _propTypes.default.number,
  exit: _propTypes.default.number,
  appear: _propTypes.default.number
}).isRequired]) : null;
exports.timeoutsShape = timeoutsShape;
var classNamesShape =  false ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  enter: _propTypes.default.string,
  exit: _propTypes.default.string,
  active: _propTypes.default.string
}), _propTypes.default.shape({
  enter: _propTypes.default.string,
  enterDone: _propTypes.default.string,
  enterActive: _propTypes.default.string,
  exit: _propTypes.default.string,
  exitDone: _propTypes.default.string,
  exitActive: _propTypes.default.string
})]) : null;
exports.classNamesShape = classNamesShape;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(1));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactLifecyclesCompat = __webpack_require__(11);

var _ChildMapping = __webpack_require__(262);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var values = Object.values || function (obj) {
  return Object.keys(obj).map(function (k) {
    return obj[k];
  });
};

var defaultProps = {
  component: 'div',
  childFactory: function childFactory(child) {
    return child;
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

};

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(TransitionGroup, _React$Component);

  function TransitionGroup(props, context) {
    var _this;

    _this = _React$Component.call(this, props, context) || this;

    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear


    _this.state = {
      handleExited: handleExited,
      firstRender: true
    };
    return _this;
  }

  var _proto = TransitionGroup.prototype;

  _proto.getChildContext = function getChildContext() {
    return {
      transitionGroup: {
        isMounting: !this.appeared
      }
    };
  };

  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
    this.mounted = true;
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender;
    return {
      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };

  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
    if (child.key in currentChildMapping) return;

    if (child.props.onExited) {
      child.props.onExited(node);
    }

    if (this.mounted) {
      this.setState(function (state) {
        var children = _extends({}, state.children);

        delete children[child.key];
        return {
          children: children
        };
      });
    }
  };

  _proto.render = function render() {
    var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);

    var children = values(this.state.children).map(childFactory);
    delete props.appear;
    delete props.enter;
    delete props.exit;

    if (Component === null) {
      return children;
    }

    return _react.default.createElement(Component, props, children);
  };

  return TransitionGroup;
}(_react.default.Component);

TransitionGroup.childContextTypes = {
  transitionGroup: _propTypes.default.object.isRequired
};
TransitionGroup.propTypes =  false ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: _propTypes.default.any,

  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: _propTypes.default.node,

  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: _propTypes.default.bool,

  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: _propTypes.default.bool,

  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: _propTypes.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;

var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);

exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _manager = __webpack_require__(276);

var _manager2 = _interopRequireDefault(_manager);

var _gateway = __webpack_require__(133);

var _gateway2 = _interopRequireDefault(_gateway);

var _position = __webpack_require__(134);

var _position2 = _interopRequireDefault(_position);

var _findNode = __webpack_require__(59);

var _findNode2 = _interopRequireDefault(_findNode);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var saveLastFocusNode = _util.focus.saveLastFocusNode,
    getFocusNodeList = _util.focus.getFocusNodeList,
    backLastFocusNode = _util.focus.backLastFocusNode;
var makeChain = _util.func.makeChain,
    noop = _util.func.noop,
    bindCtx = _util.func.bindCtx;

var getContainerNode = function getContainerNode(props) {
    var targetNode = (0, _findNode2.default)(props.target);
    return (0, _findNode2.default)(props.container, targetNode);
};

var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
var getStyleProperty = function getStyleProperty(node, name) {
    var style = window.getComputedStyle(node);
    var ret = '';
    for (var i = 0; i < prefixes.length; i++) {
        ret = style.getPropertyValue(prefixes[i] + name);
        if (ret) {
            break;
        }
    }
    return ret;
};

// 存 containerNode 信息
var containerNodeList = [];

/**
 * Overlay
 */
var Overlay = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Overlay, _Component);

    function Overlay(props) {
        (0, _classCallCheck3.default)(this, Overlay);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.saveContentRef = function (ref) {
            _this.contentRef = ref;
        };

        _this.saveGatewayRef = function (ref) {
            _this.gatewayRef = ref;
        };

        _this.lastAlign = props.align;

        bindCtx(_this, ['handlePosition', 'handleAnimateEnd', 'handleDocumentKeyDown', 'handleDocumentClick', 'handleMaskClick', 'beforeOpen', 'beforeClose']);

        _this.state = {
            visible: false,
            status: 'none',
            animation: _this.getAnimation(props),
            willOpen: false,
            willClose: false
        };

        _this.timeoutMap = {};
        return _this;
    }

    Overlay.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var willOpen = !prevState.visible && nextProps.visible;
        var willClose = prevState.visible && !nextProps.visible;

        var nextState = {
            willOpen: willOpen,
            willClose: willClose
        };

        if (willOpen) {
            nextProps.beforeOpen && nextProps.beforeOpen();
        } else if (willClose) {
            nextProps.beforeClose && nextProps.beforeClose();
        }

        if (nextProps.animation || nextProps.animation === false) {
            nextState.animation = nextProps.animation;
        }

        if (nextProps.animation !== false && _util.support.animation) {
            if (willOpen) {
                nextState.visible = true;
                nextState.status = 'mounting';
            } else if (willClose) {
                // can not set visible=false directly, otherwise animation not work without dom
                // nextState.visible = false;
                nextState.status = 'leaving';
            }
        } else if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            nextState.visible = nextProps.visible;
        }

        return nextState;
    };

    Overlay.prototype.componentDidMount = function componentDidMount() {
        if (this.state.willOpen) {
            this.beforeOpen();
        } else if (this.state.willClose) {
            this.beforeClose();
        }

        if (this.state.visible) {
            this.doAnimation(true, false);
            this._isMounted = true;
        }

        this.addDocumentEvents();

        _manager2.default.addOverlay(this);
    };

    Overlay.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (this.state.willOpen) {
            this.beforeOpen();
        } else if (this.state.willClose) {
            this.beforeClose();
        }

        if (!this._isMounted && this.props.visible) {
            this._isMounted = true;
        }

        if (this.props.align !== prevProps.align) {
            this.lastAlign = prevProps.align;
        }

        var willOpen = !prevProps.visible && this.props.visible;
        var willClose = prevProps.visible && !this.props.visible;

        (willOpen || willClose) && this.doAnimation(willOpen, willClose);
    };

    Overlay.prototype.componentWillUnmount = function componentWillUnmount() {
        this._isDestroyed = true;
        this._isMounted = false;
        _manager2.default.removeOverlay(this);
        this.removeDocumentEvents();
        if (this.focusTimeout) {
            clearTimeout(this.focusTimeout);
        }
        if (this._animation) {
            this._animation.off();
            this._animation = null;
        }
        this.beforeClose();
    };

    Overlay.prototype.doAnimation = function doAnimation(open, close) {
        var _this2 = this;

        if (this.state.animation && _util.support.animation) {
            if (open) {
                this.onEntering();
            } else if (close) {
                this.onLeaving();
            }
            this.addAnimationEvents();
        } else {
            if (open) {
                // fix https://github.com/alibaba-fusion/next/issues/1901
                setTimeout(function () {
                    _this2.props.onOpen();
                    _util.dom.addClass(_this2.getWrapperNode(), 'opened');
                    _manager2.default.addOverlay(_this2);
                    _this2.props.afterOpen();
                });
            } else if (close) {
                this.props.onClose();
                _util.dom.removeClass(this.getWrapperNode(), 'opened');
                _manager2.default.removeOverlay(this);
                this.props.afterClose();
            }
            this.setFocusNode();
        }
    };

    Overlay.prototype.getAnimation = function getAnimation(props) {
        if (props.animation === false) {
            return false;
        }

        if (props.animation) {
            return props.animation;
        }

        return this.getAnimationByAlign(props.align);
    };

    Overlay.prototype.getAnimationByAlign = function getAnimationByAlign(align) {
        switch (align[0]) {
            case 't':
                return {
                    // 为了防止有的用户 js升级了而css没升级，所以把两个动画都保留了。
                    // 动画不会叠加，会替代，顺序根据 src/animate/main.scss 中的样式先后顺序遵循css覆盖原则
                    // fadeInDownSmall fadeOutUpSmall 优先级更高
                    in: 'expandInDown fadeInDownSmall',
                    out: 'expandOutUp fadeOutUpSmall'
                };
            case 'b':
                return {
                    in: 'fadeInUp',
                    out: 'fadeOutDown'
                };
            default:
                return {
                    in: 'expandInDown fadeInDownSmall',
                    out: 'expandOutUp fadeOutUpSmall'
                };
        }
    };

    Overlay.prototype.addAnimationEvents = function addAnimationEvents() {
        var _this3 = this;

        setTimeout(function () {
            var node = _this3.getContentNode();
            if (node) {
                var id = (0, _util.guid)();

                _this3._animation = _util.events.on(node, _util.support.animation.end, _this3.handleAnimateEnd.bind(_this3, id));

                var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
                var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
                var time = animationDelay + animationDuration;
                if (time) {
                    _this3.timeoutMap[id] = setTimeout(function () {
                        _this3.handleAnimateEnd(id);
                    }, time * 1000 + 200);
                }
            }
        });
    };

    Overlay.prototype.handlePosition = function handlePosition(config) {
        var align = config.align.join(' ');

        if (!('animation' in this.props) && this.props.needAdjust && this.lastAlign !== align) {
            this.setState({
                animation: this.getAnimationByAlign(align)
            });
        }

        var status = this.state.status;

        if (status === 'mounting') {
            this.setState({
                status: 'entering'
            });
        }

        this.lastAlign = align;
    };

    Overlay.prototype.handleAnimateEnd = function handleAnimateEnd(id) {
        if (this.timeoutMap[id]) {
            clearTimeout(this.timeoutMap[id]);
        }
        delete this.timeoutMap[id];

        if (this._animation) {
            this._animation.off();
            this._animation = null;
        }

        if (!this._isMounted) {
            return;
        }

        if (this.state.status === 'leaving') {
            this.setState({
                visible: false,
                status: 'none'
            });

            this.onLeaved();
            // dom结构首次出现 触发的是entering
            // dom结构已经存在（例如设置了cache），触发的是mounting
        } else if (this.state.status === 'entering' || this.state.status === 'mounting') {
            this.setState({
                status: 'none'
            });

            this.onEntered();
        }
    };

    Overlay.prototype.onEntering = function onEntering() {
        var _this4 = this;

        if (this._isDestroyed) {
            return;
        }

        // make sure overlay.ref has been called (eg: menu/popup-item called overlay.getInstance().getContentNode().)
        setTimeout(function () {
            var wrapperNode = _this4.getWrapperNode();
            _util.dom.addClass(wrapperNode, 'opened');
            _this4.props.onOpen();
        });
    };

    Overlay.prototype.onLeaving = function onLeaving() {
        var wrapperNode = this.getWrapperNode();
        _util.dom.removeClass(wrapperNode, 'opened');
        this.props.onClose();
    };

    Overlay.prototype.onEntered = function onEntered() {
        _manager2.default.addOverlay(this);
        this.setFocusNode();
        this.props.afterOpen();
    };

    Overlay.prototype.onLeaved = function onLeaved() {
        _manager2.default.removeOverlay(this);
        this.setFocusNode();
        this.props.afterClose();
    };

    Overlay.prototype.beforeOpen = function beforeOpen() {
        if (this.props.disableScroll) {
            var containerNode = getContainerNode(this.props) || document.body;
            var _containerNode$style = containerNode.style,
                overflow = _containerNode$style.overflow,
                paddingRight = _containerNode$style.paddingRight;

            var cnInfo = containerNodeList.find(function (m) {
                return m.containerNode === containerNode;
            }) || {
                containerNode: containerNode,
                count: 0
            };

            /**
             * container 节点初始状态已经是 overflow=hidden 则忽略
             * See {@link https://codesandbox.io/s/next-overlay-overflow-2-fulpq?file=/src/App.js}
             */
            if (cnInfo.count === 0 && overflow !== 'hidden') {
                var style = {
                    overflow: 'hidden'
                };

                cnInfo.overflow = overflow;

                if (_util.dom.hasScroll(containerNode)) {
                    cnInfo.paddingRight = paddingRight;
                    style.paddingRight = _util.dom.getStyle(containerNode, 'paddingRight') + _util.dom.scrollbar().width + 'px';
                }

                _util.dom.setStyle(containerNode, style);
                containerNodeList.push(cnInfo);
                cnInfo.count++;
            } else if (cnInfo.count) {
                cnInfo.count++;
            }

            this._containerNode = containerNode;
        }
    };

    Overlay.prototype.beforeClose = function beforeClose() {
        var _this5 = this;

        if (this.props.disableScroll) {
            var idx = containerNodeList.findIndex(function (cn) {
                return cn.containerNode === _this5._containerNode;
            });

            if (idx !== -1) {
                var cnInfo = containerNodeList[idx];
                var overflow = cnInfo.overflow,
                    paddingRight = cnInfo.paddingRight;

                // 最后一个 overlay 的时候再将样式重置回去
                // 此时 overflow 应该值在 beforeOpen 中设置的 hidden

                if (cnInfo.count === 1 && this._containerNode && this._containerNode.style.overflow === 'hidden') {
                    var style = {
                        overflow: overflow
                    };

                    if (paddingRight !== undefined) {
                        style.paddingRight = paddingRight;
                    }

                    _util.dom.setStyle(this._containerNode, style);
                }

                cnInfo.count--;

                if (cnInfo.count === 0) {
                    containerNodeList.splice(idx, 1);
                }
            }
            this._containerNode = undefined;
        }
    };

    Overlay.prototype.setFocusNode = function setFocusNode() {
        var _this6 = this;

        if (!this.props.autoFocus) {
            return;
        }

        if (this.state.visible && !this._hasFocused) {
            saveLastFocusNode();
            // 这个时候很可能上一个弹层的关闭事件还未触发，导致焦点已经回到触发的元素
            // 这里延时处理一下，延时的时间为 document.click 捕获触发的延时时间
            this.focusTimeout = setTimeout(function () {
                var node = _this6.getContentNode();
                if (node) {
                    var focusNodeList = getFocusNodeList(node);
                    if (focusNodeList.length) {
                        focusNodeList[0].focus();
                    }
                    _this6._hasFocused = true;
                }
            }, 100);
        } else if (!this.state.visible && this._hasFocused) {
            backLastFocusNode();
            this._hasFocused = false;
        }
    };

    Overlay.prototype.getContent = function getContent() {
        return this.contentRef;
    };

    Overlay.prototype.getContentNode = function getContentNode() {
        try {
            return (0, _reactDom.findDOMNode)(this.contentRef);
        } catch (err) {
            return null;
        }
    };

    Overlay.prototype.getWrapperNode = function getWrapperNode() {
        return this.gatewayRef ? this.gatewayRef.getChildNode() : null;
    };

    /**
     * document global event
     */

    Overlay.prototype.addDocumentEvents = function addDocumentEvents() {
        var useCapture = this.props.useCapture;
        // use capture phase listener to be compatible with react17
        // https://reactjs.org/blog/2020/08/10/react-v17-rc.html#fixing-potential-issues

        if (this.props.canCloseByEsc) {
            this._keydownEvents = _util.events.on(document, 'keydown', this.handleDocumentKeyDown, useCapture);
        }

        if (this.props.canCloseByOutSideClick) {
            this._clickEvents = _util.events.on(document, 'click', this.handleDocumentClick, useCapture);
            this._touchEvents = _util.events.on(document, 'touchend', this.handleDocumentClick, useCapture);
        }
    };

    Overlay.prototype.removeDocumentEvents = function removeDocumentEvents() {
        var _this7 = this;

        ['_keydownEvents', '_clickEvents', '_touchEvents'].forEach(function (event) {
            if (_this7[event]) {
                _this7[event].off();
                _this7[event] = null;
            }
        });
    };

    Overlay.prototype.handleDocumentKeyDown = function handleDocumentKeyDown(e) {
        if (this.state.visible && e.keyCode === _util.KEYCODE.ESC && _manager2.default.isCurrentOverlay(this)) {
            this.props.onRequestClose('keyboard', e);
        }
    };

    Overlay.prototype.isInShadowDOM = function isInShadowDOM(node) {
        return node.getRootNode ? node.getRootNode().nodeType === 11 : false;
    };

    Overlay.prototype.getEventPath = function getEventPath(event) {
        // 参考 https://github.com/spring-media/react-shadow-dom-retarget-events/blob/master/index.js#L29
        return event.path || event.composedPath && event.composedPath() || this.composedPath(event.target);
    };

    Overlay.prototype.composedPath = function composedPath(el) {
        var path = [];
        while (el) {
            path.push(el);
            if (el.tagName === 'HTML') {
                path.push(document);
                path.push(window);
                return path;
            }
            el = el.parentElement;
        }
    };

    Overlay.prototype.matchInShadowDOM = function matchInShadowDOM(node, e) {
        if (this.isInShadowDOM(node)) {
            // Shadow DOM 环境中，触发点击事件，监听 document click 事件获得的事件源
            // 并非实际触发的 dom 节点，而是 Shadow DOM 的 host 节点
            // 进而会导致如 Select 组件的下拉弹层打开后立即关闭等问题
            // 因此额外增加 node 和 eventPath 的判断
            var eventPath = this.getEventPath(e);
            return node === eventPath[0] || node.contains(eventPath[0]);
        }

        return false;
    };

    Overlay.prototype.handleDocumentClick = function handleDocumentClick(e) {
        var _this8 = this;

        if (this.state.visible) {
            var safeNode = this.props.safeNode;

            var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
            safeNodes.unshift(function () {
                return _this8.getWrapperNode();
            });

            for (var i = 0; i < safeNodes.length; i++) {
                var node = (0, _findNode2.default)(safeNodes[i], this.props);
                // HACK: 如果触发点击的节点是弹层内部的节点，并且在被点击后立即销毁，那么此时无法使用 node.contains(e.target)
                // 来判断此时点击的节点是否是弹层内部的节点，额外判断
                if (node && (node === e.target || node.contains(e.target) || this.matchInShadowDOM(node, e) || e.target !== document && !document.documentElement.contains(e.target))) {
                    return;
                }
            }

            this.props.onRequestClose('docClick', e);
        }
    };

    Overlay.prototype.handleMaskClick = function handleMaskClick(e) {
        if (e.currentTarget === e.target && this.props.canCloseByMask) {
            this.props.onRequestClose('maskClick', e);
        }
    };

    // 兼容过去的用法: this.popupRef.getInstance().overlay.getInstance().getContentNode()
    Overlay.prototype.getInstance = function getInstance() {
        return this;
    };

    Overlay.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            style = _props.style,
            propChildren = _props.children,
            target = _props.target,
            align = _props.align,
            offset = _props.offset,
            container = _props.container,
            hasMask = _props.hasMask,
            needAdjust = _props.needAdjust,
            autoFit = _props.autoFit,
            beforePosition = _props.beforePosition,
            onPosition = _props.onPosition,
            wrapperStyle = _props.wrapperStyle,
            rtl = _props.rtl,
            propShouldUpdatePosition = _props.shouldUpdatePosition,
            cache = _props.cache,
            wrapperClassName = _props.wrapperClassName,
            onMaskMouseEnter = _props.onMaskMouseEnter,
            onMaskMouseLeave = _props.onMaskMouseLeave,
            maskClass = _props.maskClass,
            isChildrenInMask = _props.isChildrenInMask,
            pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed;
        var _state = this.state,
            stateVisible = _state.visible,
            status = _state.status,
            animation = _state.animation;

        var children = stateVisible || cache && this._isMounted ? propChildren : null;
        if (children) {
            var _classnames, _classnames2;

            var child = _react.Children.only(children);
            // if chlild is a functional component wrap in a component to allow a ref to be set
            if (typeof child.type === 'function' && !(child.type.prototype instanceof _react.Component)) {
                child = _react2.default.createElement('div', { role: 'none' }, child);
            }
            var childClazz = (0, _classnames4.default)((_classnames = {}, _classnames[prefix + 'overlay-inner'] = true, _classnames[animation.in] = status === 'entering' || status === 'mounting', _classnames[animation.out] = status === 'leaving', _classnames[child.props.className] = !!child.props.className, _classnames[className] = !!className, _classnames));
            if (typeof child.ref === 'string') {
                throw new Error('Can not set ref by string in Overlay, use function instead.');
            }

            children = _react2.default.cloneElement(child, {
                className: childClazz,
                style: (0, _extends3.default)({}, child.props.style, style),
                ref: makeChain(this.saveContentRef, child.ref),
                'aria-hidden': !stateVisible && cache && this._isMounted,
                onClick: makeChain(this.props.onClick, child.props.onClick),
                onTouchEnd: makeChain(this.props.onTouchEnd, child.props.onTouchEnd)
            });

            if (align) {
                var shouldUpdatePosition = status !== 'leaving' && propShouldUpdatePosition;
                children = _react2.default.createElement(_position2.default, {
                    children: children,
                    target: target,
                    align: align,
                    offset: offset,
                    autoFit: autoFit,
                    container: container,
                    needAdjust: needAdjust,
                    pinFollowBaseElementWhenFixed: pinFollowBaseElementWhenFixed,
                    beforePosition: beforePosition,
                    onPosition: makeChain(this.handlePosition, onPosition),
                    shouldUpdatePosition: shouldUpdatePosition,
                    rtl: rtl
                });
            }

            var wrapperClazz = (0, _classnames4.default)([prefix + 'overlay-wrapper', wrapperClassName]);
            var newWrapperStyle = (0, _extends3.default)({}, {
                display: stateVisible ? '' : 'none'
            }, wrapperStyle);

            var maskClazz = (0, _classnames4.default)((_classnames2 = {}, _classnames2[prefix + 'overlay-backdrop'] = true, _classnames2[maskClass] = !!maskClass, _classnames2));

            children = _react2.default.createElement('div', { className: wrapperClazz, style: newWrapperStyle, dir: rtl ? 'rtl' : undefined }, hasMask ? _react2.default.createElement('div', {
                className: maskClazz,
                onClick: this.handleMaskClick,
                onMouseEnter: onMaskMouseEnter,
                onMouseLeave: onMaskMouseLeave,
                dir: rtl ? 'rtl' : undefined
            }, isChildrenInMask && children) : null, !isChildrenInMask && children);
        }

        return _react2.default.createElement(_gateway2.default, (0, _extends3.default)({ container: container, target: target, children: children }, { ref: this.saveGatewayRef }));
    };

    return Overlay;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    /**
     * 弹层内容
     */
    children: _propTypes2.default.any,
    /**
     * 是否显示弹层
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层请求关闭时触发事件的回调函数
     * @param {String} type 弹层关闭的来源
     * @param {Object} e DOM 事件
     */
    onRequestClose: _propTypes2.default.func,
    /**
     * 弹层定位的参照元素
     */
    target: _propTypes2.default.any,
    /**
     * 弹层相对于参照元素的定位, 详见开发指南的[定位部分](#定位)
     */
    align: _propTypes2.default.string,
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _propTypes2.default.array,
    /**
     * 渲染组件的容器，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点
     */
    container: _propTypes2.default.any,
    /**
     * 是否显示遮罩
     */
    hasMask: _propTypes2.default.bool,
    /**
     * 是否支持 esc 按键关闭弹层
     */
    canCloseByEsc: _propTypes2.default.bool,
    /**
     * 点击弹层外的区域是否关闭弹层，不显示遮罩时生效
     */
    canCloseByOutSideClick: _propTypes2.default.bool,
    /**
     * 点击遮罩区域是否关闭弹层，显示遮罩时生效
     */
    canCloseByMask: _propTypes2.default.bool,
    /**
     * 弹层打开前触发事件的回调函数
     */
    beforeOpen: _propTypes2.default.func,
    /**
     * 弹层打开时触发事件的回调函数
     */
    onOpen: _propTypes2.default.func,
    /**
     * 弹层打开后触发事件的回调函数, 如果有动画，则在动画结束后触发
     */
    afterOpen: _propTypes2.default.func,
    /**
     * 弹层关闭前触发事件的回调函数
     */
    beforeClose: _propTypes2.default.func,
    /**
     * 弹层关闭时触发事件的回调函数
     */
    onClose: _propTypes2.default.func,
    /**
     * 弹层关闭后触发事件的回调函数, 如果有动画，则在动画结束后触发
     */
    afterClose: _propTypes2.default.func,
    /**
     * 弹层定位完成前触发的事件
     */
    beforePosition: _propTypes2.default.func,
    /**
     * 弹层定位完成时触发的事件
     * @param {Object} config 定位的参数
     * @param {Array} config.align 对齐方式，如 ['cc', 'cc']（如果开启 autoAdjust，可能和预先设置的 align 不同）
     * @param {Number} config.top 距离视口顶部距离
     * @param {Number} config.left 距离视口左侧距离
     * @param {Object} node 定位参照的容器节点
     */
    onPosition: _propTypes2.default.func,
    shouldUpdatePosition: _propTypes2.default.bool,
    /**
     * 弹层打开时是否让其中的元素自动获取焦点
     */
    autoFocus: _propTypes2.default.bool,
    needAdjust: _propTypes2.default.bool,
    /**
     * 是否禁用页面滚动
     */
    disableScroll: _propTypes2.default.bool,
    /**
     * 是否在捕获阶段监听，适配 react 17 事件模型变更
     * @version 1.25
     */
    useCapture: _propTypes2.default.bool,
    /**
     * 隐藏时是否保留子节点
     */
    cache: _propTypes2.default.bool,
    /**
     * 安全节点，当点击 document 的时候，如果包含该节点则不会关闭弹层，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点，或者以上值组成的数组
     */
    safeNode: _propTypes2.default.any,
    /**
     * 弹层的根节点的样式类
     */
    wrapperClassName: _propTypes2.default.string,
    /**
     * 弹层的根节点的内联样式
     */
    wrapperStyle: _propTypes2.default.object,
    /**
     * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),
    onMaskMouseEnter: _propTypes2.default.func,
    onMaskMouseLeave: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    maskClass: _propTypes2.default.string,
    isChildrenInMask: _propTypes2.default.bool,
    // 当 pin 元素（一般是弹层）是 fixed 布局的时候，pin 元素是否要跟随 base 元素（一般是trigger）
    // 举例来说，dialog/drawer 这类组件弹层是不跟随trigger的，而 fixed 布局下的subNav是跟随trigger的
    pinFollowBaseElementWhenFixed: _propTypes2.default.bool,
    /**
     * 开启 v2 版本
     * @version 1.25
     */
    v2: _propTypes2.default.bool,
    /**
     * [v2] align 的数组形式，不能和 align 同时使用
     * @version 1.25
     */
    points: _propTypes2.default.array
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    visible: false,
    onRequestClose: noop,
    target: _position2.default.VIEWPORT,
    align: 'tl bl',
    offset: [0, 0],
    hasMask: false,
    canCloseByEsc: true,
    canCloseByOutSideClick: true,
    canCloseByMask: true,
    beforeOpen: noop,
    onOpen: noop,
    afterOpen: noop,
    beforeClose: noop,
    onClose: noop,
    afterClose: noop,
    beforePosition: noop,
    onPosition: noop,
    onMaskMouseEnter: noop,
    onMaskMouseLeave: noop,
    shouldUpdatePosition: false,
    autoFocus: false,
    needAdjust: true,
    disableScroll: false,
    cache: false,
    isChildrenInMask: false,
    onTouchEnd: function onTouchEnd(event) {
        event.stopPropagation();
    },
    onClick: function onClick(event) {
        return event.stopPropagation();
    },
    maskClass: '',
    useCapture: true
}, _temp);
Overlay.displayName = 'Overlay';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Overlay);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _findNode = __webpack_require__(59);

var _findNode2 = _interopRequireDefault(_findNode);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var makeChain = _util.func.makeChain;

var getContainerNode = function getContainerNode(props) {
    var targetNode = (0, _findNode2.default)(props.target);
    return (0, _findNode2.default)(props.container, targetNode);
};

var Gateway = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Gateway, _Component);

    function Gateway(props) {
        (0, _classCallCheck3.default)(this, Gateway);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.updateContainer = function () {
            var containerNode = getContainerNode(_this.props);

            if (containerNode !== _this.state.containerNode) {
                // eslint-disable-next-line
                _this.setState({
                    containerNode: containerNode
                });
            }
        };

        _this.saveChildRef = function (ref) {
            _this.child = ref;
        };

        _this.state = {
            containerNode: null
        };
        return _this;
    }

    Gateway.prototype.componentDidMount = function componentDidMount() {
        this.updateContainer();
    };

    Gateway.prototype.componentDidUpdate = function componentDidUpdate() {
        this.updateContainer();
    };

    Gateway.prototype.getChildNode = function getChildNode() {
        try {
            return (0, _reactDom.findDOMNode)(this.child);
        } catch (err) {
            return null;
        }
    };

    Gateway.prototype.render = function render() {
        var containerNode = this.state.containerNode;

        if (!containerNode) {
            return null;
        }

        var children = this.props.children;

        var child = children ? _react.Children.only(children) : null;
        if (!child) {
            return null;
        }

        if (typeof child.ref === 'string') {
            throw new Error('Can not set ref by string in Gateway, use function instead.');
        }
        child = _react2.default.cloneElement(child, {
            ref: makeChain(this.saveChildRef, child.ref)
        });

        return (0, _reactDom.createPortal)(child, containerNode);
    };

    return Gateway;
}(_react.Component), _class.propTypes = {
    children: _propTypes2.default.node,
    container: _propTypes2.default.any,
    target: _propTypes2.default.any
}, _class.defaultProps = {
    container: function container() {
        return document.body;
    }
}, _temp);
Gateway.displayName = 'Gateway';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Gateway);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _resizeObserverPolyfill = __webpack_require__(52);

var _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);

var _util = __webpack_require__(4);

var _position = __webpack_require__(277);

var _position2 = _interopRequireDefault(_position);

var _findNode = __webpack_require__(59);

var _findNode2 = _interopRequireDefault(_findNode);

var _log = __webpack_require__(83);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop,
    bindCtx = _util.func.bindCtx;
var getStyle = _util.dom.getStyle;

var place = _position2.default.place;
// Follow react NESTED_UPDATE_LIMIT = 50
var MAX_UPDATE_COUNT = 50;

var Position = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Position, _Component);

    function Position(props) {
        (0, _classCallCheck3.default)(this, Position);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.updateCount = 0;

        _this.observe = function () {
            var contentNode = _this.getContentNode();
            contentNode && _this.resizeObserver.observe(contentNode);
        };

        _this.unobserve = function () {
            _this.resizeObserver.disconnect();
        };

        _this.shouldIgnorePosition = function () {
            var node = _this.getContentNode();
            if (!node) {
                return true;
            }
            // 从文档中移除
            if (!node.parentNode) {
                return true;
            }
            // 元素隐藏

            var _getComputedStyle = getComputedStyle(node),
                position = _getComputedStyle.position,
                display = _getComputedStyle.display,
                visibility = _getComputedStyle.visibility;

            if (!node.offsetParent && position !== 'fixed') {
                return true;
            }
            // Firefox offsetParent 会返回 body，这里兼容处理
            if (display === 'none' || visibility === 'hidden') {
                return true;
            }
            // 兜底处理，同步进程里连续更新多次，强制中断
            _this.updateCount++;
            Promise.resolve().then(function () {
                _this.updateCount = 0;
            });
            if (_this.updateCount > MAX_UPDATE_COUNT - 10) {
                (0, _log.warning)('Over maximum times to adjust position at one task, it is recommended to use v2.');
                return true;
            }
            return false;
        };

        bindCtx(_this, ['handleResize']);

        _this.resizeObserver = new _resizeObserverPolyfill2.default(_this.handleResize);
        return _this;
    }

    Position.prototype.componentDidMount = function componentDidMount() {
        this.setPosition();

        if (this.props.needListenResize) {
            _util.events.on(window, 'resize', this.handleResize);
            this.observe();
        }
    };

    Position.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var props = this.props;

        if ('align' in props && props.align !== prevProps.align || props.shouldUpdatePosition) {
            this.shouldUpdatePosition = true;
        }

        if (this.shouldUpdatePosition) {
            clearTimeout(this.resizeTimeout);

            this.setPosition();
            this.shouldUpdatePosition = false;
        }
    };

    Position.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.props.needListenResize) {
            _util.events.off(window, 'resize', this.handleResize);
            this.unobserve();
        }

        clearTimeout(this.resizeTimeout);
    };

    Position.prototype.setPosition = function setPosition() {
        var _props = this.props,
            align = _props.align,
            offset = _props.offset,
            beforePosition = _props.beforePosition,
            onPosition = _props.onPosition,
            needAdjust = _props.needAdjust,
            container = _props.container,
            rtl = _props.rtl,
            pinFollowBaseElementWhenFixed = _props.pinFollowBaseElementWhenFixed,
            autoFit = _props.autoFit;

        if (this.shouldIgnorePosition()) {
            return;
        }

        beforePosition();

        var contentNode = this.getContentNode();
        var targetNode = this.getTargetNode();

        if (contentNode && targetNode) {
            var resultAlign = place({
                pinElement: contentNode,
                baseElement: targetNode,
                pinFollowBaseElementWhenFixed: pinFollowBaseElementWhenFixed,
                align: align,
                offset: offset,
                autoFit: autoFit,
                container: container,
                needAdjust: needAdjust,
                isRtl: rtl
            });
            var top = getStyle(contentNode, 'top');
            var left = getStyle(contentNode, 'left');

            onPosition({
                align: resultAlign.split(' '),
                top: top,
                left: left
            }, contentNode);
        }
    };

    Position.prototype.getContentNode = function getContentNode() {
        try {
            return (0, _reactDom.findDOMNode)(this);
        } catch (err) {
            return null;
        }
    };

    Position.prototype.getTargetNode = function getTargetNode() {
        var target = this.props.target;

        return target === _position2.default.VIEWPORT ? _position2.default.VIEWPORT : (0, _findNode2.default)(target, this.props);
    };

    Position.prototype.handleResize = function handleResize() {
        var _this2 = this;

        clearTimeout(this.resizeTimeout);

        this.resizeTimeout = setTimeout(function () {
            _this2.setPosition();
        }, 200);
    };

    Position.prototype.render = function render() {
        return _react.Children.only(this.props.children);
    };

    return Position;
}(_react.Component), _class.VIEWPORT = _position2.default.VIEWPORT, _class.propTypes = {
    children: _propTypes2.default.node,
    target: _propTypes2.default.any,
    container: _propTypes2.default.any,
    align: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
    offset: _propTypes2.default.array,
    beforePosition: _propTypes2.default.func,
    onPosition: _propTypes2.default.func,
    needAdjust: _propTypes2.default.bool,
    autoFit: _propTypes2.default.bool,
    needListenResize: _propTypes2.default.bool,
    shouldUpdatePosition: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    pinFollowBaseElementWhenFixed: _propTypes2.default.bool
}, _class.defaultProps = {
    align: 'tl bl',
    offset: [0, 0],
    beforePosition: noop,
    onPosition: noop,
    needAdjust: true,
    autoFit: false,
    needListenResize: true,
    shouldUpdatePosition: false,
    rtl: false
}, _temp);
Position.displayName = 'Position';
exports.default = Position;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 135 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 136 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Icon
 */
var Icon = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Icon, _Component);

    function Icon() {
        (0, _classCallCheck3.default)(this, Icon);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Icon.prototype.render = function render() {
        var _cx;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            size = _props.size,
            className = _props.className,
            rtl = _props.rtl,
            style = _props.style,
            children = _props.children;

        var others = _util.obj.pickOthers((0, _extends3.default)({}, Icon.propTypes), this.props);

        var classes = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'icon'] = true, _cx[prefix + 'icon-' + type] = !!type, _cx['' + prefix + size] = !!size && typeof size === 'string', _cx[className] = !!className, _cx));

        if (rtl && ['arrow-left', 'arrow-right', 'arrow-double-left', 'arrow-double-right', 'switch', 'sorting', 'descending', 'ascending'].indexOf(type) !== -1) {
            others.dir = 'rtl';
        }

        var sizeStyle = typeof size === 'number' ? {
            width: size,
            height: size,
            lineHeight: size + 'px',
            fontSize: size
        } : {};

        return _react2.default.createElement('i', (0, _extends3.default)({}, others, { style: (0, _extends3.default)({}, sizeStyle, style), className: classes }), children);
    };

    return Icon;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    /**
     * 指定显示哪种图标
     */
    type: _propTypes2.default.string,
    children: _propTypes2.default.node,
    /**
     * 指定图标大小
     * <br/>**可选值**<br/> xxs, xs, small, medium, large, xl, xxl, xxxl, inherit
     */
    size: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl', 'inherit']), _propTypes2.default.number]),
    className: _propTypes2.default.string,
    style: _propTypes2.default.object
}), _class.defaultProps = {
    prefix: 'next-',
    size: 'medium'
}, _class._typeMark = 'icon', _temp);
Icon.displayName = 'Icon';
exports.default = Icon;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

exports.getDisabledCompatibleTrigger = getDisabledCompatibleTrigger;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function getDisabledCompatibleTrigger(element) {
    if (element.type.displayName === 'Config(Button)' && element.props.disabled) {
        var displayStyle = element.props.style && element.props.style.display ? element.props.style.display : 'inline-block';
        var child = _react2.default.cloneElement(element, {
            style: (0, _extends3.default)({}, element.props.style, {
                pointerEvents: 'none'
            })
        });
        return (
            // eslint-disable-next-line
            _react2.default.createElement('span', { style: { display: displayStyle, cursor: 'not-allowed' } }, child)
        );
    }
    return element;
}

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _subMenu = __webpack_require__(140);

var _subMenu2 = _interopRequireDefault(_subMenu);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(89);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers,
    isNil = _util.obj.isNil;

var noop = function noop() {};
var MENUITEM_OVERFLOWED_CLASSNAME = 'menuitem-overflowed';

var getIndicatorsItem = function getIndicatorsItem(items, isPlaceholder) {
    var _cx;

    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    var renderMore = arguments[3];

    var moreCls = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-more'] = true, _cx));

    var style = {};
    // keep placehold to get width
    if (isPlaceholder) {
        style.visibility = 'hidden';
        style.display = 'inline-block';
        // indicators which not in use, just display: none
    } else if (items && items.length === 0) {
        style.display = 'none';
        style.visibility = 'unset';
    }

    if (renderMore && typeof renderMore === 'function') {
        var moreNode = renderMore(items);
        var renderMoreCls = (0, _classnames2.default)(moreCls, moreNode.props && moreNode.props.className);

        return _react2.default.isValidElement(moreNode) ? _react2.default.cloneElement(moreNode, {
            style: style,
            className: renderMoreCls
        }) : moreNode;
    }

    return _react2.default.createElement(_subMenu2.default, { label: '\xB7\xB7\xB7', noIcon: true, className: moreCls, style: style }, items);
};

var addIndicators = function addIndicators(_ref) {
    var children = _ref.children,
        lastVisibleIndex = _ref.lastVisibleIndex,
        prefix = _ref.prefix,
        renderMore = _ref.renderMore;

    var arr = [];

    _react2.default.Children.forEach(children, function (child, index) {
        if (!child) {
            return;
        }
        var overflowedItems = [];

        if (index > lastVisibleIndex) {
            child = _react2.default.cloneElement(child, {
                // 别折叠不显示的 item，不占用真实的用户传入的 key
                key: 'more-' + index,
                style: { display: 'none' },
                className: (child && child.className || '') + ' ' + MENUITEM_OVERFLOWED_CLASSNAME
            });
        }

        if (index === lastVisibleIndex + 1) {
            overflowedItems = children.slice(lastVisibleIndex + 1).map(function (c, i) {
                return _react2.default.cloneElement(c, {
                    key: c.key || 'more-' + index + '-' + i
                });
            });
            arr.push(getIndicatorsItem(overflowedItems, false, prefix, renderMore));
        }

        arr.push(child);
    });

    arr.push(getIndicatorsItem([], true, prefix, renderMore));

    return arr;
};

var getNewChildren = function getNewChildren(_ref2) {
    var children = _ref2.children,
        root = _ref2.root,
        mode = _ref2.mode,
        lastVisibleIndex = _ref2.lastVisibleIndex,
        hozInLine = _ref2.hozInLine,
        prefix = _ref2.prefix,
        renderMore = _ref2.renderMore;

    var k2n = {};
    var p2n = {};

    var arr = hozInLine ? addIndicators({
        children: children,
        lastVisibleIndex: lastVisibleIndex,
        prefix: prefix,
        renderMore: renderMore
    }) : children;

    var loop = function loop(children, posPrefix) {
        var indexWrapper = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { index: 0 };
        var inlineLevel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

        var keyArray = [];
        return _react.Children.map(children, function (child) {
            if (child && (typeof child.type === 'function' ||
            // `React.forwardRef(render)` returns a forwarding
            // object that includes `render` method, and the specific
            // `child.type` will be an object instead of a class or
            // function.
            (0, _typeof3.default)(child.type) === 'object') && 'menuChildType' in child.type) {
                var newChild = void 0;

                var pos = void 0;
                var props = { root: root };

                if (['item', 'submenu', 'group'].indexOf(child.type.menuChildType) > -1) {
                    pos = posPrefix + '-' + indexWrapper.index++;
                    var key = typeof child.key === 'string' ? child.key : pos;

                    // filter out duplicate keys
                    if (keyArray.indexOf(key) > -1) {
                        return;
                    }

                    keyArray.push(key);

                    var level = pos.split('-').length - 1;
                    k2n[key] = p2n[pos] = {
                        key: key,
                        pos: pos,
                        mode: child.props.mode,
                        type: child.type.menuChildType,
                        disabled: child.props.disabled,
                        label: child.props.label || child.props.children
                    };

                    props.level = level;
                    props.inlineLevel = inlineLevel;
                    props._key = key;
                    props.groupIndent = child.type.menuChildType === 'group' ? 1 : 0;
                }

                // paddingLeft(or paddingRight in rtl) only make sense in inline mode
                // parent know children's inlineLevel
                // if parent's mode is popup, then children's inlineLevel must be 1;
                // else inlineLevel should add 1
                var childLevel = (child.props.mode || mode) === 'popup' ? 1 : inlineLevel + 1;

                switch (child.type.menuChildType) {
                    case 'submenu':
                        newChild = (0, _react.cloneElement)(child, props, loop(child.props.children, pos, undefined, childLevel));
                        break;
                    case 'group':
                        newChild = (0, _react.cloneElement)(child, props, loop(child.props.children, posPrefix, indexWrapper, props.level));
                        break;
                    case 'item':
                    case 'divider':
                        newChild = (0, _react.cloneElement)(child, props);
                        break;
                    default:
                        newChild = child;
                        break;
                }

                return newChild;
            }

            return child;
        });
    };

    var newChildren = loop(arr, '0');

    return {
        newChildren: newChildren,
        _k2n: k2n,
        _p2n: p2n
    };
};

/**
 * Menu
 */
var Menu = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Menu, _Component);

    function Menu(props) {
        (0, _classCallCheck3.default)(this, Menu);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.getUpdateChildren = function () {
            var _this$state = _this.state,
                root = _this$state.root,
                lastVisibleIndex = _this$state.lastVisibleIndex;

            return getNewChildren((0, _extends3.default)({
                root: root,
                lastVisibleIndex: lastVisibleIndex
            }, _this.props));
        };

        _this.menuContentRef = function (ref) {
            _this.menuContent = ref;
        };

        _this.menuHeaderRef = function (ref) {
            _this.menuHeader = ref;
        };

        _this.menuFooterRef = function (ref) {
            _this.menuFooter = ref;
        };

        var _this$props = _this.props,
            prefix = _this$props.prefix,
            children = _this$props.children,
            selectedKeys = _this$props.selectedKeys,
            defaultSelectedKeys = _this$props.defaultSelectedKeys,
            focusedKey = _this$props.focusedKey,
            focusable = _this$props.focusable,
            autoFocus = _this$props.autoFocus,
            hozInLine = _this$props.hozInLine,
            renderMore = _this$props.renderMore;

        _this.state = {
            lastVisibleIndex: undefined
        };

        var _getNewChildren = getNewChildren((0, _extends3.default)({
            root: _this
        }, _this.props)),
            newChildren = _getNewChildren.newChildren,
            _k2n = _getNewChildren._k2n,
            _p2n = _getNewChildren._p2n;

        var tabbableKey = focusable ? (0, _util2.getFirstAvaliablelChildKey)('0', _p2n) : undefined;

        _this.state = {
            root: _this,
            lastVisibleIndex: undefined,
            newChildren: newChildren,
            _k2n: _k2n,
            _p2n: _p2n,
            tabbableKey: tabbableKey,
            openKeys: _this.getInitOpenKeys(props, _k2n, _p2n),
            selectedKeys: (0, _util2.normalizeToArray)(selectedKeys || defaultSelectedKeys),
            focusedKey: !isNil(_this.props.focusedKey) ? focusedKey : focusable && autoFocus ? tabbableKey : null
        };

        bindCtx(_this, ['handleOpen', 'handleSelect', 'handleItemClick', 'handleItemKeyDown', 'onBlur', 'adjustChildrenWidth']);

        _this.popupNodes = [];
        return _this;
    }

    Menu.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('openKeys' in nextProps) {
            state.openKeys = (0, _util2.normalizeToArray)(nextProps.openKeys);
            // 从展开状态变为收起状态，才需要清空openKeys
        } else if ('mode' in nextProps && nextProps.mode === 'popup' && prevState.lastMode === 'inline') {
            state.openKeys = [];
        }

        if ('selectedKeys' in nextProps) {
            state.selectedKeys = (0, _util2.normalizeToArray)(nextProps.selectedKeys);
        }
        if ('focusedKey' in nextProps) {
            state.focusedKey = nextProps.focusedKey;
        }

        state.lastMode = nextProps.mode;

        var _getNewChildren2 = getNewChildren((0, _extends3.default)({
            root: prevState.root,
            lastVisibleIndex: prevState.lastVisibleIndex
        }, nextProps)),
            newChildren = _getNewChildren2.newChildren,
            _k2n = _getNewChildren2._k2n,
            _p2n = _getNewChildren2._p2n;

        state.newChildren = newChildren;
        state._k2n = _k2n;
        state._p2n = _p2n;

        if (nextProps.focusable) {
            if (prevState.tabbableKey in _k2n) {
                if (prevState.focusedKey) {
                    state.tabbableKey = prevState.focusedKey;
                }
            } else {
                state.tabbableKey = (0, _util2.getFirstAvaliablelChildKey)('0', _p2n);
            }
        }

        return state;
    };

    Menu.prototype.componentDidMount = function componentDidMount() {
        this.menuNode = (0, _reactDom.findDOMNode)(this);
        this.adjustChildrenWidth();

        if (this.props.hozInLine) {
            _util.events.on(window, 'resize', this.adjustChildrenWidth);
        }
    };

    Menu.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevState.lastVisibleIndex !== this.state.lastVisibleIndex || _react2.default.Children.toArray(this.props.children).length !== _react2.default.Children.toArray(prevProps.children).length) {
            this.adjustChildrenWidth();
        }
    };

    Menu.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.adjustChildrenWidth);
    };

    Menu.prototype.adjustChildrenWidth = function adjustChildrenWidth() {
        var _props = this.props,
            direction = _props.direction,
            prefix = _props.prefix,
            header = _props.header,
            footer = _props.footer,
            hozInLine = _props.hozInLine;

        if (direction !== 'hoz' || !hozInLine) {
            return;
        }

        if (!this.menuNode && !this.menuContent) {
            return;
        }

        var children = [],
            spaceWidth = void 0;

        if (header || footer) {
            children = this.menuContent.children;
            spaceWidth = (0, _util2.getWidth)(this.menuNode) - (0, _util2.getWidth)(this.menuHeader) - (0, _util2.getWidth)(this.menuFooter);
        } else {
            children = this.menuNode.children;
            spaceWidth = (0, _util2.getWidth)(this.menuNode);
        }

        if (children.length < 2) {
            return;
        }

        var currentSumWidth = 0,
            lastVisibleIndex = -1;

        var moreNode = '';

        var menuItemNodes = [].slice.call(children).filter(function (node) {
            if (node.className.split(' ').indexOf(prefix + 'menu-more') < 0) {
                return true;
            } else {
                moreNode = node;
            }
            return false;
        });

        var overflowedItems = menuItemNodes.filter(function (c) {
            return c.className.split(' ').indexOf(MENUITEM_OVERFLOWED_CLASSNAME) >= 0;
        });

        overflowedItems.forEach(function (c) {
            _util.dom.setStyle(c, 'display', 'inline-block');
        });

        _util.dom.setStyle(moreNode, 'display', 'inline-block');
        var moreWidth = (0, _util2.getWidth)(moreNode);

        this.menuItemSizes = menuItemNodes.map(function (c) {
            return (0, _util2.getWidth)(c);
        });
        var totalLen = this.menuItemSizes.length;

        overflowedItems.forEach(function (c) {
            _util.dom.setStyle(c, 'display', 'none');
        });

        this.menuItemSizes.forEach(function (liWidth, i) {
            currentSumWidth += liWidth;
            if (i >= totalLen - 1 && currentSumWidth <= spaceWidth || currentSumWidth + moreWidth <= spaceWidth) {
                lastVisibleIndex++;
            }
        });

        if (lastVisibleIndex >= totalLen - 1) {
            _util.dom.setStyle(moreNode, 'display', 'none');
        }

        this.setState((0, _extends3.default)({
            lastVisibleIndex: lastVisibleIndex
        }, this.getUpdateChildren()));
    };

    Menu.prototype.onBlur = function onBlur(e) {
        this.setState({
            focusedKey: undefined
        });

        this.props.onBlur && this.props.onBlur(e);
    };

    Menu.prototype.getInitOpenKeys = function getInitOpenKeys(props, _k2n, _p2n) {
        var initOpenKeys = void 0;

        var openKeys = props.openKeys,
            defaultOpenKeys = props.defaultOpenKeys,
            defaultOpenAll = props.defaultOpenAll,
            mode = props.mode,
            openMode = props.openMode;

        if (openKeys) {
            initOpenKeys = openKeys;
        } else if (defaultOpenAll && mode === 'inline' && openMode === 'multiple') {
            initOpenKeys = Object.keys(_k2n).filter(function (key) {
                return _k2n[key].type === 'submenu';
            });
        } else {
            initOpenKeys = defaultOpenKeys;
        }

        return (0, _util2.normalizeToArray)(initOpenKeys);
    };

    Menu.prototype.handleOpen = function handleOpen(key, open, triggerType, e) {
        var newOpenKeys = void 0;

        var _props2 = this.props,
            mode = _props2.mode,
            openMode = _props2.openMode;
        var _state = this.state,
            openKeys = _state.openKeys,
            _k2n = _state._k2n;

        var index = openKeys.indexOf(key);
        if (open && index === -1) {
            if (mode === 'inline') {
                if (openMode === 'single') {
                    newOpenKeys = openKeys.filter(function (k) {
                        return _k2n[k] && !(0, _util2.isSibling)(_k2n[key].pos, _k2n[k].pos);
                    });
                    newOpenKeys.push(key);
                } else {
                    newOpenKeys = openKeys.concat(key);
                }
            } else {
                newOpenKeys = openKeys.filter(function (k) {
                    return _k2n[k] && (0, _util2.isAncestor)(_k2n[key].pos, _k2n[k].pos);
                });
                newOpenKeys.push(key);
            }
        } else if (!open && index > -1) {
            if (mode === 'inline') {
                newOpenKeys = [].concat(openKeys.slice(0, index), openKeys.slice(index + 1));
            } else if (triggerType === 'docClick') {
                if (!this.popupNodes.concat(this.menuNode).some(function (node) {
                    return node.contains(e.target);
                })) {
                    newOpenKeys = [];
                }
            } else {
                newOpenKeys = openKeys.filter(function (k) {
                    return k !== key && _k2n[k] && !(0, _util2.isAncestor)(_k2n[k].pos, _k2n[key].pos);
                });
            }
        }

        if (newOpenKeys) {
            if (isNil(this.props.openKeys)) {
                this.setState((0, _extends3.default)({
                    openKeys: newOpenKeys
                }, this.getUpdateChildren()));
            }

            this.props.onOpen(newOpenKeys, {
                key: key,
                open: open
            });
        }
    };

    Menu.prototype.getPath = function getPath(key, _k2n, _p2n) {
        var keyPath = [];
        var labelPath = [];

        var pos = _k2n[key].pos;
        var nums = pos.split('-');
        for (var i = 1; i < nums.length - 1; i++) {
            var parentNums = nums.slice(0, i + 1);
            var parentPos = parentNums.join('-');
            var parent = _p2n[parentPos];
            keyPath.push(parent.key);
            labelPath.push(parent.label);
        }

        return {
            keyPath: keyPath,
            labelPath: labelPath
        };
    };

    Menu.prototype.handleSelect = function handleSelect(key, select, menuItem) {
        var _state2 = this.state,
            _k2n = _state2._k2n,
            _p2n = _state2._p2n;

        var pos = _k2n[key].pos;
        var level = pos.split('-').length - 1;
        if (this.props.shallowSelect && level > 1) {
            return;
        }

        var newSelectedKeys = void 0;

        var selectMode = this.props.selectMode;
        var selectedKeys = this.state.selectedKeys;

        var index = selectedKeys.indexOf(key);
        if (select && index === -1) {
            if (selectMode === 'single') {
                newSelectedKeys = [key];
            } else if (selectMode === 'multiple') {
                newSelectedKeys = selectedKeys.concat(key);
            }
        } else if (!select && index > -1 && selectMode === 'multiple') {
            newSelectedKeys = [].concat(selectedKeys.slice(0, index), selectedKeys.slice(index + 1));
        }

        if (newSelectedKeys) {
            if (isNil(this.props.selectedKeys)) {
                this.setState({
                    selectedKeys: newSelectedKeys
                });
            }

            this.props.onSelect(newSelectedKeys, menuItem, (0, _extends3.default)({
                key: key,
                select: select,
                label: _k2n[key].label
            }, this.getPath(key, _k2n, _p2n)));
        }
    };

    Menu.prototype.handleItemClick = function handleItemClick(key, item, e) {
        var _k2n = this.state._k2n;

        if (this.props.focusable) {
            if (isNil(this.props.focusedKey)) {
                this.setState({
                    focusedKey: key
                });
            }

            this.props.onItemFocus(key, item, e);
        }

        if (item.props.type === 'item') {
            if (item.props.parentMode === 'popup' && this.state.openKeys.length) {
                if (isNil(this.props.openKeys)) {
                    this.setState({
                        openKeys: []
                    });
                }

                this.props.onOpen([], {
                    key: this.state.openKeys.sort(function (prevKey, nextKey) {
                        return _k2n[nextKey].pos.split('-').length - _k2n[prevKey].pos.split('-').length;
                    })[0],
                    open: false
                });
            }

            this.props.onItemClick(key, item, e);
        }
    };

    Menu.prototype.getAvailableKey = function getAvailableKey(pos, prev) {
        var _p2n = this.state._p2n;

        var ps = Object.keys(_p2n).filter(function (p) {
            return (0, _util2.isAvailablePos)(pos, p, _p2n);
        });
        if (ps.length > 1) {
            var index = ps.indexOf(pos);
            var targetIndex = void 0;
            if (prev) {
                targetIndex = index === 0 ? ps.length - 1 : index - 1;
            } else {
                targetIndex = index === ps.length - 1 ? 0 : index + 1;
            }

            return _p2n[ps[targetIndex]].key;
        }

        return null;
    };

    Menu.prototype.getParentKey = function getParentKey(pos) {
        return this.state._p2n[pos.slice(0, pos.length - 2)].key;
    };

    Menu.prototype.handleItemKeyDown = function handleItemKeyDown(key, type, item, e) {
        if ([_util.KEYCODE.UP, _util.KEYCODE.DOWN, _util.KEYCODE.RIGHT, _util.KEYCODE.LEFT, _util.KEYCODE.ENTER, _util.KEYCODE.ESC, _util.KEYCODE.SPACE].indexOf(e.keyCode) > -1) {
            e.preventDefault();
            e.stopPropagation();
        }

        var focusedKey = this.state.focusedKey;
        var _state3 = this.state,
            _p2n = _state3._p2n,
            _k2n = _state3._k2n;
        var direction = this.props.direction;

        var pos = _k2n[key].pos;
        var level = pos.split('-').length - 1;
        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                {
                    var avaliableKey = this.getAvailableKey(pos, true);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case _util.KEYCODE.DOWN:
                {
                    var _avaliableKey = void 0;
                    if (direction === 'hoz' && level === 1 && type === 'submenu') {
                        this.handleOpen(key, true);
                        _avaliableKey = (0, _util2.getFirstAvaliablelChildKey)(pos, _p2n);
                    } else {
                        _avaliableKey = this.getAvailableKey(pos, false);
                    }
                    if (_avaliableKey) {
                        focusedKey = _avaliableKey;
                    }
                    break;
                }
            case _util.KEYCODE.RIGHT:
                {
                    var _avaliableKey2 = void 0;
                    if (direction === 'hoz' && level === 1) {
                        _avaliableKey2 = this.getAvailableKey(pos, false);
                    } else if (type === 'submenu') {
                        this.handleOpen(key, true);
                        _avaliableKey2 = (0, _util2.getFirstAvaliablelChildKey)(pos, _p2n);
                    }
                    if (_avaliableKey2) {
                        focusedKey = _avaliableKey2;
                    }
                    break;
                }
            case _util.KEYCODE.ENTER:
                {
                    if (type === 'submenu') {
                        this.handleOpen(key, true);
                        var _avaliableKey3 = (0, _util2.getFirstAvaliablelChildKey)(pos, _p2n);
                        if (_avaliableKey3) {
                            focusedKey = _avaliableKey3;
                        }
                    }
                    break;
                }
            case _util.KEYCODE.LEFT:
                {
                    if (direction === 'hoz' && level === 1) {
                        var _avaliableKey4 = this.getAvailableKey(pos, true);
                        if (_avaliableKey4) {
                            focusedKey = _avaliableKey4;
                        }
                    } else if (level > 1) {
                        var parentKey = this.getParentKey(pos);
                        this.handleOpen(parentKey, false);
                        focusedKey = parentKey;
                    }
                    break;
                }
            case _util.KEYCODE.ESC:
                if (level > 1) {
                    var _parentKey = this.getParentKey(pos);
                    this.handleOpen(_parentKey, false);
                    focusedKey = _parentKey;
                }
                break;

            case _util.KEYCODE.TAB:
                focusedKey = null;
                break;
            default:
                break;
        }

        if (focusedKey !== this.state.focusedKey) {
            if (isNil(this.props.focusedKey)) {
                this.setState({
                    focusedKey: focusedKey
                });
            }

            this.props.onItemKeyDown(focusedKey, item, e);
            this.props.onItemFocus(focusedKey, e);
        }
    };

    Menu.prototype.render = function render() {
        var _cx2, _cx3;

        var _props3 = this.props,
            prefix = _props3.prefix,
            className = _props3.className,
            direction = _props3.direction,
            hozAlign = _props3.hozAlign,
            header = _props3.header,
            footer = _props3.footer,
            footerWrapperClassName = _props3.footerWrapperClassName,
            embeddable = _props3.embeddable,
            selectMode = _props3.selectMode,
            hozInLine = _props3.hozInLine,
            rtl = _props3.rtl,
            flatenContent = _props3.flatenContent;
        var newChildren = this.state.newChildren;

        var others = pickOthers(Object.keys(Menu.propTypes), this.props);

        var newClassName = (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'menu'] = true, _cx2[prefix + 'ver'] = direction === 'ver', _cx2[prefix + 'hoz'] = direction === 'hoz', _cx2[prefix + 'menu-embeddable'] = embeddable, _cx2[prefix + 'menu-nowrap'] = hozInLine, _cx2[prefix + 'menu-selectable-' + selectMode] = selectMode, _cx2[className] = !!className, _cx2));

        var role = direction === 'hoz' ? 'menubar' : 'menu';
        var ariaMultiselectable = void 0;
        if ('selectMode' in this.props) {
            role = 'listbox';
            ariaMultiselectable = !!(selectMode === 'multiple');
        }

        var headerElement = header ? _react2.default.createElement('li', { className: prefix + 'menu-header', ref: this.menuHeaderRef }, header) : null;
        var itemsElement = !flatenContent && (header || footer) ? _react2.default.createElement('ul', { className: prefix + 'menu-content', ref: this.menuContentRef }, newChildren) : newChildren;
        var footerElement = footer ? _react2.default.createElement('li', {
            className: (0, _classnames2.default)((_cx3 = {}, _cx3[prefix + 'menu-footer'] = true, _cx3[footerWrapperClassName] = !!footerWrapperClassName, _cx3)),
            ref: this.menuFooterRef
        }, footer) : null;
        var shouldWrapItemsAndFooter = hozAlign === 'right' && !!header;

        if (rtl) {
            others.dir = 'rtl';
        }

        return _react2.default.createElement('ul', (0, _extends3.default)({
            role: role,
            onBlur: this.onBlur,
            className: newClassName,
            onKeyDown: this.handleEnter,
            'aria-multiselectable': ariaMultiselectable
        }, others), headerElement, shouldWrapItemsAndFooter ? _react2.default.createElement('div', { className: prefix + 'menu-hoz-right' }, itemsElement, footerElement) : null, !shouldWrapItemsAndFooter ? itemsElement : null, !shouldWrapItemsAndFooter ? footerElement : null);
    };

    return Menu;
}(_react.Component), _class.isNextMenu = true, _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    /**
     * 菜单项和子菜单
     */
    children: _propTypes2.default.node,
    /**
     * 点击菜单项触发的回调函数
     * @param {String} key 点击的菜单项的 key 值
     * @param {Object} item 点击的菜单项对象
     * @param {Object} event 点击的事件对象
     */
    onItemClick: _propTypes2.default.func,
    /**
     * 当前打开的子菜单的 key 值
     */
    openKeys: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 初始打开的子菜单的 key 值
     */
    defaultOpenKeys: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 初始展开所有的子菜单，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效，优先级高于 defaultOpenKeys
     */
    defaultOpenAll: _propTypes2.default.bool,
    /**
     * 打开或关闭子菜单触发的回调函数
     * @param {Array} key 打开的所有子菜单的 key 值
     * @param {Object} extra 额外参数
     * @param {String} extra.key 当前操作子菜单的 key 值
     * @param {Boolean} extra.open 是否是打开
     */
    onOpen: _propTypes2.default.func,
    /**
     * 子菜单打开的模式
     */
    mode: _propTypes2.default.oneOf(['inline', 'popup']),
    /**
     * 子菜单打开的触发行为
     */
    triggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 展开内连子菜单的模式，同时可以展开一个子菜单还是多个子菜单，该属性仅在 mode 为 inline 时生效
     */
    openMode: _propTypes2.default.oneOf(['single', 'multiple']),
    /**
     * 内连子菜单缩进距离
     */
    inlineIndent: _propTypes2.default.number,
    inlineArrowDirection: _propTypes2.default.oneOf(['down', 'right']),
    /**
     * 是否自动让弹层的宽度和菜单项保持一致，如果弹层的宽度比菜单项小则和菜单项保持一致，如果宽度大于菜单项则不做处理
     */
    popupAutoWidth: _propTypes2.default.bool,
    /**
     * 弹层的对齐方式
     */
    popupAlign: _propTypes2.default.oneOf(['follow', 'outside']),
    /**
     * 弹层自定义 props
     */
    popupProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    /**
     * 弹出子菜单自定义 className
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹出子菜单自定义 style
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 当前选中菜单项的 key 值
     */
    selectedKeys: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 初始选中菜单项的 key 值
     */
    defaultSelectedKeys: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 选中或取消选中菜单项触发的回调函数
     * @param {Array} selectedKeys 选中的所有菜单项的值
     * @param {Object} item 选中或取消选中的菜单项
     * @param {Object} extra 额外参数
     * @param {Boolean} extra.select 是否是选中
     * @param {Array} extra.key 菜单项的 key
     * @param {Object} extra.label 菜单项的文本
     * @param {Array} extra.keyPath 菜单项 key 的路径
     */
    onSelect: _propTypes2.default.func,
    /**
     * 选中模式，单选还是多选，默认无值，不可选
     */
    selectMode: _propTypes2.default.oneOf(['single', 'multiple']),
    /**
     * 是否只能选择第一层菜单项（不能选择子菜单中的菜单项）
     */
    shallowSelect: _propTypes2.default.bool,
    /**
     * 是否显示选中图标，如果设置为 false 需配合配置平台设置选中时的背景色以示区分
     */
    hasSelectedIcon: _propTypes2.default.bool,
    labelToggleChecked: _propTypes2.default.bool,
    /**
     * 是否将选中图标居右，仅当 hasSelectedIcon 为true 时生效。
     * 注意：SubMenu 上的选中图标一直居左，不受此API控制
     */
    isSelectIconRight: _propTypes2.default.bool,
    /**
     * 菜单第一层展示方向
     */
    direction: _propTypes2.default.oneOf(['ver', 'hoz']),
    /**
     * 横向菜单条 item 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效
     */
    hozAlign: _propTypes2.default.oneOf(['left', 'right']),
    /**
     * 横向菜单模式下，是否维持在一行，即超出一行折叠成 SubMenu 显示， 仅在 direction='hoz' mode='popup' 时生效
     */
    hozInLine: _propTypes2.default.bool,
    renderMore: _propTypes2.default.func,
    /**
     * 自定义菜单头部
     */
    header: _propTypes2.default.node,
    /**
     * 自定义菜单尾部
     */
    footer: _propTypes2.default.node,
    /**
     * 自定义菜单尾部容器的 className
     */
    footerWrapperClassName: _propTypes2.default.string,
    /**
     * 是否自动获得焦点
     */
    autoFocus: _propTypes2.default.bool,
    /**
     * 当前获得焦点的子菜单或菜单项 key 值
     */
    focusedKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.object]),
    focusable: _propTypes2.default.bool,
    onItemFocus: _propTypes2.default.func,
    onBlur: _propTypes2.default.func,
    /**
     * 是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Menu style={{lineHeight: '100px'}}>` 自定义高度
     * @version 1.18
     */
    embeddable: _propTypes2.default.bool,
    onItemKeyDown: _propTypes2.default.func,
    expandAnimation: _propTypes2.default.bool,
    itemClassName: _propTypes2.default.string,
    /**
     * 可配置的icons，包括 select 等
     */
    icons: _propTypes2.default.object,
    // content 是否为单层模式，目前主要在有 header 或 footer 的时候有意义
    flatenContent: _propTypes2.default.bool
}), _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    defaultOpenKeys: [],
    defaultOpenAll: false,
    onOpen: noop,
    mode: 'inline',
    triggerType: 'click',
    openMode: 'multiple',
    inlineIndent: 20,
    inlineArrowDirection: 'down',
    popupAutoWidth: false,
    popupAlign: 'follow',
    popupProps: {},
    defaultSelectedKeys: [],
    onSelect: noop,
    shallowSelect: false,
    hasSelectedIcon: true,
    isSelectIconRight: false,
    labelToggleChecked: true,
    direction: 'ver',
    hozAlign: 'left',
    hozInLine: false,
    autoFocus: false,
    focusable: true,
    embeddable: false,
    onItemFocus: noop,
    onItemKeyDown: noop,
    onItemClick: noop,
    expandAnimation: true,
    icons: {}
}, _temp);
Menu.displayName = 'Menu';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Menu);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

var _selectableItem = __webpack_require__(88);

var _selectableItem2 = _interopRequireDefault(_selectableItem);

var _popupItem = __webpack_require__(141);

var _popupItem2 = _interopRequireDefault(_popupItem);

var _util2 = __webpack_require__(89);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Expand = _animate2.default.Expand;
var bindCtx = _util.func.bindCtx;

/**
 * Menu.SubMenu
 * @order 1
 */

var SubMenu = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(SubMenu, _Component);

    function SubMenu(props) {
        (0, _classCallCheck3.default)(this, SubMenu);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['handleMouseEnter', 'handleMouseLeave', 'handleClick', 'handleOpen', 'afterLeave']);
        return _this;
    }

    SubMenu.prototype.componentDidMount = function componentDidMount() {
        this.itemNode = (0, _reactDom.findDOMNode)(this);
    };

    SubMenu.prototype.afterLeave = function afterLeave() {
        var _props = this.props,
            focused = _props.focused,
            root = _props.root;
        var focusable = root.props.focusable;

        if (focusable && focused) {
            this.itemNode.focus();
        }
    };

    SubMenu.prototype.getOpen = function getOpen() {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;
        var openKeys = root.state.openKeys;

        return openKeys.indexOf(_key) > -1;
    };

    SubMenu.prototype.handleMouseEnter = function handleMouseEnter(e) {
        this.handleOpen(true);

        this.props.onMouseEnter && this.props.onMouseEnter(e);
    };

    SubMenu.prototype.handleMouseLeave = function handleMouseLeave(e) {
        this.handleOpen(false);

        this.props.onMouseLeave && this.props.onMouseLeave(e);
    };

    SubMenu.prototype.handleClick = function handleClick(e) {
        var _props3 = this.props,
            root = _props3.root,
            selectable = _props3.selectable;
        var selectMode = root.props.selectMode;

        if (selectMode && selectable) {
            e.stopPropagation();
        }

        var open = this.getOpen();
        this.handleOpen(!open);
    };

    SubMenu.prototype.handleOpen = function handleOpen(open, triggerType, e) {
        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root;

        root.handleOpen(_key, open, triggerType, e);
    };

    SubMenu.prototype.passParentToChildren = function passParentToChildren(children) {
        var _this2 = this;

        var _props5 = this.props,
            mode = _props5.mode,
            root = _props5.root;

        return _react.Children.map(children, function (child) {
            // to fix https://github.com/alibaba-fusion/next/issues/952
            if (typeof child !== 'function' && (typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) !== 'object') {
                return child;
            }

            return (0, _react.cloneElement)(child, {
                parent: _this2,
                parentMode: mode || root.props.mode
            });
        });
    };

    SubMenu.prototype.renderInline = function renderInline() {
        var _cx, _cx2, _cx3, _cx4;

        var _props6 = this.props,
            _key = _props6._key,
            level = _props6.level,
            inlineLevel = _props6.inlineLevel,
            root = _props6.root,
            className = _props6.className,
            selectableFromProps = _props6.selectable,
            label = _props6.label,
            children = _props6.children,
            noIcon = _props6.noIcon,
            subMenuContentClassName = _props6.subMenuContentClassName,
            propsTriggerType = _props6.triggerType,
            parentMode = _props6.parentMode;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            selectMode = _root$props.selectMode,
            rootTriggerType = _root$props.triggerType,
            inlineArrowDirection = _root$props.inlineArrowDirection,
            expandAnimation = _root$props.expandAnimation,
            rtl = _root$props.rtl;

        var triggerType = propsTriggerType || rootTriggerType;
        var open = this.getOpen();

        var _root$state = root.state,
            selectedKeys = _root$state.selectedKeys,
            _k2n = _root$state._k2n;

        var isChildSelected = (0, _util2.getChildSelected)({
            _key: _key,
            _k2n: _k2n,
            selectMode: selectMode,
            selectedKeys: selectedKeys
        });

        var others = _util.obj.pickOthers(Object.keys(SubMenu.propTypes), this.props);

        var liProps = {
            className: (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-sub-menu-wrapper'] = true, _cx[className] = !!className, _cx))
        };
        var itemProps = {
            'aria-expanded': open,
            _key: _key,
            level: level,
            role: 'listitem',
            inlineLevel: inlineLevel,
            root: root,
            type: 'submenu',
            component: 'div',
            parentMode: parentMode,
            className: (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'opened'] = open, _cx2[prefix + 'child-selected'] = isChildSelected, _cx2))
        };

        if (typeof label === 'string') {
            itemProps.title = label;
        }

        var arrorProps = {
            type: inlineArrowDirection === 'right' ? 'arrow-right' : 'arrow-down',
            className: (0, _classnames2.default)((_cx3 = {}, _cx3[prefix + 'menu-icon-arrow'] = true, _cx3[prefix + 'menu-icon-arrow-down'] = inlineArrowDirection === 'down', _cx3[prefix + 'menu-icon-arrow-right'] = inlineArrowDirection === 'right', _cx3[prefix + 'open'] = open, _cx3))
        };

        var selectable = !!selectMode && selectableFromProps;
        var NewItem = selectable ? _selectableItem2.default : _item2.default;

        if (triggerType === 'hover') {
            liProps.onMouseEnter = this.handleMouseEnter;
            liProps.onMouseLeave = this.handleMouseLeave;
        } else if (selectable) {
            arrorProps.onClick = this.handleClick;
        } else {
            itemProps.onClick = this.handleClick;
        }

        var newSubMenuContentClassName = (0, _classnames2.default)((_cx4 = {}, _cx4[prefix + 'menu-sub-menu'] = true, _cx4[subMenuContentClassName] = !!subMenuContentClassName, _cx4));

        var roleMenu = 'menu',
            roleItem = 'menuitem';
        if ('selectMode' in root.props) {
            roleMenu = 'listbox';
            roleItem = 'option';
        }

        var subMenu = open ? _react2.default.createElement('ul', { role: roleMenu, dir: rtl ? 'rtl' : undefined, className: newSubMenuContentClassName }, this.passParentToChildren(children)) : null;

        return _react2.default.createElement('li', (0, _extends3.default)({ role: roleItem }, others, liProps), _react2.default.createElement(NewItem, itemProps, _react2.default.createElement('span', { className: prefix + 'menu-item-text' }, label), noIcon ? null : _react2.default.createElement(_icon2.default, arrorProps)), expandAnimation ? _react2.default.createElement(Expand, { animationAppear: false, afterLeave: this.afterLeave }, subMenu) : subMenu);
    };

    SubMenu.prototype.renderPopup = function renderPopup() {
        var _cx5;

        var _props7 = this.props,
            children = _props7.children,
            subMenuContentClassName = _props7.subMenuContentClassName,
            noIcon = _props7.noIcon,
            others = (0, _objectWithoutProperties3.default)(_props7, ['children', 'subMenuContentClassName', 'noIcon']);

        var root = this.props.root;
        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            popupClassName = _root$props2.popupClassName,
            popupStyle = _root$props2.popupStyle,
            rtl = _root$props2.rtl;

        var newClassName = (0, _classnames2.default)((_cx5 = {}, _cx5[prefix + 'menu'] = true, _cx5[prefix + 'ver'] = true, _cx5[popupClassName] = !!popupClassName, _cx5[subMenuContentClassName] = !!subMenuContentClassName, _cx5));

        others.rtl = rtl;

        return _react2.default.createElement(_popupItem2.default, (0, _extends3.default)({}, others, { noIcon: noIcon, hasSubMenu: true }), _react2.default.createElement('ul', { role: 'menu', dir: rtl ? 'rtl' : undefined, className: newClassName, style: popupStyle }, this.passParentToChildren(children)));
    };

    SubMenu.prototype.render = function render() {
        var _props8 = this.props,
            mode = _props8.mode,
            root = _props8.root;

        var newMode = mode || root.props.mode;

        return newMode === 'popup' ? this.renderPopup() : this.renderInline();
    };

    return SubMenu;
}(_react.Component), _class.menuChildType = 'submenu', _class.propTypes = {
    _key: _propTypes2.default.string,
    root: _propTypes2.default.object,
    level: _propTypes2.default.number,
    inlineLevel: _propTypes2.default.number,
    groupIndent: _propTypes2.default.number,
    /**
     * 标签内容
     */
    label: _propTypes2.default.node,
    /**
     * 是否可选，该属性仅在设置 Menu 组件 selectMode 属性后生效
     */
    selectable: _propTypes2.default.bool,
    /**
     * 子菜单打开方式，如果设置会覆盖 Menu 上的同名属性
     * @default Menu 的 mode 属性值
     */
    mode: _propTypes2.default.oneOf(['inline', 'popup']),
    /**
     * 是否需要提示当前项可展开的 icon，默认是有的
     */
    noIcon: _propTypes2.default.bool,
    /**
     * 菜单项或下一级子菜单
     */
    children: _propTypes2.default.node,
    onMouseEnter: _propTypes2.default.func,
    onMouseLeave: _propTypes2.default.func,
    subMenuContentClassName: _propTypes2.default.string,
    triggerType: _propTypes2.default.oneOf(['click', 'hover']),
    align: _propTypes2.default.oneOf(['outside', 'follow']),
    parentMode: _propTypes2.default.oneOf(['inline', 'popup']),
    parent: _propTypes2.default.any
}, _class.defaultProps = {
    groupIndent: 0,
    noIcon: false,
    selectable: false
}, _temp);
SubMenu.displayName = 'SubMenu';
exports.default = SubMenu;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _util = __webpack_require__(4);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

var _selectableItem = __webpack_require__(88);

var _selectableItem2 = _interopRequireDefault(_selectableItem);

var _util2 = __webpack_require__(89);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var setStyle = _util.dom.setStyle;

var Popup = _overlay2.default.Popup;

/**
 * Menu.PopupItem
 * @order 2
 */
var PopupItem = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(PopupItem, _Component);

    function PopupItem(props) {
        (0, _classCallCheck3.default)(this, PopupItem);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['handleOpen', 'handlePopupOpen', 'handlePopupClose', 'getPopup']);
        return _this;
    }

    PopupItem.prototype.getPopup = function getPopup(ref) {
        this.popup = ref;
    };

    PopupItem.prototype.getOpen = function getOpen() {
        var _props = this.props,
            _key = _props._key,
            root = _props.root;
        var openKeys = root.state.openKeys;

        return openKeys.indexOf(_key) > -1;
    };

    PopupItem.prototype.getPopupProps = function getPopupProps() {
        var popupProps = this.props.root.props.popupProps;

        if (typeof popupProps === 'function') {
            popupProps = popupProps(this.props);
        }
        return popupProps;
    };

    PopupItem.prototype.handleOpen = function handleOpen(open, triggerType, e) {
        var _props2 = this.props,
            _key = _props2._key,
            root = _props2.root;

        root.handleOpen(_key, open, triggerType, e);

        var popupProps = this.popupProps;
        popupProps.onVisibleChange && popupProps.onVisibleChange(open, triggerType, e);
    };

    PopupItem.prototype.handlePopupOpen = function handlePopupOpen() {
        var _props3 = this.props,
            root = _props3.root,
            level = _props3.level,
            align = _props3.align,
            autoWidth = _props3.autoWidth;
        var _root$props = root.props,
            rootPopupAutoWidth = _root$props.popupAutoWidth,
            rootPopupAlign = _root$props.popupAlign,
            direction = _root$props.direction;

        var popupAlign = align || rootPopupAlign;
        var popupAutoWidth = 'autoWidth' in this.props ? autoWidth : rootPopupAutoWidth;
        try {
            // avoid errors while dom removed and js executing
            var itemNode = (0, _reactDom.findDOMNode)(this);
            var menuNode = itemNode.parentNode;
            this.popupNode = this.popup.getInstance().overlay.getInstance().getContentNode();
            root.popupNodes.push(this.popupNode);

            if (popupAutoWidth) {
                var targetNode = direction === 'hoz' && level === 1 ? itemNode : menuNode;

                if (targetNode.offsetWidth > this.popupNode.offsetWidth) {
                    setStyle(this.popupNode, 'width', targetNode.offsetWidth + 'px');
                }
            }
            if (popupAlign === 'outside' && !(direction === 'hoz' && level === 1)) {
                setStyle(this.popupNode, 'height', menuNode.offsetHeight + 'px');
                this.popupNode.firstElementChild && setStyle(this.popupNode.firstElementChild, 'overflow-y', 'auto');
            }
            // removeClass(this.popupNode, `${prefix}hide`);

            var popupProps = this.popupProps;
            popupProps.onOpen && popupProps.onOpen();
        } catch (error) {
            return null;
        }
    };

    PopupItem.prototype.handlePopupClose = function handlePopupClose() {
        var root = this.props.root;

        var popupNodes = root.popupNodes;
        var index = popupNodes.indexOf(this.popupNode);
        index > -1 && popupNodes.splice(index, 1);

        var popupProps = this.popupProps;
        popupProps.onClose && popupProps.onClose();
    };

    PopupItem.prototype.renderItem = function renderItem(selectable, children, others) {
        var _cx;

        var _props4 = this.props,
            _key = _props4._key,
            root = _props4.root,
            level = _props4.level,
            inlineLevel = _props4.inlineLevel,
            label = _props4.label,
            className = _props4.className;
        var _root$props2 = root.props,
            prefix = _root$props2.prefix,
            selectMode = _root$props2.selectMode;

        var NewItem = selectable ? _selectableItem2.default : _item2.default;
        var open = this.getOpen();

        var _root$state = root.state,
            selectedKeys = _root$state.selectedKeys,
            _k2n = _root$state._k2n;

        var isChildSelected = (0, _util2.getChildSelected)({
            _key: _key,
            _k2n: _k2n,
            selectMode: selectMode,
            selectedKeys: selectedKeys
        });

        var itemProps = {
            'aria-haspopup': true,
            'aria-expanded': open,
            _key: _key,
            root: root,
            level: level,
            inlineLevel: inlineLevel,
            type: 'submenu'
        };

        itemProps.className = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'opened'] = open, _cx[prefix + 'child-selected'] = isChildSelected, _cx[className] = !!className, _cx));

        return _react2.default.createElement(NewItem, (0, _extends3.default)({}, itemProps, others), _react2.default.createElement('span', { className: prefix + 'menu-item-text' }, label), children);
    };

    PopupItem.prototype.renderPopup = function renderPopup(trigger, triggerType, positionProps, children) {
        var _this2 = this;

        var _props5 = this.props,
            root = _props5.root,
            level = _props5.level,
            selectable = _props5.selectable,
            propCls = _props5.className;
        var direction = root.props.direction;

        this.popupProps = this.getPopupProps();
        var open = this.getOpen();

        if (direction === 'hoz' && level === 1 && selectable) {
            positionProps.target = function () {
                return (0, _reactDom.findDOMNode)(_this2);
            };
        }

        var posCls = positionProps.className,
            otherPostion = (0, _objectWithoutProperties3.default)(positionProps, ['className']);

        var className = (0, _classnames2.default)(propCls, posCls);

        return _react2.default.createElement(Popup, (0, _extends3.default)({
            ref: this.getPopup
        }, otherPostion, this.popupProps, {
            canCloseByEsc: false,
            trigger: trigger,
            triggerType: triggerType,
            visible: open,
            pinFollowBaseElementWhenFixed: true,
            onVisibleChange: this.handleOpen,
            onOpen: this.handlePopupOpen,
            onClose: this.handlePopupClose
        }), _react2.default.createElement('div', { className: className }, children));
    };

    PopupItem.prototype.render = function render() {
        var _this3 = this;

        var _props6 = this.props,
            root = _props6.root,
            level = _props6.level,
            hasSubMenu = _props6.hasSubMenu,
            selectableFromProps = _props6.selectable,
            children = _props6.children,
            triggerType = _props6.triggerType,
            align = _props6.align,
            noIcon = _props6.noIcon,
            rtl = _props6.rtl;

        var others = _util.obj.pickOthers(Object.keys(PopupItem.propTypes), this.props);
        var _root$props3 = root.props,
            prefix = _root$props3.prefix,
            selectMode = _root$props3.selectMode,
            direction = _root$props3.direction,
            rootPopupAlign = _root$props3.popupAlign,
            rootTriggerType = _root$props3.triggerType;

        var popupAlign = align || rootPopupAlign;
        var newTriggerType = triggerType || (hasSubMenu ? rootTriggerType : 'hover');
        var newChildren = Array.isArray(children) ? children[0] : children;
        // let newChildren = Array.isArray(children) ? children[0] : children;
        // newChildren = cloneElement(newChildren, {
        //     className: cx({
        //         [`${prefix}menu-popup-content`]: true,
        //         [newChildren.props.className]: !!newChildren.props.className,
        //         [`${prefix}hide`]: popupAutoWidth || popupAlign === 'outside'
        //     })
        // });
        var selectable = selectMode && selectableFromProps;
        var triggerIsIcon = selectable && newTriggerType === 'click';
        var open = this.getOpen();

        var positionProps = {};
        var arrowProps = void 0;

        if (direction === 'hoz' && level === 1) {
            var _cx2;

            positionProps.align = 'tl bl';
            positionProps.className = prefix + 'menu-spacing-tb';

            arrowProps = {
                type: 'arrow-down',
                className: (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'menu-hoz-icon-arrow'] = true, _cx2[prefix + 'open'] = open, _cx2))
            };
        } else {
            if (popupAlign === 'outside') {
                positionProps.target = function () {
                    return (0, _reactDom.findDOMNode)(root);
                };
                positionProps.align = 'tl tr';

                positionProps.className = prefix + 'menu-spacing-lr ' + prefix + 'menu-outside';
            } else {
                if (triggerIsIcon) {
                    positionProps.target = function () {
                        return (0, _reactDom.findDOMNode)(_this3);
                    };
                }
                positionProps.align = 'tl tr';
                positionProps.className = prefix + 'menu-spacing-lr';
            }

            arrowProps = {
                type: 'arrow-right',
                className: prefix + 'menu-icon-arrow ' + prefix + 'menu-symbol-popupfold'
            };
        }

        var arrow = _react2.default.createElement(_icon2.default, arrowProps);
        var trigger = triggerIsIcon ? arrow : this.renderItem(selectable, noIcon ? null : arrow, others);
        var popup = this.renderPopup(trigger, newTriggerType, positionProps, newChildren);
        return triggerIsIcon ? this.renderItem(selectable, popup, others) : popup;
    };

    return PopupItem;
}(_react.Component), _class.menuChildType = 'submenu', _class.propTypes = {
    _key: _propTypes2.default.string,
    root: _propTypes2.default.object,
    level: _propTypes2.default.number,
    hasSubMenu: _propTypes2.default.bool,
    noIcon: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    selectable: _propTypes2.default.bool,
    /**
     * 标签内容
     */
    label: _propTypes2.default.node,
    /**
     * 自定义弹层内容
     */
    children: _propTypes2.default.node,
    className: _propTypes2.default.string,
    /**
     * 子菜单打开的触发行为
     */
    triggerType: _propTypes2.default.oneOf(['click', 'hover']),
    align: _propTypes2.default.oneOf(['outside', 'follow']),
    autoWidth: _propTypes2.default.bool
}, _class.defaultProps = {
    selectable: false,
    noIcon: false
}, _temp);
PopupItem.displayName = 'PopupItem';
exports.default = PopupItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _checkbox = __webpack_require__(48);

var _checkbox2 = _interopRequireDefault(_checkbox);

var _radio = __webpack_require__(49);

var _radio2 = _interopRequireDefault(_radio);

var _util = __webpack_require__(4);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = {};
var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;
var CheckableItem = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CheckableItem, _Component);

    function CheckableItem(props) {
        (0, _classCallCheck3.default)(this, CheckableItem);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        bindCtx(_this, ['stopPropagation', 'handleKeyDown', 'handleClick']);
        _this.id = _util.htmlId.escapeForId('checkable-item-' + (props.id || props._key));
        return _this;
    }

    CheckableItem.prototype.stopPropagation = function stopPropagation(e) {
        e.stopPropagation();
    };

    CheckableItem.prototype.handleCheck = function handleCheck(e) {
        var _props = this.props,
            checkType = _props.checkType,
            checked = _props.checked,
            onChange = _props.onChange;

        if (!(checkType === 'radio' && checked)) {
            onChange(!checked, e);
        }
    };

    CheckableItem.prototype.handleKeyDown = function handleKeyDown(e) {
        if (e.keyCode === _util.KEYCODE.SPACE && !this.props.checkDisabled) {
            this.handleCheck(e);
        }

        this.props.onKeyDown && this.props.onKeyDown(e);
    };

    CheckableItem.prototype.handleClick = function handleClick(e) {
        this.handleCheck(e);

        this.props.onClick && this.props.onClick(e);
    };

    CheckableItem.prototype.renderCheck = function renderCheck() {
        var _props2 = this.props,
            root = _props2.root,
            checked = _props2.checked,
            indeterminate = _props2.indeterminate,
            disabled = _props2.disabled,
            checkType = _props2.checkType,
            checkDisabled = _props2.checkDisabled,
            onChange = _props2.onChange;
        var labelToggleChecked = root.props.labelToggleChecked;

        var Check = checkType === 'radio' ? _radio2.default : _checkbox2.default;

        var checkProps = {
            tabIndex: '-1',
            checked: checked,
            disabled: disabled || checkDisabled
        };
        if (checkType === 'checkbox') {
            checkProps.indeterminate = indeterminate;
        }
        if (!labelToggleChecked) {
            checkProps.onChange = onChange;
            checkProps.onClick = this.stopPropagation;
        }

        return _react2.default.createElement(Check, (0, _extends3.default)({ 'aria-labelledby': this.id }, checkProps));
    };

    CheckableItem.prototype.render = function render() {
        var _props3 = this.props,
            _key = _props3._key,
            root = _props3.root,
            checked = _props3.checked,
            disabled = _props3.disabled,
            onClick = _props3.onClick,
            helper = _props3.helper,
            children = _props3.children;
        var _root$props = root.props,
            prefix = _root$props.prefix,
            labelToggleChecked = _root$props.labelToggleChecked;

        var others = pickOthers(Object.keys(CheckableItem.propTypes), this.props);

        var newProps = (0, _extends3.default)({
            _key: _key,
            root: root,
            disabled: disabled,
            type: 'item',
            onClick: onClick,
            onKeyDown: this.handleKeyDown
        }, others);
        if (labelToggleChecked && !disabled) {
            newProps.onClick = this.handleClick;
        }

        var title = void 0;
        if (typeof children === 'string') {
            title = children;
        }

        return _react2.default.createElement(_item2.default, (0, _extends3.default)({ 'aria-checked': checked, title: title }, newProps), this.renderCheck(), _react2.default.createElement('span', { className: prefix + 'menu-item-text', id: this.id }, children), helper ? _react2.default.createElement('div', { className: prefix + 'menu-item-helper' }, helper) : null);
    };

    return CheckableItem;
}(_react.Component), _class.propTypes = {
    _key: _propTypes2.default.string,
    root: _propTypes2.default.object,
    disabled: _propTypes2.default.bool,
    inlineIndent: _propTypes2.default.number,
    checked: _propTypes2.default.bool,
    indeterminate: _propTypes2.default.bool,
    onChange: _propTypes2.default.func,
    checkType: _propTypes2.default.oneOf(['checkbox', 'radio']),
    checkDisabled: _propTypes2.default.bool,
    helper: _propTypes2.default.node,
    children: _propTypes2.default.node,
    onKeyDown: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    id: _propTypes2.default.string
}, _class.defaultProps = {
    disabled: false,
    checked: false,
    indeterminate: false,
    checkType: 'checkbox',
    checkDisabled: false,
    onChange: noop
}, _temp);
CheckableItem.displayName = 'CheckableItem';
exports.default = CheckableItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var React = tslib_1.__importStar(__webpack_require__(0));
var PropTypes = tslib_1.__importStar(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var mixin_ui_state_1 = tslib_1.__importDefault(__webpack_require__(144));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var with_context_1 = tslib_1.__importDefault(__webpack_require__(288));
var util_1 = __webpack_require__(4);
var noop = util_1.func.noop;
function isChecked(selectedValue, value) {
    return selectedValue.indexOf(value) > -1;
}
/**
 * Checkbox
 * @order 1
 */
var Checkbox = /** @class */function (_super) {
    tslib_1.__extends(Checkbox, _super);
    function Checkbox(props) {
        var _this = _super.call(this, props) || this;
        var context = props.context;
        var checked, indeterminate;
        if ('checked' in props) {
            checked = props.checked;
        } else {
            checked = props.defaultChecked;
        }
        if ('indeterminate' in props) {
            indeterminate = props.indeterminate;
        } else {
            indeterminate = props.defaultIndeterminate;
        }
        if (context.__group__) {
            checked = isChecked(context.selectedValue, props.value);
        }
        _this.state = {
            checked: checked,
            indeterminate: indeterminate
        };
        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }
    Checkbox.getDerivedStateFromProps = function (nextProps) {
        var nextContext = nextProps.context;
        var state = {};
        if (nextContext.__group__) {
            if ('selectedValue' in nextContext) {
                state.checked = isChecked(nextContext.selectedValue, nextProps.value);
            }
        } else if ('checked' in nextProps) {
            state.checked = nextProps.checked;
        }
        if ('indeterminate' in nextProps) {
            state.indeterminate = nextProps.indeterminate;
        }
        return state;
    };
    Object.defineProperty(Checkbox.prototype, "disabled", {
        get: function get() {
            var props = this.props;
            var context = props.context;
            return props.disabled || 'disabled' in context && context.disabled;
        },
        enumerable: false,
        configurable: true
    });
    Checkbox.prototype.shouldComponentUpdate = function (nextProps, nextState, nextContext) {
        var shallowEqual = util_1.obj.shallowEqual;
        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context, nextContext);
    };
    Checkbox.prototype.onChange = function (event) {
        var _a, _b;
        var _c = this.props,
            context = _c.context,
            value = _c.value;
        var checked = event.target.checked;
        if (this.disabled) {
            return;
        }
        if (context.__group__) {
            context.onChange(value, event);
        } else {
            if (!('checked' in this.props)) {
                this.setState({
                    checked: checked
                });
            }
            if (!('indeterminate' in this.props)) {
                this.setState({
                    indeterminate: false
                });
            }
            (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, checked, event);
        }
    };
    Checkbox.prototype.render = function () {
        var _a, _b;
        /* eslint-disable no-unused-vars */
        var _c = this.props,
            id = _c.id,
            className = _c.className,
            children = _c.children,
            style = _c.style,
            label = _c.label,
            onMouseEnter = _c.onMouseEnter,
            onMouseLeave = _c.onMouseLeave,
            rtl = _c.rtl,
            isPreview = _c.isPreview,
            renderPreview = _c.renderPreview,
            context = _c.context,
            value = _c.value,
            name = _c.name,
            otherProps = tslib_1.__rest(_c, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "rtl", "isPreview", "renderPreview", "context", "value", "name"]);
        var checked = !!this.state.checked;
        var disabled = this.disabled;
        var indeterminate = !!this.state.indeterminate;
        var prefix = context.prefix || this.props.prefix;
        var others = util_1.obj.pickOthers(Checkbox.propTypes, otherProps);
        var othersData = util_1.obj.pickAttrsWith(others, 'data-');
        if (otherProps.title) {
            othersData.title = otherProps.title;
        }
        var childInput = React.createElement("input", tslib_1.__assign({}, util_1.obj.pickOthers(Checkbox.propTypes, otherProps), { id: id, value: value, name: name, disabled: disabled, checked: checked, type: "checkbox", onChange: this.onChange, "aria-checked": indeterminate ? 'mixed' : checked, className: "".concat(prefix, "checkbox-input") }));
        // disable 无状态操作
        if (!disabled) {
            childInput = this.getStateElement(childInput);
        }
        var cls = (0, classnames_1.default)(className, (_a = {}, _a["".concat(prefix, "checkbox-wrapper")] = true, _a.checked = checked, _a.disabled = disabled, _a.indeterminate = indeterminate, _a[this.getStateClassName()] = true, _a));
        var labelCls = "".concat(prefix, "checkbox-label");
        var type = indeterminate ? 'semi-select' : 'select';
        if (isPreview) {
            var previewCls = (0, classnames_1.default)(className, "".concat(prefix, "form-preview"));
            if ('renderPreview' in this.props) {
                return React.createElement("div", tslib_1.__assign({ id: id, dir: rtl ? 'rtl' : undefined }, othersData, { className: previewCls }), renderPreview === null || renderPreview === void 0 ? void 0 : renderPreview(checked, this.props));
            }
            return React.createElement("p", tslib_1.__assign({ id: id, dir: rtl ? 'rtl' : undefined }, othersData, { className: previewCls }), checked && (children || label || this.state.value));
        }
        var iconCls = (0, classnames_1.default)((_b = {
            zoomIn: indeterminate
        }, _b["".concat(prefix, "checkbox-semi-select-icon")] = indeterminate, _b["".concat(prefix, "checkbox-select-icon")] = !indeterminate, _b));
        return React.createElement("label", tslib_1.__assign({}, othersData, { className: cls, style: style, dir: rtl ? 'rtl' : undefined, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave }), React.createElement("span", { className: "".concat(prefix, "checkbox") }, React.createElement("span", { className: "".concat(prefix, "checkbox-inner") }, React.createElement(icon_1.default, { type: type, size: "xs", className: iconCls })), childInput), [label, children].map(function (item, i) {
            return item !== undefined && item !== null ? React.createElement("span", { key: i, className: labelCls }, item) : null;
        }));
    };
    Checkbox.displayName = 'Checkbox';
    Checkbox.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: PropTypes.string, rtl: PropTypes.bool, className: PropTypes.string, id: PropTypes.string, style: PropTypes.object, checked: PropTypes.bool, defaultChecked: PropTypes.bool, disabled: PropTypes.bool, label: PropTypes.node, indeterminate: PropTypes.bool, defaultIndeterminate: PropTypes.bool, onChange: PropTypes.func, onMouseEnter: PropTypes.func, onMouseLeave: PropTypes.func, value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]), name: PropTypes.string, isPreview: PropTypes.bool, renderPreview: PropTypes.func });
    Checkbox.defaultProps = {
        defaultChecked: false,
        defaultIndeterminate: false,
        onChange: noop,
        onMouseEnter: noop,
        onMouseLeave: noop,
        prefix: 'next-',
        isPreview: false
    };
    return Checkbox;
}(mixin_ui_state_1.default);
exports.default = config_provider_1.default.config((0, with_context_1.default)((0, react_lifecycles_compat_1.polyfill)(Checkbox)));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var util_1 = __webpack_require__(4);
var makeChain = util_1.func.makeChain;
/**
 * UIState 为一些特殊元素的状态响应提供了标准的方式，
 * 尤其适合 CSS 无法完全定制的控件，比如 checkbox，radio 等。
 * 若组件 disable 则自行判断是否需要绑定状态管理。
 * 注意：disable 不会触发事件，请使用 resetUIState 还原状态
 */
var UIState = /** @class */function (_super) {
    tslib_1.__extends(UIState, _super);
    function UIState(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        ['_onUIFocus', '_onUIBlur'].forEach(function (item) {
            _this[item] = _this[item].bind(_this);
        });
        return _this;
    }
    // base 事件绑定的元素
    UIState.prototype.getStateElement = function (base) {
        var _a = this.props,
            onFocus = _a.onFocus,
            onBlur = _a.onBlur;
        return react_1.default.cloneElement(base, {
            onFocus: makeChain(this._onUIFocus, onFocus),
            onBlur: makeChain(this._onUIBlur, onBlur)
        });
    };
    // 获取状态 classname
    UIState.prototype.getStateClassName = function () {
        var focused = this.state.focused;
        return (0, classnames_1.default)({
            focused: focused
        });
    };
    // 复原状态
    UIState.prototype.resetUIState = function () {
        this.setState({
            focused: false
        });
    };
    UIState.prototype._onUIFocus = function () {
        this.setState({
            focused: true
        });
    };
    UIState.prototype._onUIBlur = function () {
        this.setState({
            focused: false
        });
    };
    return UIState;
}(react_1.Component);
exports.default = UIState;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var mixin_ui_state_1 = tslib_1.__importDefault(__webpack_require__(144));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var with_context_1 = tslib_1.__importDefault(__webpack_require__(290));
var util_1 = __webpack_require__(4);
var makeChain = util_1.func.makeChain,
    noop = util_1.func.noop;
var Radio = /** @class */function (_super) {
    tslib_1.__extends(Radio, _super);
    function Radio(props) {
        var _this = _super.call(this, props) || this;
        var context = props.context;
        var checked;
        if (context.__group__) {
            checked = context.selectedValue === props.value;
        } else if ('checked' in props) {
            checked = props.checked;
        } else {
            checked = props.defaultChecked;
        }
        _this.state = { checked: checked };
        _this.radioRef = null;
        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }
    Radio.getDerivedStateFromProps = function (nextProps) {
        var nextContext = nextProps.context;
        if (nextContext.__group__ && 'selectedValue' in nextContext) {
            return {
                checked: nextContext.selectedValue === nextProps.value
            };
        } else if ('checked' in nextProps) {
            return {
                checked: nextProps.checked
            };
        }
        return null;
    };
    Object.defineProperty(Radio.prototype, "disabled", {
        get: function get() {
            var props = this.props;
            var context = props.context;
            var disabled = props.disabled || context.__group__ && 'disabled' in context && context.disabled;
            return disabled;
        },
        enumerable: false,
        configurable: true
    });
    Radio.prototype.shouldComponentUpdate = function (nextProps, nextState, nextContext) {
        var shallowEqual = util_1.obj.shallowEqual;
        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context, nextContext);
    };
    Radio.prototype.componentDidUpdate = function () {
        // when disabled, reset UIState
        if (this.disabled) {
            // only class has an impact, no effect on visual
            this.resetUIState();
        }
    };
    Radio.prototype.onChange = function (e) {
        var checked = e.target.checked;
        var _a = this.props,
            context = _a.context,
            value = _a.value;
        if (context.__group__) {
            context.onChange(value, e);
        } else if (this.state.checked !== checked) {
            if (!('checked' in this.props)) {
                this.setState({
                    checked: checked
                });
            }
            this.props.onChange(checked, e);
        }
    };
    Radio.prototype.focus = function () {
        if (this.radioRef) {
            this.radioRef.focus();
            this._onUIFocus();
        }
    };
    Radio.prototype.render = function () {
        var _a, _b, _c;
        var _this = this;
        var _d = this.props,
            id = _d.id,
            className = _d.className,
            children = _d.children,
            style = _d.style,
            label = _d.label,
            onMouseEnter = _d.onMouseEnter,
            onMouseLeave = _d.onMouseLeave,
            tabIndex = _d.tabIndex,
            rtl = _d.rtl,
            name = _d.name,
            isPreview = _d.isPreview,
            renderPreview = _d.renderPreview,
            value = _d.value,
            context = _d.context,
            otherProps = tslib_1.__rest(_d, ["id", "className", "children", "style", "label", "onMouseEnter", "onMouseLeave", "tabIndex", "rtl", "name", "isPreview", "renderPreview", "value", "context"]);
        var checked = !!this.state.checked;
        var disabled = this.disabled;
        var isButton = context.isButton;
        var prefix = this.props.prefix;
        var others = util_1.obj.pickOthers(Radio.propTypes, otherProps);
        var othersData = util_1.obj.pickAttrsWith(others, 'data-');
        if (isPreview) {
            var previewCls = (0, classnames_1.default)(className, "".concat(prefix, "form-preview"));
            if ('renderPreview' in this.props) {
                return react_1.default.createElement("div", tslib_1.__assign({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }), renderPreview(checked, this.props));
            }
            return react_1.default.createElement("p", tslib_1.__assign({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }), checked && (children || label || value));
        }
        var input = react_1.default.createElement("input", tslib_1.__assign({}, util_1.obj.pickOthers(othersData, others), { name: name, id: id, tabIndex: tabIndex, disabled: disabled, checked: checked, type: "radio", onChange: this.onChange, "aria-checked": checked, className: "".concat(prefix, "radio-input"), ref: function ref(e) {
                _this.radioRef = e;
            } }));
        // disabled do not hove focus state
        if (!disabled) {
            input = this.getStateElement(input);
        }
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "radio")] = true, _a.checked = checked, _a.disabled = disabled, _a[this.getStateClassName()] = true, _a));
        var clsInner = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "radio-inner")] = true, _b.press = checked, _b.unpress = !checked, _b));
        var clsWrapper = (0, classnames_1.default)(className, (_c = {}, _c["".concat(prefix, "radio-wrapper")] = true, _c.checked = checked, _c.disabled = disabled, _c[this.getStateClassName()] = true, _c));
        var childrenCls = "".concat(prefix, "radio-label");
        var radioComp = !isButton ? react_1.default.createElement("span", { className: cls }, react_1.default.createElement("span", { className: clsInner }), input) : react_1.default.createElement("span", { className: "".concat(prefix, "radio-single-input") }, input);
        return react_1.default.createElement("label", tslib_1.__assign({}, othersData, { dir: rtl ? 'rtl' : 'ltr', style: style, "aria-checked": checked, "aria-disabled": disabled, className: clsWrapper, onMouseEnter:
            // @ts-expect-error _onUIMouseEnter is not defined
            disabled ? onMouseEnter : makeChain(this._onUIMouseEnter, onMouseEnter), onMouseLeave:
            // @ts-expect-error _onUIMouseLeave is not defined
            disabled ? onMouseLeave : makeChain(this._onUIMouseLeave, onMouseLeave) }), radioComp, [children, label].map(function (d, i) {
            return d !== undefined ? react_1.default.createElement("span", { key: i, className: childrenCls }, d) : null;
        }));
    };
    Radio.displayName = 'Radio';
    Radio.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { className: prop_types_1.default.string, id: prop_types_1.default.string, style: prop_types_1.default.object, checked: prop_types_1.default.bool, defaultChecked: prop_types_1.default.bool, label: prop_types_1.default.node, onChange: prop_types_1.default.func, onMouseEnter: prop_types_1.default.func, onMouseLeave: prop_types_1.default.func, disabled: prop_types_1.default.bool, value: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]), name: prop_types_1.default.string, isPreview: prop_types_1.default.bool, renderPreview: prop_types_1.default.func });
    Radio.defaultProps = {
        onChange: noop,
        onMouseLeave: noop,
        onMouseEnter: noop,
        tabIndex: 0,
        prefix: 'next-',
        isPreview: false
    };
    Radio.contextTypes = {
        onChange: prop_types_1.default.func,
        __group__: prop_types_1.default.bool,
        isButton: prop_types_1.default.bool,
        selectedValue: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]),
        disabled: prop_types_1.default.bool
    };
    return Radio;
}(mixin_ui_state_1.default);
exports.default = config_provider_1.default.config((0, with_context_1.default)((0, react_lifecycles_compat_1.polyfill)(Radio)));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var tag_1 = tslib_1.__importDefault(__webpack_require__(90));
var tag_group_1 = tslib_1.__importDefault(__webpack_require__(302));
var selectable_1 = tslib_1.__importDefault(__webpack_require__(303));
var closeable_1 = tslib_1.__importDefault(__webpack_require__(304));
var component_1 = __webpack_require__(22);
var ConfigTag = config_provider_1.default.config(tag_1.default, {
    transform: function transform(props, deprecated) {
        var _a = props,
            shape = _a.shape,
            type = _a.type;
        if (shape === 'selectable') {
            deprecated('shape=selectable', 'Tag.Selectable', 'Tag');
        }
        if (shape === 'deletable') {
            deprecated('shape=deletable', 'Tag.Closeable', 'Tag');
        }
        if (shape === 'link') {
            deprecated('shape=link', '<Tag><a href="x">x</a></Tag>', 'Tag');
        }
        if (shape === 'readonly' || shape === 'interactive') {
            util_1.log.warning("Warning: [ shape=".concat(shape, " ] is deprecated at [ Tag ]"));
        }
        if (type === 'secondary') {
            util_1.log.warning('Warning: [ type=secondary ] is deprecated at [ Tag ]');
        }
        ['count', 'marked', 'value', 'onChange'].forEach(function (key) {
            if (key in props) {
                util_1.log.warning("Warning: [ ".concat(key, " ] is deprecated at [ Tag ]"));
            }
        });
        if ('selected' in props || 'defaultSelected' in props) {
            util_1.log.warning('Warning: [ selected|defaultSelected  ] is deprecated at [ Tag ], use [ checked|defaultChecked ] at [ Tag.Selectable ] instead of it');
        }
        if ('closed' in props) {
            util_1.log.warning('Warning: [ closed  ] is deprecated at [ Tag ], use [ onClose ] at [ Tag.Closeable ] instead of it');
        }
        if ('onSelect' in props) {
            deprecated('onSelect', '<Tag.Selectable onChange/>', 'Tag');
        }
        if ('afterClose' in props) {
            util_1.log.warning('Warning: [ afterClose  ] is deprecated at [ Tag ], use [ afterClose ] at [ Tag.Closeable ] instead of it');
        }
        return props;
    }
});
var ConfigClosable = config_provider_1.default.config(closeable_1.default);
var TagWithSub = (0, component_1.assignSubComponent)(ConfigTag, {
    Group: config_provider_1.default.config(tag_group_1.default),
    Selectable: config_provider_1.default.config(selectable_1.default),
    // 有的地方叫做 Closeable 有的地方用 Closeable, 为了保持兼容 文档类出现 Closeable, Closeable 可以继续用
    Closable: ConfigClosable,
    Closeable: ConfigClosable
});
exports.default = TagWithSub;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _base = __webpack_require__(148);

var _base2 = _interopRequireDefault(_base);

var _group = __webpack_require__(149);

var _group2 = _interopRequireDefault(_group);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

// preventDefault here can stop onBlur to keep focus state
function preventDefault(e) {
    e.preventDefault();
}

/** Input */
var Input = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(Input, _Base);

    function Input(props) {
        (0, _classCallCheck3.default)(this, Input);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _this.handleKeyDown = function (e) {
            if (e.keyCode === 13) {
                _this.props.onPressEnter(e);
            }

            _this.onKeyDown(e);
        };

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: typeof value === 'undefined' ? '' : value
        };
        return _this;
    }

    // `Enter` was considered to be two chars in chrome , but one char in ie.
    // so we make all `Enter` to be two chars


    Input.prototype.getValueLength = function getValueLength(value) {
        var nv = '' + value;
        var strLen = this.props.getValueLength(nv);
        if (typeof strLen !== 'number') {
            strLen = nv.length;
        }

        return strLen;
    };

    Input.prototype.renderControl = function renderControl() {
        var _this2 = this;

        var _props = this.props,
            hasClear = _props.hasClear,
            readOnly = _props.readOnly,
            state = _props.state,
            prefix = _props.prefix,
            hint = _props.hint,
            extra = _props.extra,
            locale = _props.locale,
            disabled = _props.disabled,
            hoverShowClear = _props.hoverShowClear;

        var lenWrap = this.renderLength();

        var stateWrap = null;
        if (state === 'success') {
            stateWrap = _react2.default.createElement(_icon2.default, { type: 'success-filling', className: prefix + 'input-success-icon' });
        } else if (state === 'loading') {
            stateWrap = _react2.default.createElement(_icon2.default, { type: 'loading', className: prefix + 'input-loading-icon' });
        } else if (state === 'warning') {
            stateWrap = _react2.default.createElement(_icon2.default, { type: 'warning', className: prefix + 'input-warning-icon' });
        }

        var clearWrap = null;
        // showClear属性应该与disable属性为互斥状态
        var showClear = hasClear && !readOnly && !!('' + this.state.value) && !disabled;

        if (hint || showClear) {
            var hintIcon = null;
            if (hint) {
                if (typeof hint === 'string') {
                    hintIcon = _react2.default.createElement(_icon2.default, { type: hint, className: prefix + 'input-hint' });
                } else if ((0, _react.isValidElement)(hint)) {
                    hintIcon = (0, _react.cloneElement)(hint, {
                        className: (0, _classnames2.default)(hint.props.className, prefix + 'input-hint')
                    });
                } else {
                    hintIcon = hint;
                }
            } else {
                var _classNames;

                var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'input-hint'] = true, _classNames[prefix + 'input-clear-icon'] = true, _classNames[prefix + 'input-hover-show'] = hoverShowClear, _classNames));
                hintIcon = _react2.default.createElement(_icon2.default, {
                    type: 'delete-filling',
                    role: 'button',
                    tabIndex: '0',
                    className: cls,
                    'aria-label': locale.clear,
                    onClick: this.onClear.bind(this),
                    onMouseDown: preventDefault,
                    onKeyDown: this.handleKeyDownFromClear
                });
            }

            clearWrap = _react2.default.createElement('span', { className: prefix + 'input-hint-wrap' }, hasClear && hint ? _react2.default.createElement(_icon2.default, {
                type: 'delete-filling',
                role: 'button',
                tabIndex: '0',
                className: prefix + 'input-clear ' + prefix + 'input-clear-icon',
                'aria-label': locale.clear,
                onClick: this.onClear.bind(this),
                onMouseDown: preventDefault,
                onKeyDown: this.handleKeyDownFromClear
            }) : null, hintIcon);
        }

        if (state === 'loading') {
            clearWrap = null;
        }

        return clearWrap || lenWrap || stateWrap || extra ? _react2.default.createElement('span', { onClick: function onClick() {
                return _this2.focus();
            }, className: prefix + 'input-control' }, clearWrap, lenWrap, stateWrap, extra) : null;
    };

    Input.prototype.renderLabel = function renderLabel() {
        var _props2 = this.props,
            label = _props2.label,
            prefix = _props2.prefix,
            id = _props2.id;

        return label ? _react2.default.createElement('label', { className: prefix + 'input-label', htmlFor: id }, label) : null;
    };

    Input.prototype.renderInner = function renderInner(inner, cls) {
        return inner ? _react2.default.createElement('span', { className: cls }, inner) : null;
    };

    Input.prototype.render = function render() {
        var _classNames2, _classNames3, _classNames4, _classNames5, _classNames6, _classNames7, _classNames8;

        var _props3 = this.props,
            size = _props3.size,
            htmlType = _props3.htmlType,
            htmlSize = _props3.htmlSize,
            autoComplete = _props3.autoComplete,
            autoFocus = _props3.autoFocus,
            disabled = _props3.disabled,
            style = _props3.style,
            innerBefore = _props3.innerBefore,
            innerAfter = _props3.innerAfter,
            innerBeforeClassName = _props3.innerBeforeClassName,
            innerAfterClassName = _props3.innerAfterClassName,
            className = _props3.className,
            hasBorder = _props3.hasBorder,
            prefix = _props3.prefix,
            isPreview = _props3.isPreview,
            renderPreview = _props3.renderPreview,
            addonBefore = _props3.addonBefore,
            addonAfter = _props3.addonAfter,
            addonTextBefore = _props3.addonTextBefore,
            addonTextAfter = _props3.addonTextAfter,
            inputRender = _props3.inputRender,
            rtl = _props3.rtl,
            composition = _props3.composition;

        var hasAddon = addonBefore || addonAfter || addonTextBefore || addonTextAfter;
        var cls = (0, _classnames2.default)(this.getClass(), (_classNames2 = {}, _classNames2['' + prefix + size] = true, _classNames2[prefix + 'hidden'] = this.props.htmlType === 'hidden', _classNames2[prefix + 'noborder'] = !hasBorder || this.props.htmlType === 'file', _classNames2[prefix + 'input-group-auto-width'] = hasAddon, _classNames2[prefix + 'disabled'] = disabled, _classNames2[className] = !!className && !hasAddon, _classNames2));

        var innerCls = prefix + 'input-inner';
        var innerBeforeCls = (0, _classnames2.default)((_classNames3 = {}, _classNames3[innerCls] = true, _classNames3[prefix + 'before'] = true, _classNames3[innerBeforeClassName] = innerBeforeClassName, _classNames3));
        var innerAfterCls = (0, _classnames2.default)((_classNames4 = {}, _classNames4[innerCls] = true, _classNames4[prefix + 'after'] = true, _classNames4[prefix + 'input-inner-text'] = typeof innerAfter === 'string', _classNames4[innerAfterClassName] = innerAfterClassName, _classNames4));
        var previewCls = (0, _classnames2.default)((_classNames5 = {}, _classNames5[prefix + 'form-preview'] = true, _classNames5[className] = !!className, _classNames5));

        var props = this.getProps();
        // custom data attributes are assigned to the top parent node
        // data-类自定义数据属性分配到顶层node节点
        var dataProps = _util.obj.pickAttrsWith(this.props, 'data-');
        // Custom props are transparently transmitted to the core input node by default
        // 自定义属性默认透传到核心node节点：input
        var others = _util.obj.pickOthers((0, _extends3.default)({}, dataProps, Input.propTypes), this.props);

        if (isPreview) {
            var value = props.value;
            var label = this.props.label;

            if (typeof renderPreview === 'function') {
                return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
            }
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), addonBefore || addonTextBefore, label, innerBefore, value, innerAfter, addonAfter || addonTextAfter);
        }

        var compositionProps = {};
        if (composition) {
            compositionProps.onCompositionStart = this.handleCompositionStart;
            compositionProps.onCompositionEnd = this.handleCompositionEnd;
        }

        var inputEl = _react2.default.createElement('input', (0, _extends3.default)({}, others, props, compositionProps, {
            height: '100%',
            type: htmlType,
            size: htmlSize,
            autoFocus: autoFocus,
            autoComplete: autoComplete,
            onKeyDown: this.handleKeyDown,
            ref: this.saveRef
        }));

        var inputWrap = _react2.default.createElement('span', (0, _extends3.default)({}, dataProps, { dir: rtl ? 'rtl' : undefined, className: cls, style: hasAddon ? undefined : style }), this.renderLabel(), this.renderInner(innerBefore, innerBeforeCls), inputRender(inputEl), this.renderInner(innerAfter, innerAfterCls), this.renderControl());

        var groupCls = (0, _classnames2.default)((_classNames6 = {}, _classNames6[prefix + 'input-group-text'] = true, _classNames6['' + prefix + size] = !!size, _classNames6[prefix + 'disabled'] = disabled, _classNames6));

        var addonBeforeCls = (0, _classnames2.default)((_classNames7 = {}, _classNames7[groupCls] = addonTextBefore, _classNames7));
        var addonAfterCls = (0, _classnames2.default)((_classNames8 = {}, _classNames8[groupCls] = addonTextAfter, _classNames8));

        if (hasAddon) {
            return _react2.default.createElement(_group2.default, (0, _extends3.default)({}, dataProps, {
                prefix: prefix,
                className: className,
                style: style,
                disabled: disabled,
                addonBefore: addonBefore || addonTextBefore,
                addonBeforeClassName: addonBeforeCls,
                addonAfter: addonAfter || addonTextAfter,
                addonAfterClassName: addonAfterCls
            }), inputWrap);
        }

        return inputWrap;
    };

    return Input;
}(_base2.default), _class.displayName = 'Input', _class.getDerivedStateFromProps = _base2.default.getDerivedStateFromProps, _class.propTypes = (0, _extends3.default)({}, _base2.default.propTypes, {
    /**
     * label
     */
    label: _propTypes2.default.node,
    /**
     * 是否出现clear按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 状态
     * @enumdesc 错误, 校验中, 成功, 警告
     */
    state: _propTypes2.default.oneOf(['error', 'loading', 'success', 'warning']),
    /**
     * 按下回车的回调
     */
    onPressEnter: _propTypes2.default.func,
    /**
     * 原生type
     */
    htmlType: _propTypes2.default.string,
    htmlSize: _propTypes2.default.string,
    /**
     * 水印 (Icon的type类型，和hasClear占用一个地方)
     */
    hint: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
    /**
     * 文字前附加内容
     */
    innerBefore: _propTypes2.default.node,
    /**
     * 文字后附加内容
     */
    innerAfter: _propTypes2.default.node,
    /**
     * 输入框前附加内容
     */
    addonBefore: _propTypes2.default.node,
    /**
     * 输入框后附加内容
     */
    addonAfter: _propTypes2.default.node,
    /**
     * 输入框前附加文字
     */
    addonTextBefore: _propTypes2.default.node,
    /**
     * 输入框后附加文字
     */
    addonTextAfter: _propTypes2.default.node,
    /**
     * (原生input支持)
     */
    autoComplete: _propTypes2.default.string,
    /**
     * 自动聚焦(原生input支持)
     */
    autoFocus: _propTypes2.default.bool,
    inputRender: _propTypes2.default.func,
    extra: _propTypes2.default.node,
    innerBeforeClassName: _propTypes2.default.string,
    innerAfterClassName: _propTypes2.default.string,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func,
    /**
     * hover展示clear (配合 hasClear=true使用)
     * @version 1.24
     */
    hoverShowClear: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _base2.default.defaultProps, {
    autoComplete: 'off',
    hasBorder: true,
    isPreview: false,
    hoverShowClear: false,
    onPressEnter: _util.func.noop,
    inputRender: function inputRender(el) {
        return el;
    }
}), _temp);
exports.default = Input;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Base = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Base, _React$Component);

    function Base() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Base);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleCompositionStart = function (e) {
            _this.setState({
                composition: true
            });
            _this.props.onCompositionStart(e);
        }, _this.handleCompositionEnd = function (e) {
            _this.setState({
                composition: false
            });
            _this.props.onCompositionEnd(e);

            var value = e.target.value;
            _this.props.onChange(value, e);
        }, _this.handleKeyDownFromClear = function (e) {
            if (e.keyCode === 13) {
                _this.onClear(e);
            }
        }, _this.saveRef = function (input) {
            _this.inputRef = input;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Base.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('value' in nextProps && nextProps.value !== prevState.value && !prevState.composition) {
            var value = nextProps.value;
            return {
                value: value === undefined || value === null ? '' : value
            };
        }

        return null;
    };

    Base.prototype.ieHack = function ieHack(value) {
        return value;
    };

    Base.prototype.onChange = function onChange(e) {
        if ('stopPropagation' in e) {
            e.stopPropagation();
        } else if ('cancelBubble' in e) {
            e.cancelBubble();
        }

        var value = e.target.value;

        if (this.props.trim) {
            value = value.trim();
        }

        value = this.ieHack(value);

        // not controlled
        if (!('value' in this.props) || this.state.composition) {
            this.setState({
                value: value
            });
        }

        if (this.state.composition) {
            return;
        }

        // Number('') = 0
        if (value && this.props.htmlType === 'number') {
            value = Number(value);
        }

        this.props.onChange(value, e);
    };

    Base.prototype.onKeyDown = function onKeyDown(e) {
        var value = e.target.value;
        var maxLength = this.props.maxLength;

        var len = maxLength > 0 && value ? this.getValueLength(value) : 0;
        var opts = {};

        // has enable trim and has input whitespace
        if (this.props.trim && e.keyCode === 32) {
            opts.beTrimed = true;
        }

        // has defined maxLength and has over max length and has not input backspace and delete
        if (maxLength > 0 && (len > maxLength + 1 || (len === maxLength || len === maxLength + 1) && e.keyCode !== 8 && e.keyCode !== 46)) {
            opts.overMaxLength = true;
        }

        this.props.onKeyDown(e, opts);
    };

    Base.prototype.onFocus = function onFocus(e) {
        this.setState({
            focus: true
        });
        this.props.onFocus(e);
    };

    Base.prototype.onBlur = function onBlur(e) {
        this.setState({
            focus: false
        });
        this.props.onBlur(e);
    };

    Base.prototype.onClear = function onClear(e) {
        if (this.props.disabled) {
            return;
        }
        // 非受控模式清空内部数据
        if (!('value' in this.props)) {
            this.setState({
                value: ''
            });
        }
        this.props.onChange('', e, 'clear');
        this.focus();
    };

    Base.prototype.renderLength = function renderLength() {
        var _classNames;

        var _props = this.props,
            maxLength = _props.maxLength,
            showLimitHint = _props.showLimitHint,
            prefix = _props.prefix,
            rtl = _props.rtl;

        var len = maxLength > 0 && this.state.value ? this.getValueLength(this.state.value) : 0;

        var classesLenWrap = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'input-len'] = true, _classNames[prefix + 'error'] = len > maxLength, _classNames));

        var content = rtl ? maxLength + '/' + len : len + '/' + maxLength;

        return maxLength && showLimitHint ? _react2.default.createElement('span', { className: classesLenWrap }, content) : null;
    };

    Base.prototype.getClass = function getClass() {
        var _classNames2;

        var _props2 = this.props,
            disabled = _props2.disabled,
            state = _props2.state,
            prefix = _props2.prefix;

        return (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'input'] = true, _classNames2[prefix + 'disabled'] = !!disabled, _classNames2[prefix + 'error'] = state === 'error', _classNames2[prefix + 'warning'] = state === 'warning', _classNames2[prefix + 'focus'] = this.state.focus, _classNames2));
    };

    Base.prototype.getProps = function getProps() {
        var _props3 = this.props,
            placeholder = _props3.placeholder,
            inputStyle = _props3.inputStyle,
            disabled = _props3.disabled,
            readOnly = _props3.readOnly,
            cutString = _props3.cutString,
            maxLength = _props3.maxLength,
            name = _props3.name,
            onCompositionStart = _props3.onCompositionStart,
            onCompositionEnd = _props3.onCompositionEnd;

        var props = {
            style: inputStyle,
            placeholder: placeholder,
            disabled: disabled,
            readOnly: readOnly,
            name: name,
            maxLength: cutString ? maxLength : undefined,
            value: this.state.value,
            onChange: this.onChange.bind(this),
            onBlur: this.onBlur.bind(this),
            onFocus: this.onFocus.bind(this),
            onCompositionStart: onCompositionStart,
            onCompositionEnd: onCompositionEnd
        };

        // fix accessibility：auto process status of aria disabled
        if (disabled) {
            props['aria-disabled'] = disabled;
        }

        return props;
    };

    Base.prototype.getInputNode = function getInputNode() {
        return this.inputRef;
    };

    Base.prototype.focus = function focus(start, end) {
        var preventScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        this.inputRef.focus({ preventScroll: preventScroll });
        if (typeof start === 'number') {
            this.inputRef.selectionStart = start;
        }
        if (typeof end === 'number') {
            this.inputRef.selectionEnd = end;
        }
    };

    return Base;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    /**
     * 当前值
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /**
     * 初始化值
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /**
     * 发生改变的时候触发的回调
     * @param {String} value 数据
     * @param {Event} e DOM事件对象
     */
    onChange: _propTypes2.default.func,
    /**
     * 键盘按下的时候触发的回调
     * @param {Event} e DOM事件对象
     * @param {Object} opts 可扩展的附加信息：<br> - opts.overMaxLength: {Boolean} 已超出最大长度<br> - opts.beTrimed: {Boolean} 输入的空格被清理
     */
    onKeyDown: _propTypes2.default.func,
    /**
     * 禁用状态
     */
    disabled: _propTypes2.default.bool,
    /**
     * 最大长度
     */
    maxLength: _propTypes2.default.number,
    /**
     * 是否展现最大长度样式（旧版本为 hasLimitHint，目前仍兼容旧用法，将在2.x直接废弃）
     */
    showLimitHint: _propTypes2.default.bool,
    /**
     * 当设置了maxLength时，是否截断超出字符串
     */
    cutString: _propTypes2.default.bool,
    /**
     * 只读
     */
    readOnly: _propTypes2.default.bool,
    /**
     * onChange返回会自动去除头尾空字符
     */
    trim: _propTypes2.default.bool,
    /**
     * 输入提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 获取焦点时候触发的回调
     * @param {Event} e DOM事件对象
     */
    onFocus: _propTypes2.default.func,
    /**
     * 失去焦点时候触发的回调
     * @param {Event} e DOM事件对象
     */
    onBlur: _propTypes2.default.func,
    /**
     * 自定义字符串计算长度方式
     * @param {String} value 数据
     * @returns {Number} 自定义长度
     */
    getValueLength: _propTypes2.default.func,
    inputStyle: _propTypes2.default.object,
    /**
     * 自定义class
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * 原生type
     */
    htmlType: _propTypes2.default.string,
    /**
     * name
     */
    name: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    state: _propTypes2.default.oneOf(['error', 'loading', 'success', 'warning']),
    locale: _propTypes2.default.object,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 尺寸
     * @enumdesc 小, 中, 大
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 开启后会过滤输入法中间字母状态，文字输入完成后才会触发 onChange
     * @version 1.23
     */
    composition: _propTypes2.default.bool,
    onCompositionStart: _propTypes2.default.func,
    onCompositionEnd: _propTypes2.default.func
}), _class.defaultProps = {
    disabled: false,
    prefix: 'next-',
    size: 'medium',
    maxLength: null,
    showLimitHint: false,
    cutString: true,
    readOnly: false,
    isPreview: false,
    trim: false,
    composition: false,
    onFocus: _util.func.noop,
    onBlur: _util.func.noop,
    onChange: _util.func.noop,
    onKeyDown: _util.func.noop,
    getValueLength: _util.func.noop,
    onCompositionStart: _util.func.noop,
    onCompositionEnd: _util.func.noop,
    locale: _zhCn2.default.Input
}, _temp2);
Base.displayName = 'Base';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Base);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Input.Group
 */
var Group = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Group, _React$Component);

    function Group() {
        (0, _classCallCheck3.default)(this, Group);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _classNames, _classNames2, _classNames3;

        var _props = this.props,
            className = _props.className,
            style = _props.style,
            children = _props.children,
            prefix = _props.prefix,
            addonBefore = _props.addonBefore,
            addonAfter = _props.addonAfter,
            addonBeforeClassName = _props.addonBeforeClassName,
            addonAfterClassName = _props.addonAfterClassName,
            rtl = _props.rtl,
            disabled = _props.disabled,
            others = (0, _objectWithoutProperties3.default)(_props, ['className', 'style', 'children', 'prefix', 'addonBefore', 'addonAfter', 'addonBeforeClassName', 'addonAfterClassName', 'rtl', 'disabled']);

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'input-group'] = true, _classNames[prefix + 'disabled'] = disabled, _classNames[className] = !!className, _classNames));

        var addonCls = prefix + 'input-group-addon';
        var beforeCls = (0, _classnames2.default)(addonCls, (_classNames2 = {}, _classNames2[prefix + 'before'] = true, _classNames2[addonBeforeClassName] = addonBeforeClassName, _classNames2));
        var afterCls = (0, _classnames2.default)(addonCls, (_classNames3 = {}, _classNames3[prefix + 'after'] = true, _classNames3[addonAfterClassName] = addonAfterClassName, _classNames3));

        var before = addonBefore ? _react2.default.createElement('span', { className: beforeCls }, addonBefore) : null;

        var after = addonAfter ? _react2.default.createElement('span', { className: afterCls }, addonAfter) : null;

        return _react2.default.createElement('span', (0, _extends3.default)({}, others, { disabled: disabled, dir: rtl ? 'rtl' : undefined, className: cls, style: style }), before, children, after);
    };

    return Group;
}(_react2.default.Component), _class.displayName = 'Group', _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    children: _propTypes2.default.node,
    /**
     * 输入框前附加内容
     */
    addonBefore: _propTypes2.default.node,
    /**
     * 输入框前附加内容css
     */
    addonBeforeClassName: _propTypes2.default.string,
    /**
     * 输入框后附加内容
     */
    addonAfter: _propTypes2.default.node,
    /**
     * 输入框后额外css
     */
    addonAfterClassName: _propTypes2.default.string,
    /**
     * rtl
     */
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-'
}, _temp);
Group.displayName = 'Group';
exports.default = _configProvider2.default.config(Group);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _dataStore = __webpack_require__(307);

var _dataStore2 = _interopRequireDefault(_dataStore);

var _virtualList = __webpack_require__(50);

var _virtualList2 = _interopRequireDefault(_virtualList);

var _util2 = __webpack_require__(61);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;
var MenuItem = _menu2.default.Item,
    MenuGroup = _menu2.default.Group;
var noop = _util.func.noop,
    bindCtx = _util.func.bindCtx,
    makeChain = _util.func.makeChain;

function preventDefault(e) {
    e.preventDefault();
}

var Base = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Base, _React$Component);

    function Base(props) {
        (0, _classCallCheck3.default)(this, Base);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.handleMouseDown = function (e) {
            if (!_this.props.popupAutoFocus) {
                preventDefault(e);
            }
        };

        _this.saveSelectRef = function (ref) {
            _this.selectDOM = (0, _reactDom.findDOMNode)(ref);
        };

        _this.saveInputRef = function (ref) {
            if (ref && ref.getInstance()) {
                _this.inputRef = ref.getInstance();
            }
        };

        _this.savePopupRef = function (ref) {
            _this.popupRef = ref;
        };

        _this.dataStore = new _dataStore2.default({
            filter: props.filter,
            filterLocal: props.filterLocal,
            showDataSourceChildren: props.showDataSourceChildren
        });

        var mode = props.mode;

        var value = 'value' in props ? props.value : props.defaultValue;

        // 多选情况下做 value 数组订正
        if (props.mode !== 'single' && value && !Array.isArray(value)) {
            value = [value];
        }

        _this.state = {
            dataStore: _this.dataStore,
            value: value,
            visible: 'visible' in props ? props.visible : props.defaultVisible,
            dataSource: _this.setDataSource(_this.props),
            width: 100,
            // highlightKey应为String 多选初始化只赋值受控highlightKey/defaultHighlightKey
            highlightKey: 'highlightKey' in props ? props.highlightKey : props.mode === 'single' ? props.value || props.defaultHighlightKey || props.defaultValue : props.defaultHighlightKey,
            srReader: ''
        };

        bindCtx(_this, ['handleMenuBodyClick', 'handleVisibleChange', 'focusInput', 'beforeOpen', 'beforeClose', 'afterClose', 'handleResize']);
        return _this;
    }

    Base.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        // overlay 还没有完成 mount，所以需要滞后同步宽度
        setTimeout(function () {
            return _this2.syncWidth();
        }, 0);

        _util.events.on(window, 'resize', this.handleResize);
    };

    Base.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevProps.label !== this.props.label || prevState.value !== this.state.value) {
            this.syncWidth();
        }
    };

    Base.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.handleResize);
        clearTimeout(this.resizeTimeout);
    };

    /**
     * Calculate and set width of popup menu
     * @protected
     */

    Base.prototype.syncWidth = function syncWidth() {
        var _this3 = this;

        var _props2 = this.props,
            popupStyle = _props2.popupStyle,
            popupProps = _props2.popupProps;

        if (popupStyle && 'width' in popupStyle || popupProps && popupProps.style && 'width' in popupProps.style) {
            return;
        }

        var width = _util.dom.getStyle(this.selectDOM, 'width');
        if (width && this.width !== width) {
            this.width = width;

            if (this.shouldAutoWidth()) {
                // overy 的 node 节点可能没有挂载完成，所以这里需要异步
                setTimeout(function () {
                    if (_this3.popupRef) {
                        _util.dom.setStyle(_this3.popupRef, 'width', _this3.width);
                        return;
                    }
                }, 0);
            }
        }
    };

    Base.prototype.handleResize = function handleResize() {
        var _this4 = this;

        clearTimeout(this.resizeTimeout);
        if (this.state.visible) {
            this.resizeTimeout = setTimeout(function () {
                _this4.syncWidth();
            }, 200);
        }
    };

    /**
     * Get structured dataSource, for cache
     * @protected
     * @param  {Object} [props=this.props]
     * @return {Array}
     */

    Base.prototype.setDataSource = function setDataSource(props) {
        var dataSource = props.dataSource,
            children = props.children;

        // children is higher priority then dataSource

        if (_react.Children.count(children)) {
            return this.dataStore.updateByDS(children, true);
        } else if (Array.isArray(dataSource)) {
            return this.dataStore.updateByDS(dataSource, false);
        }
        return [];
    };

    /**
     * Set popup visible
     * @protected
     * @param {boolean} visible
     * @param {string} type trigger type
     */

    Base.prototype.setVisible = function setVisible(visible, type) {
        // disabled 状态下只允许关闭不允许打开
        if (this.props.disabled && visible || this.state.visible === visible) {
            return;
        }

        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, type);
    };

    Base.prototype.setFirstHightLightKeyForMenu = function setFirstHightLightKeyForMenu(searchValue) {
        // 判断value/highlightKey解决受控后，默认高亮第一个元素问题。(当搜索值时，搜索后应执行默认选择第一个元素)
        var highlightKey = this.state.highlightKey;

        if (!this.props.autoHighlightFirstItem) {
            return;
        }

        // 设置高亮 item key
        if (this.dataStore.getMenuDS().length && this.dataStore.getEnableDS().length && (!highlightKey || searchValue)) {
            var _highlightKey = '' + this.dataStore.getEnableDS()[0].value;
            this.setState({
                highlightKey: _highlightKey
            });
            this.props.onToggleHighlightItem(_highlightKey, 'autoFirstItem');
        }

        // 当有搜索值且搜索条件与dataSource不匹配时(搜索条件不满足不会出现可选择的列表，所以高亮key应为null)
        if (searchValue && !this.dataStore.getEnableDS().length) {
            this.setState({
                highlightKey: null
            });
            this.props.onToggleHighlightItem(null, 'highlightKeyToNull');
        }
    };

    Base.prototype.handleChange = function handleChange(value) {
        var _props3;

        // 非受控模式清空内部数据
        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        (_props3 = this.props).onChange.apply(_props3, [value].concat(args));
    };

    /**
     * Handle Menu body click
     * @param {Event} e click event
     */

    Base.prototype.handleMenuBodyClick = function handleMenuBodyClick(e) {
        if (!this.props.popupAutoFocus) {
            this.focusInput(e);
        }
    };

    /**
     * Toggle highlight MenuItem
     * @private
     * @param {number} dir -1: up, 1: down
     */

    Base.prototype.toggleHighlightItem = function toggleHighlightItem(dir) {
        if (!this.state.visible) {
            this.setVisible(true, 'enter');
            return;
        }

        var maxCount = this.dataStore.getEnableDS().length;
        // When there is no enabled item
        if (!maxCount) {
            return false;
        }

        var highlightKey = this.state.highlightKey;

        var highlightIndex = -1;

        // find previous highlight index
        highlightKey !== null && this.dataStore.getEnableDS().some(function (item, index) {
            if ('' + item.value === highlightKey) {
                highlightIndex = index;
            }
            return highlightIndex > -1;
        });

        // toggle highlight index
        highlightIndex += dir;
        if (highlightIndex < 0) {
            highlightIndex = maxCount - 1;
        }
        if (highlightIndex >= maxCount) {
            highlightIndex = 0;
        }

        // get highlight key
        var highlightItem = this.dataStore.getEnableDS()[highlightIndex];
        highlightKey = highlightItem ? '' + highlightItem.value : null;

        this.setState({ highlightKey: highlightKey, srReader: highlightItem.label });

        this.scrollMenuIntoView();

        return highlightItem;
    };

    // scroll into focus item


    Base.prototype.scrollMenuIntoView = function scrollMenuIntoView() {
        var _this5 = this;

        var prefix = this.props.prefix;

        clearTimeout(this.highlightTimer);
        this.highlightTimer = setTimeout(function () {
            try {
                var menuNode = (0, _reactDom.findDOMNode)(_this5.menuRef);
                var itemNode = menuNode.querySelector('.' + prefix + 'select-menu-item.' + prefix + 'focused');
                itemNode && itemNode.scrollIntoViewIfNeeded && itemNode.scrollIntoViewIfNeeded();
            } catch (ex) {
                // I don't care...
            }
        });
    };

    /**
     * render popup menu header
     * @abstract
     */

    Base.prototype.renderMenuHeader = function renderMenuHeader() {
        var menuProps = this.props.menuProps;

        if (menuProps && 'header' in menuProps) {
            return menuProps.header;
        }

        return null;
    };

    Base.prototype.handleSelect = function handleSelect() {};

    /**
     * 防止 onBlur/onFocus 抖动
     */

    /**
     * render popup children
     * @protected
     * @param {object} props
     */
    Base.prototype.renderMenu = function renderMenu() {
        var _classNames,
            _this6 = this;

        var _props4 = this.props,
            prefix = _props4.prefix,
            mode = _props4.mode,
            locale = _props4.locale,
            notFoundContent = _props4.notFoundContent,
            useVirtual = _props4.useVirtual,
            menuProps = _props4.menuProps;
        var _state = this.state,
            dataSource = _state.dataSource,
            highlightKey = _state.highlightKey;

        var value = this.state.value;
        var selectedKeys = void 0;

        if ((0, _util2.isNull)(value) || value.length === 0 || this.isAutoComplete) {
            selectedKeys = [];
        } else if ((0, _util2.isSingle)(mode)) {
            selectedKeys = [(0, _util2.valueToSelectKey)(value)];
        } else {
            selectedKeys = [].concat(value).map(function (n) {
                return (0, _util2.valueToSelectKey)(n);
            });
        }

        var children = this.renderMenuItem(dataSource);

        var menuClassName = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'select-menu'] = true, _classNames[prefix + 'select-menu-empty'] = !children || !children.length, _classNames));

        if (!children || !children.length) {
            children = _react2.default.createElement('span', { className: prefix + 'select-menu-empty-content' }, notFoundContent || locale.notFoundContent);
        }

        var customProps = (0, _extends3.default)({}, menuProps, {
            children: children,
            role: 'listbox',
            selectedKeys: selectedKeys,
            focusedKey: highlightKey,
            focusable: false,
            selectMode: (0, _util2.isSingle)(mode) ? 'single' : 'multiple',
            onSelect: this.handleMenuSelect,
            onItemClick: this.handleItemClick,
            header: this.renderMenuHeader(),
            onClick: this.handleMenuBodyClick,
            onMouseDown: this.handleMouseDown,
            className: menuClassName
        });
        var menuStyle = this.shouldAutoWidth() ? { width: '100%' } : { minWidth: this.width };

        return useVirtual && children.length > 10 ? _react2.default.createElement('div', (0, _extends3.default)({
            className: prefix + 'select-menu-wrapper',
            style: (0, _extends3.default)({ position: 'relative' }, menuStyle)
        }, _util.obj.pickProps(['onScroll'], customProps)), _react2.default.createElement(_virtualList2.default, {
            itemsRenderer: function itemsRenderer(items, _ref) {
                return _react2.default.createElement(_menu2.default, (0, _extends3.default)({
                    ref: function ref(c) {
                        _ref(c);
                        _this6.menuRef = c;
                    },
                    flatenContent: true
                }, _util.obj.pickOthers(['onScroll'], customProps)), items);
            }
        }, children)) : _react2.default.createElement(_menu2.default, (0, _extends3.default)({}, customProps, { style: menuStyle }));
    };

    /**
     * render menu item
     * @protected
     * @param {Array} dataSource
     */

    Base.prototype.renderMenuItem = function renderMenuItem(dataSource) {
        var _this7 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            itemRender = _props5.itemRender,
            showDataSourceChildren = _props5.showDataSourceChildren;
        // If it has.

        var searchKey = void 0;
        if (this.isAutoComplete) {
            // In AutoComplete, value is the searchKey
            searchKey = this.state.value;
        } else {
            searchKey = this.state.searchValue;
        }

        return dataSource.map(function (item, index) {
            if (!item) {
                return null;
            }
            if (Array.isArray(item.children) && showDataSourceChildren) {
                return _react2.default.createElement(MenuGroup, { key: index, label: item.label }, _this7.renderMenuItem(item.children));
            } else {
                var itemProps = {
                    role: 'option',
                    key: item.value,
                    className: prefix + 'select-menu-item',
                    disabled: item.disabled
                };

                if ('title' in item) {
                    itemProps.title = item.title;
                }

                return _react2.default.createElement(MenuItem, itemProps, itemRender(item, searchKey));
            }
        });
    };

    /**
     * 点击 arrow 或 label 的时候焦点切到 input 中
     * @override
     */
    Base.prototype.focusInput = function focusInput() {
        this.inputRef.focus(undefined, undefined, true);
    };

    Base.prototype.focus = function focus() {
        var _inputRef;

        (_inputRef = this.inputRef).focus.apply(_inputRef, arguments);
    };

    Base.prototype.beforeOpen = function beforeOpen() {
        if (this.props.mode === 'single') {
            this.setFirstHightLightKeyForMenu();
        }
        this.syncWidth();
    };

    Base.prototype.beforeClose = function beforeClose() {};

    Base.prototype.afterClose = function afterClose() {};

    Base.prototype.shouldAutoWidth = function shouldAutoWidth() {
        if (this.props.popupComponent) {
            return false;
        }

        return this.props.autoWidth;
    };

    Base.prototype.render = function render(props) {
        var _classNames2,
            _this8 = this;

        var prefix = props.prefix,
            mode = props.mode,
            popupProps = props.popupProps,
            popupContainer = props.popupContainer,
            popupClassName = props.popupClassName,
            popupStyle = props.popupStyle,
            popupContent = props.popupContent,
            canCloseByTrigger = props.canCloseByTrigger,
            followTrigger = props.followTrigger,
            cache = props.cache,
            popupComponent = props.popupComponent,
            isPreview = props.isPreview,
            renderPreview = props.renderPreview,
            style = props.style,
            className = props.className,
            valueRender = props.valueRender;

        var cls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'select-auto-complete-menu'] = !popupContent && this.isAutoComplete, _classNames2[prefix + 'select-' + mode + '-menu'] = !popupContent && !!mode, _classNames2), popupClassName || popupProps.className);

        if (isPreview) {
            if (this.isAutoComplete) {
                return _react2.default.createElement(_input2.default, {
                    style: style,
                    className: className,
                    isPreview: isPreview,
                    renderPreview: renderPreview,
                    value: this.state.value
                });
            } else {
                var value = this.state.value;
                var valueDS = this.state.value;

                if (!this.useDetailValue()) {
                    if (value === this.valueDataSource.value) {
                        valueDS = this.valueDataSource.valueDS;
                    } else {
                        valueDS = (0, _util2.getValueDataSource)(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
                    }
                }

                if (typeof renderPreview === 'function') {
                    var _classNames3;

                    var previewCls = (0, _classnames2.default)((_classNames3 = {}, _classNames3[prefix + 'form-preview'] = true, _classNames3[className] = !!className, _classNames3));
                    return _react2.default.createElement('div', { style: style, className: previewCls }, renderPreview(valueDS, this.props));
                } else {
                    var fillProps = this.props.fillProps;

                    if (mode === 'single') {
                        var _renderPreview = function _renderPreview(valueDS) {
                            if (fillProps) {
                                return valueDS[fillProps];
                            } else if (valueRender) {
                                return valueRender(valueDS, _this8.props);
                            } else {
                                return valueDS.label;
                            }
                        };

                        return _react2.default.createElement(_input2.default, {
                            style: style,
                            className: className,
                            isPreview: isPreview,
                            value: valueDS ? _renderPreview(valueDS) : ''
                        });
                    } else {
                        return _react2.default.createElement(_input2.default, {
                            style: style,
                            className: className,
                            isPreview: isPreview,
                            value: (Array.isArray(valueDS) ? valueDS : []).map(function (i) {
                                return i.label;
                            }).join(', ')
                        });
                    }
                }
            }
        }

        var _props = (0, _extends3.default)({
            triggerType: 'click',
            autoFocus: !!this.props.popupAutoFocus,
            cache: cache
        }, popupProps, {
            //beforeOpen node not mount, afterOpen too slow.
            // from display:none to block, we may need to recompute width
            beforeOpen: makeChain(this.beforeOpen, popupProps.beforeOpen),
            beforeClose: makeChain(this.beforeClose, popupProps.beforeClose),
            afterClose: makeChain(this.afterClose, popupProps.afterClose),
            canCloseByTrigger: canCloseByTrigger,
            followTrigger: followTrigger,
            visible: this.state.visible,
            onVisibleChange: this.handleVisibleChange,
            shouldUpdatePosition: true,
            container: popupContainer || popupProps.container,
            className: cls,
            style: popupStyle || popupProps.style
        });

        if (popupProps.v2) {
            delete _props.shouldUpdatePosition;
        }

        var Tag = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement(Tag, (0, _extends3.default)({}, _props, { trigger: this.renderSelect() }), popupContent ? _react2.default.createElement('div', {
            className: prefix + 'select-popup-wrap',
            style: this.shouldAutoWidth() ? { width: this.width } : {},
            ref: this.savePopupRef
        }, popupContent) : _react2.default.createElement('div', {
            className: prefix + 'select-spacing-tb',
            style: this.shouldAutoWidth() ? { width: this.width } : {},
            ref: this.savePopupRef
        }, this.renderMenu()));
    };

    return Base;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 选择器尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    // 当前值，用于受控模式
    value: _propTypes2.default.any, // to be override
    // 初始化的默认值
    defaultValue: _propTypes2.default.any, // to be override
    /**
     * 没有值的时候的占位符
     */
    placeholder: _propTypes2.default.string,
    /**
     * 下拉菜单是否与选择器对齐
     */
    autoWidth: _propTypes2.default.bool,
    /**
     * 自定义内联 label
     */
    label: _propTypes2.default.node,
    /**
     * 是否有清除按钮（单选模式有效）
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 校验状态
     */
    state: _propTypes2.default.oneOf(['error', 'loading', 'success', 'warning']),
    /**
     * 是否只读，只读模式下可以展开弹层但不能选
     */
    readOnly: _propTypes2.default.bool,
    /**
     * 是否禁用选择器
     */
    disabled: _propTypes2.default.bool,
    /**
     * 当前弹层是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层初始化是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层显示或隐藏时触发的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层挂载的容器节点
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层的 className
     */
    popupClassName: _propTypes2.default.any,
    /**
     * 弹层的内联样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 添加到弹层上的属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 自定义弹层的内容
     */
    popupContent: _propTypes2.default.node,
    /**
     * 添加到菜单上的属性
     * @version 1.18
     */
    menuProps: _propTypes2.default.object,
    /**
     * 是否使用本地过滤，在数据源为远程的时候需要关闭此项
     */
    filterLocal: _propTypes2.default.bool,
    /**
     * 本地过滤方法，返回一个 Boolean 值确定是否保留
     * @param {String} key 搜索关键字
     * @param {Object} item 渲染节点的item
     * @return {Boolean} 是否匹配
     */
    filter: _propTypes2.default.func,
    /**
     * 默认高亮的 key，不要和 autoHighlightFirstItem 同时使用
     */
    defaultHighlightKey: _propTypes2.default.string,
    /**
     * 高亮 key，不要和 autoHighlightFirstItem 同时使用，用于受控模式
     */
    highlightKey: _propTypes2.default.string,
    /**
     * 键盘上下键切换菜单高亮选项的回调
     */
    onToggleHighlightItem: _propTypes2.default.func,
    /**
     * 自动高亮第一个元素
     */
    autoHighlightFirstItem: _propTypes2.default.bool,
    /**
     * 是否开启虚拟滚动模式
     */
    useVirtual: _propTypes2.default.bool,
    // 自定义类名
    className: _propTypes2.default.any,
    children: _propTypes2.default.any,
    dataSource: _propTypes2.default.array,
    itemRender: _propTypes2.default.func,
    mode: _propTypes2.default.string,
    notFoundContent: _propTypes2.default.node,
    locale: _propTypes2.default.object,
    rtl: _propTypes2.default.bool,
    popupComponent: _propTypes2.default.any,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func,
    showDataSourceChildren: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    size: 'medium',
    autoWidth: true,
    onChange: noop,
    onVisibleChange: noop,
    onToggleHighlightItem: noop,
    popupProps: {},
    filterLocal: true,
    filter: _util2.filter,
    itemRender: function itemRender(item) {
        return item.label || item.value;
    },
    locale: _zhCn2.default.Select,
    autoHighlightFirstItem: true,
    showDataSourceChildren: true,
    defaultHighlightKey: null
}, _temp);
Base.displayName = 'Base';
exports.default = Base;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2; /* istanbul ignore file */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(13);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var SelectMenu = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(SelectMenu, _Component);

    function SelectMenu() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, SelectMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.saveRef = function (ref) {
            _this.menuEl = ref;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    SelectMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelectedItem();
    };

    SelectMenu.prototype.scrollToSelectedItem = function scrollToSelectedItem() {
        var _props = this.props,
            prefix = _props.prefix,
            dataSource = _props.dataSource,
            value = _props.value;

        var selectedIndex = dataSource.findIndex(function (item) {
            return item.value === value;
        });

        if (selectedIndex === -1) {
            return;
        }

        var itemSelector = '.' + prefix + 'menu-item';
        var menu = (0, _reactDom.findDOMNode)(this.menuEl);
        var targetItem = menu.querySelectorAll(itemSelector)[selectedIndex];
        if (targetItem) {
            menu.scrollTop = targetItem.offsetTop - Math.floor((menu.clientHeight / targetItem.clientHeight - 1) / 2) * targetItem.clientHeight;
        }
    };

    SelectMenu.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            dataSource = _props2.dataSource,
            onChange = _props2.onChange,
            value = _props2.value,
            className = _props2.className,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'dataSource', 'onChange', 'value', 'className']);

        return _react2.default.createElement(_menu2.default, (0, _extends3.default)({}, others, {
            ref: this.saveRef,
            selectMode: 'single',
            selectedKeys: [String(value)],
            onSelect: function onSelect(selectKeys) {
                return onChange(Number(selectKeys[0]));
            },
            role: 'listbox',
            className: prefix + 'calendar-panel-menu ' + className
        }), dataSource.map(function (_ref) {
            var label = _ref.label,
                value = _ref.value;
            return _react2.default.createElement(_menu2.default.Item, { key: value }, label);
        }));
    };

    return SelectMenu;
}(_react.Component), _class.isNextMenu = true, _class.propTypes = {
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.object),
    value: _propTypes2.default.number,
    prefix: _propTypes2.default.string,
    onChange: _propTypes2.default.func,
    children: _propTypes2.default.node
}, _temp2);
SelectMenu.displayName = 'SelectMenu';
exports.default = SelectMenu;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var MonthPanelHeader = function (_React$PureComponent) {
    (0, _inherits3.default)(MonthPanelHeader, _React$PureComponent);

    function MonthPanelHeader() {
        (0, _classCallCheck3.default)(this, MonthPanelHeader);
        return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));
    }

    MonthPanelHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goPrevYear = _props.goPrevYear,
            goNextYear = _props.goNextYear;

        var yearLabel = visibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        return _react2.default.createElement('div', { className: prefix + 'calendar-panel-header' }, _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevYear,
            className: btnCls + ' ' + btnCls + '-prev-year',
            onClick: goPrevYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })), _react2.default.createElement('div', { className: prefix + 'calendar-panel-header-full' }, _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: yearLabel,
            className: '' + btnCls,
            onClick: function onClick() {
                return changeMode('year');
            }
        }, yearLabel)), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextYear,
            className: btnCls + ' ' + btnCls + '-next-year',
            onClick: goNextYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })));
    };

    return MonthPanelHeader;
}(_react2.default.PureComponent);

exports.default = MonthPanelHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var YearPanelHeader = function (_React$PureComponent) {
    (0, _inherits3.default)(YearPanelHeader, _React$PureComponent);

    function YearPanelHeader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, YearPanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.getDecadeLabel = function (date) {
            var year = date.year();
            var start = parseInt(year / 10, 10) * 10;
            var end = start + 9;
            return start + '-' + end;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    YearPanelHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            goPrevDecade = _props.goPrevDecade,
            goNextDecade = _props.goNextDecade;

        var decadeLable = this.getDecadeLabel(visibleMonth);
        var btnCls = prefix + 'calendar-btn';

        return _react2.default.createElement('div', { className: prefix + 'calendar-panel-header' }, _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevDecade,
            className: btnCls + ' ' + btnCls + '-prev-decade',
            onClick: goPrevDecade
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })), _react2.default.createElement('div', { className: prefix + 'calendar-panel-header-full' }, _react2.default.createElement('button', { role: 'button', type: 'button', title: decadeLable, className: btnCls }, decadeLable)), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextDecade,
            className: btnCls + ' ' + btnCls + '-next-decade',
            onClick: goNextDecade
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })));
    };

    return YearPanelHeader;
}(_react2.default.PureComponent);

exports.default = YearPanelHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _dateTableHead = __webpack_require__(313);

var _dateTableHead2 = _interopRequireDefault(_dateTableHead);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function isSameDay(a, b) {
    return a && b && a.isSame(b, 'day');
}

function isRangeDate(date, startDate, endDate) {
    return date.format('L') !== startDate.format('L') && date.format('L') !== endDate.format('L') && date.valueOf() > startDate.valueOf() && date.valueOf() < endDate.valueOf();
}

function isLastMonthDate(date, target) {
    if (date.year() < target.year()) {
        return 1;
    }
    return date.year() === target.year() && date.month() < target.month();
}

function isNextMonthDate(date, target) {
    if (date.year() > target.year()) {
        return 1;
    }
    return date.year() === target.year() && date.month() > target.month();
}

var DateTable = function (_PureComponent) {
    (0, _inherits3.default)(DateTable, _PureComponent);

    function DateTable() {
        (0, _classCallCheck3.default)(this, DateTable);
        return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
    }

    DateTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            showOtherMonth = _props.showOtherMonth,
            endValue = _props.endValue,
            format = _props.format,
            today = _props.today,
            momentLocale = _props.momentLocale,
            dateCellRender = _props.dateCellRender,
            disabledDate = _props.disabledDate,
            onSelectDate = _props.onSelectDate;

        var startValue = this.props.startValue || this.props.value;

        var firstDayOfMonth = visibleMonth.clone().startOf('month'); // 该月的 1 号
        var firstDayOfMonthInWeek = firstDayOfMonth.day(); // 星期几

        var firstDayOfWeek = momentLocale.firstDayOfWeek();

        var datesOfLastMonthCount = (firstDayOfMonthInWeek + _utils.DAYS_OF_WEEK - firstDayOfWeek) % _utils.DAYS_OF_WEEK;

        var lastMonthDate = firstDayOfMonth.clone();
        lastMonthDate.add(0 - datesOfLastMonthCount, 'days');

        var counter = 0;
        var currentDate = void 0;
        var dateList = [];
        for (var i = 0; i < _utils.CALENDAR_TABLE_ROW_COUNT; i++) {
            for (var j = 0; j < _utils.CALENDAR_TABLE_COL_COUNT; j++) {
                currentDate = lastMonthDate;
                if (counter) {
                    currentDate = currentDate.clone();
                    currentDate.add(counter, 'days');
                }
                dateList.push(currentDate);
                counter++;
            }
        }
        counter = 0; // reset counter
        var monthElements = [];
        for (var _i = 0; _i < _utils.CALENDAR_TABLE_ROW_COUNT; _i++) {
            var weekElements = [];
            var firstDayOfWeekInCurrentMonth = true;
            var lastDayOfWeekInCurrentMonth = true;
            for (var _j = 0; _j < _utils.CALENDAR_TABLE_COL_COUNT; _j++) {
                var _classNames;

                currentDate = dateList[counter];
                if (_j === 0) {
                    // currentDate 的month 是否等于当前月 firstDayOfMonth
                    firstDayOfWeekInCurrentMonth = currentDate.format('M') === firstDayOfMonth.format('M');
                }
                if (_j === _utils.CALENDAR_TABLE_COL_COUNT - 1) {
                    // currentDate 的month 是否等于当前月 firstDayOfMonth
                    lastDayOfWeekInCurrentMonth = currentDate.format('M') === firstDayOfMonth.format('M');
                }
                var isLastMonth = isLastMonthDate(currentDate, visibleMonth);
                var isNextMonth = isNextMonthDate(currentDate, visibleMonth);
                var isCurrentMonth = !isLastMonth && !isNextMonth;

                var isDisabled = (0, _utils.isDisabledDate)(currentDate, disabledDate, 'date');
                var isToday = !isDisabled && isSameDay(currentDate, today) && isCurrentMonth;
                var isSelected = !isDisabled && (isSameDay(currentDate, startValue) || isSameDay(currentDate, endValue)) && isCurrentMonth;
                var isInRange = !isDisabled && startValue && endValue && isRangeDate(currentDate, startValue, endValue) && isCurrentMonth;

                var cellContent = !showOtherMonth && !isCurrentMonth ? null : dateCellRender(currentDate);

                var elementCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'calendar-cell'] = true, _classNames[prefix + 'calendar-cell-prev-month'] = isLastMonth, _classNames[prefix + 'calendar-cell-next-month'] = isNextMonth, _classNames[prefix + 'calendar-cell-current'] = isToday, _classNames[prefix + 'inrange'] = isInRange, _classNames[prefix + 'selected'] = isSelected, _classNames[prefix + 'disabled'] = cellContent && isDisabled, _classNames));

                weekElements.push(_react2.default.createElement('td', {
                    key: counter,
                    title: currentDate.format(format),
                    onClick: isDisabled ? undefined : onSelectDate.bind(null, currentDate),
                    className: elementCls,
                    role: 'cell',
                    'aria-disabled': isDisabled ? 'true' : 'false',
                    'aria-selected': isSelected ? 'true' : 'false'
                }, _react2.default.createElement('div', { className: prefix + 'calendar-date' }, cellContent)));
                counter++;
            }

            if (!showOtherMonth && !lastDayOfWeekInCurrentMonth && !firstDayOfWeekInCurrentMonth) {
                break;
            }

            monthElements.push(_react2.default.createElement('tr', { key: _i, role: 'row' }, weekElements));
        }

        return _react2.default.createElement('table', { className: prefix + 'calendar-table', role: 'grid' }, _react2.default.createElement(_dateTableHead2.default, (0, _extends3.default)({}, this.props, { momentLocale: momentLocale })), _react2.default.createElement('tbody', { className: prefix + 'calendar-tbody', role: 'rowgroup' }, monthElements));
    };

    return DateTable;
}(_react.PureComponent);

exports.default = DateTable;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function isSameMonth(currentDate, selectedDate) {
    return selectedDate && currentDate.year() === selectedDate.year() && currentDate.month() === selectedDate.month();
}

var MonthTable = function (_PureComponent) {
    (0, _inherits3.default)(MonthTable, _PureComponent);

    function MonthTable() {
        (0, _classCallCheck3.default)(this, MonthTable);
        return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
    }

    MonthTable.prototype.onMonthCellClick = function onMonthCellClick(date) {
        this.props.onSelectMonth(date, 'date');
    };

    MonthTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            visibleMonth = _props.visibleMonth,
            disabledDate = _props.disabledDate,
            today = _props.today,
            momentLocale = _props.momentLocale,
            monthCellRender = _props.monthCellRender;

        var monthLocale = momentLocale.monthsShort();

        var counter = 0;
        var monthList = [];
        for (var i = 0; i < _utils.MONTH_TABLE_ROW_COUNT; i++) {
            var rowList = [];
            for (var j = 0; j < _utils.MONTH_TABLE_COL_COUNT; j++) {
                var _classnames;

                var monthDate = visibleMonth.clone().month(counter);
                var isDisabled = (0, _utils.isDisabledDate)(monthDate, disabledDate, 'month');
                var isSelected = isSameMonth(monthDate, value);
                var isThisMonth = isSameMonth(monthDate, today);
                var elementCls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'calendar-cell'] = true, _classnames[prefix + 'calendar-cell-current'] = isThisMonth, _classnames[prefix + 'selected'] = isSelected, _classnames[prefix + 'disabled'] = isDisabled, _classnames));
                var localedMonth = monthLocale[counter];
                var monthCellContent = monthCellRender ? monthCellRender(monthDate) : localedMonth;
                rowList.push(_react2.default.createElement('td', {
                    key: counter,
                    title: localedMonth,
                    onClick: isDisabled ? undefined : this.onMonthCellClick.bind(this, monthDate),
                    className: elementCls,
                    role: 'cell',
                    'aria-disabled': isDisabled ? 'true' : 'false',
                    'aria-selected': isSelected ? 'true' : 'false'
                }, _react2.default.createElement('div', { className: prefix + 'calendar-month' }, monthCellContent)));
                counter++;
            }
            monthList.push(_react2.default.createElement('tr', { key: i, role: 'row' }, rowList));
        }

        return _react2.default.createElement('table', { className: prefix + 'calendar-table', role: 'grid' }, _react2.default.createElement('tbody', { className: prefix + 'calendar-tbody', role: 'rowgroup' }, monthList));
    };

    return MonthTable;
}(_react.PureComponent);

exports.default = MonthTable;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var YearTable = function (_React$PureComponent) {
    (0, _inherits3.default)(YearTable, _React$PureComponent);

    function YearTable() {
        (0, _classCallCheck3.default)(this, YearTable);
        return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));
    }

    YearTable.prototype.onYearCellClick = function onYearCellClick(date) {
        this.props.onSelectYear(date, 'month');
    };

    YearTable.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            today = _props.today,
            visibleMonth = _props.visibleMonth,
            locale = _props.locale,
            disabledDate = _props.disabledDate,
            goPrevDecade = _props.goPrevDecade,
            goNextDecade = _props.goNextDecade,
            yearCellRender = _props.yearCellRender;

        var currentYear = today.year();
        var selectedYear = value ? value.year() : null;
        var visibleYear = visibleMonth.year();
        var startYear = Math.floor(visibleYear / 10) * 10;

        var yearElements = [];
        var counter = 0;

        var lastRowIndex = _utils.YEAR_TABLE_ROW_COUNT - 1;
        var lastColIndex = _utils.YEAR_TABLE_COL_COUNT - 1;

        for (var i = 0; i < _utils.YEAR_TABLE_ROW_COUNT; i++) {
            var rowElements = [];
            for (var j = 0; j < _utils.YEAR_TABLE_COL_COUNT; j++) {
                var _classnames;

                var content = void 0;
                var year = void 0;
                var isDisabled = false;
                var onClick = void 0;
                var title = void 0;

                if (i === 0 && j === 0) {
                    title = locale.prevDecade;
                    onClick = goPrevDecade;
                    content = _react2.default.createElement(_icon2.default, { type: 'arrow-left', size: 'xs' });
                } else if (i === lastRowIndex && j === lastColIndex) {
                    title = locale.nextDecade;
                    onClick = goNextDecade;
                    content = _react2.default.createElement(_icon2.default, { type: 'arrow-right', size: 'xs' });
                } else {
                    year = startYear + counter++;
                    title = year;
                    var yearDate = visibleMonth.clone().year(year);
                    isDisabled = (0, _utils.isDisabledDate)(yearDate, disabledDate, 'year');

                    !isDisabled && (onClick = this.onYearCellClick.bind(this, yearDate));

                    content = yearCellRender ? yearCellRender(yearDate) : year;
                }

                var isSelected = year === selectedYear;

                var classNames = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'calendar-cell'] = true, _classnames[prefix + 'calendar-cell-current'] = year === currentYear, _classnames[prefix + 'selected'] = isSelected, _classnames[prefix + 'disabled'] = isDisabled, _classnames));

                rowElements.push(_react2.default.createElement('td', { key: i + '-' + j, className: classNames, role: 'cell' }, _react2.default.createElement('div', {
                    className: prefix + 'calendar-year',
                    onClick: onClick,
                    title: title,
                    'aria-disabled': isDisabled ? 'true' : 'false',
                    'aria-selected': isSelected ? 'true' : 'false'
                }, content)));
            }
            yearElements.push(_react2.default.createElement('tr', { key: i, role: 'row' }, rowElements));
        }
        return _react2.default.createElement('table', { className: prefix + 'calendar-table', role: 'grid' }, _react2.default.createElement('tbody', { className: prefix + 'calendar-tbody', role: 'rowgroup' }, yearElements));
    };

    return YearTable;
}(_react2.default.PureComponent);

exports.default = YearTable;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _rangePanelHeader = __webpack_require__(314);

var _rangePanelHeader2 = _interopRequireDefault(_rangePanelHeader);

var _monthPanelHeader = __webpack_require__(152);

var _monthPanelHeader2 = _interopRequireDefault(_monthPanelHeader);

var _yearPanelHeader = __webpack_require__(153);

var _yearPanelHeader2 = _interopRequireDefault(_yearPanelHeader);

var _dateTable = __webpack_require__(154);

var _dateTable2 = _interopRequireDefault(_dateTable);

var _monthTable = __webpack_require__(155);

var _monthTable2 = _interopRequireDefault(_monthTable);

var _yearTable = __webpack_require__(156);

var _yearTable2 = _interopRequireDefault(_yearTable);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var RangeCalendar = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(RangeCalendar, _React$Component);

    function RangeCalendar(props, context) {
        (0, _classCallCheck3.default)(this, RangeCalendar);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

        _this.onSelectCell = function (date, nextMode) {
            if (_this.state.mode === _utils.CALENDAR_MODE_DATE) {
                _this.props.onSelect(date);
            } else {
                _this.changeVisibleMonth(date, 'cellClick');
            }

            _this.changeMode(nextMode);
        };

        _this.changeMode = function (mode, activePanel) {
            var _this$state = _this.state,
                lastMode = _this$state.lastMode,
                lastPanelType = _this$state.lastPanelType;

            var state = {
                lastMode: mode,
                // rangePicker的panel下，选 year -> month ，从当前函数的activePanel传来的数据已经拿不到 start end panel的状态了，需要根据 lastMode 来判断
                lastPanelType: lastMode === 'year' ? lastPanelType : activePanel
            };
            if (typeof mode === 'string' && mode !== _this.state.mode) {
                state.mode = mode;
            }
            if (activePanel && activePanel !== _this.state.activePanel) {
                state.activePanel = activePanel;
            }

            _this.setState(state);
        };

        _this.changeVisibleMonth = function (date, reason) {
            var lastPanelType = _this.state.lastPanelType;

            if (!(0, _utils.isSameYearMonth)(date, _this.state.startVisibleMonth)) {
                var startVisibleMonth = lastPanelType === 'end' ? date.clone().add(-1, 'month') : date;
                _this.setState({ startVisibleMonth: startVisibleMonth });
                _this.props.onVisibleMonthChange(startVisibleMonth, reason);
            }
        };

        _this.changeVisibleMonthByOffset = function (offset, type) {
            var offsetDate = _this.state.startVisibleMonth.clone().add(offset, type);
            _this.changeVisibleMonth(offsetDate, 'buttonClick');
        };

        _this.goPrevDecade = function () {
            _this.changeVisibleMonthByOffset(-10, 'years');
        };

        _this.goNextDecade = function () {
            _this.changeVisibleMonthByOffset(10, 'years');
        };

        _this.goPrevYear = function () {
            _this.changeVisibleMonthByOffset(-1, 'years');
        };

        _this.goNextYear = function () {
            _this.changeVisibleMonthByOffset(1, 'years');
        };

        _this.goPrevMonth = function () {
            _this.changeVisibleMonthByOffset(-1, 'months');
        };

        _this.goNextMonth = function () {
            _this.changeVisibleMonthByOffset(1, 'months');
        };

        var startValue = (0, _utils.formatDateValue)(props.startValue || props.defaultStartValue);
        var endValue = (0, _utils.formatDateValue)(props.endValue || props.defaultEndValue);
        var visibleMonth = (0, _utils.getVisibleMonth)(props.defaultVisibleMonth, startValue);

        _this.state = {
            startValue: startValue,
            endValue: endValue,
            mode: props.mode,
            prevMode: props.mode,
            startVisibleMonth: visibleMonth,
            activePanel: undefined,
            lastMode: undefined,
            lastPanelType: 'start' // enum, 包括 start end
        };
        _this.today = (0, _moment2.default)();
        return _this;
    }

    RangeCalendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};
        if ('startValue' in props) {
            var startValue = (0, _utils.formatDateValue)(props.startValue);
            st.startValue = startValue;
            if (startValue && !startValue.isSame(state.startValue, 'day')) {
                st.startVisibleMonth = startValue;
            }
        }

        if ('endValue' in props) {
            st.endValue = (0, _utils.formatDateValue)(props.endValue);
        }

        if ('mode' in props && state.prevMode !== props.mode) {
            st.prevMode = props.mode;
            st.mode = props.mode;
        }

        return st;
    };

    /**
     * 根据日期偏移量设置当前展示的月份
     * @param {Number} offset 日期偏移量
     * @param {String} type 日期偏移类型 days, months, years
     */

    RangeCalendar.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            dateCellRender = _props.dateCellRender,
            monthCellRender = _props.monthCellRender,
            yearCellRender = _props.yearCellRender,
            className = _props.className,
            format = _props.format,
            locale = _props.locale,
            showOtherMonth = _props.showOtherMonth,
            disabledDate = _props.disabledDate,
            disableChangeMode = _props.disableChangeMode,
            yearRange = _props.yearRange,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'rtl', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'className', 'format', 'locale', 'showOtherMonth', 'disabledDate', 'disableChangeMode', 'yearRange']);
        var _state = this.state,
            startValue = _state.startValue,
            endValue = _state.endValue,
            mode = _state.mode,
            startVisibleMonth = _state.startVisibleMonth,
            activePanel = _state.activePanel;

        // reset moment locale

        if (locale.momentLocale) {
            startValue && startValue.locale(locale.momentLocale);
            endValue && endValue.locale(locale.momentLocale);
            startVisibleMonth.locale(locale.momentLocale);
        }

        if (rtl) {
            others.dir = 'rtl';
        }
        var localeData = (0, _utils.getLocaleData)(locale.format || {}, startVisibleMonth.localeData());

        var endVisibleMonth = startVisibleMonth.clone().add(1, 'months');

        var headerProps = {
            prefix: prefix,
            rtl: rtl,
            mode: mode,
            locale: locale,
            momentLocale: localeData,
            startVisibleMonth: startVisibleMonth,
            endVisibleMonth: endVisibleMonth,
            changeVisibleMonth: this.changeVisibleMonth,
            changeMode: this.changeMode,
            yearRange: yearRange,
            disableChangeMode: disableChangeMode
        };

        var tableProps = {
            prefix: prefix,
            value: startValue,
            startValue: startValue,
            endValue: endValue,
            mode: mode,
            locale: locale,
            momentLocale: localeData,
            showOtherMonth: showOtherMonth,
            today: this.today,
            disabledDate: disabledDate,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            changeMode: this.changeMode,
            changeVisibleMonth: this.changeVisibleMonth
        };

        var visibleMonths = {
            start: startVisibleMonth,
            end: endVisibleMonth
        };

        var visibleMonth = visibleMonths[activePanel];

        var header = void 0;
        var table = void 0;

        switch (mode) {
            case _utils.CALENDAR_MODE_DATE:
                {
                    table = [_react2.default.createElement('div', { className: prefix + 'calendar-body-left', key: 'left-panel' }, _react2.default.createElement(_dateTable2.default, (0, _extends3.default)({
                        format: format
                    }, tableProps, {
                        visibleMonth: startVisibleMonth,
                        onSelectDate: this.onSelectCell
                    }))), _react2.default.createElement('div', { className: prefix + 'calendar-body-right', key: 'right-panel' }, _react2.default.createElement(_dateTable2.default, (0, _extends3.default)({
                        format: format
                    }, tableProps, {
                        visibleMonth: endVisibleMonth,
                        onSelectDate: this.onSelectCell
                    })))];
                    header = _react2.default.createElement(_rangePanelHeader2.default, (0, _extends3.default)({}, headerProps, {
                        goPrevYear: this.goPrevYear,
                        goPrevMonth: this.goPrevMonth,
                        goNextYear: this.goNextYear,
                        goNextMonth: this.goNextMonth
                    }));
                    break;
                }
            case _utils.CALENDAR_MODE_MONTH:
                {
                    table = _react2.default.createElement(_monthTable2.default, (0, _extends3.default)({}, tableProps, { visibleMonth: visibleMonth, onSelectMonth: this.onSelectCell }));
                    header = _react2.default.createElement(_monthPanelHeader2.default, (0, _extends3.default)({}, headerProps, {
                        visibleMonth: visibleMonth,
                        goPrevYear: this.goPrevYear,
                        goNextYear: this.goNextYear
                    }));
                    break;
                }
            case _utils.CALENDAR_MODE_YEAR:
                {
                    table = _react2.default.createElement(_yearTable2.default, (0, _extends3.default)({}, tableProps, {
                        rtl: rtl,
                        visibleMonth: visibleMonth,
                        onSelectYear: this.onSelectCell,
                        goPrevDecade: this.goPrevDecade,
                        goNextDecade: this.goNextDecade
                    }));
                    header = _react2.default.createElement(_yearPanelHeader2.default, (0, _extends3.default)({}, headerProps, {
                        visibleMonth: visibleMonth,
                        goPrevDecade: this.goPrevDecade,
                        goNextDecade: this.goNextDecade
                    }));
                    break;
                }
        }

        var classNames = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-range'] = true, _classnames), className);

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(RangeCalendar.propTypes, others), { className: classNames }), header, _react2.default.createElement('div', { className: prefix + 'calendar-body' }, table));
    };

    return RangeCalendar;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 默认的开始日期
     */
    defaultStartValue: _utils.checkMomentObj,
    /**
     * 默认的结束日期
     */
    defaultEndValue: _utils.checkMomentObj,
    /**
     * 开始日期（moment 对象）
     */
    startValue: _utils.checkMomentObj,
    /**
     * 结束日期（moment 对象）
     */
    endValue: _utils.checkMomentObj,
    // 面板模式
    mode: _propTypes2.default.oneOf(_utils.CALENDAR_MODES),
    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)
    disableChangeMode: _propTypes2.default.bool,
    // 日期值的格式（用于日期title显示的格式）
    format: _propTypes2.default.string,
    yearRange: _propTypes2.default.arrayOf(_propTypes2.default.number),
    /**
     * 是否显示非本月的日期
     */
    showOtherMonth: _propTypes2.default.bool,
    /**
     * 模板展示的月份（起始月份）
     */
    defaultVisibleMonth: _propTypes2.default.func,
    /**
     * 展现的月份变化时的回调
     * @param {Object} value 显示的月份 (moment 对象)
     * @param {String} reason 触发月份改变原因
     */
    onVisibleMonthChange: _propTypes2.default.func,
    /**
     * 不可选择的日期
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @returns {Boolean}
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 选择日期单元格时的回调
     * @param {Object} value 对应的日期值 (moment 对象)
     */
    onSelect: _propTypes2.default.func,
    /**
     * 自定义日期单元格渲染
     */
    dateCellRender: _propTypes2.default.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    mode: _utils.CALENDAR_MODE_DATE,
    disableChangeMode: false,
    format: 'YYYY-MM-DD',
    dateCellRender: function dateCellRender(value) {
        return value.date();
    },
    onSelect: _util.func.noop,
    onVisibleMonthChange: _util.func.noop,
    locale: _zhCn2.default.Calendar,
    showOtherMonth: false
}, _temp);
RangeCalendar.displayName = 'RangeCalendar';
exports.default = _configProvider2.default.config((0, _reactLifecyclesCompat.polyfill)(RangeCalendar), {
    componentName: 'Calendar'
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.BulletHeader
 * @order 2
 */
var CardBulletHeader = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardBulletHeader, _Component);

    function CardBulletHeader() {
        (0, _classCallCheck3.default)(this, CardBulletHeader);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardBulletHeader.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            subTitle = _props.subTitle,
            extra = _props.extra,
            showTitleBullet = _props.showTitleBullet;

        if (!title) return null;

        var headCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'card-head'] = true, _classNames[prefix + 'card-head-show-bullet'] = showTitleBullet, _classNames));

        var headExtra = extra ? _react2.default.createElement('div', { className: prefix + 'card-extra' }, extra) : null;

        return _react2.default.createElement('div', { className: headCls }, _react2.default.createElement('div', { className: prefix + 'card-head-main' }, _react2.default.createElement('div', { className: prefix + 'card-title' }, title, subTitle ? _react2.default.createElement('span', { className: prefix + 'card-subtitle' }, subTitle) : null), headExtra));
    };

    return CardBulletHeader;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 卡片的标题
     */
    title: _propTypes2.default.node,
    /**
     * 卡片的副标题
     */
    subTitle: _propTypes2.default.node,
    /**
     * 是否显示标题的项目符号
     */
    showTitleBullet: _propTypes2.default.bool,
    /**
     * 标题区域的用户自定义内容
     */
    extra: _propTypes2.default.node
}, _class.defaultProps = {
    prefix: 'next-',
    showTitleBullet: true
}, _temp);
CardBulletHeader.displayName = 'CardBulletHeader';
exports.default = _configProvider2.default.config(CardBulletHeader, {
    componentName: 'Card'
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.CollapseContent
 * @order 3
 */
var CardCollapseContent = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardCollapseContent, _Component);

    function CardCollapseContent(props, context) {
        (0, _classCallCheck3.default)(this, CardCollapseContent);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.handleToggle = function () {
            _this.setState(function (prevState) {
                return {
                    expand: !prevState.expand
                };
            });
        };

        _this._contentRefHandler = function (ref) {
            _this.content = ref;
        };

        _this.saveFooter = function (ref) {
            _this.footer = ref;
        };

        _this.state = {
            needMore: false,
            expand: false,
            contentHeight: 'auto'
        };
        return _this;
    }

    CardCollapseContent.prototype.componentDidMount = function componentDidMount() {
        this._setNeedMore();
        this._setContentHeight();
    };

    CardCollapseContent.prototype.componentDidUpdate = function componentDidUpdate() {
        this._setContentHeight();
    };

    // 是否展示 More 按钮
    CardCollapseContent.prototype._setNeedMore = function _setNeedMore() {
        var contentHeight = this.props.contentHeight;

        var childrenHeight = this._getNodeChildrenHeight(this.content);
        this.setState({
            needMore: contentHeight !== 'auto' && childrenHeight > contentHeight
        });
    };

    // 设置 Body 的高度


    CardCollapseContent.prototype._setContentHeight = function _setContentHeight() {
        if (this.props.contentHeight === 'auto') {
            this.content.style.height = 'auto';
            return;
        }

        if (this.state.expand) {
            var childrenHeight = this._getNodeChildrenHeight(this.content);
            this.content.style.height = childrenHeight + 'px'; // get the real height
        } else {
            var el = _reactDom2.default.findDOMNode(this.footer);
            var height = this.props.contentHeight;

            if (el) {
                height = height - el.getBoundingClientRect().height;
            }

            this.content.style.height = height + 'px';
        }
    };

    CardCollapseContent.prototype._getNodeChildrenHeight = function _getNodeChildrenHeight(node) {
        if (!node) {
            return 0;
        }

        var contentChildNodes = node.childNodes;
        var length = contentChildNodes.length;

        if (!length) {
            return 0;
        }

        var lastNode = contentChildNodes[length - 1];

        return lastNode.offsetTop + lastNode.offsetHeight;
    };

    CardCollapseContent.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            children = _props.children,
            locale = _props.locale;
        var _state = this.state,
            needMore = _state.needMore,
            expand = _state.expand;

        return _react2.default.createElement('div', { className: prefix + 'card-body' }, _react2.default.createElement('div', { className: prefix + 'card-content', ref: this._contentRefHandler }, children), needMore ? _react2.default.createElement('div', { className: prefix + 'card-footer', ref: this.saveFooter, onClick: this.handleToggle }, _react2.default.createElement(_button2.default, { text: true, type: 'primary' }, expand ? locale.fold : locale.expand, _react2.default.createElement(_icon2.default, { type: 'arrow-down', className: expand ? 'expand' : '' }))) : null);
    };

    return CardCollapseContent;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 内容区域的固定高度
     */
    contentHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    locale: _propTypes2.default.object,
    children: _propTypes2.default.node
}, _class.defaultProps = {
    prefix: 'next-',
    contentHeight: 120,
    locale: _zhCn2.default.Card
}, _temp);
CardCollapseContent.displayName = 'CardCollapseContent';
exports.default = _configProvider2.default.config(CardCollapseContent, {
    componentName: 'Card'
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var warning = _util.log.warning;

var MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];

/**
 * Card.Media
 * @order 1
 */
var CardMedia = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardMedia, _Component);

    function CardMedia() {
        (0, _classCallCheck3.default)(this, CardMedia);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardMedia.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            Component = _props.component,
            image = _props.image,
            src = _props.src,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'style', 'className', 'component', 'image', 'src']);

        if (!('children' in others || Boolean(image || src))) {
            warning('either `children`, `image` or `src` prop must be specified.');
        }

        var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;
        var composedStyle = !isMediaComponent && image ? (0, _extends3.default)({ backgroundImage: 'url("' + image + '")' }, style) : style;

        return _react2.default.createElement(Component, (0, _extends3.default)({}, others, {
            style: composedStyle,
            className: (0, _classnames2.default)(prefix + 'card-media', className),
            src: isMediaComponent ? image || src : undefined
        }));
    };

    return CardMedia;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    /**
     * 背景图片地址
     */
    image: _propTypes2.default.string,
    /**
     * 媒体源文件地址
     */
    src: _propTypes2.default.string,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'div',
    style: {}
}, _temp);
CardMedia.displayName = 'CardMedia';
exports.default = _configProvider2.default.config(CardMedia);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.Actions
 * @order 5
 */
var CardActions = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardActions, _Component);

    function CardActions() {
        (0, _classCallCheck3.default)(this, CardActions);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardActions.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            Component = _props.component,
            className = _props.className,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'component', 'className']);

        return _react2.default.createElement(Component, (0, _extends3.default)({}, others, { className: (0, _classnames2.default)(prefix + 'card-actions', className) }));
    };

    return CardActions;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, _temp);
CardActions.displayName = 'CardActions';
exports.default = _configProvider2.default.config(CardActions);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var cascader_1 = tslib_1.__importDefault(__webpack_require__(320));
exports.default = config_provider_1.default.config(cascader_1.default, {
    transform: function transform(props, deprecated) {
        if ('expandTrigger' in props) {
            deprecated('expandTrigger', 'expandTriggerType', 'Cascader');
            var expandTrigger = props.expandTrigger,
                others = tslib_1.__rest(props, ["expandTrigger"]);
            props = tslib_1.__assign({ expandTriggerType: expandTrigger }, others);
        }
        if ('showItemCount' in props) {
            deprecated('showItemCount', 'listStyle | listClassName', 'Cascader');
        }
        if ('labelWidth' in props) {
            deprecated('labelWidth', 'listStyle | listClassName', 'Cascader');
        }
        return props;
    },
    exportNames: ['setFocusValue']
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 163 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var util_1 = __webpack_require__(4);
/** Collapse.Panel */
var Panel = /** @class */function (_super) {
    tslib_1.__extends(Panel, _super);
    function Panel() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.onKeyDown = function (e) {
            var keyCode = e.keyCode;
            if (keyCode === util_1.KEYCODE.SPACE) {
                var onClick = _this.props.onClick;
                e.preventDefault();
                onClick && onClick(e);
            }
        };
        return _this;
    }
    Panel.prototype.render = function () {
        var _a, _b;
        var _c = this.props,
            title = _c.title,
            children = _c.children,
            className = _c.className,
            isExpanded = _c.isExpanded,
            disabled = _c.disabled,
            style = _c.style,
            prefix = _c.prefix,
            onClick = _c.onClick,
            id = _c.id,
            others = tslib_1.__rest(_c, ["title", "children", "className", "isExpanded", "disabled", "style", "prefix", "onClick", "id"]);
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "collapse-panel")] = true, _a["".concat(prefix, "collapse-panel-hidden")] = !isExpanded, _a["".concat(prefix, "collapse-panel-expanded")] = isExpanded, _a["".concat(prefix, "collapse-panel-disabled")] = disabled, _a[className] = className, _a));
        var iconCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "collapse-panel-icon")] = true, _b["".concat(prefix, "collapse-panel-icon-expanded")] = isExpanded, _b));
        // 为了无障碍 需要添加两个 id
        var headingId = id ? "".concat(id, "-heading") : undefined;
        var regionId = id ? "".concat(id, "-region") : undefined;
        return react_1.default.createElement("div", tslib_1.__assign({ className: cls, style: style, id: id }, others), react_1.default.createElement("div", { id: headingId, className: "".concat(prefix, "collapse-panel-title"), onClick: onClick, onKeyDown: this.onKeyDown, tabIndex: 0, "aria-disabled": disabled, "aria-expanded": isExpanded, "aria-controls": regionId, role: "button" }, react_1.default.createElement(icon_1.default, { type: "arrow-right", className: iconCls, "aria-hidden": "true" }), title), react_1.default.createElement("div", { className: "".concat(prefix, "collapse-panel-content"), role: "region", id: regionId }, children));
    };
    Panel.propTypes = {
        /**
         * 样式类名的品牌前缀
         */
        prefix: prop_types_1.default.string,
        /**
         * 子组件接受行内样式
         */
        style: prop_types_1.default.object,
        children: prop_types_1.default.any,
        isExpanded: prop_types_1.default.bool,
        /**
         * 是否禁止用户操作
         */
        disabled: prop_types_1.default.bool,
        /**
         * 标题
         */
        title: prop_types_1.default.node,
        /**
         * 扩展 class
         */
        className: prop_types_1.default.string,
        onClick: prop_types_1.default.func,
        id: prop_types_1.default.string
    };
    Panel.defaultProps = {
        prefix: 'next-',
        isExpanded: false,
        onClick: util_1.func.noop
    };
    Panel.isNextPanel = true;
    return Panel;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Panel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var PanelFooter = (_temp2 = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(PanelFooter, _React$PureComponent);

    function PanelFooter() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, PanelFooter);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.changePanel = function () {
            var _PANEL$DATE$PANEL$TIM;

            var targetPanel = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[_util2.PANEL.DATE] = _util2.PANEL.TIME, _PANEL$DATE$PANEL$TIM[_util2.PANEL.TIME] = _util2.PANEL.DATE, _PANEL$DATE$PANEL$TIM)[_this.props.panel];
            _this.props.onPanelChange(targetPanel);
        }, _this.createRanges = function (ranges) {
            if (!ranges || ranges.length === 0) return null;
            var _this$props = _this.props,
                onOk = _this$props.onOk,
                prefix = _this$props.prefix;

            return _react2.default.createElement('div', { className: prefix + 'date-picker-panel-tools' }, ranges.map(function (_ref) {
                var label = _ref.label,
                    _ref$value = _ref.value,
                    value = _ref$value === undefined ? [] : _ref$value,
                    onChange = _ref.onChange;

                var handleClick = function handleClick() {
                    var momentValue = value.map(function (v) {
                        return (0, _moment2.default)(v);
                    });

                    onChange(momentValue);
                    onOk(momentValue);
                };
                return _react2.default.createElement(_button2.default, { key: label, text: true, size: 'small', type: 'primary', onClick: handleClick }, label);
            }));
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    PanelFooter.prototype.render = function render() {
        var _PANEL$DATE$PANEL$TIM2;

        var _props = this.props,
            prefix = _props.prefix,
            locale = _props.locale,
            panel = _props.panel,
            value = _props.value,
            ranges = _props.ranges,
            disabledOk = _props.disabledOk,
            onPanelChange = _props.onPanelChange,
            onOk = _props.onOk;

        var panelBtnLabel = (_PANEL$DATE$PANEL$TIM2 = {}, _PANEL$DATE$PANEL$TIM2[_util2.PANEL.DATE] = locale.selectTime, _PANEL$DATE$PANEL$TIM2[_util2.PANEL.TIME] = locale.selectDate, _PANEL$DATE$PANEL$TIM2)[panel];

        var sharedBtnProps = {
            size: 'small',
            type: 'primary',
            disabled: !value
        };
        var onClick = function onClick() {
            return onOk();
        };

        return _react2.default.createElement('div', { className: prefix + 'date-picker-panel-footer' }, this.createRanges(ranges), onPanelChange ? _react2.default.createElement(_button2.default, (0, _extends3.default)({}, sharedBtnProps, { text: true, onClick: this.changePanel }), panelBtnLabel) : null, _react2.default.createElement(_button2.default, (0, _extends3.default)({}, sharedBtnProps, { disabled: disabledOk || !value, onClick: onClick }), locale.ok));
    };

    return PanelFooter;
}(_react2.default.PureComponent), _class.defaultProps = {
    // onPanelChange: func.noop,
    onOk: _util.func.noop
}, _temp2);
exports.default = PanelFooter;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(16));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var inner_1 = tslib_1.__importDefault(__webpack_require__(93));
var noop = function noop() {};
var limitTabRange = util_1.focus.limitTabRange;
var bindCtx = util_1.func.bindCtx;
var pickOthers = util_1.obj.pickOthers;
var getStyle = util_1.dom.getStyle,
    setStyle = util_1.dom.setStyle;
function isWidthOrHeight(name) {
    return ['width', 'height'].indexOf(name) !== -1;
}
// [fix issue #1609](https://github.com/alibaba-fusion/next/issues/1609)
// https://stackoverflow.com/questions/19717907/getcomputedstyle-reporting-different-heights-between-chrome-safari-firefox-and-i
function _getSize(dom, name) {
    var boxSizing = getStyle(dom, 'boxSizing');
    if (util_1.env.ieVersion && isWidthOrHeight(name) && boxSizing === 'border-box') {
        return parseFloat(dom.getBoundingClientRect()[name].toFixed(1));
    } else {
        return getStyle(dom, name);
    }
}
/**
 * Dialog
 */
var Dialog = /** @class */function (_super) {
    tslib_1.__extends(Dialog, _super);
    function Dialog(props) {
        var _this = _super.call(this, props) || this;
        bindCtx(_this, ['onKeyDown', 'beforePosition', 'adjustPosition', 'getOverlayRef']);
        return _this;
    }
    Dialog.prototype.componentDidMount = function () {
        util_1.events.on(document, 'keydown', this.onKeyDown);
        if (!this.useCSSToPosition()) {
            this.adjustPosition();
        }
    };
    Dialog.prototype.componentWillUnmount = function () {
        util_1.events.off(document, 'keydown', this.onKeyDown);
    };
    Dialog.prototype.useCSSToPosition = function () {
        var _a = this.props,
            align = _a.align,
            isFullScreen = _a.isFullScreen;
        return align === 'cc cc' && isFullScreen;
    };
    Dialog.prototype.onKeyDown = function (e) {
        if (this.overlay) {
            var node = this.getInnerNode();
            if (node) {
                limitTabRange(node, e);
            }
        }
    };
    Dialog.prototype.beforePosition = function () {
        if (this.props.visible && this.overlay) {
            var inner = this.getInner();
            if (inner) {
                var node = this.getInnerNode();
                if (this._lastDialogHeight !== _getSize(node, 'height')) {
                    this.revertSize(inner.bodyNode);
                }
            }
        }
    };
    Dialog.prototype.adjustPosition = function () {
        if (this.props.visible && this.overlay) {
            var inner = this.getInner();
            if (inner) {
                var node = this.getInnerNode();
                var top_1 = getStyle(node, 'top');
                var minMargin = this.props.minMargin;
                if (top_1 < minMargin) {
                    top_1 = minMargin;
                    setStyle(node, 'top', "".concat(minMargin, "px"));
                }
                var height = _getSize(node, 'height');
                var viewportHeight = window.innerHeight || document.documentElement.clientHeight;
                if (viewportHeight < height + top_1 * 2 - 1 || // 分辨率和精确度的原因 高度计算的时候 可能会有1px内的偏差
                this.props.height) {
                    this.adjustSize(inner, node, Math.min(height, viewportHeight - top_1 * 2));
                } else {
                    this.revertSize(inner.bodyNode);
                }
                this._lastDialogHeight = height;
            }
        }
    };
    Dialog.prototype.adjustSize = function (inner, node, expectHeight) {
        var headerNode = inner.headerNode,
            bodyNode = inner.bodyNode,
            footerNode = inner.footerNode;
        var _a = tslib_1.__read([headerNode, footerNode].map(function (node) {
            return node ? _getSize(node, 'height') : 0;
        }), 2),
            headerHeight = _a[0],
            footerHeight = _a[1];
        var padding = ['padding-top', 'padding-bottom'].reduce(function (sum, attr) {
            return sum + getStyle(node, attr);
        }, 0);
        var maxBodyHeight = expectHeight - headerHeight - footerHeight - padding;
        if (maxBodyHeight < 0) {
            maxBodyHeight = 1;
        }
        if (bodyNode) {
            this.dialogBodyStyleMaxHeight = bodyNode.style.maxHeight;
            this.dialogBodyStyleOverflowY = bodyNode.style.overflowY;
            setStyle(bodyNode, {
                'max-height': "".concat(maxBodyHeight, "px"),
                'overflow-y': 'auto'
            });
        }
    };
    Dialog.prototype.revertSize = function (bodyNode) {
        setStyle(bodyNode, {
            'max-height': this.dialogBodyStyleMaxHeight,
            'overflow-y': this.dialogBodyStyleOverflowY
        });
    };
    Dialog.prototype.mapcloseableToConfig = function (closeable) {
        return ['esc', 'close', 'mask'].reduce(function (ret, option) {
            var key = option.charAt(0).toUpperCase() + option.substr(1);
            var value = typeof closeable === 'boolean' ? closeable : closeable.split(',').indexOf(option) > -1;
            if (option === 'esc' || option === 'mask') {
                ret["canCloseBy".concat(key)] = value;
            } else {
                ret["canCloseBy".concat(key, "Click")] = value;
            }
            return ret;
        }, {});
    };
    Dialog.prototype.getOverlayRef = function (ref) {
        this.overlay = ref;
    };
    Dialog.prototype.getInner = function () {
        // @ts-expect-error Overlay 尚未 ts 化
        return this.overlay.getInstance().getContent();
    };
    Dialog.prototype.getInnerNode = function () {
        // @ts-expect-error Overlay 尚未 ts 化
        return this.overlay.getInstance().getContentNode();
    };
    Dialog.prototype.renderInner = function (closeable) {
        var _a = this.props,
            prefix = _a.prefix,
            className = _a.className,
            title = _a.title,
            children = _a.children,
            footer = _a.footer,
            footerAlign = _a.footerAlign,
            footerActions = _a.footerActions,
            onOk = _a.onOk,
            onCancel = _a.onCancel,
            okProps = _a.okProps,
            cancelProps = _a.cancelProps,
            onClose = _a.onClose,
            locale = _a.locale,
            visible = _a.visible,
            rtl = _a.rtl,
            height = _a.height,
            noPadding = _a.noPadding;
        var others = pickOthers(Object.keys(Dialog.propTypes), this.props);
        return react_1.default.createElement(inner_1.default, tslib_1.__assign({ prefix: prefix, className: className, title: title, footer: footer, footerAlign: footerAlign, footerActions: footerActions, onOk: visible ? onOk : noop, onCancel: visible ? onCancel : noop, okProps: okProps, cancelProps: cancelProps, locale: locale, closeable: closeable, rtl: rtl, onClose: onClose.bind(this, 'closeClick'), height: height, noPadding: noPadding }, others), children);
    };
    Dialog.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            visible = _a.visible,
            hasMask = _a.hasMask,
            animation = _a.animation,
            autoFocus = _a.autoFocus,
            closeable = _a.closeable,
            closeMode = _a.closeMode,
            onClose = _a.onClose,
            afterClose = _a.afterClose,
            shouldUpdatePosition = _a.shouldUpdatePosition,
            align = _a.align,
            popupContainer = _a.popupContainer,
            cache = _a.cache,
            overlayProps = _a.overlayProps,
            rtl = _a.rtl;
        var useCSS = this.useCSSToPosition();
        var newCloseable = 'closeMode' in this.props ? Array.isArray(closeMode) ? closeMode.join(',') : closeMode : closeable;
        var _b = this.mapcloseableToConfig(newCloseable),
            canCloseByCloseClick = _b.canCloseByCloseClick,
            closeConfig = tslib_1.__rest(_b, ["canCloseByCloseClick"]);
        var newOverlayProps = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ disableScroll: true, container: popupContainer, cache: cache }, overlayProps), { prefix: prefix, visible: visible, animation: animation, hasMask: hasMask, autoFocus: autoFocus, afterClose: afterClose }), closeConfig), { canCloseByOutSideClick: false, align: useCSS ? false : align, onRequestClose: onClose, needAdjust: false, ref: this.getOverlayRef, rtl: rtl, maskClass: useCSS ? "".concat(prefix, "dialog-container") : '', isChildrenInMask: useCSS && hasMask });
        if (!useCSS) {
            newOverlayProps.beforePosition = this.beforePosition;
            newOverlayProps.onPosition = this.adjustPosition;
            newOverlayProps.shouldUpdatePosition = shouldUpdatePosition;
        }
        var inner = this.renderInner(canCloseByCloseClick);
        // useCSS && hasMask : isFullScreen 并且 有 mask 的模式下，为了解决 next-overlay-backdrop 覆盖 mask，使得点击 mask 关闭页面的功能不生效的问题，需要开启 Overlay 的 isChildrenInMask 功能，并且把 next-dialog-container 放到 next-overlay-backdrop 上
        // useCSS && !hasMask : isFullScreen 并且 没有 mask 的情况下，需要关闭 isChildrenInMask 功能，以防止 children 不渲染
        // 其他模式下维持 mask 与 children 同级的关系
        return react_1.default.createElement(overlay_1.default, tslib_1.__assign({}, newOverlayProps), useCSS && !hasMask ? react_1.default.createElement("div", { className: "".concat(prefix, "dialog-container"), dir: rtl ? 'rtl' : undefined }, inner) : inner);
    };
    Dialog.propTypes = {
        prefix: prop_types_1.default.string,
        pure: prop_types_1.default.bool,
        rtl: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        visible: prop_types_1.default.bool,
        title: prop_types_1.default.node,
        children: prop_types_1.default.node,
        footer: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.node]),
        footerAlign: prop_types_1.default.oneOf(['left', 'center', 'right']),
        footerActions: prop_types_1.default.array,
        onOk: prop_types_1.default.func,
        onCancel: prop_types_1.default.func,
        okProps: prop_types_1.default.object,
        cancelProps: prop_types_1.default.object,
        closeMode: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.oneOf(['close', 'mask', 'esc'])), prop_types_1.default.oneOf(['close', 'mask', 'esc'])]),
        cache: prop_types_1.default.bool,
        afterClose: prop_types_1.default.func,
        hasMask: prop_types_1.default.bool,
        animation: prop_types_1.default.oneOfType([prop_types_1.default.object, prop_types_1.default.bool]),
        autoFocus: prop_types_1.default.bool,
        overlayProps: prop_types_1.default.object,
        locale: prop_types_1.default.object,
        // Do not remove this, it's for <ConfigProvider popupContainer={} />
        // see https://github.com/alibaba-fusion/next/issues/1508
        popupContainer: prop_types_1.default.any,
        height: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        v2: prop_types_1.default.bool,
        width: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        top: prop_types_1.default.number,
        bottom: prop_types_1.default.number,
        closeIcon: prop_types_1.default.node,
        centered: prop_types_1.default.bool,
        overflowScroll: prop_types_1.default.bool,
        wrapperClassName: prop_types_1.default.string,
        closeable: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.bool]),
        onClose: prop_types_1.default.func,
        align: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.bool]),
        isFullScreen: prop_types_1.default.bool,
        shouldUpdatePosition: prop_types_1.default.bool,
        minMargin: prop_types_1.default.number,
        noPadding: prop_types_1.default.bool
    };
    Dialog.defaultProps = {
        prefix: 'next-',
        pure: false,
        visible: false,
        footerAlign: 'right',
        footerActions: ['ok', 'cancel'],
        onOk: noop,
        onCancel: noop,
        cache: false,
        okProps: {},
        cancelProps: {},
        closeable: 'esc,close',
        onClose: noop,
        afterClose: noop,
        centered: false,
        hasMask: true,
        animation: {
            in: 'fadeInUp',
            out: 'fadeOutUp'
        },
        autoFocus: false,
        align: 'cc cc',
        isFullScreen: false,
        overflowScroll: true,
        shouldUpdatePosition: false,
        minMargin: 40,
        bottom: 40,
        overlayProps: {},
        locale: zh_cn_1.default.Dialog,
        noPadding: false
    };
    return Dialog;
}(react_1.Component);
exports.default = Dialog;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
/* istanbul ignore file */
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(60));
var inner_1 = tslib_1.__importDefault(__webpack_require__(93));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var scroll_locker_1 = tslib_1.__importDefault(__webpack_require__(168));
var OverlayContext = overlay_1.default.OverlayContext;
var noop = util_1.func.noop;
var Dialog = function Dialog(props) {
    var _a, _b, _c;
    if (!react_1.useState || !react_1.useRef || !react_1.useEffect) {
        util_1.log.warning('need react version > 16.8.0');
        return null;
    }
    var _d = props.prefix,
        prefix = _d === void 0 ? 'next-' : _d,
        _e = props.afterClose,
        afterClose = _e === void 0 ? noop : _e,
        _f = props.hasMask,
        hasMask = _f === void 0 ? true : _f,
        _g = props.autoFocus,
        autoFocus = _g === void 0 ? false : _g,
        className = props.className,
        title = props.title,
        children = props.children,
        footer = props.footer,
        footerAlign = props.footerAlign,
        footerActions = props.footerActions,
        _h = props.onOk,
        onOk = _h === void 0 ? noop : _h,
        onCancel = props.onCancel,
        okProps = props.okProps,
        cancelProps = props.cancelProps,
        _j = props.locale,
        locale = _j === void 0 ? zh_cn_1.default.Dialog : _j,
        rtl = props.rtl,
        pvisible = props.visible,
        _k = props.closeMode,
        closeMode = _k === void 0 ? ['close', 'esc'] : _k,
        closeIcon = props.closeIcon,
        _l = props.animation,
        animation = _l === void 0 ? { in: 'fadeInUp', out: 'fadeOutUp' } : _l,
        cache = props.cache,
        wrapperStyle = props.wrapperStyle,
        _m = props.popupContainer,
        popupContainer = _m === void 0 ? document.body : _m,
        dialogRender = props.dialogRender,
        centered = props.centered,
        _o = props.top,
        top = _o === void 0 ? centered ? 40 : 100 : _o,
        _p = props.bottom,
        bottom = _p === void 0 ? 40 : _p,
        _q = props.width,
        width = _q === void 0 ? 520 : _q,
        height = props.height,
        isFullScreen = props.isFullScreen,
        _r = props.overflowScroll,
        overflowScroll = _r === void 0 ? !isFullScreen : _r,
        minMargin = props.minMargin,
        onClose = props.onClose,
        style = props.style,
        wrapperClassName = props.wrapperClassName,
        others = tslib_1.__rest(props, ["prefix", "afterClose", "hasMask", "autoFocus", "className", "title", "children", "footer", "footerAlign", "footerActions", "onOk", "onCancel", "okProps", "cancelProps", "locale", "rtl", "visible", "closeMode", "closeIcon", "animation", "cache", "wrapperStyle", "popupContainer", "dialogRender", "centered", "top", "bottom", "width", "height", "isFullScreen", "overflowScroll", "minMargin", "onClose", "style", "wrapperClassName"]);
    if ('isFullScreen' in props) {
        util_1.log.deprecated('isFullScreen', 'overflowScroll', 'Dialog v2');
    }
    if ('minMargin' in props) {
        util_1.log.deprecated('minMargin', 'top/bottom', 'Dialog v2');
    }
    var _s = tslib_1.__read((0, react_1.useState)(pvisible || false), 2),
        firstVisible = _s[0],
        setFirst = _s[1];
    var _t = tslib_1.__read((0, react_1.useState)(pvisible), 2),
        visible = _t[0],
        setVisible = _t[1];
    var getContainer = typeof popupContainer === 'string' ? function () {
        return document.getElementById(popupContainer);
    } : typeof popupContainer !== 'function' ? function () {
        return popupContainer;
    } : popupContainer;
    var _u = tslib_1.__read((0, react_1.useState)(getContainer()), 2),
        container = _u[0],
        setContainer = _u[1];
    var dialogRef = (0, react_1.useRef)(null);
    var wrapperRef = (0, react_1.useRef)(null);
    var lastFocus = (0, react_1.useRef)();
    var locker = (0, react_1.useRef)(null);
    var _v = tslib_1.__read((0, react_1.useState)((0, util_1.guid)()), 1),
        uuid = _v[0];
    var _w = (0, react_1.useContext)(OverlayContext),
        setVisibleOverlayToParent = _w.setVisibleOverlayToParent,
        otherContext = tslib_1.__rest(_w, ["setVisibleOverlayToParent"]);
    var childIDMap = (0, react_1.useRef)(new Map());
    var isAnimationEnd = (0, react_1.useRef)(false);
    var _x = tslib_1.__read((0, react_1.useState)(), 2),
        forceUpdate = _x[1];
    var markAnimationEnd = function markAnimationEnd(state) {
        isAnimationEnd.current = state;
        forceUpdate({});
    };
    var canCloseByEsc = false;
    var canCloseByMask = false;
    var closeable = false;
    var closeModeArray = Array.isArray(closeMode) ? closeMode : [closeMode];
    closeModeArray.forEach(function (mode) {
        switch (mode) {
            case 'esc':
                canCloseByEsc = true;
                break;
            case 'mask':
                canCloseByMask = true;
                break;
            case 'close':
                closeable = true;
                break;
        }
    });
    // visible 受控
    (0, react_1.useEffect)(function () {
        if ('visible' in props) {
            setVisible(pvisible);
        }
    }, [pvisible]);
    // 打开遮罩后 document.body 滚动处理
    (0, react_1.useEffect)(function () {
        if (visible && hasMask) {
            var style_1 = {
                overflow: 'hidden'
            };
            if (util_1.dom.hasScroll(document.body)) {
                var scrollWidth = util_1.dom.scrollbar().width;
                if (scrollWidth) {
                    style_1.paddingRight = "".concat(util_1.dom.getStyle(document.body, 'paddingRight') + util_1.dom.scrollbar().width, "px");
                }
            }
            locker.current = scroll_locker_1.default.lock(document.body, style_1);
        }
    }, [visible && hasMask]);
    var handleClose = function handleClose(targetType, e) {
        setVisibleOverlayToParent(uuid, null);
        typeof onClose === 'function' && onClose(targetType, e);
    };
    var keydownEvent = function keydownEvent(e) {
        if (e.keyCode === 27 && canCloseByEsc && !childIDMap.current.size) {
            handleClose('esc', e);
        }
    };
    // esc 键盘事件处理
    (0, react_1.useEffect)(function () {
        if (visible && canCloseByEsc) {
            document.body.addEventListener('keydown', keydownEvent, false);
            return function () {
                document.body.removeEventListener('keydown', keydownEvent, false);
            };
        }
    }, [visible && canCloseByEsc]);
    // 优化: 第一次加载并且 visible=false 的情况不挂载弹窗
    (0, react_1.useEffect)(function () {
        !firstVisible && visible && setFirst(true);
    }, [visible]);
    // container 异步加载情况
    (0, react_1.useEffect)(function () {
        if (!container) {
            setTimeout(function () {
                setContainer(getContainer());
            });
        }
    }, [container]);
    var handleExited = function handleExited() {
        if (!isAnimationEnd.current) {
            markAnimationEnd(true);
            util_1.dom.setStyle(wrapperRef.current, 'display', 'none');
            scroll_locker_1.default.unlock(document.body, locker.current);
            if (autoFocus && lastFocus.current) {
                try {
                    lastFocus.current.focus();
                } finally {
                    // ignore ...
                }
                lastFocus.current = undefined;
            }
            afterClose();
        }
    };
    (0, react_1.useEffect)(function () {
        return function () {
            handleExited();
        };
    }, []);
    if (firstVisible === false || !container) {
        return null;
    }
    if (!visible && !cache && isAnimationEnd.current) {
        return null;
    }
    var handleCancel = function handleCancel(e) {
        if (typeof onCancel === 'function') {
            onCancel(e);
        } else {
            handleClose('cancelBtn', e);
        }
    };
    var handleMaskClick = function handleMaskClick(e) {
        if (!canCloseByMask) {
            return;
        }
        if (e.type === 'click' && dialogRef.current) {
            var dialogNode = react_dom_1.default.findDOMNode(dialogRef.current);
            if (dialogNode && dialogNode.contains(e.target)) {
                return;
            }
        }
        handleClose('maskClick', e);
    };
    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        util_1.dom.setStyle(wrapperRef.current, 'display', '');
    };
    var handleEntered = function handleEntered() {
        if (autoFocus && dialogRef.current && dialogRef.current.bodyNode) {
            var focusableNodes = util_1.focus.getFocusNodeList(dialogRef.current.bodyNode);
            if (focusableNodes.length > 0 && focusableNodes[0]) {
                lastFocus.current = document.activeElement;
                focusableNodes[0].focus();
            }
        }
        setVisibleOverlayToParent(uuid, wrapperRef.current);
    };
    var wrapperCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "overlay-wrapper")] = true, _a[wrapperClassName] = !!wrapperClassName, _a.opened = visible, _a));
    var dialogCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "dialog-v2")] = true, _b[className] = !!className, _b));
    var topStyle = {};
    if (centered) {
        // 兼容 minMargin
        if (!top && !bottom && minMargin) {
            topStyle.marginTop = minMargin;
            topStyle.marginBottom = minMargin;
        } else {
            top && (topStyle.marginTop = top);
            bottom && (topStyle.marginBottom = bottom);
        }
    } else {
        top && (topStyle.top = top);
        bottom && (topStyle.paddingBottom = bottom);
    }
    var innerStyle = style || {};
    if (overflowScroll && !innerStyle.maxHeight) {
        innerStyle.maxHeight = "calc(100vh - ".concat(top + bottom, "px)");
    }
    var timeout = {
        appear: 300,
        enter: 300,
        exit: 250
    };
    var inner = react_1.default.createElement(animate_1.default.OverlayAnimate, { visible: visible, animation: animation, timeout: timeout, onEnter: handleEnter, onEntered: handleEntered, onExited: handleExited }, react_1.default.createElement(inner_1.default, tslib_1.__assign({}, others, { style: centered ? tslib_1.__assign(tslib_1.__assign({}, topStyle), innerStyle) : innerStyle, v2: true, ref: dialogRef, prefix: prefix, className: dialogCls, title: title, footer: footer, footerAlign: footerAlign, footerActions: footerActions, onOk: visible ? onOk : noop, onCancel: visible ? handleCancel : noop, okProps: okProps, cancelProps: cancelProps, locale: locale, closeable: closeable, rtl: rtl, onClose: function onClose() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return handleClose.apply(void 0, tslib_1.__spreadArray(['closeClick'], tslib_1.__read(args), false));
        }, closeIcon: closeIcon, height: height, width: width }), children));
    if (typeof dialogRender === 'function') {
        inner = dialogRender(inner);
    }
    var innerWrapperCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "overlay-inner")] = true, _c["".concat(prefix, "dialog-wrapper")] = true, _c["".concat(prefix, "dialog-centered")] = centered, _c));
    var getVisibleOverlayFromChild = function getVisibleOverlayFromChild(id, node) {
        if (node) {
            childIDMap.current.set(id, node);
        } else {
            childIDMap.current.delete(id);
        }
        // 让父级也感知
        setVisibleOverlayToParent(id, node);
    };
    return react_1.default.createElement(OverlayContext.Provider, { value: tslib_1.__assign(tslib_1.__assign({}, otherContext), { setVisibleOverlayToParent: getVisibleOverlayFromChild }) }, react_dom_1.default.createPortal(react_1.default.createElement("div", { className: wrapperCls, style: wrapperStyle, ref: wrapperRef }, hasMask ? react_1.default.createElement(animate_1.default.OverlayAnimate, { visible: visible, animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false, timeout: timeout, unmountOnExit: true }, react_1.default.createElement("div", { className: "".concat(prefix, "overlay-backdrop") })) : null, react_1.default.createElement("div", { className: innerWrapperCls, onClick: handleMaskClick }, centered ? inner : react_1.default.createElement("div", { style: topStyle, className: "".concat(prefix, "dialog-inner-wrapper") }, inner))), container));
};
exports.default = Dialog;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = __webpack_require__(4);
/**
 * https://github.com/alibaba-fusion/next/issues/3638
 * 通过栈的形式：解决弹窗关闭的时候对 document.body 上面的 style 恢复顺序问题
 * 问题复现步骤:
 *   1. dialog1 进来，把 body.style=overflow:hidden，如果关闭应该恢复 body.style=""
 *   2. dialog2 进来，把 body.style=overflow:hidden, 因为此时 body.style是verflow:hidden，所以如果关闭应该恢复 body.style="verflow:hidden"
 *   3. dialog1 关闭，恢复 body.style=""。造成问题：dialog2 页面可滚动
 *   4. dialog2 关闭，恢复 body.style="verflow:hidden"。造成问题：页面不可滚动
 * 解决方案：
 *   1. 每个 dialog 修改 body.style 的时候都 push 入栈
 *   2. 如果dialog1 先退出，发现 dialog2 存在则不做任何操作，把自己的恢复值给到 dialog2
 */
var lockcache = [];
function lock(container, style) {
    var originStyle = container.getAttribute('style');
    var uuid = (0, util_1.guid)();
    lockcache.push({
        uuid: uuid,
        container: container,
        originStyle: originStyle
    });
    util_1.dom.setStyle(container, style);
    return uuid;
}
function unlock(container, uuid) {
    var list = lockcache.filter(function (i) {
        return i.container === container;
    });
    var item = list.find(function (i) {
        return i.uuid === uuid;
    });
    if (item) {
        var idx = list.indexOf(item);
        // 解锁的时候，链表有新增。说明 container style 已经被其他 Dialog 修改过了
        if (idx !== -1 && idx < list.length - 1) {
            var originStyle = item.originStyle;
            // 下一个 dialog 解锁的时候直接替换为
            list[idx + 1].originStyle = originStyle;
            lockcache.splice(lockcache.indexOf(item), 1);
            return;
        }
        container.setAttribute('style', item.originStyle || '');
        lockcache.pop();
    }
}
exports.default = {
    lock: lock,
    unlock: unlock
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
/* istanbul ignore file */
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(60));
var inner_1 = tslib_1.__importDefault(__webpack_require__(96));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var scroll_locker_1 = tslib_1.__importDefault(__webpack_require__(168));
var OverlayContext = overlay_1.default.OverlayContext;
var noop = util_1.func.noop;
var getAnimation = function getAnimation(placement) {
    var animation;
    switch (placement) {
        case 'top':
            animation = {
                in: 'slideInDown',
                out: 'slideOutUp'
            };
            break;
        case 'bottom':
            animation = {
                in: 'slideInUp',
                out: 'slideOutDown'
            };
            break;
        case 'left':
            animation = {
                in: 'slideInLeft',
                out: 'slideOutLeft'
            };
            break;
        case 'right':
        default:
            animation = {
                in: 'slideInRight',
                out: 'slideOutRight'
            };
            break;
    }
    return animation;
};
var Drawer = function Drawer(props) {
    var _a, _b, _c;
    if (!react_1.useState || !react_1.useRef || !react_1.useEffect) {
        util_1.log.warning('need react version > 16.8.0');
        return null;
    }
    var _d = props.prefix,
        prefix = _d === void 0 ? 'next-' : _d,
        _e = props.hasMask,
        hasMask = _e === void 0 ? true : _e,
        _f = props.autoFocus,
        autoFocus = _f === void 0 ? false : _f,
        className = props.className,
        title = props.title,
        children = props.children,
        cache = props.cache,
        _g = props.closeMode,
        closeMode = _g === void 0 ? ['close', 'mask', 'esc'] : _g,
        width = props.width,
        height = props.height,
        onClose = props.onClose,
        _h = props.placement,
        placement = _h === void 0 ? 'right' : _h,
        headerStyle = props.headerStyle,
        bodyStyle = props.bodyStyle,
        pvisible = props.visible,
        _j = props.afterClose,
        afterClose = _j === void 0 ? noop : _j,
        _k = props.locale,
        locale = _k === void 0 ? zh_cn_1.default.Drawer : _k,
        rtl = props.rtl,
        animation = props.animation,
        wrapperStyle = props.wrapperStyle,
        _l = props.popupContainer,
        popupContainer = _l === void 0 ? document.body : _l,
        style = props.style,
        others = tslib_1.__rest(props, ["prefix", "hasMask", "autoFocus", "className", "title", "children", "cache", "closeMode", "width", "height", "onClose", "placement", "headerStyle", "bodyStyle", "visible", "afterClose", "locale", "rtl", "animation", "wrapperStyle", "popupContainer", "style"]);
    var _m = tslib_1.__read((0, react_1.useState)(pvisible || false), 2),
        firstVisible = _m[0],
        setFirst = _m[1];
    var _o = tslib_1.__read((0, react_1.useState)(pvisible), 2),
        visible = _o[0],
        setVisible = _o[1];
    var getContainer = typeof popupContainer === 'string' ? function () {
        return document.getElementById(popupContainer);
    } : typeof popupContainer !== 'function' ? function () {
        return popupContainer;
    } : popupContainer;
    var _p = tslib_1.__read((0, react_1.useState)(getContainer()), 2),
        container = _p[0],
        setContainer = _p[1];
    var drawerRef = (0, react_1.useRef)(null);
    var wrapperRef = (0, react_1.useRef)(null);
    var lastFocus = (0, react_1.useRef)(null);
    var locker = (0, react_1.useRef)(null);
    var _q = tslib_1.__read((0, react_1.useState)((0, util_1.guid)()), 1),
        uuid = _q[0];
    var _r = (0, react_1.useContext)(OverlayContext),
        setVisibleOverlayToParent = _r.setVisibleOverlayToParent,
        otherContext = tslib_1.__rest(_r, ["setVisibleOverlayToParent"]);
    var childIDMap = (0, react_1.useRef)(new Map());
    var isAnimationEnd = (0, react_1.useRef)(false); // 动效是否结束, 因为时机非常快用 state 太慢
    var _s = tslib_1.__read((0, react_1.useState)(), 2),
        forceUpdate = _s[1];
    // 动效结束，强制重新渲染
    var markAnimationEnd = function markAnimationEnd(state) {
        isAnimationEnd.current = state;
        forceUpdate({});
    };
    var canCloseByEsc = false;
    var canCloseByMask = false;
    var closeable = false;
    var closeModeArray = Array.isArray(closeMode) ? closeMode : [closeMode];
    closeModeArray.forEach(function (mode) {
        switch (mode) {
            case 'esc':
                canCloseByEsc = true;
                break;
            case 'mask':
                canCloseByMask = true;
                break;
            case 'close':
                closeable = true;
                break;
        }
    });
    // visible 受控
    (0, react_1.useEffect)(function () {
        if ('visible' in props) {
            setVisible(pvisible);
        }
    }, [pvisible]);
    // 打开遮罩后 document.body 滚动处理
    (0, react_1.useEffect)(function () {
        if (visible && hasMask) {
            var style_1 = {
                overflow: 'hidden'
            };
            if (util_1.dom.hasScroll(document.body)) {
                var scrollWidth = util_1.dom.scrollbar().width;
                if (scrollWidth) {
                    style_1.paddingRight = "".concat(util_1.dom.getStyle(document.body, 'paddingRight').toString() + util_1.dom.scrollbar().width, "px");
                }
            }
            locker.current = scroll_locker_1.default.lock(document.body, style_1);
        }
    }, [visible && hasMask]);
    var handleClose = function handleClose(targetType, e) {
        setVisibleOverlayToParent(uuid, null);
        typeof onClose === 'function' && onClose(targetType, e);
    };
    var keydownEvent = function keydownEvent(e) {
        if (e.keyCode === 27 && canCloseByEsc && !childIDMap.current.size) {
            handleClose('esc', e);
        }
    };
    // esc 键盘事件处理
    (0, react_1.useEffect)(function () {
        if (visible && canCloseByEsc) {
            document.body.addEventListener('keydown', keydownEvent, false);
            return function () {
                document.body.removeEventListener('keydown', keydownEvent, false);
            };
        }
    }, [visible && canCloseByEsc]);
    // 优化: 第一次加载并且 visible=false 的情况不挂载弹窗
    (0, react_1.useEffect)(function () {
        !firstVisible && visible && setFirst(true);
    }, [visible]);
    // container 异步加载情况
    (0, react_1.useEffect)(function () {
        if (!container) {
            setTimeout(function () {
                setContainer(getContainer());
            });
        }
    }, [container]);
    // Drawer 关闭时候的处理。1. 结束的时候不管动效是不是已经结束都要隐藏弹窗；2. 需要把focus态还原到触发节点
    var handleExited = function handleExited() {
        if (!isAnimationEnd.current) {
            markAnimationEnd(true);
            util_1.dom.setStyle(wrapperRef.current, 'display', 'none');
            scroll_locker_1.default.unlock(document.body, locker.current);
            if (autoFocus && lastFocus.current) {
                try {
                    lastFocus.current.focus();
                } finally {
                    // ignore ...
                }
                lastFocus.current = null;
            }
            afterClose();
        }
    };
    // visible? <Drawer/>: null; 这种写法会触发卸载
    (0, react_1.useEffect)(function () {
        return function () {
            handleExited();
        };
    }, []);
    if (firstVisible === false || !container) {
        return null;
    }
    if (!visible && !cache && isAnimationEnd.current) {
        return null;
    }
    var handleMaskClick = function handleMaskClick(e) {
        if (!canCloseByMask) {
            return;
        }
        handleClose('maskClick', e);
    };
    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        util_1.dom.setStyle(wrapperRef.current, 'display', '');
    };
    var handleEntered = function handleEntered() {
        if (autoFocus && drawerRef.current && drawerRef.current.bodyNode) {
            var focusableNodes = util_1.focus.getFocusNodeList(drawerRef.current.bodyNode);
            if (focusableNodes.length > 0 && focusableNodes[0]) {
                lastFocus.current = document.activeElement;
                var firstFocusableNode = focusableNodes[0];
                firstFocusableNode.focus();
            }
        }
        setVisibleOverlayToParent(uuid, drawerRef.current);
    };
    var wrapperCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "overlay-wrapper")] = true, _a.opened = visible, _a));
    var innerWrapperCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "overlay-inner")] = true, _b["".concat(prefix, "drawer-wrapper")] = true, _b["".concat(prefix, "drawer-").concat(placement)] = true, _b[className] = !!className, _b));
    var drawerCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "drawer-v2")] = true, _c[className] = !!className, _c));
    var newAnimation = animation === null || animation === false ? undefined : animation ? animation : getAnimation(placement);
    var timeout = {
        appear: 300,
        enter: 300,
        exit: 250
    };
    var getVisibleOverlayFromChild = function getVisibleOverlayFromChild(id, node) {
        if (node) {
            childIDMap.current.set(id, node);
        } else {
            childIDMap.current.delete(id);
        }
        // 让父级也感知
        setVisibleOverlayToParent(id, node);
    };
    var nstyle = tslib_1.__assign({ width: width, height: height }, style);
    return react_1.default.createElement(OverlayContext.Provider, { value: tslib_1.__assign(tslib_1.__assign({}, otherContext), { setVisibleOverlayToParent: getVisibleOverlayFromChild }) }, react_dom_1.default.createPortal(react_1.default.createElement("div", { className: wrapperCls, style: wrapperStyle, ref: wrapperRef }, hasMask ? react_1.default.createElement(animate_1.default.OverlayAnimate, { visible: visible, animation: newAnimation ? { in: 'fadeIn', out: 'fadeOut' } : false, timeout: timeout, unmountOnExit: true }, react_1.default.createElement("div", { className: "".concat(prefix, "overlay-backdrop"), onClick: handleMaskClick })) : null, react_1.default.createElement("div", { className: innerWrapperCls, style: nstyle, ref: drawerRef }, react_1.default.createElement(animate_1.default.OverlayAnimate, { visible: visible, animation: newAnimation, timeout: timeout, onEnter: handleEnter, onEntered: handleEntered, onExited: handleExited }, react_1.default.createElement(inner_1.default, tslib_1.__assign({}, others, { v2: true, prefix: prefix, title: title, className: drawerCls, locale: locale, closeable: closeable, rtl: rtl, headerStyle: headerStyle, bodyStyle: bodyStyle, onClose: function onClose() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return handleClose.apply(void 0, tslib_1.__spreadArray(['closeClick'], tslib_1.__read(args), false));
        } }), children)))), container));
};
exports.default = Drawer;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = __webpack_require__(0);
var field_1 = tslib_1.__importDefault(__webpack_require__(171));
var util_1 = __webpack_require__(4);
var utils_1 = __webpack_require__(345);
var NextField = /** @class */function (_super) {
    tslib_1.__extends(NextField, _super);
    function NextField(com, options) {
        if (options === void 0) {
            options = {};
        }
        var _this = this;
        // scrollToFirstError 选项的默认值设置放在 next field 里处理
        var _a = options.scrollToFirstError,
            scrollToFirstErrorOption = _a === void 0 ? true : _a;
        var newOptions = (0, _extends3.default)({}, options, {
            scrollToFirstError: scrollToFirstErrorOption,
            afterValidateRerender: utils_1.scrollToFirstError,
            processErrorMessage: utils_1.cloneAndAddKey
        });
        _this = _super.call(this, com, newOptions) || this;
        _this.validate = _this.validate.bind(_this);
        _this.reset = _this.reset.bind(_this);
        return _this;
    }
    NextField.useField = function (options) {
        if (options === void 0) {
            options = {};
        }
        if (!react_1.useState || !react_1.useMemo) {
            util_1.log.warning('need react version > 16.8.0');
            // @ts-expect-error 在缺少对应 hook 的情况下应抛出异常，直接 return 会导致类型问题：useField 返回值可能为空，消费时类型很麻烦
            return;
        }
        return this.getUseField({ useMemo: react_1.useMemo, useState: react_1.useState })(options);
    };
    NextField.useWatch = function (field, names, callback) {
        var callbackRef = (0, react_1.useRef)(callback);
        callbackRef.current = callback;
        // watch at render stage, field or names change will cause rewatch
        var unwatch = (0, react_1.useMemo)(function () {
            return field.watch(names, function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                if (typeof callbackRef.current === 'function') {
                    callbackRef.current.apply(callbackRef, tslib_1.__spreadArray([], tslib_1.__read(args), false));
                }
            });
        }, [field, names.join(',')]);
        (0, react_1.useEffect)(function () {
            // unwatch at uneffect stage
            return unwatch;
        }, [unwatch]);
    };
    /**
     * 校验 - callback version
     */
    NextField.prototype.validate = function (names, callback) {
        if (typeof names === 'function') {
            return this.validateCallback(names);
        }
        return this.validateCallback(names, callback);
    };
    NextField.prototype.reset = function (names, backToDefault) {
        if (backToDefault === void 0) {
            backToDefault = false;
        }
        if (names === true) {
            util_1.log.deprecated('reset(true)', 'resetToDefault()', 'Field');
            this.resetToDefault();
        } else if (backToDefault === true) {
            util_1.log.deprecated('reset(ns,true)', 'resetToDefault(ns)', 'Field');
            this.resetToDefault(names || undefined);
        } else {
            _super.prototype.reset.call(this, names || undefined);
        }
    };
    return NextField;
}(field_1.default);
tslib_1.__exportStar(__webpack_require__(346), exports);
exports.default = NextField;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js
var tslib_es6 = __webpack_require__(9);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/util.js

var formatRegExp = /%[sdj%]/g;
function util_format() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var i = 1;
    var f = args[0];
    var len = args.length;
    if (typeof f === 'function') {
        return f(args.slice(1));
    }
    if (typeof f === 'string') {
        var str = String(f).replace(formatRegExp, function (x) {
            if (x === '%%') {
                return '%';
            }
            if (i >= len) {
                return x;
            }
            switch (x) {
                case '%s':
                    return String(args[i++]);
                case '%d':
                    return Number(args[i++]);
                case '%j':
                    try {
                        return JSON.stringify(args[i++]);
                    }
                    catch (_) {
                        return '[Circular]';
                    }
                default:
                    return x;
            }
        });
        return str;
    }
    return f;
}
/**
 * 串联校验一组数据，只返回第一个出错结果
 * @param arr
 * @param validator
 * @param callback 出递归，告诉错误校验完成
 */
function _asyncValidateSerials(arr, validator, callback) {
    var index = 0;
    var arrLength = arr.length;
    function next(errors) {
        if (errors && errors.length) {
            return callback(errors);
        }
        var original = index;
        index = index + 1;
        if (original < arrLength) {
            validator(arr[original], next);
        }
        else {
            return callback([]);
        }
    }
    next([]);
}
/**
 * 串联校验一组数据，只返回第一个出错结果
 */
function _promiseValidateSeries(arr, validator) {
    return Object(tslib_es6["__awaiter"])(this, void 0, void 0, function () {
        var _this = this;
        return Object(tslib_es6["__generator"])(this, function (_a) {
            return [2 /*return*/, arr.reduce(function (prevPromise, next) { return Object(tslib_es6["__awaiter"])(_this, void 0, void 0, function () {
                    var errors, e_1;
                    return Object(tslib_es6["__generator"])(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                _a.trys.push([0, 2, , 3]);
                                return [4 /*yield*/, prevPromise];
                            case 1:
                                errors = _a.sent();
                                return [3 /*break*/, 3];
                            case 2:
                                e_1 = _a.sent();
                                errors = e_1;
                                return [3 /*break*/, 3];
                            case 3:
                                if (errors && errors.length) {
                                    return [2 /*return*/, errors];
                                }
                                return [2 /*return*/, validator(next)];
                        }
                    });
                }); }, [])];
        });
    });
}
/**
 * 平铺规则
 * @param objArr {name: [{value, rule}, {value, rule2}], name2: [{value2, rule3}]}
 * @return [{value, rule}, {value, rule2}, {value2, rule3}]
 */
function flattenObjArr(objArr) {
    var ret = [];
    Object.keys(objArr).forEach(function (k) {
        Object.keys(objArr[k]).forEach(function (r) {
            ret.push(objArr[k][r]);
        });
    });
    return ret;
}
/**
 * 异步调用
 * @param objArr   校验规则对象列表
 * @param option   配置项
 * @param validator     每个校验规则
 * @param callback 全部完成后的执行
 */
function asyncMap(objArr, option, validator, callback) {
    // 发现第一个错误即返回
    if (option.first) {
        var flattenArr = flattenObjArr(objArr);
        return _asyncValidateSerials(flattenArr, validator, callback);
    }
    var objArrKeys = Object.keys(objArr);
    var objArrLength = objArrKeys.length;
    var total = 0;
    var results = [];
    var next = function (errors) {
        results.push(errors);
        total++;
        if (total === objArrLength) {
            return callback(results);
        }
    };
    objArrKeys.forEach(function (key) {
        var arr = objArr[key];
        _asyncValidateSerials(arr, validator, next);
    });
}
function asyncMapPromise(objArr, option, validator) {
    return Object(tslib_es6["__awaiter"])(this, void 0, void 0, function () {
        var flatObjArr, objArrValues;
        return Object(tslib_es6["__generator"])(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!option.first) return [3 /*break*/, 2];
                    flatObjArr = flattenObjArr(objArr);
                    return [4 /*yield*/, _promiseValidateSeries(flatObjArr, validator)];
                case 1: return [2 /*return*/, _a.sent()];
                case 2:
                    objArrValues = Object.values(objArr);
                    return [4 /*yield*/, Promise.all(objArrValues.map(function (val) { return _promiseValidateSeries(val, validator); }))];
                case 3: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
function complementError(rule) {
    return function (oe) {
        if (oe && typeof oe === 'object' && oe.message) {
            oe.field = rule.field;
            return oe;
        }
        return {
            message: oe,
            field: rule.field,
        };
    };
}
/**
 *
 * @param results errors from running validation
 * @returns \{ errors: Array, fields: Object }
 */
function processErrorResults(results) {
    if (results === void 0) { results = []; }
    var errors = [];
    var fields = {};
    function add(e) {
        if (Array.isArray(e)) {
            errors = errors.concat(e);
        }
        else {
            errors.push(e);
        }
    }
    for (var i = 0; i < results.length; i++) {
        add(results[i]);
    }
    if (!errors.length) {
        return {
            errors: null,
            fields: null,
        };
    }
    else {
        for (var i = 0; i < errors.length; i++) {
            var field = errors[i].field;
            if (field) {
                fields[field] = fields[field] || [];
                fields[field].push(errors[i]);
            }
        }
        return {
            errors: errors,
            fields: fields,
        };
    }
}

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/messages.js
/* harmony default export */ var messages = ({
    default: '%s 校验失败',
    required: '%s 是必填字段',
    format: {
        number: '%s 不是合法的数字',
        email: '%s 不是合法的 email 地址',
        url: '%s 不是合法的 URL 地址',
        tel: '%s 不是合法的电话号码',
        IDNumber: '%s 不是合法的身份证号码',
    },
    number: {
        length: '%s 长度必须是 %s',
        min: '%s 字段数值不得小于 %s',
        max: '%s 字段数值不得大于 %s',
        minLength: '%s 字段字符长度不得少于 %s',
        maxLength: '%s 字段字符长度不得超过 %s',
    },
    string: {
        length: '%s 长度必须是 %s',
        min: '%s 字段数值不得小于 %s',
        max: '%s 字段数值不得大于 %s',
        minLength: '%s 字段字符长度不得少于 %s',
        maxLength: '%s 字段字符长度不得超过 %s',
    },
    array: {
        length: '%s 个数必须是 %s',
        minLength: '%s 个数不得少于 %s',
        maxLength: '%s 个数不得超过 %s',
    },
    pattern: '%s 字段数值 %s 不匹配正则 %s',
});

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/required.js

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
var required_required = function required(rule, value, errors, options) {
    if (value === undefined ||
        value === null ||
        value === '' ||
        value.length === 0) {
        errors.push(util_format(options.messages.required, rule.aliasName || rule.field));
    }
};
/* harmony default export */ var rules_required = (required_required);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/format.js

var format_pattern = {
    email: /[\w\u4E00-\u9FA5]+([-+.][\w\u4E00-\u9FA5]+)*@[\w\u4E00-\u9FA5]+([-.][\w\u4E00-\u9FA5]+)*\.[\w\u4E00-\u9FA5]+([-.][\w\u4E00-\u9FA5]+)*/,
    url: /^(?:(?:http|https|ftp):\/\/|\/\/)(?:(?:(?:[-\w\u00a1-\uffff]+)(?:\.[-\w\u00a1-\uffff]+)+|localhost)(?::\d{2,5})?(?:(?:\/|#)[^\s]*)?)$/,
    number: /\d*/,
    tel: /^(1\d{10})$|(((400)-(\d{3})-(\d{4}))|^((\d{7,8})|(\d{3,4})-(\d{7,8})|(\d{7,8})-(\d{1,4}))$)$|^([ ]?)$/,
};
/**
 * 函数参数必须是字符串，因为二代身份证号码是十八位，而在 javascript 中，十八位的数值会超出计算范围，造成不精确的结果，
 * 导致最后两位和计算的值不一致，从而该函数出现错误（详情查看 javascript 的数值范围）。
 * 为了避免这一误差，idcode 必须是字符串
 *
 * 正则思路：
 *   第一位不可能是 0
 *   第二位到第六位可以是 0-9
 *   第七位到第十位是年份，所以七八位为 19 或者 20
 *   十一位和十二位是月份，这两位是 01-12 之间的数值
 *   十三位和十四位是日期，是从 01-31 之间的数值
 *   十五，十六，十七都是数字 0-9
 *   十八位可能是数字 0-9，也可能是 X
 * */
function validatorIDNumber(idCode) {
    if (typeof idCode !== 'string') {
        return false;
    }
    var idCardPatter = /^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/;
    // 判断格式是否正确
    var format = idCardPatter.test(idCode);
    if (!format) {
        return false;
    }
    // 加权因子
    var weightFactor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
    // 校验码
    var checkCode = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];
    var last = idCode[17]; //最后一位
    var seventeen = idCode.substring(0, 17);
    // ISO 7064:1983.MOD 11-2
    // 判断最后一位校验码是否正确
    var arr = seventeen.split('');
    var len = arr.length;
    var num = 0;
    for (var i = 0; i < len; i++) {
        // @ts-expect-error string * number
        num += arr[i] * weightFactor[i];
    }
    // 获取余数
    var lastNo = checkCode[num % 11];
    // 返回验证结果，校验码和格式同时正确才算是合法的身份证号码
    return last === lastNo;
}
var types = {
    number: function (value) {
        if (isNaN(value)) {
            return false;
        }
        return (typeof value === 'number' ||
            (typeof value === 'string' && !!value.match(format_pattern.number)));
    },
    email: function (value) {
        return (typeof value === 'string' &&
            !!value.match(format_pattern.email) &&
            value.length < 255);
    },
    url: function (value) {
        return typeof value === 'string' && !!value.match(format_pattern.url);
    },
    tel: function (value) {
        return typeof value === 'string' && !!value.match(format_pattern.tel);
    },
    IDNumber: function (value) {
        return validatorIDNumber(value);
    },
};
/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
var format_format = function format(rule, value, errors, options) {
    var custom = ['email', 'number', 'url', 'tel', 'IDNumber'];
    var ruleType = rule.format;
    if (custom.indexOf(ruleType) > -1 && !types[ruleType](value)) {
        errors.push(util_format(options.messages.format[ruleType], rule.aliasName || rule.field, rule.format));
    }
};
/* harmony default export */ var rules_format = (format_format);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/size.js

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
var size_size = function size(rule, value, errors, options) {
    var key = null;
    var isNum = typeof value === 'number';
    var isStr = typeof value === 'string';
    if (isNum) {
        key = 'number';
    }
    else if (isStr) {
        key = 'string';
    }
    if (!key) {
        return false;
    }
    // TODO: 2.x change to typeof rule.min === 'number' || typeof rule.max === 'number'
    if (typeof rule.min !== 'undefined' || typeof rule.max !== 'undefined') {
        var val = value;
        var max = Number(rule.max);
        var min = Number(rule.min);
        if (isStr) {
            val = Number(val);
        }
        if (val < min) {
            errors.push(util_format(options.messages[key].min, rule.aliasName || rule.field, rule.min));
        }
        else if (val > max) {
            errors.push(util_format(options.messages[key].max, rule.aliasName || rule.field, rule.max));
        }
    }
};
/* harmony default export */ var rules_size = (size_size);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/length.js

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
var length_length = function length(rule, value, errors, options) {
    var key = null;
    var isNum = typeof value === 'number';
    var isStr = typeof value === 'string';
    var isArr = Array.isArray(value);
    if (isNum) {
        key = 'number';
    }
    else if (isStr) {
        key = 'string';
    }
    else if (isArr) {
        key = 'array';
    }
    if (!key) {
        return false;
    }
    var val = isNum ? "".concat(value) : value;
    var length = Number(rule.length);
    var maxLength = Number(rule.maxLength);
    var minLength = Number(rule.minLength);
    if (minLength || maxLength || length) {
        var len = val.length;
        if (length && len !== rule.length) {
            errors.push(util_format(options.messages[key].length, rule.aliasName || rule.field, rule.length));
        }
        else if (len < minLength) {
            errors.push(util_format(options.messages[key].minLength, rule.aliasName || rule.field, rule.minLength));
        }
        else if (len > maxLength) {
            errors.push(util_format(options.messages[key].maxLength, rule.aliasName || rule.field, rule.maxLength));
        }
    }
};
/* harmony default export */ var rules_length = (length_length);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/pattern.js

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
var pattern_pattern = function pattern(rule, value, errors, options) {
    if (rule.pattern) {
        if (rule.pattern instanceof RegExp) {
            if (!rule.pattern.test(value)) {
                errors.push(util_format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));
            }
        }
        else if (typeof rule.pattern === 'string') {
            var _pattern = new RegExp(rule.pattern);
            if (!_pattern.test(value)) {
                errors.push(util_format(options.messages.pattern, rule.aliasName || rule.field, value, rule.pattern));
            }
        }
    }
};
/* harmony default export */ var rules_pattern = (pattern_pattern);

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/rules/index.js





/* harmony default export */ var es_rules = ({
    required: rules_required,
    format: rules_format,
    min: rules_size,
    max: rules_size,
    minLength: rules_length,
    maxLength: rules_length,
    length: rules_length,
    pattern: rules_pattern,
});

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/validator.js

/**
 * {required, format} => format; {required} => required
 * If a promise is wanted from the validator, either return a promise from the callback,
 *      or do not pass a callback
 */
function validateFunc(validator, ruleType) {
    return function (rule, value, cb, options) {
        var errors = [];
        // 如果是非 required 校验
        if (ruleType !== 'required') {
            var errors_1 = [];
            es_rules.required(rule, value, errors_1, options);
            // 空数据
            if (errors_1.length > 0) {
                if ('required' in rule && rule.required) {
                    if (cb) {
                        return cb(errors_1);
                    }
                    else {
                        return Promise.reject(errors_1);
                    }
                }
                else if (cb) {
                    return cb([]); //空数据，并且没有 require 要求，则忽略
                }
                else {
                    return Promise.resolve(null);
                }
            }
        }
        validator(rule, value, errors, options);
        if (cb) {
            return cb(errors);
        }
        if (Promise) {
            return Promise.resolve(errors);
        }
    };
}
/**
 * {required, format} => format; {required} => required
 */
function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
        return rule.validator;
    }
    var keys = Object.keys(rule);
    // required 和其他校验规则共存
    // {required, format} {required, unknown}
    for (var i = 0; i < keys.length; i++) {
        var ruleType = keys[i];
        if (ruleType === 'required') {
            continue;
        }
        if (ruleType in es_rules) {
            return validateFunc(es_rules[ruleType], ruleType);
        }
    }
    // 有其他位置参数
    if ('required' in rule && rule.required) {
        return validateFunc(es_rules.required, 'required');
    }
    return null;
}

// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/types.js


// CONCATENATED MODULE: ./node_modules/@alifd/validate/es/index.js




function noop() { }
/**
 * @param source - 校验对象，如：{name: value, name2: value2}
 * @param rules - 对象内 key 的校验规则集合，如：{name: [rule1, rule2]}
 * @returns 标准的校验项集合，如：{name:[{value,rule1},{value, rule2}]}
 */
function serializeRules(source, rules) {
    // serialize rules
    var arr;
    var value;
    var series = {};
    var names = Object.keys(rules);
    names.forEach(function (name) {
        arr = rules[name];
        value = source[name];
        if (!Array.isArray(arr)) {
            arr = [arr];
        }
        arr.forEach(function (rule) {
            rule.validator = getValidationMethod(rule);
            rule.field = name;
            if (!rule.validator) {
                return;
            }
            series[name] = series[name] || [];
            series[name].push({
                rule: rule,
                value: value,
                source: source,
                field: name,
            });
        });
    });
    return series;
}
var es_Schema = /** @class */ (function () {
    function Schema(rules, options) {
        if (options === void 0) { options = {}; }
        this._rules = rules;
        this._options = Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, options), { messages: Object(tslib_es6["__assign"])(Object(tslib_es6["__assign"])({}, messages), options.messages) });
        this.complete = [];
    }
    Schema.prototype.abort = function () {
        for (var i = 0; i < this.complete.length; i++) {
            this.complete[i] = noop;
        }
    };
    Schema.prototype.messages = function (messages) {
        this._options.messages = Object.assign({}, this._options.messages, messages);
    };
    Schema.prototype.validate = function (source, callback) {
        var _this = this;
        if (!callback) {
            return this.validatePromise(source);
        }
        if (!this._rules || Object.keys(this._rules).length === 0) {
            if (callback) {
                callback(null);
            }
            return;
        }
        var series = serializeRules(source, this._rules);
        if (Object.keys(series).length === 0) {
            callback(null);
        }
        // callback function for all rules return
        function complete(results) {
            var i;
            var field;
            var errors = [];
            var fields = {};
            function add(e) {
                if (Array.isArray(e)) {
                    errors = errors.concat(e);
                }
                else {
                    errors.push(e);
                }
            }
            for (i = 0; i < results.length; i++) {
                add(results[i]);
            }
            if (!errors.length) {
                callback(null, null);
            }
            else {
                for (i = 0; i < errors.length; i++) {
                    field = errors[i].field;
                    fields[field] = fields[field] || [];
                    fields[field].push(errors[i]);
                }
                callback(errors, fields);
            }
        }
        // 这里用数组的原因，是为了方便外部做 abort 调用
        // eg: input onChange 时调用有 异步 validator 被异步调用多次，我们只取最后一次调用。否则可能出现 前一个 validator 返回导致
        this.complete.push(complete);
        var idx = this.complete.length;
        // async validate
        asyncMap(series, this._options, function (data, next) {
            var rule = data.rule;
            rule.field = data.field;
            var cb = function cb(e) {
                var errors = e;
                // fix e=/""/null/undefiend.
                // ignore e=true/false;
                if (typeof errors !== 'boolean' && !errors) {
                    errors = [];
                }
                if (!Array.isArray(errors)) {
                    errors = [errors];
                }
                // 自定义错误
                if (errors.length && rule.message) {
                    errors = [].concat(rule.message);
                }
                var normalizeErrors = errors.map(complementError(rule));
                next(normalizeErrors);
            };
            var res = rule.validator(rule, data.value, cb, _this._options);
            if (res && res.then) {
                res.then(function () { return cb(); }, function (e) { return cb(e); });
            }
        }, function (results) {
            _this.complete[idx - 1](results);
        });
    };
    /**
     * Validate and use `Promise` to receive results
     * @param source - map of field names and values to use in validation
     * @returns Validation results
     */
    Schema.prototype.validatePromise = function (source) {
        return Object(tslib_es6["__awaiter"])(this, void 0, void 0, function () {
            var series, results;
            var _this = this;
            return Object(tslib_es6["__generator"])(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this._rules || Object.keys(this._rules).length === 0) {
                            return [2 /*return*/, { errors: null }];
                        }
                        series = serializeRules(source, this._rules);
                        if (Object.keys(series).length === 0) {
                            return [2 /*return*/, { errors: null }];
                        }
                        return [4 /*yield*/, asyncMapPromise(series, this._options, function (data) { return Object(tslib_es6["__awaiter"])(_this, void 0, void 0, function () {
                                var rule, errors, error_1;
                                var _this = this;
                                return Object(tslib_es6["__generator"])(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            rule = data.rule;
                                            rule.field = data.field;
                                            _a.label = 1;
                                        case 1:
                                            _a.trys.push([1, 3, , 4]);
                                            return [4 /*yield*/, new Promise(function (resolve) {
                                                    function cb(e) {
                                                        resolve(e);
                                                    }
                                                    var res = rule.validator(rule, data.value, cb, _this._options);
                                                    if (res && res.then) {
                                                        res.then(function () { return cb(); }, function (e) { return cb(e); });
                                                    }
                                                })];
                                        case 2:
                                            errors = _a.sent();
                                            return [3 /*break*/, 4];
                                        case 3:
                                            error_1 = _a.sent();
                                            errors = error_1;
                                            return [3 /*break*/, 4];
                                        case 4:
                                            if (errors) {
                                                // here is unreachable
                                                // fix e=/""/null/undefiend.
                                                // ignore e=true/false;
                                                // if (typeof errors !== 'boolean' && !errors) {
                                                //     errors = [];
                                                // }
                                                if (!Array.isArray(errors)) {
                                                    errors = [errors];
                                                }
                                                // 自定义错误
                                                if (errors.length && rule.message) {
                                                    errors = [].concat(rule.message);
                                                }
                                                return [2 /*return*/, errors.map(complementError(rule))];
                                            }
                                            else {
                                                return [2 /*return*/, []];
                                            }
                                            return [2 /*return*/];
                                    }
                                });
                            }); })];
                    case 1:
                        results = _a.sent();
                        return [2 /*return*/, processErrorResults(results)];
                }
            });
        });
    };
    return Schema;
}());

/* harmony default export */ var es = (es_Schema);

// EXTERNAL MODULE: ./node_modules/@alifd/field/es/utils.js
var utils = __webpack_require__(343);

// CONCATENATED MODULE: ./node_modules/@alifd/field/es/types.js


// CONCATENATED MODULE: ./node_modules/@alifd/field/es/index.js



var initMeta = {
    state: '',
    valueName: 'value',
    trigger: 'onChange',
    inputValues: [],
};
var es_Field = /** @class */ (function () {
    function Field(com, options) {
        if (options === void 0) { options = {}; }
        var _this_1 = this;
        if (!com) {
            Object(utils["k" /* warning */])('`this` is missing in `Field`, you should use like `new Field(this)`');
        }
        this.com = com;
        this.fieldsMeta = {};
        this.cachedBind = {};
        this.instance = {};
        this.instanceCount = {};
        this.reRenders = {};
        this.listeners = {};
        // holds constructor values. Used for setting field defaults on init if no other value or initValue is passed.
        // Also used caching values when using `parseName: true` before a field is initialized
        this.values = Object.assign({}, options.values);
        this.processErrorMessage = options.processErrorMessage;
        this.afterValidateRerender = options.afterValidateRerender;
        this.options = Object.assign({
            parseName: false,
            forceUpdate: false,
            first: false,
            onChange: function () { },
            autoUnmount: true,
            autoValidate: true,
        }, options);
        [
            'init',
            'getValue',
            'getValues',
            'setValue',
            'setValues',
            'getError',
            'getErrors',
            'setError',
            'setErrors',
            'validateCallback',
            'validatePromise',
            'getState',
            'reset',
            'resetToDefault',
            'remove',
            'spliceArray',
            'addArrayValue',
            'deleteArrayValue',
            'getNames',
        ].forEach(function (m) {
            _this_1[m] = _this_1[m].bind(_this_1);
        });
    }
    Field.create = function (com, options) {
        if (options === void 0) { options = {}; }
        return new this(com, options);
    };
    Field.getUseField = function (_a) {
        var _this_1 = this;
        var useState = _a.useState, useMemo = _a.useMemo;
        return function (options) {
            if (options === void 0) { options = {}; }
            var _a = Object(tslib_es6["__read"])(useState(), 2), setState = _a[1];
            var field = useMemo(function () { return _this_1.create({ setState: setState }, options); }, [setState]);
            return field;
        };
    };
    /**
     * 设置配置信息
     * @param options - 配置
     */
    Field.prototype.setOptions = function (options) {
        Object.assign(this.options, options);
    };
    /**
     * 初始化一个字段项
     * @param name - 字段 key
     * @param option - 字段配置
     * @param rprops - 其它参数
     */
    Field.prototype.init = function (name, option, rprops) {
        var _a;
        var _this_1 = this;
        if (option === void 0) { option = {}; }
        var id = option.id, initValue = option.initValue, _b = option.valueName, valueName = _b === void 0 ? 'value' : _b, _c = option.trigger, trigger = _c === void 0 ? 'onChange' : _c, _d = option.rules, rules = _d === void 0 ? [] : _d, _e = option.props, props = _e === void 0 ? {} : _e, _f = option.getValueFromEvent, getValueFromEvent = _f === void 0 ? null : _f, _g = option.getValueFormatter, getValueFormatter = _g === void 0 ? getValueFromEvent : _g, setValueFormatter = option.setValueFormatter, _h = option.autoValidate, autoValidate = _h === void 0 ? true : _h, reRender = option.reRender;
        var parseName = this.options.parseName;
        if (getValueFromEvent) {
            Object(utils["k" /* warning */])('`getValueFromEvent` has been deprecated in `Field`, use `getValueFormatter` instead of it');
        }
        var originalProps = Object.assign({}, props, rprops);
        var defaultValueName = "default".concat(valueName[0].toUpperCase()).concat(valueName.slice(1));
        var defaultValue;
        if (typeof initValue !== 'undefined') {
            defaultValue = initValue;
        }
        else if (typeof originalProps[defaultValueName] !== 'undefined') {
            // here use typeof, in case of defaultValue={0}
            defaultValue = originalProps[defaultValueName];
        }
        // get field from this.fieldsMeta or new one
        var field = this._getInitMeta(name);
        Object.assign(field, {
            valueName: valueName,
            initValue: defaultValue,
            disabled: 'disabled' in originalProps ? originalProps.disabled : false,
            getValueFormatter: getValueFormatter,
            setValueFormatter: setValueFormatter,
            rules: Object(utils["a" /* cloneToRuleArr */])(rules),
            ref: originalProps.ref,
        });
        var oldValue = field.value;
        // Controlled Component, should always equal props.value
        if (valueName in originalProps) {
            var originalValue = originalProps[valueName];
            // When rerendering set the values from props.value
            if (parseName) {
                // when parseName is true, field should not store value locally. To prevent sync issues
                if (!('value' in field)) {
                    this._proxyFieldValue(field);
                }
            }
            else {
                this.values[name] = originalValue;
            }
            field.value = originalValue;
        }
        /**
         * first init field (value not in field)
         * should get field.value from this.values or defaultValue
         */
        if (!('value' in field)) {
            if (parseName) {
                var cachedValue = Object(utils["d" /* getIn */])(this.values, name);
                if (typeof cachedValue !== 'undefined') {
                    oldValue = cachedValue;
                }
                var initValue_1 = typeof cachedValue !== 'undefined' ? cachedValue : defaultValue;
                // when parseName is true, field should not store value locally. To prevent sync issues
                this._proxyFieldValue(field);
                field.value = initValue_1;
            }
            else {
                var cachedValue = this.values[name];
                if (typeof cachedValue !== 'undefined') {
                    field.value = cachedValue;
                    oldValue = cachedValue;
                }
                else if (typeof defaultValue !== 'undefined') {
                    // should be same with parseName, but compatible with old versions
                    field.value = defaultValue;
                    this.values[name] = field.value;
                }
            }
        }
        // field value init end
        var newValue = field.value;
        this._triggerFieldChange(name, newValue, oldValue, 'init');
        // Component props
        var inputProps = (_a = {
                'data-meta': 'Field',
                id: id || name,
                ref: this._getCacheBind(name, "".concat(name, "__ref"), this._saveRef)
            },
            _a[valueName] = setValueFormatter
                ? setValueFormatter(field.value, field.inputValues)
                : field.value,
            _a);
        var rulesMap = {};
        if (this.options.autoValidate && autoValidate !== false) {
            // trigger map in rules,
            rulesMap = Object(utils["i" /* mapValidateRules */])(field.rules, trigger);
            var _loop_1 = function (action) {
                // skip default trigger, which will trigger in step2
                if (action === trigger) {
                    return "continue";
                }
                var actionRule = rulesMap[action];
                inputProps[action] = function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    _this_1._callNativePropsEvent.apply(_this_1, Object(tslib_es6["__spreadArray"])([action, originalProps], Object(tslib_es6["__read"])(args), false));
                    _this_1._validate(name, actionRule, action);
                };
            };
            // step1 : validate hooks
            for (var action in rulesMap) {
                _loop_1(action);
            }
        }
        // step2: onChange(trigger=onChange by default) hack
        inputProps[trigger] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var oldValue = _this_1.getValue(name);
            _this_1._updateFieldValue.apply(_this_1, Object(tslib_es6["__spreadArray"])([name], Object(tslib_es6["__read"])(args), false));
            var newValue = _this_1.getValue(name);
            _this_1._triggerFieldChange(name, newValue, oldValue, 'change');
            // clear validate error
            _this_1._resetError(name);
            _this_1._callNativePropsEvent.apply(_this_1, Object(tslib_es6["__spreadArray"])([trigger, originalProps], Object(tslib_es6["__read"])(args), false));
            // call global onChange
            _this_1.options.onChange(name, field.value);
            // validate while onChange
            var rule = rulesMap[trigger];
            rule && _this_1._validate(name, rule, trigger);
            _this_1._reRender(name, trigger);
        };
        // step3: save reRender function
        if (reRender && typeof reRender === 'function') {
            this.reRenders[name] = reRender;
        }
        delete originalProps[defaultValueName];
        return Object.assign({}, originalProps, inputProps);
    };
    /**
     * 获取单个输入控件的值
     * @param name - 字段名
     * @returns 字段值
     */
    Field.prototype.getValue = function (name) {
        if (this.options.parseName) {
            return Object(utils["d" /* getIn */])(this.values, name);
        }
        return this.values[name];
    };
    /**
     * 获取一组输入控件的值
     * @param names - 字段名数组
     * @returns 不传入`names`参数，则获取全部字段的值
     */
    Field.prototype.getValues = function (names) {
        var _this_1 = this;
        var allValues = {};
        if (names && names.length) {
            names.forEach(function (name) {
                allValues[name] = _this_1.getValue(name);
            });
        }
        else {
            Object.assign(allValues, this.values);
        }
        return allValues;
    };
    /**
     * 设置单个输入控件的值（默认会触发 render，请遵循 react 时机使用)
     * @param name - 字段名
     * @param value - 字段值
     * @param reRender - 设置完成后是否重新渲染，默认为 true
     * @param triggerChange - 是否触发 watch change，默认为 true
     */
    Field.prototype.setValue = function (name, value, reRender, triggerChange) {
        if (reRender === void 0) { reRender = true; }
        if (triggerChange === void 0) { triggerChange = true; }
        var oldValue = this.getValue(name);
        if (name in this.fieldsMeta) {
            this.fieldsMeta[name].value = value;
        }
        if (this.options.parseName) {
            this.values = Object(utils["j" /* setIn */])(this.values, name, value);
        }
        else {
            this.values[name] = value;
        }
        var newValue = this.getValue(name);
        if (triggerChange) {
            this._triggerFieldChange(name, newValue, oldValue, 'setValue');
        }
        reRender && this._reRender(name, 'setValue');
    };
    /**
     * 设置一组输入控件的值（默认会触发 render，请遵循 react 时机使用)
     * @param fieldsValue - 一组输入控件值对象
     * @param reRender - 设置完成后是否重新渲染，默认为 true
     */
    Field.prototype.setValues = function (fieldsValue, reRender) {
        var e_1, _a;
        var _this_1 = this;
        if (fieldsValue === void 0) { fieldsValue = {}; }
        if (reRender === void 0) { reRender = true; }
        if (!this.options.parseName) {
            Object.keys(fieldsValue).forEach(function (name) {
                _this_1.setValue(name, fieldsValue[name], false, true);
            });
        }
        else {
            // NOTE: this is a shallow merge
            // Ex. we have two values a.b.c=1 ; a.b.d=2, and use setValues({a:{b:{c:3}}}) , then because of shallow merge a.b.d will be lost, we will get only {a:{b:{c:3}}}
            // fieldsMeta[name].value is proxy from this.values[name] when parseName is true, so there is no need to assign value to fieldMeta
            // shallow merge
            var newValues_1 = Object.assign({}, this.values, fieldsValue);
            var fields = this.getNames();
            var allOldFieldValues = this.getValues(fields);
            // record all old field values, exclude items overwritten by fieldsValue
            var oldFieldValues = fields
                .filter(function (name) { return !Object(utils["h" /* isOverwritten */])(fieldsValue, name); })
                .map(function (name) { return ({ name: name, value: _this_1.fieldsMeta[name].value }); });
            // assign lost field value to newValues
            oldFieldValues.forEach(function (_a) {
                var name = _a.name, value = _a.value;
                if (!Object(utils["g" /* hasIn */])(newValues_1, name)) {
                    newValues_1 = Object(utils["j" /* setIn */])(newValues_1, name, value);
                }
            });
            // store the new values
            this.values = newValues_1;
            try {
                // trigger changes after update
                for (var fields_1 = Object(tslib_es6["__values"])(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {
                    var name_1 = fields_1_1.value;
                    this._triggerFieldChange(name_1, this.getValue(name_1), allOldFieldValues[name_1], 'setValue');
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        reRender && this._reRender();
    };
    /**
     * 获取单个输入控件的 Error
     * @param name - 字段名
     * @returns 该字段的 Error
     */
    Field.prototype.getError = function (name) {
        var field = this._get(name);
        if (field && field.errors && field.errors.length) {
            return field.errors;
        }
        return null;
    };
    /**
     * 获取一组输入控件的 Error
     * @param names - 字段名列表
     * @returns 不传入`names`参数，则获取全部字段的 Error
     */
    Field.prototype.getErrors = function (names) {
        var _this_1 = this;
        var fields = names || this.getNames();
        var allErrors = {};
        fields.forEach(function (f) {
            allErrors[f] = _this_1.getError(f);
        });
        return allErrors;
    };
    /**
     * 设置单个输入控件的 Error
     * @param name - 字段名
     * @param errors - 错误信息
     */
    Field.prototype.setError = function (name, errors) {
        var err = Array.isArray(errors) ? errors : errors ? [errors] : [];
        if (name in this.fieldsMeta) {
            this.fieldsMeta[name].errors = err;
        }
        else {
            this.fieldsMeta[name] = {
                errors: err,
            };
        }
        if (this.fieldsMeta[name].errors && this.fieldsMeta[name].errors.length > 0) {
            this.fieldsMeta[name].state = 'error';
        }
        else {
            this.fieldsMeta[name].state = '';
        }
        this._reRender(name, 'setError');
    };
    /**
     * 设置一组输入控件的 Error
     */
    Field.prototype.setErrors = function (fieldsErrors) {
        var _this_1 = this;
        if (fieldsErrors === void 0) { fieldsErrors = {}; }
        Object.keys(fieldsErrors).forEach(function (name) {
            _this_1.setError(name, fieldsErrors[name]);
        });
    };
    /**
     * 获取单个字段的校验状态
     * @param name - 字段名
     */
    Field.prototype.getState = function (name) {
        var field = this._get(name);
        if (field && field.state) {
            return field.state;
        }
        return '';
    };
    /**
     * 校验 - Callback version
     */
    Field.prototype.validateCallback = function (ns, cb) {
        var _this_1 = this;
        var _a = Object(utils["e" /* getParams */])(ns, cb), names = _a.names, callback = _a.callback;
        var fieldNames = names || this.getNames();
        var descriptor = {};
        var values = {};
        var hasRule = false;
        for (var i = 0; i < fieldNames.length; i++) {
            var name_2 = fieldNames[i];
            var field = this._get(name_2);
            if (!field) {
                continue;
            }
            if (field.rules && field.rules.length) {
                descriptor[name_2] = field.rules;
                values[name_2] = this.getValue(name_2);
                hasRule = true;
                // clear error
                field.errors = [];
                field.state = '';
            }
        }
        if (!hasRule) {
            var errors = this.formatGetErrors(fieldNames);
            callback && callback(errors, this.getValues(names ? fieldNames : []));
            return;
        }
        var validate = new es(descriptor, {
            first: this.options.first,
            messages: this.options.messages,
        });
        validate.validate(values, function (errors) {
            var errorsGroup = null;
            if (errors && errors.length) {
                errorsGroup = {};
                errors.forEach(function (e) {
                    var fieldName = e.field;
                    if (!errorsGroup[fieldName]) {
                        errorsGroup[fieldName] = {
                            errors: [],
                        };
                    }
                    var fieldErrors = errorsGroup[fieldName].errors;
                    fieldErrors.push(e.message);
                });
            }
            if (errorsGroup) {
                // update error in every Field
                Object.keys(errorsGroup).forEach(function (i) {
                    var field = _this_1._get(i);
                    if (field) {
                        field.errors = Object(utils["c" /* getErrorStrs */])(errorsGroup[i].errors, _this_1.processErrorMessage);
                        field.state = 'error';
                    }
                });
            }
            var formattedGetErrors = _this_1.formatGetErrors(fieldNames);
            if (formattedGetErrors) {
                errorsGroup = Object.assign({}, formattedGetErrors, errorsGroup);
            }
            // update to success which has no error
            for (var i = 0; i < fieldNames.length; i++) {
                var name_3 = fieldNames[i];
                var field = _this_1._get(name_3);
                if (field && field.rules && !(errorsGroup && name_3 in errorsGroup)) {
                    field.state = 'success';
                }
            }
            callback && callback(errorsGroup, _this_1.getValues(names ? fieldNames : []));
            _this_1._reRender(names, 'validate');
            _this_1._triggerAfterValidateRerender(errorsGroup);
        });
    };
    /**
     * 校验 - Promise version
     */
    Field.prototype.validatePromise = function (ns, formatter) {
        return Object(tslib_es6["__awaiter"])(this, void 0, void 0, function () {
            var _a, names, callback, fieldNames, descriptor, values, hasRule, i, name_4, field, errors_1, validate, results, errors, errorsGroup, callbackResults, error_1;
            return Object(tslib_es6["__generator"])(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = Object(utils["e" /* getParams */])(ns, formatter), names = _a.names, callback = _a.callback;
                        fieldNames = names || this.getNames();
                        descriptor = {};
                        values = {};
                        hasRule = false;
                        for (i = 0; i < fieldNames.length; i++) {
                            name_4 = fieldNames[i];
                            field = this._get(name_4);
                            if (!field) {
                                continue;
                            }
                            if (field.rules && field.rules.length) {
                                descriptor[name_4] = field.rules;
                                values[name_4] = this.getValue(name_4);
                                hasRule = true;
                                // clear error
                                field.errors = [];
                                field.state = '';
                            }
                        }
                        if (!hasRule) {
                            errors_1 = this.formatGetErrors(fieldNames);
                            if (callback) {
                                return [2 /*return*/, callback({
                                        errors: errors_1,
                                        values: this.getValues(names ? fieldNames : []),
                                    })];
                            }
                            else {
                                return [2 /*return*/, {
                                        errors: errors_1,
                                        values: this.getValues(names ? fieldNames : []),
                                    }];
                            }
                        }
                        validate = new es(descriptor, {
                            first: this.options.first,
                            messages: this.options.messages,
                        });
                        return [4 /*yield*/, validate.validatePromise(values)];
                    case 1:
                        results = _b.sent();
                        errors = (results && results.errors) || [];
                        errorsGroup = this._getErrorsGroup({ errors: errors, fieldNames: fieldNames });
                        callbackResults = {
                            errors: errorsGroup,
                            values: this.getValues(names ? fieldNames : []),
                        };
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 5, , 6]);
                        if (!callback) return [3 /*break*/, 4];
                        return [4 /*yield*/, callback(callbackResults)];
                    case 3:
                        callbackResults = _b.sent();
                        _b.label = 4;
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        error_1 = _b.sent();
                        return [2 /*return*/, error_1];
                    case 6:
                        this._reRender(names, 'validate');
                        // afterValidateRerender 作为通用属性，在 callback 和 promise 两个版本的 validate 中保持相同行为
                        this._triggerAfterValidateRerender(errorsGroup);
                        return [2 /*return*/, callbackResults];
                }
            });
        });
    };
    /**
     * 重置一组输入控件的值，并清空校验信息
     * @param names - 要重置的字段名，不传递则重置全部字段
     */
    Field.prototype.reset = function (ns) {
        this._reset(ns, false);
    };
    /**
     * 重置一组输入控件的值为默认值，并清空校验信息
     * @param names - 要重置的字段名，不传递则重置全部字段
     */
    Field.prototype.resetToDefault = function (ns) {
        this._reset(ns, true);
    };
    /**
     * 获取所有字段名列表
     */
    Field.prototype.getNames = function () {
        var fieldsMeta = this.fieldsMeta;
        return Object.keys(fieldsMeta).filter(function () {
            return true;
        });
    };
    /**
     * 删除某一个或者一组控件的数据，删除后与之相关的 validate/value 都会被清空
     * @param name - 要删除的字段名，不传递则删除全部字段
     */
    Field.prototype.remove = function (ns) {
        var _this_1 = this;
        if (typeof ns === 'string') {
            ns = [ns];
        }
        if (!ns) {
            this.values = {};
        }
        var names = ns || Object.keys(this.fieldsMeta);
        names.forEach(function (name) {
            if (name in _this_1.fieldsMeta) {
                delete _this_1.fieldsMeta[name];
            }
            if (_this_1.options.parseName) {
                _this_1.values = Object(utils["b" /* deleteIn */])(_this_1.values, name);
            }
            else {
                delete _this_1.values[name];
            }
        });
    };
    /**
     * 向指定数组字段内添加数据
     * @param name - 字段名
     * @param index - 开始添加的索引
     * @param argv - 新增的数据
     */
    Field.prototype.addArrayValue = function (name, index) {
        var argv = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            argv[_i - 2] = arguments[_i];
        }
        return this._spliceArrayValue.apply(this, Object(tslib_es6["__spreadArray"])([name, index, 0], Object(tslib_es6["__read"])(argv), false));
    };
    /**
     * 删除指定字段数组内的数据
     * @param name - 变量名
     * @param index - 开始删除的索引
     * @param howmany - 删除几个数据，默认为 1
     */
    Field.prototype.deleteArrayValue = function (name, index, howmany) {
        if (howmany === void 0) { howmany = 1; }
        return this._spliceArrayValue(name, index, howmany);
    };
    /**
     * splice in a Array [deprecated]
     * @deprecated Use `addArrayValue` or `deleteArrayValue` instead
     * @param keyMatch - like name.\{index\}
     * @param startIndex - index
     */
    Field.prototype.spliceArray = function (keyMatch, startIndex) {
        var e_2, _a;
        var _this_1 = this;
        // @ts-expect-error FIXME 无效的 if 逻辑，恒定为 false
        if (keyMatch.match(/{index}$/) === -1) {
            Object(utils["k" /* warning */])('key should match /{index}$/');
            return;
        }
        // regex to match field names in the same target array
        var reg = keyMatch.replace('{index}', '(\\d+)');
        var keyReg = new RegExp("^".concat(reg));
        var listMap = {};
        /**
         * keyMatch='key.\{index\}'
         * case 1: names=['key.0', 'key.1'], should delete 'key.1'
         * case 2: names=['key.0.name', 'key.0.email', 'key.1.name', 'key.1.email'], should delete 'key.1.name', 'key.1.email'
         */
        var names = this.getNames();
        var willChangeNames = [];
        names.forEach(function (n) {
            // is name in the target array?
            var ret = keyReg.exec(n);
            if (ret) {
                var index = parseInt(ret[1]);
                if (index > startIndex) {
                    var l = listMap[index];
                    var item = {
                        from: n,
                        to: "".concat(keyMatch.replace('{index}', (index - 1).toString())).concat(n.replace(ret[0], '')),
                    };
                    willChangeNames.push(item.from);
                    if (names.includes(item.to)) {
                        willChangeNames.push(item.to);
                    }
                    if (!l) {
                        listMap[index] = [item];
                    }
                    else {
                        l.push(item);
                    }
                }
            }
        });
        var oldValues = this.getValues(willChangeNames);
        var idxList = Object.keys(listMap)
            .map(function (i) {
            return {
                index: Number(i),
                list: listMap[i],
            };
        })
            // @ts-expect-error FIXME 返回 boolean 值并不能正确排序
            .sort(function (a, b) { return a.index < b.index; });
        // should be continuous array
        if (idxList.length > 0 && idxList[0].index === startIndex + 1) {
            idxList.forEach(function (l) {
                var list = l.list;
                list.forEach(function (i) {
                    var v = _this_1.getValue(i.from); // get index value
                    _this_1.setValue(i.to, v, false, false); // set value to index - 1
                });
            });
            var lastIdxList = idxList[idxList.length - 1];
            lastIdxList.list.forEach(function (i) {
                _this_1.remove(i.from);
            });
            var parentName = keyMatch.replace('.{index}', '');
            parentName = parentName.replace('[{index}]', '');
            var parent_1 = this.getValue(parentName);
            if (parent_1) {
                // if parseName=true then parent is an Array object but does not know an element was removed
                // this manually decrements the array length
                parent_1.length--;
            }
        }
        try {
            for (var willChangeNames_1 = Object(tslib_es6["__values"])(willChangeNames), willChangeNames_1_1 = willChangeNames_1.next(); !willChangeNames_1_1.done; willChangeNames_1_1 = willChangeNames_1.next()) {
                var name_5 = willChangeNames_1_1.value;
                this._triggerFieldChange(name_5, this.getValue(name_5), oldValues[name_5], 'setValue');
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (willChangeNames_1_1 && !willChangeNames_1_1.done && (_a = willChangeNames_1.return)) _a.call(willChangeNames_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    Field.prototype.get = function (name) {
        if (name) {
            return this._get(name);
        }
        else {
            return this.fieldsMeta;
        }
    };
    /**
     * 监听字段值变化
     * @param names - 监听的 name 列表
     * @param callback - 变化回调
     * @returns 解除监听回调
     */
    Field.prototype.watch = function (names, callback) {
        var e_3, _a;
        var _this_1 = this;
        try {
            for (var names_1 = Object(tslib_es6["__values"])(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
                var name_6 = names_1_1.value;
                if (!this.listeners[name_6]) {
                    this.listeners[name_6] = new Set();
                }
                var set = this.listeners[name_6];
                set.add(callback);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return function () {
            var e_4, _a;
            try {
                for (var names_2 = Object(tslib_es6["__values"])(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {
                    var name_7 = names_2_1.value;
                    if (_this_1.listeners[name_7]) {
                        _this_1.listeners[name_7].delete(callback);
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (names_2_1 && !names_2_1.done && (_a = names_2.return)) _a.call(names_2);
                }
                finally { if (e_4) throw e_4.error; }
            }
        };
    };
    Field.prototype._get = function (name) {
        return name in this.fieldsMeta ? this.fieldsMeta[name] : null;
    };
    Field.prototype._getInitMeta = function (name) {
        if (!(name in this.fieldsMeta)) {
            this.fieldsMeta[name] = Object.assign({ name: name }, initMeta);
        }
        return this.fieldsMeta[name];
    };
    Field.prototype._getErrorsGroup = function (_a) {
        var _this_1 = this;
        var errors = _a.errors, fieldNames = _a.fieldNames;
        var errorsGroup = null;
        if (errors && errors.length) {
            errorsGroup = {};
            errors.forEach(function (e) {
                var fieldName = e.field;
                if (!errorsGroup[fieldName]) {
                    errorsGroup[fieldName] = {
                        errors: [],
                    };
                }
                var fieldErrors = errorsGroup[fieldName].errors;
                fieldErrors.push(e.message);
            });
        }
        if (errorsGroup) {
            // update error in every Field
            Object.keys(errorsGroup).forEach(function (i) {
                var field = _this_1._get(i);
                if (field) {
                    field.errors = Object(utils["c" /* getErrorStrs */])(errorsGroup[i].errors, _this_1.processErrorMessage);
                    field.state = 'error';
                }
            });
        }
        var formattedGetErrors = this.formatGetErrors(fieldNames);
        if (formattedGetErrors) {
            errorsGroup = Object.assign({}, formattedGetErrors, errorsGroup);
        }
        // update to success which has no error
        for (var i = 0; i < fieldNames.length; i++) {
            var name_8 = fieldNames[i];
            var field = this._get(name_8);
            if (field && field.rules && !(errorsGroup && name_8 in errorsGroup)) {
                field.state = 'success';
            }
        }
        return errorsGroup;
    };
    Field.prototype._reset = function (ns, backToDefault) {
        var _this_1 = this;
        if (typeof ns === 'string') {
            ns = [ns];
        }
        var changed = false;
        var names = ns || Object.keys(this.fieldsMeta);
        var oldValues = this.getValues(names);
        if (!ns) {
            this.values = {};
        }
        names.forEach(function (name) {
            var field = _this_1._get(name);
            if (field) {
                changed = true;
                field.value = backToDefault ? field.initValue : undefined;
                field.state = '';
                delete field.errors;
                delete field.rules;
                delete field.rulesMap;
                if (_this_1.options.parseName) {
                    _this_1.values = Object(utils["j" /* setIn */])(_this_1.values, name, field.value);
                }
                else {
                    _this_1.values[name] = field.value;
                }
            }
            _this_1._triggerFieldChange(name, _this_1.getValue(name), oldValues[name], 'reset');
        });
        if (changed) {
            this._reRender(names, 'reset');
        }
    };
    Field.prototype._resetError = function (name) {
        var field = this._get(name);
        if (field) {
            delete field.errors; //清空错误
            field.state = '';
        }
    };
    Field.prototype._reRender = function (name, action) {
        var _this_1 = this;
        // 指定了字段列表且字段存在对应的自定义渲染函数
        if (name) {
            var names = Array.isArray(name) ? name : [name];
            if (names.length && names.every(function (n) { return _this_1.reRenders[n]; })) {
                names.forEach(function (n) {
                    var reRender = _this_1.reRenders[n];
                    reRender(action);
                });
                return;
            }
        }
        if (this.com) {
            if (!this.options.forceUpdate && this.com.setState) {
                this.com.setState({});
            }
            else if (this.com.forceUpdate) {
                this.com.forceUpdate(); //forceUpdate 对性能有较大的影响，成指数上升
            }
        }
    };
    /**
     * Get errors using `getErrors` and format to match the structure of errors returned in field.validate
     */
    Field.prototype.formatGetErrors = function (names) {
        var errors = this.getErrors(names);
        var formattedErrors = null;
        for (var field in errors) {
            if (errors.hasOwnProperty(field) && errors[field]) {
                var errorsObj = errors[field];
                if (!formattedErrors) {
                    formattedErrors = {};
                }
                formattedErrors[field] = { errors: errorsObj };
            }
        }
        return formattedErrors;
    };
    /**
     * call native event from props.onXx
     * eg: props.onChange props.onBlur props.onFocus
     */
    Field.prototype._callNativePropsEvent = function (action, props) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        action in props &&
            typeof props[action] === 'function' && props[action].apply(props, Object(tslib_es6["__spreadArray"])([], Object(tslib_es6["__read"])(args), false));
    };
    Field.prototype._proxyFieldValue = function (field) {
        var _this = this;
        Object.defineProperty(field, 'value', {
            configurable: true,
            enumerable: true,
            get: function () {
                return Object(utils["d" /* getIn */])(_this.values, this.name);
            },
            set: function (v) {
                // 此处 this 解释同上
                _this.values = Object(utils["j" /* setIn */])(_this.values, this.name, v);
                return true;
            },
        });
    };
    /**
     * update field.value and validate
     */
    Field.prototype._updateFieldValue = function (name) {
        var others = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            others[_i - 1] = arguments[_i];
        }
        var e = others[0];
        var field = this._get(name);
        if (!field) {
            return;
        }
        field.value = field.getValueFormatter ? field.getValueFormatter.apply(this, others) : Object(utils["f" /* getValueFromEvent */])(e);
        field.inputValues = others;
        if (this.options.parseName) {
            this.values = Object(utils["j" /* setIn */])(this.values, name, field.value);
        }
        else {
            this.values[name] = field.value;
        }
    };
    /**
     * ref must always be the same function, or if not it will be triggerd every time.
     */
    Field.prototype._getCacheBind = function (name, action, fn) {
        var cache = (this.cachedBind[name] = this.cachedBind[name] || {});
        if (!cache[action]) {
            cache[action] = fn.bind(this, name);
        }
        return cache[action];
    };
    Field.prototype._setCache = function (name, action, hander) {
        var cache = (this.cachedBind[name] = this.cachedBind[name] || {});
        cache[action] = hander;
    };
    Field.prototype._getCache = function (name, action) {
        var cache = this.cachedBind[name] || {};
        return cache[action];
    };
    Field.prototype._saveRef = function (name, component) {
        var key = "".concat(name, "_field");
        var autoUnmount = this.options.autoUnmount;
        if (!component && autoUnmount) {
            // more than one component, do nothing
            this.instanceCount[name] && this.instanceCount[name]--;
            if (this.instanceCount[name] > 0) {
                return;
            }
            // component with same name (eg: type ? <A name="n"/>:<B name="n"/>)
            // while type changed, B will render before A unmount. so we should cached value for B
            // step: render -> B mount -> 1. _saveRef(A, null) -> 2. _saveRef(B, ref) -> render
            // 1. _saveRef(A, null)
            var cache = this.fieldsMeta[name];
            if (cache) {
                if (this.options.parseName) {
                    // 若 parseName 模式下，因为 value 为 getter、setter，所以将当前值记录到_value 内
                    cache._value = cache.value;
                }
                this._setCache(name, key, cache);
            }
            // after destroy, delete data
            delete this.instance[name];
            delete this.reRenders[name];
            var oldValue = this.getValue(name);
            this.remove(name);
            var newValue = this.getValue(name);
            this._triggerFieldChange(name, newValue, oldValue, 'unmount');
            return;
        }
        // 2. _saveRef(B, ref) (eg: same name but different compoent may be here)
        if (autoUnmount && !this.fieldsMeta[name] && this._getCache(name, key)) {
            var cache = this._getCache(name, key);
            this.fieldsMeta[name] = cache;
            // 若 parseName 模式，则使用_value 作为值设置到 values 内
            this.setValue(name, this.options.parseName ? cache._value : cache.value, false, false);
            this.options.parseName && '_value' in cache && delete cache._value;
        }
        // only one time here
        var field = this._get(name);
        if (field) {
            //When the autoUnmount is false, the component uninstallation needs to clear the verification information to avoid blocking the validation.
            if (!component && !autoUnmount) {
                field.state = '';
                delete field.errors;
                delete field.rules;
                delete field.rulesMap;
            }
            var ref = field.ref;
            if (ref) {
                if (typeof ref === 'string') {
                    throw new Error("can not set string ref for ".concat(name));
                }
                else if (typeof ref === 'function') {
                    ref(component);
                }
                else if (typeof ref === 'object' && 'current' in ref) {
                    // while ref = React.createRef() ref={ current: null}
                    ref.current = component;
                }
            }
            // mount
            if (autoUnmount && component) {
                var cnt = this.instanceCount[name];
                if (!cnt) {
                    cnt = 0;
                }
                this.instanceCount[name] = cnt + 1;
            }
            this.instance[name] = component;
        }
    };
    Field.prototype._validate = function (name, rule, trigger) {
        var _a, _b;
        var _this_1 = this;
        var field = this._get(name);
        if (!field) {
            return;
        }
        var value = field.value;
        field.state = 'loading';
        var validate = this._getCache(name, trigger);
        if (validate && typeof validate.abort === 'function') {
            validate.abort();
        }
        validate = new es((_a = {}, _a[name] = rule, _a), { messages: this.options.messages });
        this._setCache(name, trigger, validate);
        validate.validate((_b = {},
            _b[name] = value,
            _b), function (errors) {
            var newErrors, newState;
            if (errors && errors.length) {
                newErrors = Object(utils["c" /* getErrorStrs */])(errors, _this_1.processErrorMessage);
                newState = 'error';
            }
            else {
                newErrors = [];
                newState = 'success';
            }
            var reRender = false;
            // only status or errors changed, Rerender
            if (newState !== field.state ||
                !field.errors ||
                newErrors.length !== field.errors.length ||
                newErrors.find(function (e, idx) { return e !== field.errors[idx]; })) {
                reRender = true;
            }
            field.errors = newErrors;
            field.state = newState;
            reRender && _this_1._reRender(name, 'validate');
        });
    };
    /**
     * splice array
     */
    Field.prototype._spliceArrayValue = function (key, index, howmany) {
        var e_5, _a;
        var _this_1 = this;
        var argv = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            argv[_i - 3] = arguments[_i];
        }
        var argc = argv.length;
        var offset = howmany - argc; // how the reset fieldMeta move
        var startIndex = index + howmany; // 计算起点
        /**
         * eg: call _spliceArrayValue('key', 1) to delete 'key.1':
         *   case 1: names=['key.0', 'key.1']; delete 'key.1';
         *   case 2: names=['key.0', 'key.1', 'key.2']; key.1= key.2; delete key.2;
         *   case 3: names=['key.0.name', 'key.0.email', 'key.1.name', 'key.1.email'], should delete 'key.1.name', 'key.1.email'
         * eg: call _spliceArrayValue('key', 1, item) to add 'key.1':
         *   case 1: names=['key.0']; add 'key.1' = item;
         *   case 2: names=['key.0', 'key.1']; key.2= key.1; delete key.1; add key.1 = item;
         */
        var listMap = {}; // eg: {1:[{from: 'key.2.name', to: 'key.1.name'}, {from: 'key.2.email', to: 'key.1.email'}]}
        var replacedReg = /\$/g;
        // 替换特殊字符$
        var replacedKey = key.replace(replacedReg, '\\$&');
        var keyReg = new RegExp("^(".concat(replacedKey, ".)(\\d+)"));
        var replaceArgv = [];
        var names = this.getNames();
        var willChangeNames = [];
        // logic of offset fix begin
        names.forEach(function (n) {
            var ret = keyReg.exec(n);
            if (ret) {
                var idx_1 = parseInt(ret[2]); // get index of 'key.0.name'
                if (idx_1 >= startIndex) {
                    var l = listMap[idx_1];
                    var item = {
                        from: n,
                        to: n.replace(keyReg, function (match, p1) { return "".concat(p1).concat(idx_1 - offset); }),
                    };
                    willChangeNames.push(item.from);
                    if (names.includes(item.to)) {
                        willChangeNames.push(item.to);
                    }
                    if (!l) {
                        listMap[idx_1] = [item];
                    }
                    else {
                        l.push(item);
                    }
                }
                // in case of offsetList.length = 0, eg: delete last element
                if (offset > 0 && idx_1 >= index && idx_1 < index + howmany) {
                    replaceArgv.push(n);
                }
            }
        });
        var oldValues = this.getValues(willChangeNames);
        // sort with index eg: [{index:1, list: [{from: 'key.2.name', to: 'key.1.name'}]}, {index:2, list: [...]}]
        var offsetList = Object.keys(listMap)
            .map(function (i) {
            return {
                index: Number(i),
                list: listMap[i],
            };
        })
            .sort(function (a, b) { return (offset > 0 ? a.index - b.index : b.index - a.index); });
        offsetList.forEach(function (l) {
            var list = l.list;
            list.forEach(function (i) {
                _this_1.fieldsMeta[i.to] = _this_1.fieldsMeta[i.from];
                // 移位后，同步调整 name
                _this_1.fieldsMeta[i.to].name = i.to;
            });
        });
        // delete copy data
        if (offsetList.length > 0) {
            var removeList = offsetList.slice(offsetList.length - (offset < 0 ? -offset : offset), offsetList.length);
            removeList.forEach(function (item) {
                item.list.forEach(function (i) {
                    delete _this_1.fieldsMeta[i.from];
                });
            });
        }
        else {
            // will get from this.values while rerender
            replaceArgv.forEach(function (i) {
                delete _this_1.fieldsMeta[i];
            });
        }
        var p = this.getValue(key);
        if (p) {
            p.splice.apply(p, Object(tslib_es6["__spreadArray"])([index, howmany], Object(tslib_es6["__read"])(argv), false));
        }
        try {
            for (var willChangeNames_2 = Object(tslib_es6["__values"])(willChangeNames), willChangeNames_2_1 = willChangeNames_2.next(); !willChangeNames_2_1.done; willChangeNames_2_1 = willChangeNames_2.next()) {
                var name_9 = willChangeNames_2_1.value;
                this._triggerFieldChange(name_9, this.getValue(name_9), oldValues[name_9], 'setValue');
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (willChangeNames_2_1 && !willChangeNames_2_1.done && (_a = willChangeNames_2.return)) _a.call(willChangeNames_2);
            }
            finally { if (e_5) throw e_5.error; }
        }
        this._reRender();
    };
    Field.prototype._triggerFieldChange = function (name, value, oldValue, triggerType) {
        var e_6, _a;
        // same value should not trigger change
        if (Object.is(value, oldValue)) {
            return;
        }
        var listenerSet = this.listeners[name];
        if (!(listenerSet === null || listenerSet === void 0 ? void 0 : listenerSet.size)) {
            return;
        }
        try {
            for (var listenerSet_1 = Object(tslib_es6["__values"])(listenerSet), listenerSet_1_1 = listenerSet_1.next(); !listenerSet_1_1.done; listenerSet_1_1 = listenerSet_1.next()) {
                var callback = listenerSet_1_1.value;
                callback(name, value, oldValue, triggerType);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (listenerSet_1_1 && !listenerSet_1_1.done && (_a = listenerSet_1.return)) _a.call(listenerSet_1);
            }
            finally { if (e_6) throw e_6.error; }
        }
    };
    Field.prototype._triggerAfterValidateRerender = function (errorsGroup) {
        if (typeof this.afterValidateRerender === 'function') {
            this.afterValidateRerender({
                errorsGroup: errorsGroup,
                options: this.options,
                instance: this.instance,
            });
        }
    };
    return Field;
}());

/* harmony default export */ var field_es = __webpack_exports__["default"] = (es_Field);


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var create_style_1 = tslib_1.__importStar(__webpack_require__(173));
var pickOthers = util_1.obj.pickOthers;
var createChildren = function createChildren(children, _a) {
    var spacing = _a.spacing,
        direction = _a.direction,
        wrap = _a.wrap;
    var array = react_1.default.Children.toArray(children);
    if (!children) {
        return null;
    }
    return array.map(function (child, index) {
        var spacingMargin = {};
        spacingMargin = (0, create_style_1.getChildMargin)(spacing);
        if (!wrap) {
            // 不折行
            var isNone_1 = [index === 0, index === array.length - 1];
            var props_1 = direction === 'row' ? ['marginLeft', 'marginRight'] : ['marginTop', 'marginBottom'];
            ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'].forEach(function (prop) {
                if (prop in spacingMargin && props_1.indexOf(prop) === -1) {
                    spacingMargin[prop] = 0;
                }
                props_1.forEach(function (key, i) {
                    if (key in spacingMargin && isNone_1[i]) {
                        spacingMargin[key] = 0;
                    }
                });
            });
        }
        if (react_1.default.isValidElement(child)) {
            var propsMargin = child.props.margin;
            var childPropsMargin = (0, create_style_1.getMargin)(propsMargin);
            var gridProps = {};
            if (['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && child.type._typeMark === 'responsive_grid') {
                gridProps = (0, create_style_1.default)(tslib_1.__assign({ display: 'grid' }, child.props));
            }
            return react_1.default.cloneElement(child, {
                style: tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, spacingMargin), childPropsMargin), gridProps), child.props.style || {})
            });
        }
        return child;
    });
};
var getStyle = function getStyle(style, props) {
    return tslib_1.__assign(tslib_1.__assign({}, (0, create_style_1.default)(tslib_1.__assign({ display: 'flex' }, props))), style);
};
var getOuterStyle = function getOuterStyle(style, styleProps) {
    var sheet = getStyle(style, styleProps);
    return (0, create_style_1.filterOuterStyle)(sheet);
};
var getHelperStyle = function getHelperStyle(style, styleProps) {
    var sheet = getStyle(style, styleProps);
    return (0, create_style_1.filterHelperStyle)(tslib_1.__assign(tslib_1.__assign({}, sheet), (0, create_style_1.getSpacingHelperMargin)(styleProps.spacing)));
};
var getInnerStyle = function getInnerStyle(style, styleProps) {
    var sheet = getStyle(style, styleProps);
    return (0, create_style_1.filterInnerStyle)(sheet);
};
/**
 * Box
 */
var Box = /** @class */function (_super) {
    tslib_1.__extends(Box, _super);
    function Box() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Box.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            direction = _b.direction,
            justify = _b.justify,
            align = _b.align,
            wrap = _b.wrap,
            flex = _b.flex,
            spacing = _b.spacing,
            padding = _b.padding,
            margin = _b.margin,
            style = _b.style,
            className = _b.className,
            children = _b.children,
            device = _b.device,
            component = _b.component;
        var styleProps = {
            direction: direction,
            justify: justify,
            align: align,
            wrap: wrap,
            flex: flex,
            spacing: spacing,
            padding: padding,
            margin: margin
        };
        var View = component;
        var others = pickOthers(Object.keys(Box.propTypes), this.props);
        var styleSheet = getStyle(style, styleProps);
        var boxs = createChildren(children, {
            spacing: spacing,
            direction: direction,
            wrap: wrap,
            device: device
        });
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "box")] = true, _a), className);
        if (wrap && spacing) {
            var outerStyle = getOuterStyle(style, styleProps);
            var helperStyle = getHelperStyle(style, styleProps);
            var innerStyle = getInnerStyle(style, styleProps);
            return react_1.default.createElement(View, tslib_1.__assign({ style: outerStyle, className: cls }, others), react_1.default.createElement("div", { style: helperStyle }, react_1.default.createElement("div", { style: innerStyle, className: "".concat(prefix, "box") }, boxs)));
        }
        return react_1.default.createElement(View, tslib_1.__assign({ style: styleSheet, className: cls }, others), boxs);
    };
    Box.propTypes = {
        prefix: prop_types_1.default.string,
        style: prop_types_1.default.object,
        className: prop_types_1.default.any,
        /**
         * 布局属性
         */
        flex: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string])), prop_types_1.default.number]),
        /**
         * 布局方向，默认为 column ，一个元素占据一整行
         * @defaultValue column
         */
        direction: prop_types_1.default.oneOf(['row', 'column', 'row-reverse']),
        /**
         * 是否折行 支持IE11+
         */
        wrap: prop_types_1.default.bool,
        /**
         * 元素之间的间距 [bottom&top, right&left]
         */
        spacing: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.number), prop_types_1.default.number]),
        /**
         * 设置 margin [bottom&top, right&left]
         */
        margin: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.number), prop_types_1.default.number]),
        /**
         * 设置 padding [bottom&top, right&left]
         */
        padding: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.number), prop_types_1.default.number]),
        /**
         * 沿着主轴方向，子元素们的排布关系 （兼容性同 justify-content ）
         */
        justify: prop_types_1.default.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around']),
        /**
         * 垂直主轴方向，子元素们的排布关系 （兼容性同 align-items ）
         */
        align: prop_types_1.default.oneOf(['flex-start', 'center', 'flex-end', 'baseline', 'stretch']),
        device: prop_types_1.default.oneOf(['phone', 'tablet', 'desktop']),
        /**
         * 定制标签名， 例如section等
         */
        component: prop_types_1.default.string
    };
    Box.defaultProps = {
        prefix: 'next-',
        direction: 'column',
        wrap: false,
        component: 'div'
    };
    return Box;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Box);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getGridChildProps = exports.filterHelperStyle = exports.filterOuterStyle = exports.filterInnerStyle = exports.getSpacingHelperMargin = exports.getSpacingMargin = exports.getChildMargin = exports.getMargin = undefined;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _util = __webpack_require__(349);

var _util2 = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

// import { prefix } from 'inline-style-prefixer';
var ieVersion = _util2.env.ieVersion;

var getPadding = function getPadding(padding) {
    if (!Array.isArray(padding)) {
        return {
            padding: padding
        };
    }

    var attrs = ['paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'];
    var paddings = {};
    var value = void 0;

    attrs.forEach(function (attr, index) {
        switch (padding.length) {
            case 1:
                value = padding[0] || 0;
                break;
            case 2:
                value = padding[index] || padding[index - 2] || 0;
                break;
            case 3:
                value = index === 2 ? padding[2] : padding[index] || padding[index - 2] || 0;
                break;
            case 4:
            default:
                value = padding[index] || 0;
                break;
        }
        paddings[attr] = value;
    });

    return paddings;
};

var getMargin = function getMargin(size) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { isNegative: false, half: false },
        isNegative = _ref.isNegative,
        half = _ref.half;

    if (!size) {
        return {};
    }
    var attrs = ['marginTop', 'marginRight', 'marginBottom', 'marginLeft'];
    var margins = {};
    var param = 1 * (isNegative ? -1 : 1) * (half ? 0.5 : 1);
    var value = void 0;

    attrs.forEach(function (attr, index) {
        if (!Array.isArray(size)) {
            value = param * size;
        } else {
            switch (size.length) {
                case 1:
                    value = param * (size[0] || 0);
                    break;
                case 2:
                    value = param * (size[index] || size[index - 2] || 0);
                    break;
                case 3:
                    value = param * (index === 2 ? size[2] : size[index] || size[index - 2] || 0);
                    break;
                case 4:
                default:
                    value = param * (size[index] || 0);
                    break;
            }
        }

        margins[attr] = value;
    });

    return margins;
};

var getChildMargin = function getChildMargin(spacing) {
    return getMargin(spacing, { half: true });
};

var getSpacingMargin = function getSpacingMargin(spacing) {
    return getMargin(spacing, { half: true });
};

var getSpacingHelperMargin = function getSpacingHelperMargin(spacing) {
    return getMargin(spacing, { isNegative: true, half: true });
};

var getFlexs = function getFlexs(flex) {
    if (!Array.isArray(flex)) {
        return {
            flex: flex
        };
    }

    var attrs = ['flexGrow', 'flexShrink', 'flexBasis'];
    var flexs = {};

    flex.forEach(function (val, index) {
        flexs[attrs[index]] = val;
    });

    return flexs;
};

var getGridGap = function getGridGap(gap) {
    if (!Array.isArray(gap)) {
        return {
            gap: gap
        };
    }

    var attrs = ['rowGap', 'columnGap'];
    var gaps = {};

    gap.forEach(function (val, index) {
        gaps[attrs[index]] = val;
    });

    return gaps;
};

var getTemplateCount = function getTemplateCount(counts) {
    if (!isNaN(counts) || typeof counts === 'string') {
        return 'repeat(' + counts + ', minmax(0,1fr))';
    }

    return counts;
};

// const outerProps = ['alignSelf', 'flexGrow', 'flexShrink', 'flexBasis', 'backgroundColor', 'boxShadow', 'borderRadius', 'borderWidth', 'borderStyle', 'borderColor', 'padding', 'paddingTop', 'paddingLeft', 'paddingRight', 'paddingBottom'];

var helperProps = ['margin', 'marginTop', 'marginLeft', 'marginRight', 'marginBottom'];

var innerProps = ['flexDirection', 'flexWrap',
// 'justifyContent',
'alignContent', 'alignItems', 'display'];

var filterOuterStyle = function filterOuterStyle(style) {
    var props = {};

    [].concat(innerProps).forEach(function (key) {
        props[key] = style[key];
    });

    return (0, _util.filterUndefinedValue)((0, _util.stripObject)(style, props));
};

var filterHelperStyle = function filterHelperStyle(style) {
    var props = {};
    helperProps.forEach(function (key) {
        props[key] = style[key];
    });

    return (0, _util.filterUndefinedValue)((0, _extends3.default)({}, props, {
        overflow: 'hidden'
    }));
};

var filterInnerStyle = function filterInnerStyle(style) {
    var props = {};

    innerProps.forEach(function (key) {
        props[key] = style[key];
    });

    return (0, _util.filterUndefinedValue)(props);
};

var getGridChildProps = function getGridChildProps(props, device, gap) {
    var _props$row = props.row,
        row = _props$row === undefined ? 'initial' : _props$row,
        _props$col = props.col,
        col = _props$col === undefined ? 'initial' : _props$col,
        _props$rowSpan = props.rowSpan,
        rowSpan = _props$rowSpan === undefined ? 1 : _props$rowSpan,
        _props$colSpan = props.colSpan,
        colSpan = _props$colSpan === undefined ? 1 : _props$colSpan;

    var totalSpan = 12;
    var newColSpan = (typeof colSpan === 'undefined' ? 'undefined' : (0, _typeof3.default)(colSpan)) === 'object' && 'desktop' in colSpan ? colSpan.desktop : colSpan;

    ['tablet', 'phone'].forEach(function (deviceKey) {
        if (deviceKey === device) {
            if ((typeof colSpan === 'undefined' ? 'undefined' : (0, _typeof3.default)(colSpan)) === 'object' && device in colSpan) {
                newColSpan = colSpan[device];
            } else {
                switch (deviceKey) {
                    case 'tablet':
                        totalSpan = 8;
                        newColSpan = colSpan > 5 ? 8 : colSpan > 2 ? 4 : 2;
                        break;
                    case 'phone':
                        totalSpan = 4;
                        newColSpan = colSpan > 2 ? 4 : 2;
                        break;
                }
            }
        }
    });

    var gapLeft = gap;
    if (Array.isArray(gap)) {
        gapLeft = gap[1];
    }

    var ieChildFix = ieVersion && !(rowSpan === 1 && colSpan === 1) ? {
        display: 'inline-block',
        width: gapLeft ? 'calc(' + newColSpan / totalSpan * 100 + '% - ' + gapLeft + 'px)' : newColSpan / totalSpan * 100 + '%'
    } : {};

    return (0, _util.filterUndefinedValue)((0, _extends3.default)({
        gridRowStart: row,
        gridRowEnd: 'span ' + rowSpan,
        gridColumnStart: col,
        gridColumnEnd: 'span ' + newColSpan
    }, ieChildFix));
};

var getBoxChildProps = function getBoxChildProps(props) {
    var alignSelf = props.alignSelf,
        flex = props.flex;

    return (0, _util.filterUndefinedValue)((0, _extends3.default)({
        alignSelf: alignSelf
    }, getFlexs(flex)));
};

exports.default = function (_ref2) {
    var device = _ref2.device,
        display = _ref2.display,
        gap = _ref2.gap,
        direction = _ref2.direction,
        dense = _ref2.dense,
        rowSpan = _ref2.rowSpan,
        colSpan = _ref2.colSpan,
        row = _ref2.row,
        col = _ref2.col,
        rows = _ref2.rows,
        columns = _ref2.columns,
        justify = _ref2.justify,
        align = _ref2.align,
        alignSelf = _ref2.alignSelf,
        wrap = _ref2.wrap,
        flex = _ref2.flex,
        padding = _ref2.padding,
        margin = _ref2.margin;

    var style = (0, _extends3.default)({}, getPadding(padding));

    var deviceColumns = 'auto';

    switch (device) {
        case 'phone':
            deviceColumns = 4;
            break;
        case 'tablet':
            deviceColumns = 8;
            break;
        case 'desktop':
            deviceColumns = 12;
            break;
        default:
            break;
    }
    var newColumns = !isNaN(columns) || typeof columns === 'string' ? columns : deviceColumns;

    switch (display) {
        case 'grid':
            style = (0, _extends3.default)({}, getGridGap(gap), {
                gridTemplateRows: getTemplateCount(rows),
                gridTemplateColumns: getTemplateCount(newColumns),
                gridAutoFlow: '' + (direction || '') + (dense && ' dense')
            }, getGridChildProps({
                row: row,
                rowSpan: rowSpan,
                col: col,
                colSpan: colSpan
                // justifySelf,
                // alignSelf,
            }, device), style);
            break;
        case 'flex':
            style = (0, _extends3.default)({
                // parent
                msFlexDirection: direction,
                flexDirection: direction,
                msFlexWrap: wrap ? 'wrap' : 'none',
                flexWrap: wrap ? 'wrap' : 'nowrap',
                msFlexPack: justify,
                justifyContent: justify,
                msFlexAlign: align,
                alignItems: align
            }, getMargin(margin), getBoxChildProps({
                alignSelf: alignSelf,
                flex: flex
            }), style);
            break;
        default:
            break;
    }

    // return prefix(style);
    return (0, _util.filterUndefinedValue)(style);
};

exports.getMargin = getMargin;
exports.getChildMargin = getChildMargin;
exports.getSpacingMargin = getSpacingMargin;
exports.getSpacingHelperMargin = getSpacingHelperMargin;
exports.filterInnerStyle = filterInnerStyle;
exports.filterOuterStyle = filterOuterStyle;
exports.filterHelperStyle = filterHelperStyle;
exports.getGridChildProps = getGridChildProps;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var row_1 = tslib_1.__importDefault(__webpack_require__(352));
var col_1 = tslib_1.__importDefault(__webpack_require__(353));
var Grid = {
    Row: config_provider_1.default.config(row_1.default, {
        transform: /* istanbul ignore next */function transform(props, deprecated) {
            if ('type' in props) {
                deprecated('type', 'fixed | wrap | gutter', 'Row');
                var type = props.type,
                    others = tslib_1.__rest(props, ["type"]);
                var types = Array.isArray(type) ? type : [type];
                var fixed = void 0;
                if (types.indexOf('fixed') > -1) {
                    fixed = true;
                }
                var wrap = void 0;
                if (types.indexOf('wrap') > -1) {
                    wrap = true;
                }
                props = tslib_1.__assign({ fixed: fixed, wrap: wrap }, others);
            }
            return props;
        }
    }),
    Col: config_provider_1.default.config(col_1.default)
};
exports.default = Grid;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Form.Error
 * @description 自定义错误展示
 * @order 4
 */
var Error = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Error, _React$Component);

    function Error() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Error);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.itemRender = function (errors) {
            return errors.length ? errors : null;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Error.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            children = _props.children,
            name = _props.name,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            _field = _props.field,
            preferMarginToDisplayHelp = _props.preferMarginToDisplayHelp,
            others = (0, _objectWithoutProperties3.default)(_props, ['children', 'name', 'prefix', 'style', 'className', 'field', 'preferMarginToDisplayHelp']);

        if (children && typeof children !== 'function') {
            return _react2.default.createElement('div', { className: prefix + 'form-item-help' }, children, !!preferMarginToDisplayHelp && _react2.default.createElement('div', { className: prefix + 'form-item-help-margin-offset' }));
        }

        var field = this.context._formField || _field;

        if (!field || !name) {
            return null;
        }

        var isSingle = typeof name === 'string';

        var names = isSingle ? [name] : name;
        var errorArr = [];

        if (names.length) {
            var errors = field.getErrors(names);
            Object.keys(errors).forEach(function (key) {
                if (errors[key]) {
                    errorArr.push(errors[key]);
                }
            });
        }

        var result = null;
        if (typeof children === 'function') {
            result = children(errorArr, isSingle ? field.getState(name) : undefined);
        } else {
            result = this.itemRender(errorArr);
        }

        if (!result) {
            return null;
        }

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'form-item-help'] = true, _classNames[className] = className, _classNames));

        return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: cls, style: style }), result, !!preferMarginToDisplayHelp && _react2.default.createElement('div', { className: prefix + 'form-item-help-margin-offset' }));
    };

    return Error;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 表单名
     */
    name: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _propTypes2.default.object,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string,
    /**
     * 自定义错误渲染, 可以是 node 或者 function(errors, state)
     */
    children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    prefix: _propTypes2.default.string,
    preferMarginToDisplayHelp: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    preferMarginToDisplayHelp: false
}, _class.contextTypes = {
    _formField: _propTypes2.default.object
}, _class._typeMark = 'form_error', _temp2);
Error.displayName = 'Error';
exports.default = _configProvider2.default.config(Error);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var Search_1 = tslib_1.__importDefault(__webpack_require__(383));
exports.default = config_provider_1.default.config(Search_1.default, {
    transform: function transform(props, deprecated) {
        var onInputFocus = props.onInputFocus,
            overlayVisible = props.overlayVisible,
            combox = props.combox,
            others = tslib_1.__rest(props, ["onInputFocus", "overlayVisible", "combox"]);
        var newprops = others;
        if (onInputFocus) {
            deprecated('onInputFocus', 'onFocus', 'Search');
            newprops.onFocus = onInputFocus;
        }
        if ('overlayVisible' in props) {
            deprecated('overlayVisible', 'visible', 'Search');
            newprops.visible = overlayVisible;
        }
        if (combox) {
            deprecated('combox', 'popupContent', 'Search');
            newprops.popupContent = combox;
        }
        return newprops;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getTrackLeft = exports.getTrackAnimateCSS = exports.getTrackCSS = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
    return keysArray.reduce(function (value, key) {
        return value && spec.hasOwnProperty(key);
    }, true) ? null : console.error('Keys Missing', spec); /*eslint no-console:0*/
};

var getTrackCSS = exports.getTrackCSS = function getTrackCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);

    var trackWidth = void 0;
    var trackHeight = void 0;

    var trackChildren = spec.slideCount + 2 * spec.slidesToShow;

    if (!spec.vertical) {
        if (spec.variableWidth) {
            trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
        } else if (spec.centerMode) {
            trackWidth = (spec.slideCount + 2 * (spec.slidesToShow + 1)) * spec.slideWidth;
        } else {
            trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
        }
    } else {
        trackHeight = trackChildren * spec.slideHeight;
    }

    var style = {
        opacity: 1
    };

    var transform = {
        WebkitTransform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
        transform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
        transition: '',
        WebkitTransition: '',
        msTransform: !spec.vertical ? 'translateX(' + spec.left + 'px)' : 'translateY(' + spec.left + 'px)'
    };

    if (trackWidth) {
        style = (0, _extends3.default)({}, style, { width: trackWidth });
    }

    if (trackHeight) {
        style = (0, _extends3.default)({}, style, { height: trackHeight });
    }

    if (spec.animation !== 'fade') {
        style = (0, _extends3.default)({}, style, transform);
    }

    return style;
};

var getTrackAnimateCSS = exports.getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);

    var style = getTrackCSS(spec);
    // useCSS is true by default so it can be undefined
    style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;
    style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;
    return style;
};

var getTrackLeft = exports.getTrackLeft = function getTrackLeft(spec) {
    checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth', 'slideHeight']);

    var slideOffset = 0;
    var targetLeft = void 0;
    var targetSlide = void 0;
    var verticalOffset = 0;

    if (spec.animation === 'fade') {
        return 0;
    }

    if (spec.infinite) {
        if (spec.slideCount > spec.slidesToShow) {
            slideOffset = spec.slideWidth * spec.slidesToShow * -1;
            verticalOffset = spec.slideHeight * spec.slidesToShow * -1;
        }
        if (spec.slideCount % spec.slidesToScroll !== 0) {
            var condition = spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow;

            if (spec.rtl) {
                var slideIndex = spec.slideIndex >= spec.slideCount ? spec.slideCount - spec.slideIndex : spec.slideIndex;
                condition = slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow;
            }
            if (condition) {
                if (spec.slideIndex > spec.slideCount) {
                    slideOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideWidth * -1;
                    verticalOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideHeight * -1;
                } else {
                    slideOffset = spec.slideCount % spec.slidesToScroll * spec.slideWidth * -1;
                    verticalOffset = spec.slideCount % spec.slidesToScroll * spec.slideHeight * -1;
                }
            }
        }
    } else {
        /* eslint-disable no-lonely-if */
        if (spec.slideCount % spec.slidesToScroll !== 0) {
            if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {
                var slidesToOffset = spec.slidesToShow - spec.slideCount % spec.slidesToScroll;
                slideOffset = slidesToOffset * spec.slideWidth;
            }
        }
    }

    if (spec.centerMode) {
        if (spec.infinite) {
            slideOffset += spec.slideWidth * Math.floor(spec.slidesToShow / 2);
        } else {
            slideOffset = spec.slideWidth * Math.floor(spec.slidesToShow / 2);
        }
    }

    if (!spec.vertical) {
        targetLeft = spec.slideIndex * spec.slideWidth * -1 + slideOffset;
    } else {
        targetLeft = spec.slideIndex * spec.slideHeight * -1 + verticalOffset;
        if (spec.adaptiveHeight) {
            var index = spec.infinite ? spec.slideIndex + 1 : spec.slideIndex;
            var newHeight = spec.slideHeightList.slice(0, index).reduce(function (accumulator, currentValue) {
                return accumulator + currentValue;
            }, 0);
            targetLeft = newHeight * -1;
        }
    }

    if (spec.variableWidth === true) {
        var targetSlideIndex = void 0;
        if (spec.slideCount <= spec.slidesToShow || spec.infinite === false) {
            targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).childNodes[spec.slideIndex];
        } else {
            targetSlideIndex = spec.slideIndex + spec.slidesToShow;
            targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).childNodes[targetSlideIndex];
        }
        targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
        if (spec.centerMode === true) {
            if (spec.infinite === false) {
                targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).children[spec.slideIndex];
            } else {
                targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).children[spec.slideIndex + spec.slidesToShow + 1];
            }

            if (targetSlide) {
                targetLeft = targetSlide.offsetLeft * -1 + (spec.listWidth - targetSlide.offsetWidth) / 2;
            }
        }
    }

    return targetLeft;
};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.triggerEvents = undefined;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

exports.getOffsetWH = getOffsetWH;
exports.getOffsetLT = getOffsetLT;
exports.isTransformSupported = isTransformSupported;
exports.toArray = toArray;
exports.tabsArrayShallowEqual = tabsArrayShallowEqual;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var triggerEvents = exports.triggerEvents = {
    CLICK: 'click',
    HOVER: 'hover'
};

function getOffsetWH(node, tabPosition) {
    var prop = 'width';
    if (tabPosition === 'left' || tabPosition === 'right') {
        prop = 'height';
    }
    return node ? node.getBoundingClientRect()[prop] : 0;
}

function getOffsetLT(node, tabPosition) {
    var prop = 'left';
    if (tabPosition === 'left' || tabPosition === 'right') {
        prop = 'top';
    }
    return node.getBoundingClientRect()[prop];
}

function isTransformSupported(style) {
    return 'transform' in style || 'webkitTransform' in style || 'MozTransform' in style;
}

function toArray(children) {
    var ret = [];
    _react2.default.Children.forEach(children, function (child, index) {
        if (_react2.default.isValidElement(child)) {
            ret.push(_react2.default.cloneElement(child, {
                key: child.key || index,
                title: child.props.title || child.props.tab
            }));
        }
    });
    return ret;
}

/**
 * tab数组浅比较
 * @param  {Array} arrA   更新后的数组
 * @param  {Array} arrB   原数组
 * @return {Boolean}      数组浅比较是否相等
 * @example
 * arr.tabsArrayShallowEqual(['2','3','4'], ['2','5','4']); // false
 */

function tabsArrayShallowEqual(arrA, arrB) {
    // 相同地址的返回true，不需要更新数据（更新数据的基础是props数据与当前获取的值不同）
    if (arrA === arrB) {
        return true;
    }

    // 判断：调用的值/是否为数组/数组的长度
    if (!arrA || !arrB || (typeof arrA === 'undefined' ? 'undefined' : (0, _typeof3.default)(arrA)) + (typeof arrB === 'undefined' ? 'undefined' : (0, _typeof3.default)(arrB)) !== 'objectobject' || arrA.length !== arrB.length) {
        return false;
    }

    // 判断tabs的key与title是否更改
    for (var i = 0; i < arrA.length; i++) {
        if (arrA[i].key !== arrB[i].key || arrA[i].props.title !== arrB[i].props.title) {
            return false;
        }
    }
    return true;
}

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _filter = __webpack_require__(180);

var _filter2 = _interopRequireDefault(_filter);

var _sort = __webpack_require__(181);

var _sort2 = _interopRequireDefault(_sort);

var _cell = __webpack_require__(64);

var _cell2 = _interopRequireDefault(_cell);

var _resize = __webpack_require__(413);

var _resize2 = _interopRequireDefault(_resize);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};
var Header = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Header, _React$Component);

    function Header() {
        (0, _classCallCheck3.default)(this, Header);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));

        _this.checkHasLock = function () {
            var columns = _this.props.columns;

            var hasLock = false;
            for (var i = 0; i < columns.length; i++) {
                var cols = columns[i];
                for (var j = 0; j < cols.length; j++) {
                    var col = cols[j];
                    if (col.lock) {
                        hasLock = true;
                        break;
                    }
                }
                if (hasLock) {
                    break;
                }
            }
            _this.hasLock = hasLock;
        };

        _this.getCellRef = function (i, j, cell) {
            _this.props.headerCellRef(i, j, cell);

            var columns = _this.props.columns;

            var columnProps = columns[i] && columns[i][j];
            if (columnProps && columnProps.ref && typeof columnProps.ref === 'function') {
                columnProps.ref(cell);
            }
        };

        _this.createCellDomRef = function (i, j) {
            var cellRefKey = _this.getCellDomRefKey(i, j);
            if (!_this[cellRefKey]) {
                _this[cellRefKey] = {};
            }

            return _this[cellRefKey];
        };

        _this.getCellDomRef = function (cellRef, cellDom) {
            if (!cellRef) {
                return;
            }

            cellRef.current = cellDom;
        };

        _this.getCellDomRefKey = function (i, j) {
            return 'header_cell_' + i + '_' + j;
        };

        _this.onSort = function (dataIndex, order, sort) {
            _this.props.onSort(dataIndex, order, sort);
        };

        _this.hasLock = false;
        return _this;
    }

    Header.prototype.render = function render() {
        var _this2 = this;

        /*eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            children = _props.children,
            Tag = _props.component,
            colGroup = _props.colGroup,
            columns = _props.columns,
            locale = _props.locale,
            filterParams = _props.filterParams,
            onFilter = _props.onFilter,
            components = _props.components,
            affixRef = _props.affixRef,
            headerCellRef = _props.headerCellRef,
            onSort = _props.onSort,
            sort = _props.sort,
            sortIcons = _props.sortIcons,
            onResizeChange = _props.onResizeChange,
            pure = _props.pure,
            rtl = _props.rtl,
            tableWidth = _props.tableWidth,
            tableEl = _props.tableEl,
            resizeProxyDomRef = _props.resizeProxyDomRef,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'children', 'component', 'colGroup', 'columns', 'locale', 'filterParams', 'onFilter', 'components', 'affixRef', 'headerCellRef', 'onSort', 'sort', 'sortIcons', 'onResizeChange', 'pure', 'rtl', 'tableWidth', 'tableEl', 'resizeProxyDomRef']);

        this.checkHasLock();

        var _components$Cell = components.Cell,
            Cell = _components$Cell === undefined ? _cell2.default : _components$Cell,
            _components$Filter = components.Filter,
            Filter = _components$Filter === undefined ? _filter2.default : _components$Filter,
            _components$Sort = components.Sort,
            Sort = _components$Sort === undefined ? _sort2.default : _components$Sort,
            _components$Resize = components.Resize,
            Resize = _components$Resize === undefined ? _resize2.default : _components$Resize;

        var rowSpan = columns.length;

        var header = columns.map(function (cols, index) {
            var col = cols.map(function (col, j) {
                var _classnames;

                var cellRef = _this2.createCellDomRef(index, j);
                /* eslint-disable no-unused-vars, prefer-const */
                var title = col.title,
                    colSpan = col.colSpan,
                    sortable = col.sortable,
                    sortDirections = col.sortDirections,
                    resizable = col.resizable,
                    asyncResizable = col.asyncResizable,
                    dataIndex = col.dataIndex,
                    filters = col.filters,
                    filterMode = col.filterMode,
                    filterMenuProps = col.filterMenuProps,
                    filterProps = col.filterProps,
                    width = col.width,
                    align = col.align,
                    alignHeader = col.alignHeader,
                    className = col.className,
                    __normalized = col.__normalized,
                    lock = col.lock,
                    cellStyle = col.cellStyle,
                    wordBreak = col.wordBreak,
                    others = (0, _objectWithoutProperties3.default)(col, ['title', 'colSpan', 'sortable', 'sortDirections', 'resizable', 'asyncResizable', 'dataIndex', 'filters', 'filterMode', 'filterMenuProps', 'filterProps', 'width', 'align', 'alignHeader', 'className', '__normalized', 'lock', 'cellStyle', 'wordBreak']);

                var order = sort ? sort[dataIndex] : '';
                className = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-header-node'] = true, _classnames[prefix + 'table-header-resizable'] = resizable || asyncResizable, _classnames[prefix + 'table-word-break-' + wordBreak] = !!wordBreak, _classnames[prefix + 'table-header-sort-' + order] = sortable && order, _classnames[className] = className, _classnames));
                var attrs = {},
                    sortElement = void 0,
                    filterElement = void 0,
                    resizeElement = void 0;

                attrs.colSpan = colSpan;

                // column.group doesn't have sort resize filter
                if (!(col.children && col.children.length)) {
                    if (sortable) {
                        sortElement = _react2.default.createElement(Sort, {
                            prefix: prefix,
                            className: prefix + 'table-header-icon',
                            dataIndex: dataIndex,
                            onSort: _this2.onSort,
                            sortDirections: sortDirections,
                            sortIcons: sortIcons,
                            sort: sort,
                            rtl: rtl,
                            locale: locale
                        });
                    }
                    if (asyncResizable || resizable) {
                        resizeElement = _react2.default.createElement(Resize, {
                            asyncResizable: asyncResizable,
                            hasLock: _this2.hasLock,
                            col: col,
                            tableEl: tableEl,
                            prefix: prefix,
                            rtl: rtl,
                            dataIndex: dataIndex,
                            resizeProxyDomRef: resizeProxyDomRef,
                            cellDomRef: cellRef,
                            onChange: onResizeChange
                        });
                    }

                    if (filters) {
                        filterElement = filters.length ? _react2.default.createElement(Filter, {
                            dataIndex: dataIndex,
                            className: prefix + 'table-header-icon',
                            filters: filters,
                            prefix: prefix,
                            locale: locale,
                            rtl: rtl,
                            filterParams: filterParams,
                            filterMode: filterMode,
                            filterMenuProps: filterMenuProps,
                            filterProps: filterProps,
                            onFilter: onFilter
                        }) : null;
                    }
                    attrs.rowSpan = rowSpan - index;
                }

                if (+attrs.colSpan === 0) {
                    return null;
                }

                return _react2.default.createElement(Cell, (0, _extends3.default)({}, others, attrs, {
                    key: j,
                    prefix: prefix,
                    pure: pure,
                    rtl: rtl,
                    cell: title,
                    component: 'th',
                    align: alignHeader ? alignHeader : align,
                    className: className,
                    ref: _this2.getCellRef.bind(_this2, index, j),
                    getCellDomRef: _this2.getCellDomRef.bind(_this2, cellRef),
                    type: 'header'
                }), sortElement, filterElement, resizeElement);
            });
            return _react2.default.createElement('tr', { key: index }, col);
        });

        return _react2.default.createElement(Tag, (0, _extends3.default)({ className: className }, others), header, children);
    };

    return Header;
}(_react2.default.Component), _class.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    component: _propTypes2.default.string,
    columns: _propTypes2.default.array,
    colGroup: _propTypes2.default.object,
    headerCellRef: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    filterParams: _propTypes2.default.object,
    onFilter: _propTypes2.default.func,
    components: _propTypes2.default.object,
    sort: _propTypes2.default.object,
    sortIcons: _propTypes2.default.object,
    onSort: _propTypes2.default.func,
    onResizeChange: _propTypes2.default.func,
    tableWidth: _propTypes2.default.number,
    tableEl: _propTypes2.default.any
}, _class.defaultProps = {
    component: 'thead',
    columns: [],
    headerCellRef: noop,
    onFilter: noop,
    components: {},
    onSort: noop,
    onResizeChange: noop
}, _temp);
Header.displayName = 'Header';
exports.default = Header;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames4 = __webpack_require__(7);

var _classnames5 = _interopRequireDefault(_classnames4);

var _dropdown = __webpack_require__(47);

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

// 共享状态的组件需要变成非受控组件
var Filter = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Filter, _React$Component);

    function Filter(props) {
        (0, _classCallCheck3.default)(this, Filter);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        var filterParams = props.filterParams || {};
        var filterConfig = filterParams[props.dataIndex] || {};
        _this.state = {
            visible: filterConfig.visible || false,
            selectedKeys: filterConfig.selectedKeys || [],
            selectedKeysChangedByInner: true
        };
        _this._selectedKeys = [].concat(_this.state.selectedKeys);
        return _this;
    }

    Filter.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};
        if (nextProps.hasOwnProperty('filterParams') && typeof nextProps.filterParams !== 'undefined') {
            var dataIndex = nextProps.dataIndex || this.props.dataIndex;
            var filterParams = nextProps.filterParams || {};
            var filterConfig = filterParams[dataIndex] || {};
            var selectedKeys = void 0;
            if (prevState.selectedKeysChangedByInner) {
                selectedKeys = prevState.selectedKeys || [];
                state.selectedKeysChangedByInner = false;
            } else {
                selectedKeys = filterConfig.selectedKeys || [];
            }

            state.selectedKeys = selectedKeys;
        }

        return state;
    };

    Filter.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var selectedKeys = prevState.selectedKeys;

        this._selectedKeys = [].concat(selectedKeys);
    };

    Filter.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props = this.props,
            filters = _props.filters,
            prefix = _props.prefix,
            locale = _props.locale,
            className = _props.className,
            filterMode = _props.filterMode,
            filterMenuProps = _props.filterMenuProps,
            filterProps = _props.filterProps,
            rtl = _props.rtl;

        var dropdownClassname = (0, _classnames5.default)(filterProps && filterProps.className, (_classnames = {}, _classnames[prefix + 'table-filter-menu'] = true, _classnames));
        var _state = this.state,
            visible = _state.visible,
            selectedKeys = _state.selectedKeys;

        var _ref = filterMenuProps || {},
            subMenuSelectable = _ref.subMenuSelectable,
            others = (0, _objectWithoutProperties3.default)(_ref, ['subMenuSelectable']);

        function renderMenuItem(item) {
            return _react2.default.createElement(_menu2.default.Item, { key: item.value }, item.label);
        }

        function renderSubMenu(parent, children) {
            return _react2.default.createElement(_menu2.default.SubMenu, { label: parent.label, key: parent.value, selectable: subMenuSelectable }, renderMenuContent(children));
        }

        function renderMenuContent(list) {
            return list.map(function (item) {
                if (item.children) {
                    return renderSubMenu(item, item.children);
                } else {
                    return renderMenuItem(item);
                }
            });
        }

        var content = renderMenuContent(filters),
            footer = _react2.default.createElement('div', { className: prefix + 'table-filter-footer' }, _react2.default.createElement(_button2.default, { type: 'primary', onClick: this.onFilterConfirm }, locale.ok), _react2.default.createElement(_button2.default, { onClick: this.onFilterClear }, locale.reset));

        var cls = (0, _classnames5.default)((_classnames2 = {}, _classnames2[prefix + 'table-filter'] = true, _classnames2[className] = className, _classnames2));

        var filterIconCls = (0, _classnames5.default)((_classnames3 = {}, _classnames3[prefix + 'table-filter-active'] = selectedKeys && selectedKeys.length > 0, _classnames3));

        return _react2.default.createElement(_dropdown2.default, (0, _extends3.default)({
            trigger: _react2.default.createElement('span', {
                role: 'button',
                'aria-label': locale.filter,
                onKeyDown: this.filterKeydown,
                tabIndex: '0',
                className: cls
            }, _react2.default.createElement(_icon2.default, { type: 'filter', size: 'small', className: filterIconCls })),
            triggerType: 'click',
            visible: visible,
            autoFocus: true,
            rtl: rtl,
            needAdjust: false,
            onVisibleChange: this.onFilterVisible,
            className: dropdownClassname
        }, filterProps), _react2.default.createElement(_menu2.default, (0, _extends3.default)({
            footer: footer,
            rtl: rtl,
            selectedKeys: selectedKeys,
            selectMode: filterMode,
            onSelect: this.onFilterSelect
        }, others), content));
    };

    return Filter;
}(_react2.default.Component), _class.propTypes = {
    dataIndex: _propTypes2.default.string,
    filters: _propTypes2.default.array,
    filterMode: _propTypes2.default.string,
    filterParams: _propTypes2.default.object,
    filterMenuProps: _propTypes2.default.object,
    filterProps: _propTypes2.default.object,
    locale: _propTypes2.default.object,
    onFilter: _propTypes2.default.func,
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    onFilter: function onFilter() {}
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.filterKeydown = function (e) {
        e.preventDefault();
        e.stopPropagation();

        if (e.keyCode === _util.KEYCODE.ENTER) {
            _this2.setState({
                visible: !_this2.state.visible
            });
        }
    };

    this.onFilterVisible = function (visible) {
        _this2.setState({
            visible: visible
        });

        if (!visible) {
            var selectedKeys = [].concat(_this2._selectedKeys);

            _this2.setState({
                selectedKeysChangedByInner: true,
                selectedKeys: selectedKeys
            });
        }
    };

    this.onFilterSelect = function (selectedKeys) {
        _this2.setState({
            visible: true,
            selectedKeysChangedByInner: true,
            selectedKeys: selectedKeys
        });
    };

    this.onFilterConfirm = function () {
        var selectedKeys = _this2.state.selectedKeys;
        var filterParams = {},
            dataIndex = _this2.props.dataIndex;

        filterParams[dataIndex] = {
            visible: false,
            selectedKeys: selectedKeys
        };
        _this2._selectedKeys = [].concat(selectedKeys);
        _this2.setState({
            visible: false,
            selectedKeysChangedByInner: true
        });
        // 兼容之前的格式
        _this2.props.onFilter(filterParams);
    };

    this.onFilterClear = function () {
        var filterParams = {},
            dataIndex = _this2.props.dataIndex;

        filterParams[dataIndex] = {
            visible: false,
            selectedKeys: []
        };
        _this2._selectedKeys = [];
        _this2.setState({
            selectedKeys: [],
            visible: false,
            selectedKeysChangedByInner: true
        });
        // 兼容之前的格式
        _this2.props.onFilter(filterParams);
    };
}, _temp);
Filter.displayName = 'Filter';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Filter);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var Sort = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Sort, _React$Component);

    function Sort() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Sort);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                sort = _this$props.sort,
                dataIndex = _this$props.dataIndex,
                sortDirections = _this$props.sortDirections;

            var nextSortType = '';

            sortDirections.forEach(function (dir, i) {
                if (sort[dataIndex] === dir) {
                    nextSortType = sortDirections.length - 1 > i ? sortDirections[i + 1] : sortDirections[0];
                }
            });

            if (!sort[dataIndex]) {
                nextSortType = sortDirections[0];
            }

            _this.onSort(dataIndex, nextSortType);
        }, _this.keydownHandler = function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (e.keyCode === _util.KEYCODE.ENTER) {
                _this.handleClick();
            }
        }, _this.onSort = function (dataIndex, order) {
            var sort = {};
            sort[dataIndex] = order;

            _this.props.onSort(dataIndex, order, sort);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    // 渲染排序
    Sort.prototype.renderSort = function renderSort() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            sort = _props.sort,
            sortIcons = _props.sortIcons,
            className = _props.className,
            dataIndex = _props.dataIndex,
            locale = _props.locale,
            sortDirections = _props.sortDirections,
            rtl = _props.rtl,
            sortStatus = sort[dataIndex],
            map = {
            desc: 'descending',
            asc: 'ascending'
        };

        var icons = sortDirections.map(function (sortOrder) {
            return sortOrder === 'default' ? null : _react2.default.createElement('a', { key: sortOrder, className: sortStatus === sortOrder ? 'current' : '' }, sortIcons ? sortIcons[sortOrder] : _react2.default.createElement(_icon2.default, { rtl: rtl, type: map[sortOrder], size: 'xs' }));
        });

        var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-sort'] = true, _classnames[className] = className, _classnames));

        return _react2.default.createElement('span', {
            role: 'button',
            tabIndex: '0',
            'aria-label': locale[sortStatus],
            className: cls,
            onClick: this.handleClick.bind(this),
            onKeyDown: this.keydownHandler
        }, icons);
    };

    Sort.prototype.render = function render() {
        return this.renderSort();
    };

    return Sort;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    sort: _propTypes2.default.object,
    sortIcons: _propTypes2.default.object,
    onSort: _propTypes2.default.func,
    sortDirections: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['desc', 'asc', 'default'])),
    dataIndex: _propTypes2.default.string,
    locale: _propTypes2.default.object
}, _class.defaultProps = {
    sort: {},
    sortDirections: ['desc', 'asc']
}, _temp2);
Sort.displayName = 'Sort';
exports.default = Sort;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _row = __webpack_require__(183);

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var SelectionRow = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(SelectionRow, _React$Component);

    function SelectionRow() {
        (0, _classCallCheck3.default)(this, SelectionRow);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    SelectionRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            className = _props.className,
            record = _props.record,
            primaryKey = _props.primaryKey;
        var selectedRowKeys = this.context.selectedRowKeys;

        var cls = (0, _classnames3.default)((_classnames = {
            selected: selectedRowKeys.indexOf(record[primaryKey]) > -1
        }, _classnames[className] = className, _classnames));
        return _react2.default.createElement(_row2.default, (0, _extends3.default)({}, this.props, { className: cls }));
    };

    return SelectionRow;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _row2.default.propTypes), _class.defaultProps = (0, _extends3.default)({}, _row2.default.defaultProps), _class.contextTypes = {
    selectedRowKeys: _propTypes2.default.array
}, _temp);
SelectionRow.displayName = 'SelectionRow';
exports.default = SelectionRow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _row = __webpack_require__(102);

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var ExpandedRow = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(ExpandedRow, _React$Component);

    function ExpandedRow() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, ExpandedRow);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getExpandedRow = function (parentKey, ref) {
            var getExpandedRowRef = _this.context.getExpandedRowRef;

            getExpandedRowRef && getExpandedRowRef(parentKey, ref);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    ExpandedRow.prototype.renderExpandedRow = function renderExpandedRow(record, rowIndex) {
        var _context = this.context,
            expandedRowRender = _context.expandedRowRender,
            expandedRowIndent = _context.expandedRowIndent,
            openRowKeys = _context.openRowKeys,
            lockType = _context.lockType,
            expandedIndexSimulate = _context.expandedIndexSimulate,
            expandedRowWidthEquals2Table = _context.expandedRowWidthEquals2Table;

        var expandedIndex = expandedIndexSimulate ? (rowIndex - 1) / 2 : rowIndex;

        var _props = this.props,
            columns = _props.columns,
            cellRef = _props.cellRef;

        var colSpan = columns.length;
        var expandedCols = columns[0] && columns[0].__colIndex || 0;

        if (expandedRowRender) {
            var _props2 = this.props,
                primaryKey = _props2.primaryKey,
                prefix = _props2.prefix,
                leftIndent = expandedRowIndent[0],
                rightIndent = expandedRowIndent[1],
                totalIndent = leftIndent + rightIndent,
                renderCols = function renderCols(number) {
                var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

                var ret = [];

                var _loop = function _loop(i) {
                    ret.push(_react2.default.createElement('td', { key: i, ref: function ref(cell) {
                            return cellRef(rowIndex, i + start, cell);
                        } }, '\xA0'));
                };

                for (var i = 0; i < number; i++) {
                    _loop(i);
                }
                return ret;
            };

            var content = void 0;

            if (totalIndent > colSpan && !lockType) {
                _util.log.warning("It's not allowed expandedRowIndent is more than the number of columns.");
            }
            if (leftIndent < columns.length && lockType === 'left') {
                _util.log.warning('expandedRowIndent left is less than the number of left lock columns.');
            }
            if (rightIndent < columns.length && lockType === 'right') {
                _util.log.warning('expandedRowIndent right is less than the number of right lock columns.');
            }
            if (lockType) {
                return openRowKeys.indexOf(record[primaryKey]) > -1 ? _react2.default.createElement('tr', { className: prefix + 'table-expanded-row', key: 'expanded-' + expandedIndex }, _react2.default.createElement('td', { colSpan: colSpan, ref: function ref(cell) {
                        return cellRef(rowIndex, expandedCols, cell);
                    } }, '\xA0')) : null;
            }

            var expandedRowStyle = {
                position: 'sticky',
                left: 0
            };
            // 暴露给用户的index
            content = expandedRowRender(record, expandedIndex);
            if (!_react2.default.isValidElement(content)) {
                content = _react2.default.createElement('div', {
                    className: prefix + 'table-cell-wrapper',
                    ref: this.getExpandedRow.bind(this, record[primaryKey]),
                    style: expandedRowWidthEquals2Table && expandedRowStyle
                }, content);
            } else {
                content = expandedRowWidthEquals2Table ? _react2.default.createElement('div', {
                    className: prefix + 'table-expanded-area',
                    ref: this.getExpandedRow.bind(this, record[primaryKey]),
                    style: expandedRowStyle
                }, content) : content;
            }

            var rightStart = columns.length;
            columns.forEach(function (col) {
                col.lock === 'right' && rightStart--;
            });
            return openRowKeys.indexOf(record[primaryKey]) > -1 ? _react2.default.createElement('tr', { className: prefix + 'table-expanded-row', key: 'expanded-' + (record[primaryKey] || expandedIndex) }, renderCols(leftIndent), _react2.default.createElement('td', { colSpan: colSpan - totalIndent }, content), renderCols(rightIndent, rightStart)) : null;
        } else {
            return null;
        }
    };

    ExpandedRow.prototype.render = function render() {
        /* eslint-disable no-unused-vars*/
        var _props3 = this.props,
            record = _props3.record,
            rowIndex = _props3.rowIndex,
            columns = _props3.columns,
            others = (0, _objectWithoutProperties3.default)(_props3, ['record', 'rowIndex', 'columns']);
        var expandedIndexSimulate = this.context.expandedIndexSimulate;

        if (record.__expanded) {
            return this.renderExpandedRow(record, rowIndex, columns);
        }

        var newRowIndex = expandedIndexSimulate ? rowIndex / 2 : rowIndex;
        return _react2.default.createElement(_row2.default, (0, _extends3.default)({}, others, { record: record, columns: columns, __rowIndex: rowIndex, rowIndex: newRowIndex }));
    };

    return ExpandedRow;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _row2.default.propTypes), _class.defaultProps = (0, _extends3.default)({}, _row2.default.defaultProps), _class.contextTypes = {
    openRowKeys: _propTypes2.default.array,
    expandedRowRender: _propTypes2.default.func,
    expandedRowIndent: _propTypes2.default.array,
    expandedIndexSimulate: _propTypes2.default.bool,
    expandedRowWidthEquals2Table: _propTypes2.default.bool,
    lockType: _propTypes2.default.oneOf(['left', 'right']),
    getExpandedRowRef: _propTypes2.default.func
}, _temp2);
ExpandedRow.displayName = 'ExpandedRow';
exports.default = ExpandedRow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _body = __webpack_require__(62);

var _body2 = _interopRequireDefault(_body);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var FixedBody = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(FixedBody, _React$Component);

    function FixedBody() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, FixedBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onBodyScroll = function (event) {
            var onFixedScrollSync = _this.context.onFixedScrollSync;
            // sync scroll left to header

            onFixedScrollSync && onFixedScrollSync(event);

            // sync scroll top/left to lock columns
            if ('onLockScroll' in _this.props && typeof _this.props.onLockScroll === 'function') {
                _this.props.onLockScroll(event);
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    FixedBody.prototype.componentDidMount = function componentDidMount() {
        var getNode = this.context.getNode;

        getNode && getNode('body', (0, _reactDom.findDOMNode)(this));
    };

    FixedBody.prototype.render = function render() {
        /*eslint-disable no-unused-vars */
        var _props = this.props,
            className = _props.className,
            colGroup = _props.colGroup,
            onLockScroll = _props.onLockScroll,
            tableWidth = _props.tableWidth,
            others = (0, _objectWithoutProperties3.default)(_props, ['className', 'colGroup', 'onLockScroll', 'tableWidth']);
        var _context = this.context,
            maxBodyHeight = _context.maxBodyHeight,
            fixedHeader = _context.fixedHeader;

        var style = {};
        if (fixedHeader) {
            style.maxHeight = maxBodyHeight;
            style.position = 'relative';
        }
        return _react2.default.createElement('div', { style: style, className: className, onScroll: this.onBodyScroll }, _react2.default.createElement('table', { style: { width: tableWidth } }, colGroup, _react2.default.createElement(_body2.default, (0, _extends3.default)({}, others, { colGroup: colGroup }))));
    };

    return FixedBody;
}(_react2.default.Component), _class.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.string,
    colGroup: _propTypes2.default.any,
    onLockScroll: _propTypes2.default.func,
    tableWidth: _propTypes2.default.number
}, _class.contextTypes = {
    fixedHeader: _propTypes2.default.bool,
    maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    onFixedScrollSync: _propTypes2.default.func,
    getNode: _propTypes2.default.func
}, _temp2);
FixedBody.displayName = 'FixedBody';
exports.default = FixedBody;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _body = __webpack_require__(184);

var _body2 = _interopRequireDefault(_body);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var LockBody = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(LockBody, _React$Component);

    function LockBody() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, LockBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onBodyScroll = function (event) {
            _this.context.onLockBodyScroll(event);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    LockBody.prototype.componentDidMount = function componentDidMount() {
        this.context.getLockNode('body', (0, _reactDom.findDOMNode)(this), this.context.lockType);
    };

    LockBody.prototype.render = function render() {
        var event = {
            onLockScroll: this.onBodyScroll
        };
        return _react2.default.createElement(_body2.default, (0, _extends3.default)({}, this.props, event));
    };

    return LockBody;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _body2.default.propTypes), _class.contextTypes = (0, _extends3.default)({}, _body2.default.contextTypes, {
    getLockNode: _propTypes2.default.func,
    onLockBodyScroll: _propTypes2.default.func,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}), _temp2);
LockBody.displayName = 'LockBody';
exports.default = LockBody;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _header = __webpack_require__(65);

var _header2 = _interopRequireDefault(_header);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var LockHeader = (_temp = _class = function (_FixedHeader) {
    (0, _inherits3.default)(LockHeader, _FixedHeader);

    function LockHeader() {
        (0, _classCallCheck3.default)(this, LockHeader);
        return (0, _possibleConstructorReturn3.default)(this, _FixedHeader.apply(this, arguments));
    }

    LockHeader.prototype.componentDidMount = function componentDidMount() {
        var _context = this.context,
            getNode = _context.getNode,
            getLockNode = _context.getLockNode;

        getNode && getNode('header', (0, _reactDom.findDOMNode)(this), this.context.lockType);
        getLockNode && getLockNode('header', (0, _reactDom.findDOMNode)(this), this.context.lockType);
    };

    return LockHeader;
}(_header2.default), _class.propTypes = (0, _extends3.default)({}, _header2.default.propTypes), _class.contextTypes = (0, _extends3.default)({}, _header2.default.contextTypes, {
    getLockNode: _propTypes2.default.func,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}), _temp);
exports.default = LockHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Table.GroupHeader
 * @order 2
 **/
var ListHeader = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(ListHeader, _React$Component);

  function ListHeader() {
    (0, _classCallCheck3.default)(this, ListHeader);
    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
  }

  ListHeader.prototype.render = function render() {
    return null;
  };

  return ListHeader;
}(_react2.default.Component), _class.propTypes = {
  /**
   * 行渲染的逻辑
   */
  cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func]),
  /**
   * 是否在Children上面渲染selection
   */
  hasChildrenSelection: _propTypes2.default.bool,
  /**
   * 是否在GroupHeader上面渲染selection
   */
  hasSelection: _propTypes2.default.bool,
  /**
   * 当 dataSouce 里没有 children 时，是否使用内容作为数据
   */
  useFirstLevelDataWhenNoChildren: _propTypes2.default.bool
}, _class.defaultProps = {
  cell: function cell() {
    return '';
  },
  hasSelection: true,
  hasChildrenSelection: false,
  useFirstLevelDataWhenNoChildren: false
}, _class._typeMark = 'listHeader', _temp);
ListHeader.displayName = 'ListHeader';
exports.default = ListHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore file */
/**
 * Table.GroupFooter
 * @order 3
 **/
var ListFooter = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(ListFooter, _React$Component);

    function ListFooter() {
        (0, _classCallCheck3.default)(this, ListFooter);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    ListFooter.prototype.render = function render() {
        return null;
    };

    return ListFooter;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 行渲染的逻辑
     */
    cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func])
}, _class.defaultProps = {
    cell: function cell() {
        return '';
    }
}, _class._typeMark = 'listFooter', _temp);
ListFooter.displayName = 'ListFooter';
exports.default = ListFooter;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var component_1 = __webpack_require__(22);
var tree_1 = tslib_1.__importDefault(__webpack_require__(440));
var tree_node_1 = tslib_1.__importDefault(__webpack_require__(103));
var WithSubTree = (0, component_1.assignSubComponent)(tree_1.default, { Node: tree_node_1.default });
exports.default = config_provider_1.default.config(WithSubTree, {
    exportNames: ['setFocusKey']
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllDescendantKeys = exports.convertChildren2Data = exports.getAllCheckedKeys = exports.isSiblingOrSelf = exports.isDescendantOrSelf = exports.filterParentKey = exports.filterChildKey = exports.getCheckableParentNode = exports.isNodeDisabledChecked = exports.forEachEnableNode = exports.isNodeChecked = exports.normalizeToArray = void 0;
var tslib_1 = __webpack_require__(9);
var tree_node_1 = tslib_1.__importDefault(__webpack_require__(103));
// export function normalizeToArray(keys: undefined | null): [];
// export function normalizeToArray<T>(keys: T[]): T[];
// export function normalizeToArray<T>(keys: T): [T];
function normalizeToArray(keys) {
    if (keys !== undefined && keys !== null) {
        if (Array.isArray(keys)) {
            return tslib_1.__spreadArray([], tslib_1.__read(keys), false);
        }
        return [keys];
    }
    return [];
}
exports.normalizeToArray = normalizeToArray;
function isNodeChecked(node, checkedKeys) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(function (c) {
            return isNodeChecked(c, checkedKeys);
        });
    }
    return checkedKeys.indexOf(node.key) > -1;
}
exports.isNodeChecked = isNodeChecked;
function forEachEnableNode(node, callback) {
    if (callback === void 0) {
        callback = function callback() {};
    }
    if (node.disabled || node.checkboxDisabled) return;
    // eslint-disable-next-line callback-return
    callback(node);
    if (node.children && node.children.length > 0) {
        node.children.forEach(function (child) {
            return forEachEnableNode(child, callback);
        });
    }
}
exports.forEachEnableNode = forEachEnableNode;
function isNodeDisabledChecked(node) {
    if (node.disabled || node.checkboxDisabled) return true;
    /* istanbul ignore next */
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked);
    }
    return false;
}
exports.isNodeDisabledChecked = isNodeDisabledChecked;
function getCheckableParentNode(node, _p2n) {
    var parentPos = node.pos.split('-');
    if (parentPos.length === 2) return node;
    parentPos.splice(parentPos.length - 1, 1);
    parentPos = parentPos.join('-');
    var parentNode = _p2n[parentPos];
    if (parentNode.disabled || parentNode.checkboxDisabled) return false;
    /* istanbul ignore next */
    if (parentNode.checkable === false) {
        return getCheckableParentNode(parentNode, _p2n);
    }
    return parentNode;
}
exports.getCheckableParentNode = getCheckableParentNode;
function filterChildKey(keys, _k2n, _p2n) {
    var newKeys = [];
    keys.forEach(function (key) {
        var node = getCheckableParentNode(_k2n[key], _p2n);
        if (!node || node.checkable === false || node === _k2n[key] || keys.indexOf(node.key) === -1) {
            newKeys.push(key);
        }
    });
    return newKeys;
}
exports.filterChildKey = filterChildKey;
function filterParentKey(keys, _k2n, _p2n) {
    var newKeys = [];
    for (var i = 0; i < keys.length; i++) {
        var node = _k2n[keys[i]];
        if (!node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked)) {
            newKeys.push(keys[i]);
        }
    }
    return newKeys;
}
exports.filterParentKey = filterParentKey;
function isDescendantOrSelf(currentPos, targetPos) {
    if (!currentPos || !targetPos) {
        return false;
    }
    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');
    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}
exports.isDescendantOrSelf = isDescendantOrSelf;
function isSiblingOrSelf(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);
    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}
exports.isSiblingOrSelf = isSiblingOrSelf;
// eslint-disable-next-line max-statements
function getAllCheckedKeys(checkedKeys, _k2n, _p2n) {
    checkedKeys = normalizeToArray(checkedKeys);
    var filteredKeys = checkedKeys.filter(function (key) {
        return !!_k2n[key];
    });
    var flatKeys = tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(filterChildKey(filteredKeys, _k2n, _p2n).filter(function (key) {
        return !(_k2n[key].disabled || _k2n[key].checkboxDisabled);
    })), false), tslib_1.__read(filteredKeys.filter(function (key) {
        return _k2n[key].disabled || _k2n[key].checkboxDisabled;
    })), false);
    var removeKey = function removeKey(child) {
        if (child.disabled || child.checkboxDisabled) return;
        if (child.checkable === false && child.children && child.children.length > 0) {
            return child.children.forEach(removeKey);
        }
        flatKeys.splice(flatKeys.indexOf(child.key), 1);
    };
    var addParentKey = function addParentKey(i, parent) {
        return flatKeys.splice(i, 0, parent.key);
    };
    // 所有 child nodes 选中时，取 parent node，删除所有 child nodes
    var keys = tslib_1.__spreadArray([], tslib_1.__read(flatKeys), false);
    for (var i = 0; i < keys.length; i++) {
        var pos = _k2n[keys[i]].pos;
        var nums = pos.split('-');
        if (nums.length === 2) {
            continue;
        }
        for (var j = nums.length - 2; j > 0; j--) {
            var parentPos = nums.slice(0, j + 1).join('-');
            var parent_1 = _p2n[parentPos];
            if (parent_1.checkable === false || parent_1.disabled || parent_1.checkboxDisabled) continue;
            var parentChecked = parent_1.children.every(function (child) {
                return isNodeChecked(child, flatKeys);
            });
            var isAllChildrenDisabled = parent_1.children.every(function (child) {
                return child.disabled;
            });
            // don't auto select parent when all children are disabled,
            // fix https://github.com/alibaba-fusion/next/issues/3936
            if (parentChecked && !isAllChildrenDisabled) {
                parent_1.children.forEach(removeKey);
                addParentKey(i, parent_1);
            } else {
                break;
            }
        }
    }
    // 重新选中所有 child nodes
    var newKeys = new Set();
    flatKeys.forEach(function (key) {
        if (_k2n[key].disabled || _k2n[key].checkboxDisabled) {
            newKeys.add(key);
            return;
        }
        forEachEnableNode(_k2n[key], function (node) {
            if (node.checkable === false) return;
            newKeys.add(node.key);
        });
    });
    return Array.from(newKeys);
}
exports.getAllCheckedKeys = getAllCheckedKeys;
function convertChildren2Data(children) {
    function convert(nodes) {
        var treeNodes = normalizeToArray(nodes);
        return treeNodes.map(function (node) {
            // @ts-expect-error has target property?
            if (node.type && node.type !== tree_node_1.default && node.type.target !== tree_node_1.default) {
                // 为了兼容之前的实现 保留非法节点
                return {
                    illegalFlag: true,
                    node: node
                };
            }
            var key = node.key;
            var _a = node.props,
                children = _a.children,
                rest = tslib_1.__rest(_a, ["children"]);
            // @ts-expect-error should give key a default value immediately
            var nodeData = tslib_1.__assign({ key: key }, rest);
            if (children && !(Array.isArray(children) && !children.length)) {
                nodeData.children = convert(children);
            }
            return nodeData;
        }).filter(function (treeNodeData) {
            return treeNodeData;
        });
    }
    return convert(children);
}
exports.convertChildren2Data = convertChildren2Data;
function getAllDescendantKeys(nodeData, p2n) {
    var posList = nodeData.pos.split('-');
    var keys = [];
    var pos = posList[0];
    for (var i = 1; i < posList.length - 1; i++) {
        pos = [pos, posList[i]].join('-');
        keys.push(p2n[pos].key);
    }
    return keys;
}
exports.getAllDescendantKeys = getAllDescendantKeys;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

// compatible with 0.x version
/* istanbul ignore next */
var transform = function transform(props, deprecated) {
    var listType = props.listType,
        defaultFileList = props.defaultFileList,
        fileList = props.fileList,
        others = (0, _objectWithoutProperties3.default)(props, ['listType', 'defaultFileList', 'fileList']);

    var newprops = others;

    if (listType === 'text-image') {
        deprecated('listType=text-image', 'listType=image', 'Upload');
        newprops.listType = 'image';
    } else if (listType === 'picture-card') {
        deprecated('listType=picture-card', 'listType=card', 'Upload');
        newprops.listType = 'card';
    } else {
        newprops.listType = listType;
    }

    if ('defaultFileList' in props) {
        deprecated('defaultFileList', 'defaultValue', 'Upload');
        newprops.defaultValue = defaultFileList;
    }

    if ('fileList' in props) {
        deprecated('fileList', 'value', 'Upload');
        newprops.value = fileList;
    }

    return newprops;
};

exports.default = transform;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Base = function (_Component) {
    (0, _inherits3.default)(Base, _Component);

    function Base() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Base);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.saveUploaderRef = function (ref) {
            /* istanbul ignore if */
            if (ref && typeof ref.getInstance === 'function') {
                _this.uploaderRef = ref.getInstance();
            } else {
                _this.uploaderRef = ref;
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    /* istanbul ignore next */
    Base.prototype.abort = function abort(file) {
        /* istanbul ignore next */
        this.uploaderRef.abort(file);
    };
    /* istanbul ignore next */

    Base.prototype.startUpload = function startUpload() {
        /* istanbul ignore next */
        this.uploaderRef.startUpload();
    };

    /* istanbul ignore next */
    Base.prototype.isUploading = function isUploading() {
        /* istanbul ignore next */
        return this.uploaderRef.isUploading();
    };

    return Base;
}(_react.Component);

Base.displayName = 'Base';
exports.default = Base;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _uploader = __webpack_require__(194);

var _uploader2 = _interopRequireDefault(_uploader);

var _selecter = __webpack_require__(105);

var _selecter2 = _interopRequireDefault(_selecter);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Html5Uploader = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(Html5Uploader, _Component);

    function Html5Uploader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Html5Uploader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getUploadOptions = function (props) {
            return {
                action: props.action,
                name: props.name,
                timeout: props.timeout,
                method: props.method,
                beforeUpload: props.beforeUpload,
                onProgress: props.onProgress,
                onSuccess: props.onSuccess,
                onError: props.onError,
                withCredentials: props.withCredentials,
                headers: props.headers,
                data: props.data,
                request: props.request
            };
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Html5Uploader.prototype.componentDidMount = function componentDidMount() {
        var props = this.props;

        var options = this.getUploadOptions(props);
        this.uploader = new _uploader2.default(options);
    };

    Html5Uploader.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var preOptions = this.getUploadOptions(prevProps);
        var options = this.getUploadOptions(this.props);

        var keys = Object.keys(options);

        for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (options[key] !== preOptions[key]) {
                this.uploader.setOptions(options);
                return;
            }
        }
    };

    Html5Uploader.prototype.componentWillUnmount = function componentWillUnmount() {
        this.abort();
    };

    Html5Uploader.prototype.abort = function abort(file) {
        this.uploader.abort(file);
    };

    Html5Uploader.prototype.startUpload = function startUpload(fileList) {
        this.uploader.startUpload(fileList);
    };

    Html5Uploader.prototype.render = function render() {
        var _props = this.props,
            accept = _props.accept,
            multiple = _props.multiple,
            webkitdirectory = _props.webkitdirectory,
            children = _props.children,
            id = _props.id,
            disabled = _props.disabled,
            dragable = _props.dragable,
            style = _props.style,
            className = _props.className,
            onSelect = _props.onSelect,
            onDragOver = _props.onDragOver,
            onDragLeave = _props.onDragLeave,
            onDrop = _props.onDrop,
            name = _props.name,
            others = (0, _objectWithoutProperties3.default)(_props, ['accept', 'multiple', 'webkitdirectory', 'children', 'id', 'disabled', 'dragable', 'style', 'className', 'onSelect', 'onDragOver', 'onDragLeave', 'onDrop', 'name']);

        return _react2.default.createElement(_selecter2.default, (0, _extends3.default)({}, others, {
            id: id,
            accept: accept,
            multiple: multiple,
            webkitdirectory: webkitdirectory,
            dragable: dragable,
            disabled: disabled,
            className: className,
            style: style,
            onSelect: onSelect,
            onDragOver: onDragOver,
            onDragLeave: onDragLeave,
            onDrop: onDrop,
            name: name
        }), children);
    };

    return Html5Uploader;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _selecter2.default.propTypes, {
    /**
     * 上传的地址
     */
    action: _propTypes2.default.string,
    /**
     * 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)
     */
    accept: _propTypes2.default.string,
    /**
     * 上传额外传参
     */
    data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    /**
     * 设置上传的请求头部
     */
    headers: _propTypes2.default.object,
    /**
     * 是否允许请求携带 cookie
     */
    withCredentials: _propTypes2.default.bool,
    /**
     * 上传文件之前
     * @param {Object} file 文件对象
     * @return {Boolean} `false` 停止上传
     */
    beforeUpload: _propTypes2.default.func,
    /**
     * 正在上传文件的钩子，参数为上传的事件以及文件
     */
    onProgress: _propTypes2.default.func,
    /**
     * 上传成功回调函数，参数为请求下响应信息以及文件
     */
    onSuccess: _propTypes2.default.func,
    /**
     * 上传失败回调函数，参数为上传失败的信息、响应信息以及文件
     */
    onError: _propTypes2.default.func,
    children: _propTypes2.default.node,
    /**
     * 上传超时,单位ms
     */
    timeout: _propTypes2.default.number,
    /**
     * 上传方法
     */
    method: _propTypes2.default.oneOf(['post', 'put']),
    request: _propTypes2.default.func
}), _class.defaultProps = (0, _extends3.default)({}, _selecter2.default.defaultProps, {
    name: 'file',
    multiple: false,
    withCredentials: true,
    beforeUpload: _util.func.noop,
    onSelect: _util.func.noop,
    onDragOver: _util.func.noop,
    onDragLeave: _util.func.noop,
    onDrop: _util.func.noop,
    onProgress: _util.func.noop,
    onSuccess: _util.func.noop,
    onError: _util.func.noop,
    onAbort: _util.func.noop,
    method: 'post'
}), _temp2);
Html5Uploader.displayName = 'Html5Uploader';
exports.default = Html5Uploader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(41);

var _request = __webpack_require__(452);

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;

var Uploader = function () {
    function Uploader(options) {
        (0, _classCallCheck3.default)(this, Uploader);

        this.options = (0, _extends3.default)({
            beforeUpload: noop,
            onProgress: noop,
            onSuccess: noop,
            onError: noop,
            data: {},
            name: 'file',
            method: 'post'
        }, options);
        this.reqs = {};
    }

    Uploader.prototype.setOptions = function setOptions(options) {
        (0, _extends3.default)(this.options, options);
    };

    Uploader.prototype.startUpload = function startUpload(files) {
        var _this = this;

        var filesArr = files.length ? Array.prototype.slice.call(files) : [files];
        filesArr.forEach(function (file) {
            file.uid = file.uid || (0, _util2.uid)();
            _this.upload(file);
        });
    };

    Uploader.prototype.abort = function abort(file) {
        var reqs = this.reqs;

        if (file) {
            var _uid = file;
            if (file && file.uid) {
                _uid = file.uid;
            }
            if (reqs[_uid] && reqs[_uid].abort) {
                reqs[_uid].abort();
            }
            delete reqs[_uid];
        } else {
            Object.keys(reqs).forEach(function (uid) {
                if (reqs[uid] && reqs[uid].abort) {
                    reqs[uid].abort();
                }
                delete reqs[uid];
            });
        }
    };

    Uploader.prototype.upload = function upload(file) {
        var _this2 = this;

        var _options = this.options,
            beforeUpload = _options.beforeUpload,
            action = _options.action,
            name = _options.name,
            headers = _options.headers,
            timeout = _options.timeout,
            withCredentials = _options.withCredentials,
            method = _options.method,
            data = _options.data;

        var before = beforeUpload(file, {
            action: action,
            name: name,
            headers: headers,
            timeout: timeout,
            withCredentials: withCredentials,
            method: method,
            data: data
        });

        _util.func.promiseCall(before, function (options) {
            if (options === false) {
                var err = new Error(_util2.errorCode.BEFOREUPLOAD_REJECT);
                err.code = _util2.errorCode.BEFOREUPLOAD_REJECT;
                return _this2.options.onError(err, null, file);
            }
            _this2.post(file, _util.obj.isPlainObject(options) ? options : undefined);
        }, function (error) {
            var err = void 0;
            if (error) {
                err = error;
            } else {
                err = new Error(_util2.errorCode.BEFOREUPLOAD_REJECT);
                err.code = _util2.errorCode.BEFOREUPLOAD_REJECT;
            }
            _this2.options.onError(err, null, file);
        });
    };

    Uploader.prototype.post = function post(file) {
        var _this3 = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var requestOptions = (0, _extends3.default)({}, this.options, options);
        var action = requestOptions.action,
            name = requestOptions.name,
            headers = requestOptions.headers,
            timeout = requestOptions.timeout,
            withCredentials = requestOptions.withCredentials,
            _onProgress = requestOptions.onProgress,
            _onSuccess = requestOptions.onSuccess,
            _onError = requestOptions.onError,
            method = requestOptions.method;

        var data = requestOptions.data;
        if (typeof data === 'function') {
            data = data(file);
        }

        var uid = file.uid;

        var request = typeof requestOptions.request === 'function' ? requestOptions.request : _request2.default;
        this.reqs[uid] = request({
            action: action,
            filename: name,
            file: file,
            data: data,
            timeout: timeout,
            headers: headers,
            withCredentials: withCredentials,
            method: method,
            onProgress: function onProgress(e) {
                _onProgress(e, file);
            },
            onSuccess: function onSuccess(ret) {
                delete _this3.reqs[uid];
                _onSuccess(ret, file);
            },
            onError: function onError(err, ret) {
                delete _this3.reqs[uid];
                _onError(err, ret, file);
            }
        });
    };

    return Uploader;
}();

exports.default = Uploader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _timeMenu = __webpack_require__(465);

var _timeMenu2 = _interopRequireDefault(_timeMenu);

var _propTypes3 = __webpack_require__(107);

var _propTypes4 = _interopRequireDefault(_propTypes3);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;
var TimePickerPanel = (_temp2 = _class = function (_Component) {
    (0, _inherits3.default)(TimePickerPanel, _Component);

    function TimePickerPanel() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TimePickerPanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.prefixCls = _this.props.prefix + 'time-picker2', _this.onSelectMenuItem = function (panelType, index, type) {
            var _this$props = _this.props,
                value = _this$props.value,
                isRange = _this$props.isRange;

            var valueArr = Array.isArray(value) ? value : [value];
            var val = panelType === 'end' ? valueArr[1] : valueArr[0];

            var clonedValue = val ? val.clone() : (0, _util.datejs)('00:00:00', 'HH:mm:ss', true);
            var newValue = void 0;
            switch (type) {
                case 'hour':
                    newValue = clonedValue.hour(index);
                    break;
                case 'minute':
                    newValue = clonedValue.minute(index);
                    break;
                case 'second':
                    newValue = clonedValue.second(index);
                    break;
            }

            if (isRange) {
                var nextValueArray = [];
                if (panelType === 'start') {
                    nextValueArray[0] = newValue;
                    nextValueArray[1] = value[1];
                } else if (panelType === 'end') {
                    nextValueArray[0] = value[0];
                    nextValueArray[1] = newValue;
                }

                _this.props.onSelect(nextValueArray, panelType);
            } else {
                _this.props.onSelect(newValue, 'panel');
            }
        }, _this.getDisabledItems = function () {
            var _this$props2 = _this.props,
                disabledHours = _this$props2.disabledHours,
                disabledMinutes = _this$props2.disabledMinutes,
                disabledSeconds = _this$props2.disabledSeconds,
                value = _this$props2.value,
                isRange = _this$props2.isRange;

            var disableds = {
                newDisabledHours: [disabledHours],
                newDisabledMinutes: [disabledMinutes],
                newDisabledSeconds: [disabledSeconds]
            };
            if (!isRange) {
                return disableds;
            }

            var dHours = disabledHours() || [];
            var dMinutes = disabledMinutes() || [];
            var dSeconds = disabledSeconds() || [];

            var v0 = value[0];
            var v1 = value[1];

            var hoursEqual = function hoursEqual() {
                return v0 && v1 && v0.hour() === v1.hour();
            };
            var minutesEqual = function minutesEqual() {
                return v0 && v1 && v0.hour() === v1.hour() && v0.minute() === v1.minute();
            };

            disableds.newDisabledHours[0] = function (h) {
                return v1 && h > v1.hour() || dHours.indexOf(h) > -1;
            };
            disableds.newDisabledMinutes[0] = function (m) {
                return v1 && hoursEqual() && m > v1.minute() || dMinutes.indexOf(m) > -1;
            };
            disableds.newDisabledSeconds[0] = function (s) {
                return v1 && minutesEqual() && s > v1.second() || dSeconds.indexOf(s) > -1;
            };

            disableds.newDisabledHours[1] = function (h) {
                return v0 && h < v0.hour() || dHours.indexOf(h) > -1;
            };
            disableds.newDisabledMinutes[1] = function (m) {
                return v0 && m < (hoursEqual() && v0.minute()) || dMinutes.indexOf(m) > -1;
            };
            disableds.newDisabledSeconds[1] = function (s) {
                return v0 && minutesEqual() && s < v0.second() || dSeconds.indexOf(s) > -1;
            };

            return disableds;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    /**
     *
     * @param {enum} panelType 'start' | 'end' | 'panel'
     * @param {*} index
     * @param {*} type 'hour' | 'minute' | 'second'
     */

    TimePickerPanel.prototype.render = function render() {
        var _classnames,
            _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            value = _props.value,
            isRange = _props.isRange,
            locale = _props.locale,
            className = _props.className,
            disabled = _props.disabled,
            showHour = _props.showHour,
            showMinute = _props.showMinute,
            showSecond = _props.showSecond,
            hourStep = _props.hourStep,
            minuteStep = _props.minuteStep,
            secondStep = _props.secondStep,
            renderTimeMenuItems = _props.renderTimeMenuItems,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'value', 'isRange', 'locale', 'className', 'disabled', 'showHour', 'showMinute', 'showSecond', 'hourStep', 'minuteStep', 'secondStep', 'renderTimeMenuItems']);

        var colLen = [showHour, showMinute, showSecond].filter(function (v) {
            return v;
        }).length;
        var classNames = (0, _classnames3.default)(this.prefixCls + '-panel', (_classnames = {}, _classnames[this.prefixCls + '-panel-col-' + colLen] = !isRange, _classnames[this.prefixCls + '-panel-range'] = isRange, _classnames), className);

        var activeHour = [];
        var activeMinute = [];
        var activeSecond = [];

        var valueArr = Array.isArray(value) ? value : [value];
        valueArr.forEach(function (val, i) {
            if (val && _util.datejs.isSelf(val)) {
                activeHour[i] = val.hour();
                activeMinute[i] = val.minute();
                activeSecond[i] = val.second();
            }
        });

        var commonProps = {
            prefix: prefix,
            disabled: disabled,
            renderTimeMenuItems: renderTimeMenuItems
        };

        var _getDisabledItems = this.getDisabledItems(),
            newDisabledHours = _getDisabledItems.newDisabledHours,
            newDisabledMinutes = _getDisabledItems.newDisabledMinutes,
            newDisabledSeconds = _getDisabledItems.newDisabledSeconds;

        var generatePanel = function generatePanel(index) {
            return _react2.default.createElement(_react2.default.Fragment, null, showHour ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
                value: valueArr[index],
                activeIndex: activeHour[index],
                title: locale.hour,
                mode: 'hour',
                step: hourStep,
                onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                disabledItems: newDisabledHours[index]
            })) : null, showMinute ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
                value: valueArr[index],
                activeIndex: activeMinute[index],
                title: locale.minute,
                mode: 'minute',
                step: minuteStep,
                onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                disabledItems: newDisabledMinutes[index]
            })) : null, showSecond ? _react2.default.createElement(_timeMenu2.default, (0, _extends3.default)({}, commonProps, {
                value: valueArr[index],
                activeIndex: activeSecond[index],
                title: locale.second,
                step: secondStep,
                mode: 'second',
                onSelect: _this2.onSelectMenuItem.bind(_this2, '' + (index === 0 ? 'start' : 'end')),
                disabledItems: newDisabledSeconds[index]
            })) : null);
        };

        var singlePanel = generatePanel(0);

        var panelClassNames = (0, _classnames3.default)(this.prefixCls + '-panel-col-' + colLen, this.prefixCls + '-panel-list');

        var doublePanel = _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement('div', { className: panelClassNames }, generatePanel(0)), _react2.default.createElement('div', { className: panelClassNames }, generatePanel(1)));

        return _react2.default.createElement('div', (0, _extends3.default)({}, (0, _util.pickAttrs)(others), { className: classNames }), isRange ? doublePanel : singlePanel);
    };

    return TimePickerPanel;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 时间值（dayjs 对象）
     */
    value: _propTypes4.default.value,
    /**
     * 是否显示小时
     */
    showHour: _propTypes2.default.bool,
    /**
     * 是否显示分钟
     */
    showMinute: _propTypes2.default.bool,
    /**
     * 是否显示秒
     */
    showSecond: _propTypes2.default.bool,
    /**
     * 小时选项步长
     */
    hourStep: _propTypes2.default.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _propTypes2.default.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _propTypes2.default.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _propTypes2.default.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _propTypes2.default.func,
    /**
     * 禁用秒函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _propTypes2.default.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {dayjs} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _propTypes2.default.func,
    /**
     * 选择某个日期值时的回调
     * @param {Object} 选中后的日期值
     */
    onSelect: _propTypes2.default.func,
    isRange: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    disabled: _propTypes2.default.bool,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    showHour: true,
    showSecond: true,
    showMinute: true,
    disabledHours: noop,
    disabledMinutes: noop,
    disabledSeconds: noop,
    onSelect: noop,
    disabled: false,
    isRange: false,
    locale: _zhCn2.default.TimePicker
}, _temp2);
TimePickerPanel.displayName = 'TimePickerPanel';
exports.default = TimePickerPanel;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.checkDayjsObj = checkDayjsObj;
exports.checkDateValue = checkDateValue;
exports.onTimeKeydown = onTimeKeydown;

var _util = __webpack_require__(4);

// 检查传入值是否为 dayjs 对象
function checkDayjsObj(props, propName, componentName) {
    if (props[propName] && !_util.datejs.isSelf(props[propName])) {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a dayjs object.');
    }
}

// 检查传入值是否为 dayjs 对象
function checkDateValue(props, propName, componentName) {
    if (props[propName] && !_util.datejs.isSelf(props[propName]) && typeof props[propName] !== 'string') {
        return new Error('Invalid prop ' + propName + ' supplied to ' + componentName + '. Required a dayjs object or format date string.');
    }
}

/**
 * 监听键盘事件，操作时间
 * @param {KeyboardEvent} e
 * @param {Object} param1
 * @param {String} type second hour minute
 */
function onTimeKeydown(e, _ref, type) {
    var format = _ref.format,
        timeInputStr = _ref.timeInputStr,
        steps = _ref.steps,
        value = _ref.value;

    if ([_util.KEYCODE.UP, _util.KEYCODE.DOWN, _util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) return;
    if (e.altKey && [_util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) return;

    var time = (0, _util.datejs)(timeInputStr, format, true);

    if (time.isValid()) {
        var stepUnit = e.altKey ? 'hour' : 'minute';
        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                time = time.subtract(steps[type], type);
                break;
            case _util.KEYCODE.DOWN:
                time = time.add(steps[type], type);
                break;
            case _util.KEYCODE.PAGE_UP:
                time = time.subtract(steps[stepUnit], stepUnit);
                break;
            case _util.KEYCODE.PAGE_DOWN:
                time = time.add(steps[stepUnit], stepUnit);
                break;
        }
    } else if (value) {
        time = value.clone();
    } else {
        time = (0, _util.datejs)();
        time = time.hour(0).minute(0).second(0);
    }

    e.preventDefault();
    return time.format(format);
}

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var renderNode = _util.func.renderNode;

function normalizePreset(preset) {
    if (Array.isArray(preset)) {
        return preset;
    } else {
        return Object.keys(preset).map(function (key) {
            return {
                label: key,
                value: preset[key]
            };
        });
    }
}

var FooterPanel = (_temp = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(FooterPanel, _React$PureComponent);

    function FooterPanel(props) {
        (0, _classCallCheck3.default)(this, FooterPanel);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call(this, props));

        _this.renderRanges = function () {
            if (!_this.props.preset) {
                return null;
            }

            var preset = normalizePreset(_this.props.preset);

            return preset.map(function (_ref, index) {
                var label = _ref.label,
                    value = _ref.value,
                    restProps = (0, _objectWithoutProperties3.default)(_ref, ['label', 'value']);

                var buttonProps = _util.obj.pickProps(_button2.default.propTypes, restProps);

                var handleClick = function handleClick() {
                    var date = typeof value === 'function' ? value() : value;
                    _this.props.onChange(date, 'CLICK_PRESET');
                };
                return _react2.default.createElement(_button2.default, (0, _extends3.default)({
                    text: preset.length === 1,
                    size: 'small',
                    type: preset.length === 1 ? 'primary' : 'secondary',
                    key: label + '-' + index
                    // onClick={() =>
                    //     func.invoke(this.props, 'onChange', [
                    //         typeof value === 'function' ? value() : value,
                    //         'CLICK_PRESET',
                    //     ])
                    // }
                    , onClick: handleClick
                }, buttonProps), label);
            });
        };

        _this.prefixCls = props.prefix + 'date-picker2-footer';
        return _this;
    }

    FooterPanel.prototype.render = function render() {
        var _classnames, _classnames2;

        var prefixCls = this.prefixCls;
        var _props = this.props,
            showOk = _props.showOk,
            locale = _props.locale,
            onOk = _props.onOk,
            oKable = _props.oKable,
            extraRender = _props.extraRender,
            className = _props.className;

        var classNames = (0, _classnames4.default)(prefixCls, className, (_classnames = {}, _classnames[prefixCls + '-with-actions'] = showOk, _classnames));

        var extraNode = renderNode(extraRender);
        var rangeNode = this.renderRanges();
        var actionsNode = _react2.default.createElement(_button2.default, { size: 'small', disabled: !oKable, onClick: onOk, className: prefixCls + '-ok', type: 'primary' }, locale.ok);

        var showFooter = showOk || extraNode || rangeNode;
        var rangesCls = (0, _classnames4.default)(prefixCls + '-preset', (_classnames2 = {}, _classnames2[prefixCls + '-preset-only'] = !showOk && !extraNode, _classnames2));

        return showFooter ? _react2.default.createElement('div', { className: classNames }, extraNode ? _react2.default.createElement('div', { className: prefixCls + '-extra' }, extraNode) : null, rangeNode ? _react2.default.createElement('div', { className: rangesCls }, rangeNode) : null, showOk ? _react2.default.createElement('div', { className: prefixCls + '-actions' }, actionsNode) : null) : null;
    };

    return FooterPanel;
}(_react2.default.PureComponent), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    showOk: _propTypes2.default.bool,
    preset: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    onOk: _propTypes2.default.func,
    oKable: _propTypes2.default.bool,
    extraRender: _propTypes4.default.render
}, _class.defaultProps = {
    locale: _zhCn2.default.DatePicker
}, _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(FooterPanel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constant = __webpack_require__(51);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var error = function error(propName, ComponentName) {
    return new Error('Invalid prop ' + propName + ' supplied to ' + ComponentName + '. Validation failed.');
};

var SharedPT = {
    shape: _propTypes2.default.oneOf(Object.values(_constant.CALENDAR_SHAPE)),
    mode: _propTypes2.default.oneOf(Object.values(_constant.CALENDAR_MODE)),
    panelMode: _propTypes2.default.oneOf(Object.values(_constant.DATE_PANEL_MODE)),
    // 日期类型：
    //  @string: 2020-11-11
    //  @date: 日期对象
    //  @moment: moment对象
    //  @dayjs: dayjs对象
    date: function date(props, propName, componentName) {
        if (propName in props && !(0, _util.datejs)(props.propName).isValid()) {
            throw error(propName, componentName);
        }
    }
};

exports.default = SharedPT;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _panel = __webpack_require__(195);

var _panel2 = _interopRequireDefault(_panel);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DECADE_TIME_FORMAT = 'HH:mm:ss';

var TimePanel = (_temp2 = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(TimePanel, _React$PureComponent);

    function TimePanel() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TimePanel);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.formater = function (v) {
            var _this$props$timePanel = _this.props.timePanelProps,
                timePanelProps = _this$props$timePanel === undefined ? {} : _this$props$timePanel;

            var _this$getShow = _this.getShow(),
                showHour = _this$getShow.showHour,
                showMinute = _this$getShow.showMinute,
                showSecond = _this$getShow.showSecond;

            var fmt = void 0;
            if ('format' in timePanelProps) {
                fmt = timePanelProps.format;
            } else {
                var fmtArr = [];

                showHour && fmtArr.push('HH');
                showMinute && fmtArr.push('mm');
                showSecond && fmtArr.push('ss');

                fmt = fmtArr.join(':');
            }

            return typeof fmt === 'function' ? fmt(v) : v.format(fmt);
        }, _this.getShow = function () {
            var _this$props$timePanel2 = _this.props.timePanelProps,
                props = _this$props$timePanel2 === undefined ? {} : _this$props$timePanel2;

            var fmt = props.format || DECADE_TIME_FORMAT;

            var showHour = void 0;
            var showMinute = void 0;
            var showSecond = void 0;

            if (typeof fmt === 'string') {
                showHour = fmt.indexOf('H') > -1;
                showSecond = fmt.indexOf('s') > -1;
                showMinute = fmt.indexOf('m') > -1;
            }

            return {
                showHour: 'showHour' in props ? props.showHour : showHour,
                showMinute: 'showMinute' in props ? props.showMinute : showMinute,
                showSecond: 'showSecond' in props ? props.showSecond : showSecond
            };
        }, _this.onSelect = function (v) {
            _util.func.invoke(_this.props, 'onSelect', [v]);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    TimePanel.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            locale = _props.locale,
            _props$timePanelProps = _props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps,
            value = _props.value;

        var _getShow = this.getShow(),
            showHour = _getShow.showHour,
            showMinute = _getShow.showMinute,
            showSecond = _getShow.showSecond;

        return _react2.default.createElement('div', { dir: rtl ? 'rtl' : undefined, className: prefix + 'date-time-picker-wrapper ' + prefix + 'calendar2-panel' }, _react2.default.createElement('div', { className: prefix + 'calendar2-header' }, _react2.default.createElement('div', { className: prefix + 'calendar2-header-text-field' }, value ? this.formater(value) : null)), _react2.default.createElement(_panel2.default, (0, _extends3.default)({
            prefix: prefix,
            locale: locale,
            onSelect: this.onSelect,
            showHour: showHour,
            showSecond: showSecond,
            showMinute: showMinute
        }, timePanelProps, {
            value: value
        })));
    };

    return TimePanel;
}(_react2.default.PureComponent), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    value: _propTypes4.default.date,
    timePanelProps: _propTypes2.default.object,
    onSelect: _propTypes2.default.func
}, _temp2);
exports.default = (0, _reactLifecyclesCompat.polyfill)(TimePanel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var next = __webpack_require__(201);

next.version = '1.27.11';

module.exports = next;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = undefined && undefined.__importDefault || function (mod) {
    return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreeSelect = exports.Tree = exports.Transfer = exports.Timeline = exports.TimePicker = exports.Tag = exports.Table = exports.Tab = exports.Switch = exports.Step = exports.SplitButton = exports.Slider = exports.Shell = exports.Select = exports.Search = exports.Rating = exports.Range = exports.Radio = exports.Progress = exports.Paragraph = exports.Pagination = exports.Overlay = exports.NumberPicker = exports.Nav = exports.Message = exports.MenuButton = exports.Menu = exports.Loading = exports.Input = exports.Icon = exports.Grid = exports.Form = exports.Field = exports.Drawer = exports.Dropdown = exports.Dialog = exports.DatePicker = exports.ConfigProvider = exports.Collapse = exports.Checkbox = exports.CascaderSelect = exports.Cascader = exports.Card = exports.Calendar = exports.Button = exports.Breadcrumb = exports.Balloon = exports.Badge = exports.Animate = exports.Affix = void 0;
exports.Calendar2 = exports.DatePicker2 = exports.TimePicker2 = exports.List = exports.Box = exports.ResponsiveGrid = exports.Avatar = exports.Divider = exports.Notification = exports.VirtualList = exports.Upload = exports.Typography = void 0;
var affix_1 = __webpack_require__(68);
Object.defineProperty(exports, "Affix", { enumerable: true, get: function get() {
        return __importDefault(affix_1).default;
    } });
var animate_1 = __webpack_require__(21);
Object.defineProperty(exports, "Animate", { enumerable: true, get: function get() {
        return __importDefault(animate_1).default;
    } });
var badge_1 = __webpack_require__(266);
Object.defineProperty(exports, "Badge", { enumerable: true, get: function get() {
        return __importDefault(badge_1).default;
    } });
var balloon_1 = __webpack_require__(58);
Object.defineProperty(exports, "Balloon", { enumerable: true, get: function get() {
        return __importDefault(balloon_1).default;
    } });
var breadcrumb_1 = __webpack_require__(285);
Object.defineProperty(exports, "Breadcrumb", { enumerable: true, get: function get() {
        return __importDefault(breadcrumb_1).default;
    } });
var button_1 = __webpack_require__(18);
Object.defineProperty(exports, "Button", { enumerable: true, get: function get() {
        return __importDefault(button_1).default;
    } });
var calendar_1 = __webpack_require__(39);
Object.defineProperty(exports, "Calendar", { enumerable: true, get: function get() {
        return __importDefault(calendar_1).default;
    } });
var card_1 = __webpack_require__(315);
Object.defineProperty(exports, "Card", { enumerable: true, get: function get() {
        return __importDefault(card_1).default;
    } });
var cascader_1 = __webpack_require__(162);
Object.defineProperty(exports, "Cascader", { enumerable: true, get: function get() {
        return __importDefault(cascader_1).default;
    } });
var cascader_select_1 = __webpack_require__(325);
Object.defineProperty(exports, "CascaderSelect", { enumerable: true, get: function get() {
        return __importDefault(cascader_select_1).default;
    } });
var checkbox_1 = __webpack_require__(48);
Object.defineProperty(exports, "Checkbox", { enumerable: true, get: function get() {
        return __importDefault(checkbox_1).default;
    } });
var collapse_1 = __webpack_require__(327);
Object.defineProperty(exports, "Collapse", { enumerable: true, get: function get() {
        return __importDefault(collapse_1).default;
    } });
var config_provider_1 = __webpack_require__(8);
Object.defineProperty(exports, "ConfigProvider", { enumerable: true, get: function get() {
        return __importDefault(config_provider_1).default;
    } });
var date_picker_1 = __webpack_require__(329);
Object.defineProperty(exports, "DatePicker", { enumerable: true, get: function get() {
        return __importDefault(date_picker_1).default;
    } });
var dialog_1 = __webpack_require__(336);
Object.defineProperty(exports, "Dialog", { enumerable: true, get: function get() {
        return __importDefault(dialog_1).default;
    } });
var dropdown_1 = __webpack_require__(47);
Object.defineProperty(exports, "Dropdown", { enumerable: true, get: function get() {
        return __importDefault(dropdown_1).default;
    } });
var drawer_1 = __webpack_require__(340);
Object.defineProperty(exports, "Drawer", { enumerable: true, get: function get() {
        return __importDefault(drawer_1).default;
    } });
var field_1 = __webpack_require__(170);
Object.defineProperty(exports, "Field", { enumerable: true, get: function get() {
        return __importDefault(field_1).default;
    } });
var form_1 = __webpack_require__(347);
Object.defineProperty(exports, "Form", { enumerable: true, get: function get() {
        return __importDefault(form_1).default;
    } });
var grid_1 = __webpack_require__(174);
Object.defineProperty(exports, "Grid", { enumerable: true, get: function get() {
        return __importDefault(grid_1).default;
    } });
var icon_1 = __webpack_require__(12);
Object.defineProperty(exports, "Icon", { enumerable: true, get: function get() {
        return __importDefault(icon_1).default;
    } });
var input_1 = __webpack_require__(19);
Object.defineProperty(exports, "Input", { enumerable: true, get: function get() {
        return __importDefault(input_1).default;
    } });
var loading_1 = __webpack_require__(98);
Object.defineProperty(exports, "Loading", { enumerable: true, get: function get() {
        return __importDefault(loading_1).default;
    } });
var menu_1 = __webpack_require__(17);
Object.defineProperty(exports, "Menu", { enumerable: true, get: function get() {
        return __importDefault(menu_1).default;
    } });
var menu_button_1 = __webpack_require__(357);
Object.defineProperty(exports, "MenuButton", { enumerable: true, get: function get() {
        return __importDefault(menu_button_1).default;
    } });
var message_1 = __webpack_require__(94);
Object.defineProperty(exports, "Message", { enumerable: true, get: function get() {
        return __importDefault(message_1).default;
    } });
var nav_1 = __webpack_require__(358);
Object.defineProperty(exports, "Nav", { enumerable: true, get: function get() {
        return __importDefault(nav_1).default;
    } });
var number_picker_1 = __webpack_require__(364);
Object.defineProperty(exports, "NumberPicker", { enumerable: true, get: function get() {
        return __importDefault(number_picker_1).default;
    } });
var overlay_1 = __webpack_require__(16);
Object.defineProperty(exports, "Overlay", { enumerable: true, get: function get() {
        return __importDefault(overlay_1).default;
    } });
var pagination_1 = __webpack_require__(367);
Object.defineProperty(exports, "Pagination", { enumerable: true, get: function get() {
        return __importDefault(pagination_1).default;
    } });
var paragraph_1 = __webpack_require__(369);
Object.defineProperty(exports, "Paragraph", { enumerable: true, get: function get() {
        return __importDefault(paragraph_1).default;
    } });
var progress_1 = __webpack_require__(99);
Object.defineProperty(exports, "Progress", { enumerable: true, get: function get() {
        return __importDefault(progress_1).default;
    } });
var radio_1 = __webpack_require__(49);
Object.defineProperty(exports, "Radio", { enumerable: true, get: function get() {
        return __importDefault(radio_1).default;
    } });
var range_1 = __webpack_require__(373);
Object.defineProperty(exports, "Range", { enumerable: true, get: function get() {
        return __importDefault(range_1).default;
    } });
var rating_1 = __webpack_require__(381);
Object.defineProperty(exports, "Rating", { enumerable: true, get: function get() {
        return __importDefault(rating_1).default;
    } });
var search_1 = __webpack_require__(176);
Object.defineProperty(exports, "Search", { enumerable: true, get: function get() {
        return __importDefault(search_1).default;
    } });
var select_1 = __webpack_require__(30);
Object.defineProperty(exports, "Select", { enumerable: true, get: function get() {
        return __importDefault(select_1).default;
    } });
var shell_1 = __webpack_require__(384);
Object.defineProperty(exports, "Shell", { enumerable: true, get: function get() {
        return __importDefault(shell_1).default;
    } });
var slider_1 = __webpack_require__(388);
Object.defineProperty(exports, "Slider", { enumerable: true, get: function get() {
        return __importDefault(slider_1).default;
    } });
var split_button_1 = __webpack_require__(396);
Object.defineProperty(exports, "SplitButton", { enumerable: true, get: function get() {
        return __importDefault(split_button_1).default;
    } });
var step_1 = __webpack_require__(397);
Object.defineProperty(exports, "Step", { enumerable: true, get: function get() {
        return __importDefault(step_1).default;
    } });
var switch_1 = __webpack_require__(400);
Object.defineProperty(exports, "Switch", { enumerable: true, get: function get() {
        return __importDefault(switch_1).default;
    } });
var tab_1 = __webpack_require__(401);
Object.defineProperty(exports, "Tab", { enumerable: true, get: function get() {
        return __importDefault(tab_1).default;
    } });
var table_1 = __webpack_require__(410);
Object.defineProperty(exports, "Table", { enumerable: true, get: function get() {
        return __importDefault(table_1).default;
    } });
var tag_1 = __webpack_require__(146);
Object.defineProperty(exports, "Tag", { enumerable: true, get: function get() {
        return __importDefault(tag_1).default;
    } });
var time_picker_1 = __webpack_require__(431);
Object.defineProperty(exports, "TimePicker", { enumerable: true, get: function get() {
        return __importDefault(time_picker_1).default;
    } });
var timeline_1 = __webpack_require__(433);
Object.defineProperty(exports, "Timeline", { enumerable: true, get: function get() {
        return __importDefault(timeline_1).default;
    } });
var transfer_1 = __webpack_require__(436);
Object.defineProperty(exports, "Transfer", { enumerable: true, get: function get() {
        return __importDefault(transfer_1).default;
    } });
var tree_1 = __webpack_require__(189);
Object.defineProperty(exports, "Tree", { enumerable: true, get: function get() {
        return __importDefault(tree_1).default;
    } });
var tree_select_1 = __webpack_require__(444);
Object.defineProperty(exports, "TreeSelect", { enumerable: true, get: function get() {
        return __importDefault(tree_select_1).default;
    } });
var typography_1 = __webpack_require__(446);
Object.defineProperty(exports, "Typography", { enumerable: true, get: function get() {
        return __importDefault(typography_1).default;
    } });
var upload_1 = __webpack_require__(450);
Object.defineProperty(exports, "Upload", { enumerable: true, get: function get() {
        return __importDefault(upload_1).default;
    } });
var virtual_list_1 = __webpack_require__(50);
Object.defineProperty(exports, "VirtualList", { enumerable: true, get: function get() {
        return __importDefault(virtual_list_1).default;
    } });
var notification_1 = __webpack_require__(456);
Object.defineProperty(exports, "Notification", { enumerable: true, get: function get() {
        return __importDefault(notification_1).default;
    } });
var divider_1 = __webpack_require__(458);
Object.defineProperty(exports, "Divider", { enumerable: true, get: function get() {
        return __importDefault(divider_1).default;
    } });
var avatar_1 = __webpack_require__(459);
Object.defineProperty(exports, "Avatar", { enumerable: true, get: function get() {
        return __importDefault(avatar_1).default;
    } });
var responsive_grid_1 = __webpack_require__(97);
Object.defineProperty(exports, "ResponsiveGrid", { enumerable: true, get: function get() {
        return __importDefault(responsive_grid_1).default;
    } });
var box_1 = __webpack_require__(172);
Object.defineProperty(exports, "Box", { enumerable: true, get: function get() {
        return __importDefault(box_1).default;
    } });
var list_1 = __webpack_require__(460);
Object.defineProperty(exports, "List", { enumerable: true, get: function get() {
        return __importDefault(list_1).default;
    } });
var time_picker2_1 = __webpack_require__(463);
Object.defineProperty(exports, "TimePicker2", { enumerable: true, get: function get() {
        return __importDefault(time_picker2_1).default;
    } });
var date_picker2_1 = __webpack_require__(467);
Object.defineProperty(exports, "DatePicker2", { enumerable: true, get: function get() {
        return __importDefault(date_picker2_1).default;
    } });
var calendar2_1 = __webpack_require__(109);
Object.defineProperty(exports, "Calendar2", { enumerable: true, get: function get() {
        return __importDefault(calendar2_1).default;
    } });

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(203);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(205), __esModule: true };

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(206);
__webpack_require__(216);
module.exports = __webpack_require__(80).f('iterator');


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(207)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(111)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(70);
var defined = __webpack_require__(71);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 208 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(74);
var descriptor = __webpack_require__(54);
var setToStringTag = __webpack_require__(78);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(33)(IteratorPrototype, __webpack_require__(36)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(28);
var anObject = __webpack_require__(45);
var getKeys = __webpack_require__(55);

module.exports = __webpack_require__(27) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(35);
var toLength = __webpack_require__(212);
var toAbsoluteIndex = __webpack_require__(213);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(70);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(70);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(25).document;
module.exports = document && document.documentElement;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(29);
var toObject = __webpack_require__(79);
var IE_PROTO = __webpack_require__(75)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(217);
var global = __webpack_require__(25);
var hide = __webpack_require__(33);
var Iterators = __webpack_require__(73);
var TO_STRING_TAG = __webpack_require__(36)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(218);
var step = __webpack_require__(219);
var Iterators = __webpack_require__(73);
var toIObject = __webpack_require__(35);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(111)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 218 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 219 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(221), __esModule: true };

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(222);
__webpack_require__(227);
__webpack_require__(228);
__webpack_require__(229);
module.exports = __webpack_require__(26).Symbol;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(25);
var has = __webpack_require__(29);
var DESCRIPTORS = __webpack_require__(27);
var $export = __webpack_require__(32);
var redefine = __webpack_require__(115);
var META = __webpack_require__(223).KEY;
var $fails = __webpack_require__(46);
var shared = __webpack_require__(76);
var setToStringTag = __webpack_require__(78);
var uid = __webpack_require__(56);
var wks = __webpack_require__(36);
var wksExt = __webpack_require__(80);
var wksDefine = __webpack_require__(81);
var enumKeys = __webpack_require__(224);
var isArray = __webpack_require__(225);
var anObject = __webpack_require__(45);
var isObject = __webpack_require__(34);
var toObject = __webpack_require__(79);
var toIObject = __webpack_require__(35);
var toPrimitive = __webpack_require__(72);
var createDesc = __webpack_require__(54);
var _create = __webpack_require__(74);
var gOPNExt = __webpack_require__(226);
var $GOPD = __webpack_require__(120);
var $GOPS = __webpack_require__(82);
var $DP = __webpack_require__(28);
var $keys = __webpack_require__(55);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(119).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(57).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(53)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(33)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(56)('meta');
var isObject = __webpack_require__(34);
var has = __webpack_require__(29);
var setDesc = __webpack_require__(28).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(46)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(55);
var gOPS = __webpack_require__(82);
var pIE = __webpack_require__(57);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(118);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(35);
var gOPN = __webpack_require__(119).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 227 */
/***/ (function(module, exports) {



/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(81)('asyncIterator');


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(81)('observable');


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(231), __esModule: true };

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(232);
module.exports = __webpack_require__(26).Object.assign;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(32);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(233) });


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(27);
var getKeys = __webpack_require__(55);
var gOPS = __webpack_require__(82);
var pIE = __webpack_require__(57);
var toObject = __webpack_require__(79);
var IObject = __webpack_require__(117);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(46)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.once = exports.on = exports.off = void 0;
/**
 * 取消事件绑定
 * @param node - DOM 节点或任何可以绑定事件的对象
 * @param eventName - 事件名
 * @param callback - 回调方法
 * @param useCapture - [useCapture=false] 是否开启事件捕获优先
 */
function _off(node, eventName, callback, useCapture) {
    /* istanbul ignore else */
    if (node.removeEventListener) {
        node.removeEventListener(eventName, callback, useCapture || false);
    }
}
exports.off = _off;
/**
 * 绑定事件
 * @param node - DOM 节点或任何可以绑定事件的对象
 * @param eventName - 事件名
 * @param callback - 回调方法
 * @param useCapture - 是否开启事件捕获优先
 * @returns 返回的 object 中包含一个 off 方法，用于取消事件监听
 *
 * @example
 * const handler = events.on(document.body, 'click', e =\> \{
 *     // handle click ...
 * \});
 * // 取消事件绑定
 * handler.off();
 */
function on(node, eventName, callback, useCapture) {
    /* istanbul ignore else */
    if (node.addEventListener) {
        node.addEventListener(eventName, callback, useCapture || false);
    }
    return {
        off: function off() {
            return _off(node, eventName, callback, useCapture);
        }
    };
}
exports.on = on;
/**
 * 绑定事件，只执行一次后销毁
 * @param node - DOM 节点或任何可以绑定事件的对象
 * @param eventName - 事件名
 * @param callback - 回调方法
 * @param useCapture - 是否开启事件捕获优先
 * @returns 返回的 object 中包含一个 off 方法，用于取消事件监听
 */
function once(node, eventName, callback, useCapture) {
    return on(node, eventName, function __fn() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        callback.apply(this, args);
        // 由于 addEventListener 中的参数 options 只在 Chrome 55、Firefox(Gecko) 以上版本支持，故还是用传统的方法实现 once
        _off(node, eventName, __fn, useCapture);
    }, useCapture);
}
exports.once = once;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.checkRangeDate = exports.checkDate = exports.renderNode = exports.invoke = exports.promiseCall = exports.bindCtx = exports.makeChain = exports.prevent = exports.noop = void 0;
var tslib_1 = __webpack_require__(9);
var object_1 = __webpack_require__(37);
var date_1 = tslib_1.__importDefault(__webpack_require__(84));
/**
 * 一个空方法，返回入参本身或空对象
 */
var noop = function noop() {};
exports.noop = noop;
/**
 * 一个空方法，返回 false
 */
var prevent = function prevent() {
    return false;
};
exports.prevent = prevent;
/**
 * 将 N 个方法合并为一个链式调用的方法
 * @returns 合并后的方法
 * @see https://github.com/react-component/util/
 *
 * @example
 * func.makeChain(this.handleChange, this.props.onChange);
 */
function makeChain() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function chainedFunction() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        for (var i = 0, j = fns.length; i < j; i++) {
            var fn = fns[i];
            if (fn && fn.apply) {
                fn.apply(this, args);
            }
        }
    };
}
exports.makeChain = makeChain;
/**
 * 批量改变方法的上下文
 * 此方法在 react 组件中很有用，在 constructor 中批量将组件上的方法执行上下文绑定到组件本身
 * 注意：用 bind 改变函数运行的上下文只会生效一次
 * @param ctx - 方法挂载的对象以及执行的上下文
 * @param fns - 方法名列表
 *
 * @example
 * func.bindCtx(this, ['handleClick', 'handleChange']);
 */
function bindCtx(ctx, fns, ns) {
    if (typeof fns === 'string') {
        fns = [fns];
    }
    // 方法的挂载空间，如果不传，默认与ctx相同
    ns = ns || ctx;
    fns.forEach(function (fnName) {
        // @ts-expect-error 这里不要添加空方法判断，由调用者保证正确性，否则出了问题无法排查
        ns[fnName] = ns[fnName].bind(ctx);
    });
}
exports.bindCtx = bindCtx;
/**
 * 用于执行回调方法后的逻辑
 * @param ret - 回调方法执行结果
 * @param success - 执行结果返回非 false 的回调
 * @param failure - [failure=noop] 执行结果返回 false 的回调
 */
function promiseCall(ret, success, failure) {
    if (failure === void 0) {
        failure = exports.noop;
    }
    if ((0, object_1.isPromise)(ret)) {
        return ret.then(function (result) {
            success(result);
            return result;
        }).catch(function (e) {
            failure(e);
            // throw e;
        });
    }
    return ret !== false ? success(ret) : failure(ret);
}
exports.promiseCall = promiseCall;
/**
 * 方法调用，如果 obj 对象中存在名为 method 的方法则调用该方法
 * @param target - 目标对象
 * @param method - 方法名
 * @param args - 函数参数列表
 * @returns 函数返回值 如果不存在返回 undefined
 */
function invoke(target, method, args) {
    var func = target && method in target ? target[method] : undefined;
    return func && func.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args || []), false));
}
exports.invoke = invoke;
function renderNode(render, defaultRender, renderProps) {
    if (renderProps === void 0) {
        renderProps = [];
    }
    var r = render !== undefined ? render : defaultRender;
    if (renderProps && !Array.isArray(renderProps)) {
        renderProps = [renderProps];
    }
    return typeof r === 'function' ? r.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(renderProps), false)) : r;
}
exports.renderNode = renderNode;
/**
 * 日期检验：无效值返回 null
 */
function checkDate(value, format) {
    /**
     * 因为 datejs(undefined) 表示当前时间
     * 但是这里期望的是一个空值，即用户不输入值的时候显示为空
     */
    if (value === undefined) {
        value = null;
    }
    var date = format ? (0, date_1.default)(value, format) : (0, date_1.default)(value);
    return date.isValid() ? date : null;
}
exports.checkDate = checkDate;
/**
 * Range 日期检验
 * @param value - 日期值
 * @param inputType - 输入框类型：开始时间输入框/结束时间输入框
 * @param disabled - 是否禁用
 * @param strictly - 是否严格校验：严格模式下不允许开始时间大于结束时间，在显示确认按键的，用户输入过程可不严格校验
 */
function checkRangeDate(value, inputType, disabled, strictly, format) {
    if (strictly === void 0) {
        strictly = true;
    }
    var _a = tslib_1.__read(Array.isArray(value) ? [0, 1].map(function (i) {
        return checkDate(value[i], format);
    }) : [null, null], 2),
        begin = _a[0],
        end = _a[1];
    var _b = tslib_1.__read(Array.isArray(disabled) ? disabled : [disabled, disabled], 2),
        disabledBegin = _b[0],
        disabledEnd = _b[1];
    /**
     * 需要清除其中一个时间，优先清除结束时间，下面情况清除开始时间：
     * 1. 结束时间被 disabled 而开始时间没有被 disabled
     * 2. 开始时间和结束时间都没被 disabled 且当前正在输入是结束时间
     */
    if (strictly && begin && end && begin.isAfter(end)) {
        if (!disabledBegin && disabledEnd ||
        // 本来是 (!disabledBegin && !disabledBegin && inputType === DATE_INPUT_TYPE.END)
        !disabledBegin && !disabledBegin && inputType === 1) {
            return [null, end];
        }
        return [begin, null];
    }
    return [begin, end];
}
exports.checkRangeDate = checkRangeDate;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){"use strict";var e={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},t=/(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\d\d/,r=/\d\d?/,i=/\d*[^-_:/,()\s\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\d\d:?(\d\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if("Z"===e)return 0;var t=e.match(/([+-]|\d\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:"+"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?"pm":"PM");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\d{3}/,function(e){this.milliseconds=+e}],s:[r,a("seconds")],ss:[r,a("seconds")],m:[r,a("minutes")],mm:[r,a("minutes")],H:[r,a("hours")],h:[r,a("hours")],HH:[r,a("hours")],hh:[r,a("hours")],D:[r,a("day")],DD:[n,a("day")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\[|\]/g,"")===e&&(this.day=r)}],M:[r,a("month")],MM:[n,a("month")],MMM:[i,function(e){var t=h("months"),n=(h("monthsShort")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h("months").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\d+/,a("year")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\d{4}/,a("year")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\[|\]$/g,"")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if("string"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,"")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if("string"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if(["x","X"].indexOf(t)>-1)return new Date(("X"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date("")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date("")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(""))}else i.call(this,e)}}}));

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,n){ true?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_updateLocale=n()}(this,(function(){"use strict";return function(e,n,t){t.updateLocale=function(e,n){var o=t.Ls[e];if(o)return(n?Object.keys(n):[]).forEach((function(e){o[e]=n[e]})),o}}}));

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

!function(n,e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):(n="undefined"!=typeof globalThis?globalThis:n||self).dayjs_plugin_localeData=e()}(this,(function(){"use strict";return function(n,e,t){var r=e.prototype,o=function(n){return n&&(n.indexOf?n:n.s)},u=function(n,e,t,r,u){var i=n.name?n:n.$locale(),a=o(i[e]),s=o(i[t]),f=a||s.map((function(n){return n.slice(0,r)}));if(!u)return f;var d=i.weekStart;return f.map((function(n,e){return f[(e+(d||0))%7]}))},i=function(){return t.Ls[t.locale()]},a=function(n,e){return n.formats[e]||function(n){return n.replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(n,e,t){return e||t.slice(1)}))}(n.formats[e.toUpperCase()])},s=function(){var n=this;return{months:function(e){return e?e.format("MMMM"):u(n,"months")},monthsShort:function(e){return e?e.format("MMM"):u(n,"monthsShort","months",3)},firstDayOfWeek:function(){return n.$locale().weekStart||0},weekdays:function(e){return e?e.format("dddd"):u(n,"weekdays")},weekdaysMin:function(e){return e?e.format("dd"):u(n,"weekdaysMin","weekdays",2)},weekdaysShort:function(e){return e?e.format("ddd"):u(n,"weekdaysShort","weekdays",3)},longDateFormat:function(e){return a(n.$locale(),e)},meridiem:this.$locale().meridiem,ordinal:this.$locale().ordinal}};r.localeData=function(){return s.bind(this)()},t.localeData=function(){var n=i();return{firstDayOfWeek:function(){return n.weekStart||0},weekdays:function(){return t.weekdays()},weekdaysShort:function(){return t.weekdaysShort()},weekdaysMin:function(){return t.weekdaysMin()},months:function(){return t.months()},monthsShort:function(){return t.monthsShort()},longDateFormat:function(e){return a(n,e)},meridiem:n.meridiem,ordinal:n.ordinal}},t.months=function(){return u(i(),"months")},t.monthsShort=function(){return u(i(),"monthsShort","months",3)},t.weekdays=function(n){return u(i(),"weekdays",null,null,n)},t.weekdaysShort=function(n){return u(i(),"weekdaysShort","weekdays",3,n)},t.weekdaysMin=function(n){return u(i(),"weekdaysMin","weekdays",2,n)}}}));

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

!function(t,n){ true?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).dayjs_plugin_quarterOfYear=n()}(this,(function(){"use strict";var t="month",n="quarter";return function(e,i){var r=i.prototype;r.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var s=r.add;r.add=function(e,i){return e=Number(e),this.$utils().p(i)===n?this.add(3*e,t):s.bind(this)(e,i)};var u=r.startOf;r.startOf=function(e,i){var r=this.$utils(),s=!!r.u(i)||i;if(r.p(e)===n){var o=this.quarter()-1;return s?this.month(3*o).startOf(t).startOf("day"):this.month(3*o+2).endOf(t).endOf("day")}return u.bind(this)(e,i)}}}));

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_advancedFormat=t()}(this,(function(){"use strict";return function(e,t){var r=t.prototype,n=r.format;r.format=function(e){var t=this,r=this.$locale();if(!this.isValid())return n.bind(this)(e);var s=this.$utils(),a=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|WW|W|zzz|z|gggg|GGGG|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return r.ordinal(t.$D);case"gggg":return t.weekYear();case"GGGG":return t.isoWeekYear();case"wo":return r.ordinal(t.week(),"W");case"w":case"ww":return s.s(t.week(),"w"===e?1:2,"0");case"W":case"WW":return s.s(t.isoWeek(),"W"===e?1:2,"0");case"k":case"kk":return s.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();case"z":return"["+t.offsetName()+"]";case"zzz":return"["+t.offsetName("long")+"]";default:return e}}));return n.bind(this)(a)}}}));

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekOfYear=t()}(this,(function(){"use strict";var e="week",t="year";return function(i,n,r){var f=n.prototype;f.week=function(i){if(void 0===i&&(i=null),null!==i)return this.add(7*(i-this.week()),"day");var n=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var f=r(this).startOf(t).add(1,t).date(n),s=r(this).endOf(e);if(f.isBefore(s))return 1}var a=r(this).startOf(t).date(n).startOf(e).subtract(1,"millisecond"),o=this.diff(a,e,!0);return o<0?r(this).startOf("week").week():Math.ceil(o)},f.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}));

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_plugin_weekYear=t()}(this,(function(){"use strict";return function(e,t){t.prototype.weekYear=function(){var e=this.month(),t=this.week(),n=this.year();return 1===t&&11===e?n+1:0===e&&t>=52?n-1:n}}}));

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,_){ true?module.exports=_(__webpack_require__(123)):"function"==typeof define&&define.amd?define(["dayjs"],_):(e="undefined"!=typeof globalThis?globalThis:e||self).dayjs_locale_zh_cn=_(e.dayjs)}(this,(function(e){"use strict";function _(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=_(e),d={name:"zh-cn",weekdays:"星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),weekdaysShort:"周日_周一_周二_周三_周四_周五_周六".split("_"),weekdaysMin:"日_一_二_三_四_五_六".split("_"),months:"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),monthsShort:"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),ordinal:function(e,_){return"W"===_?e+"周":e+"日"},weekStart:1,yearStart:4,formats:{LT:"HH:mm",LTS:"HH:mm:ss",L:"YYYY/MM/DD",LL:"YYYY年M月D日",LLL:"YYYY年M月D日Ah点mm分",LLLL:"YYYY年M月D日ddddAh点mm分",l:"YYYY/M/D",ll:"YYYY年M月D日",lll:"YYYY年M月D日 HH:mm",llll:"YYYY年M月D日dddd HH:mm"},relativeTime:{future:"%s内",past:"%s前",s:"几秒",m:"1 分钟",mm:"%d 分钟",h:"1 小时",hh:"%d 小时",d:"1 天",dd:"%d 天",M:"1 个月",MM:"%d 个月",y:"1 年",yy:"%d 年"},meridiem:function(e,_){var t=100*e+_;return t<600?"凌晨":t<900?"早上":t<1100?"上午":t<1300?"中午":t<1800?"下午":"晚上"}};return t.default.locale(d,null,!0),d}));

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.flex = exports.transition = exports.animation = void 0;
var dom_1 = __webpack_require__(110);
var object_1 = __webpack_require__(37);
var animationEndEventNames = {
    WebkitAnimation: 'webkitAnimationEnd',
    OAnimation: 'oAnimationEnd',
    animation: 'animationend'
};
var transitionEventNames = {
    WebkitTransition: 'webkitTransitionEnd',
    OTransition: 'oTransitionEnd',
    transition: 'transitionend'
};
/**
 * 是否支持某些动效事件，如果支持，返回相应的 end 事件名
 */
function _supportEnd(names) {
    /* istanbul ignore if */
    if (!dom_1.hasDOM) {
        return false;
    }
    var el = document.createElement('div');
    var ret = false;
    (0, object_1.each)(names, function (val, key) {
        /* istanbul ignore else */
        if (el.style[key] !== undefined) {
            ret = { end: val };
            return false;
        }
    });
    return ret;
}
/**
 * 是否支持某些 CSS 属性
 */
function _supportCSS(names) {
    /* istanbul ignore if */
    if (!dom_1.hasDOM) {
        return false;
    }
    var el = document.createElement('div');
    var ret = false;
    (0, object_1.each)(names, function (val, key) {
        (0, object_1.each)(val, function (item) {
            try {
                el.style[key] = item;
                ret = ret || el.style[key] === item;
            } catch (e) {
                // It will be throw error when set unknown property under IE8
            }
            return !ret; // 如果有一个支持就返回 false，后面不需要再判断
        });
        return !ret;
    });
    return ret;
}
/**
 * 是否支持 animation 以及动画结束事件名
 */
exports.animation = _supportEnd(animationEndEventNames);
/**
 * 是否支持 transition 以及过滤效果结束事件名
 */
exports.transition = _supportEnd(transitionEventNames);
/**
 * 是否支持 flex 属性
 */
exports.flex = _supportCSS({
    display: ['flex', '-webkit-flex', '-moz-flex', '-ms-flexbox']
});

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.focusRef = exports.limitTabRange = exports.backLastFocusNode = exports.clearLastFocusNode = exports.saveLastFocusNode = exports.getFocusNodeList = void 0;
var tslib_1 = __webpack_require__(9);
var keycode_1 = tslib_1.__importDefault(__webpack_require__(124));
var object_1 = __webpack_require__(37);
/**
 * 用于切换页面元素的焦点
 */
/**
 * 元素是否可见
 */
function _isVisible(node) {
    while (node) {
        var nodeName = node.nodeName;
        if (nodeName === 'BODY' || nodeName === 'HTML') {
            break;
        }
        var style = node.style;
        if (style.display === 'none' || style.visibility === 'hidden') {
            return false;
        }
        node = node.parentNode;
    }
    return true;
}
/**
 * 元素是否可以获取焦点
 */
function _isFocusable(node) {
    var nodeName = node.nodeName.toLowerCase();
    var tabIndex = parseInt(node.getAttribute('tabindex'), 10);
    var hasTabIndex = !isNaN(tabIndex) && tabIndex > -1;
    if (_isVisible(node)) {
        if (nodeName === 'input') {
            return !node.disabled && node.type !== 'hidden';
        } else if (['select', 'textarea', 'button'].indexOf(nodeName) > -1) {
            return !node.disabled;
        } else if (nodeName === 'a') {
            return !!node.getAttribute('href') || hasTabIndex;
        } else {
            return hasTabIndex;
        }
    }
    return false;
}
/**
 * 列出能获取焦点的子节点
 * @param node - 容器节点
 */
function getFocusNodeList(node) {
    var res = [];
    var nodeList = node.querySelectorAll('*');
    (0, object_1.each)(nodeList, function (item) {
        if (_isFocusable(item)) {
            var method = item.getAttribute('data-auto-focus') ? 'unshift' : 'push';
            res[method](item);
        }
    });
    if (_isFocusable(node)) {
        res.unshift(node);
    }
    return res;
}
exports.getFocusNodeList = getFocusNodeList;
// 用于记录上一次获得焦点的无素
var lastFocusElement = null;
/**
 * 保存最近一次获得焦点的无素
 */
function saveLastFocusNode() {
    lastFocusElement = document.activeElement;
}
exports.saveLastFocusNode = saveLastFocusNode;
/**
 * 清除焦点记录
 */
function clearLastFocusNode() {
    lastFocusElement = null;
}
exports.clearLastFocusNode = clearLastFocusNode;
/**
 * 尝试将焦点切换到上一个元素
 */
function backLastFocusNode() {
    if (lastFocusElement) {
        try {
            // 元素可能已经被移动了
            lastFocusElement.focus();
        } catch (e) {
            // ignore ...
        }
    }
}
exports.backLastFocusNode = backLastFocusNode;
/**
 * 在限制的范围内切换焦点
 * @param node - 容器节点
 * @param e - 键盘事件
 */
function limitTabRange(node, e) {
    if (e.keyCode === keycode_1.default.TAB) {
        var tabNodeList = getFocusNodeList(node);
        var maxIndex = tabNodeList.length - 1;
        var index = tabNodeList.indexOf(document.activeElement);
        if (index > -1) {
            var targetIndex = index + (e.shiftKey ? -1 : 1);
            targetIndex < 0 && (targetIndex = maxIndex);
            targetIndex > maxIndex && (targetIndex = 0);
            tabNodeList[targetIndex].focus();
            e.preventDefault();
        }
    }
}
exports.limitTabRange = limitTabRange;
/**
 * 检查一个 ref 是否有 focus 方法，如果有方法，则调用 focus 函数
 */
function focusRef(ref) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (ref && ref.focus && typeof ref.focus === 'function') {
        ref.focus.apply(ref, tslib_1.__spreadArray([], tslib_1.__read(args), false));
    }
}
exports.focusRef = focusRef;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
exports.randomId = exports.escapeForId = void 0;
/**
 * Replace characters not allowed for HTML id attributes
 */
function escapeForId(text) {
    if (!text) {
        return '';
    }
    if ((typeof text === "undefined" ? "undefined" : (0, _typeof3.default)(text)) === 'object') {
        text = JSON.stringify(text);
    } else if (typeof text !== 'string') {
        text = String(text);
    }
    return text.replace(/['"]/gm, '').replace(/[\s'"]/gm, '-');
}
exports.escapeForId = escapeForId;
/**
 * Generate a string to be used for HTML id attributes
 *
 * @param prefix - prefix text for the id. Important because without one, eventually there will be 2 elements with the same id on the same page
 * @param max - range for the random number generator. Defaults to 1,000,000, but can be set higher if necessary.
 */
function randomId(prefix, max) {
    if (max === void 0) {
        max = 1000000;
    }
    var rand = Math.ceil(Math.random() * max);
    return prefix ? "".concat(escapeForId(prefix), "-").concat(rand) : rand.toString(10);
}
exports.randomId = randomId;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var attributes = "accept acceptCharset accessKey action allowFullScreen allowTransparency\nalt async autoComplete autoFocus autoPlay capture cellPadding cellSpacing challenge\ncharSet checked classID className colSpan cols content contentEditable contextMenu\ncontrols coords crossOrigin data dateTime default defer dir disabled download draggable\nencType form formAction formEncType formMethod formNoValidate formTarget frameBorder\nheaders height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity\nis keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media\nmediaGroup method min minLength multiple muted name noValidate nonce open\noptimum pattern placeholder poster preload radioGroup readOnly rel required\nreversed role rowSpan rows sandbox scope scoped scrolling seamless selected\nshape size sizes span spellCheck src srcDoc srcLang srcSet start step style\nsummary tabIndex target title type useMap value width wmode wrap".replace(/\s+/g, ' ').replace(/\t|\n|\r/g, '').split(' ');
var eventsName = "onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown\n    onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onClick onContextMenu onDoubleClick\n    onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown\n    onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel\n    onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough\n    onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata\n    onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onError".replace(/\s+/g, ' ').replace(/\t|\n|\r/g, '').split(' ');
var attrsPrefix = ['data-', 'aria-'];
/**
 * 过滤掉无效的透传到 DOM 属性
 */
exports.default = function (props) {
    var attrs = {};
    var _loop_1 = function _loop_1(key) {
        if (attributes.indexOf(key) > -1 || eventsName.indexOf(key) > -1) {
            attrs[key] = props[key];
        } else if (attrsPrefix.map(function (prefix) {
            return new RegExp("^".concat(prefix));
        }).some(function (reg) {
            return key.replace(reg, '') !== key;
        })) {
            attrs[key] = props[key];
        }
    };
    for (var key in props) {
        _loop_1(key);
    }
    return attrs;
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.config = exports.getDirection = exports.getLanguage = exports.getLocale = exports.setDirection = exports.setLocale = exports.setLanguage = exports.initLocales = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var hoist_non_react_statics_1 = tslib_1.__importDefault(__webpack_require__(250));
var util_1 = __webpack_require__(4);
var get_context_props_1 = tslib_1.__importDefault(__webpack_require__(126));
var error_boundary_1 = tslib_1.__importDefault(__webpack_require__(127));
var shallowEqual = util_1.obj.shallowEqual;
function getDisplayName(Component) {
    return Component.displayName || Component.name || 'Component';
}
var globalLocales;
var currentGlobalLanguage = 'zh-cn';
var currentGlobalLocale = {};
var currentGlobalRtl;
function initLocales(locales) {
    globalLocales = locales;
    if (locales) {
        currentGlobalLocale = locales[currentGlobalLanguage];
        if (typeof currentGlobalRtl !== 'boolean') {
            currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
        }
    }
}
exports.initLocales = initLocales;
function setLanguage(language) {
    if (globalLocales) {
        currentGlobalLanguage = language;
        currentGlobalLocale = globalLocales[language];
        if (typeof currentGlobalRtl !== 'boolean') {
            currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
        }
    }
}
exports.setLanguage = setLanguage;
function setLocale(locale) {
    currentGlobalLocale = tslib_1.__assign(tslib_1.__assign({}, globalLocales ? globalLocales[currentGlobalLanguage] : {}), locale);
    if (typeof currentGlobalRtl !== 'boolean') {
        currentGlobalRtl = currentGlobalLocale && currentGlobalLocale.rtl;
    }
}
exports.setLocale = setLocale;
function setDirection(dir) {
    currentGlobalRtl = dir === 'rtl';
}
exports.setDirection = setDirection;
function getLocale() {
    return currentGlobalLocale;
}
exports.getLocale = getLocale;
function getLanguage() {
    return currentGlobalLanguage;
}
exports.getLanguage = getLanguage;
function getDirection() {
    return currentGlobalRtl;
}
exports.getDirection = getDirection;
function isCanPassRefComponent(component) {
    return util_1.obj.isClassComponent(component) || util_1.obj.isForwardRefComponent(component);
}
function config(Component, options) {
    if (options === void 0) {
        options = {};
    }
    // 非 forwardRef 创建的 class component
    if (util_1.obj.isClassComponent(Component) && Component.prototype.shouldComponentUpdate === undefined) {
        // class component: 通过定义 shouldComponentUpdate 改写成 pure component, 有 refs
        Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
            if (this.props.pure) {
                return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
            }
            return true;
        };
    }
    var ConfigedComponent = /** @class */function (_super) {
        tslib_1.__extends(ConfigedComponent, _super);
        function ConfigedComponent(props, context) {
            var _this = _super.call(this, props, context) || this;
            _this._getInstance = _this._getInstance.bind(_this);
            _this._deprecated = _this._deprecated.bind(_this);
            return _this;
        }
        ConfigedComponent.prototype._getInstance = function (ref) {
            var _this = this;
            this._instance = ref;
            if (this._instance && options.exportNames) {
                options.exportNames.forEach(function (name) {
                    var field = _this._instance[name];
                    if (typeof field === 'function') {
                        _this[name] = field.bind(_this._instance);
                    } else {
                        _this[name] = field;
                    }
                });
            }
        };
        ConfigedComponent.prototype._deprecated = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            if (this.context.nextWarning !== false) {
                util_1.log.deprecated.apply(util_1.log, tslib_1.__spreadArray([], tslib_1.__read(args), false));
            }
        };
        ConfigedComponent.prototype.getInstance = function () {
            return this._instance;
        };
        ConfigedComponent.prototype.render = function () {
            var _a = this.props,
                prefix = _a.prefix,
                locale = _a.locale,

            // fixme: defaultPropsConfig is unused
            defaultPropsConfig = _a.defaultPropsConfig,
                pure = _a.pure,
                rtl = _a.rtl,
                device = _a.device,
                popupContainer = _a.popupContainer,
                errorBoundary = _a.errorBoundary,
                others = tslib_1.__rest(_a, ["prefix", "locale", "defaultPropsConfig", "pure", "rtl", "device", "popupContainer", "errorBoundary"]);
            var _b = this.context,
                nextPrefix = _b.nextPrefix,
                _c = _b.nextLocale,
                nextLocale = _c === void 0 ? {} : _c,
                _d = _b.nextDefaultPropsConfig,
                nextDefaultPropsConfig = _d === void 0 ? {} : _d,
                nextPure = _b.nextPure,
                nextRtl = _b.nextRtl,
                nextDevice = _b.nextDevice,
                nextPopupContainer = _b.nextPopupContainer,
                nextErrorBoundary = _b.nextErrorBoundary;
            var displayName = options.componentName || getDisplayName(Component);
            var contextProps = (0, get_context_props_1.default)({
                prefix: prefix,
                locale: locale,
                defaultPropsConfig: defaultPropsConfig,
                pure: pure,
                device: device,
                popupContainer: popupContainer,
                rtl: rtl,
                errorBoundary: errorBoundary
            }, {
                nextPrefix: nextPrefix,
                nextLocale: tslib_1.__assign(tslib_1.__assign({}, currentGlobalLocale), nextLocale),
                nextDefaultPropsConfig: nextDefaultPropsConfig,
                nextPure: nextPure,
                nextDevice: nextDevice,
                nextPopupContainer: nextPopupContainer,
                nextRtl: typeof nextRtl === 'boolean' ? nextRtl : currentGlobalRtl === true ? true : undefined,
                nextErrorBoundary: nextErrorBoundary
            }, displayName);
            // errorBoundary is only for <ErrorBoundary>
            var newContextProps = ['prefix', 'locale', 'pure', 'rtl', 'device', 'popupContainer'].reduce(function (ret, name) {
                if (typeof contextProps[name] !== 'undefined') {
                    // @ts-expect-error ignore assign type error
                    ret[name] = contextProps[name];
                }
                return ret;
            }, {});
            if ('pure' in newContextProps && newContextProps.pure) {
                util_1.log.warning('pure of ConfigProvider is deprecated, use Function Component or React.PureComponent');
            }
            // 对于两个真正消费 popupContainer 的组件来说，正确的名字是 container,
            if ('popupContainer' in newContextProps && this.props.container === undefined && ['Overlay', 'Popup'].indexOf(displayName) > -1) {
                newContextProps.container = newContextProps.popupContainer;
                delete newContextProps.popupContainer;
            }
            var newOthers = options.transform ? options.transform(others, this._deprecated) : others;
            var newProps = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, contextProps.defaultPropsConfig[displayName]), newOthers), newContextProps);
            // 仅向 class or forwardRef component 传递 ref，否则 react 会报一个 warning
            if (isCanPassRefComponent(Component)) {
                newProps.ref = this._getInstance;
            }
            var content = react_1.default.createElement(Component, tslib_1.__assign({}, newProps));
            var _e = contextProps.errorBoundary,
                open = _e.open,
                othersBoundary = tslib_1.__rest(_e, ["open"]);
            return open ? react_1.default.createElement(error_boundary_1.default, tslib_1.__assign({}, othersBoundary), content) : content;
        };
        ConfigedComponent.displayName = "Config(".concat(getDisplayName(Component), ")");
        ConfigedComponent.propTypes = tslib_1.__assign(tslib_1.__assign({}, Component.propTypes || {}), { prefix: prop_types_1.default.string, locale: prop_types_1.default.object, defaultPropsConfig: prop_types_1.default.object, pure: prop_types_1.default.bool, rtl: prop_types_1.default.bool, device: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']), popupContainer: prop_types_1.default.any, errorBoundary: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object]) });
        ConfigedComponent.contextTypes = tslib_1.__assign(tslib_1.__assign({}, Component.contextTypes || {}), { nextPrefix: prop_types_1.default.string, nextLocale: prop_types_1.default.object, nextDefaultPropsConfig: prop_types_1.default.object, nextPure: prop_types_1.default.bool, nextRtl: prop_types_1.default.bool, nextWarning: prop_types_1.default.bool, nextDevice: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']), nextPopupContainer: prop_types_1.default.any, nextErrorBoundary: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object]) });
        return ConfigedComponent;
    }(react_1.default.Component);
    (0, hoist_non_react_statics_1.default)(ConfigedComponent, Component);
    // 这里将 ConfigedComponent 推断一个限定的类型，以简化生成的类型代码
    return ConfigedComponent;
}
exports.config = config;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(251);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(252);
} else {
  module.exports = require('./cjs/react-is.development.js');
}


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
/**
 * Creates an object with the same values as object and keys
 * generated by running each own enumerable string keyed property
 * of object thru iteratee.
 */
var mapKeys = function mapKeys(obj, fn) {
    var result = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var value = obj[key];
            var newKey = fn(key, value);
            result[newKey] = value;
        }
    }
    return result;
};
/**
 * Replace specific key with prefix `next`
 * and lowercase first character of the result.
 */
var replaceKey = function replaceKey(key) {
    return key.replace(/^(next)([A-Z])/, function (match, p1, p2) {
        return p2.toLowerCase();
    });
};
var transformContext = function transformContext(source) {
    return mapKeys(source, replaceKey);
};
/**
 * Consumer
 */
var Consumer = function Consumer(_a, context) {
    var children = _a.children;
    return typeof children === 'function' ? children(transformContext(context)) : null;
};
/**
 * PropTypes
 */
Consumer.propTypes = {
    // Render context as function
    // Function(context: object): ReactElement
    children: prop_types_1.default.func
};
/**
 * ContextTypes (legacy context)
 */
Consumer.contextTypes = {
    nextPrefix: prop_types_1.default.string,
    nextLocale: prop_types_1.default.object,
    nextPure: prop_types_1.default.bool,
    newRtl: prop_types_1.default.bool,
    nextWarning: prop_types_1.default.bool,
    nextDevice: prop_types_1.default.oneOf(['tablet', 'desktop', 'phone']),
    nextPopupContainer: prop_types_1.default.any
};
exports.default = Consumer;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var Cache = /** @class */function () {
    function Cache() {
        this._root = null;
        this._store = new Map();
    }
    Cache.prototype.empty = function () {
        return this._store.size === 0;
    };
    Cache.prototype.has = function (key) {
        return this._store.has(key);
    };
    Cache.prototype.get = function (key, defaultValue) {
        var res = this.has(key) ? this._store.get(key) : this.root();
        return typeof res === 'undefined' || res === null ? defaultValue : res;
    };
    Cache.prototype.add = function (key, value) {
        if (this.empty()) {
            this._root = key;
        }
        this._store.set(key, value);
    };
    Cache.prototype.update = function (key, value) {
        if (this.has(key)) {
            this._store.set(key, value);
        }
    };
    Cache.prototype.remove = function (key) {
        this._store.delete(key);
        if (key === this._root) {
            var maps = this._store.keys();
            // 如果当前销毁的实例刚好是 root，那么从 map 中取下一个加入的节点当作 root
            var nextkey = maps.next().value;
            this._root = nextkey;
        }
    };
    Cache.prototype.clear = function () {
        this._store.clear();
    };
    Cache.prototype.root = function () {
        return this._store.get(this._root);
    };
    return Cache;
}();
exports.default = Cache;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodeHeight = exports.getRect = exports.getScroll = void 0;
function getScroll(node, isVertical) {
    if (typeof window === 'undefined') {
        return 0;
    }
    var windowProp = isVertical ? 'pageYOffset' : 'pageXOffset';
    var elementProp = isVertical ? 'scrollTop' : 'scrollLeft';
    return node === window ? node[windowProp] : node[elementProp];
}
exports.getScroll = getScroll;
function getRect(node) {
    return node !== window ? node.getBoundingClientRect() : { top: 0, left: 0, bottom: 0 };
}
exports.getRect = getRect;
function getNodeHeight(node) {
    if (!node) {
        return 0;
    }
    if (node === window) {
        return window.innerHeight;
    }
    return node.clientHeight;
}
exports.getNodeHeight = getNodeHeight;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var PropTypes = _interopRequireWildcard(__webpack_require__(1));

var _addClass = _interopRequireDefault(__webpack_require__(257));

var _removeClass = _interopRequireDefault(__webpack_require__(260));

var _react = _interopRequireDefault(__webpack_require__(0));

var _Transition = _interopRequireDefault(__webpack_require__(129));

var _PropTypes = __webpack_require__(130);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var addClass = function addClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _addClass.default)(node, c);
  });
};

var removeClass = function removeClass(node, classes) {
  return node && classes && classes.split(' ').forEach(function (c) {
    return (0, _removeClass.default)(node, c);
  });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
 * using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity: 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**.
 */


var CSSTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(CSSTransition, _React$Component);

  function CSSTransition() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _this.onEnter = function (node, appearing) {
      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
          className = _this$getClassNames.className;

      _this.removeClasses(node, 'exit');

      addClass(node, className);

      if (_this.props.onEnter) {
        _this.props.onEnter(node, appearing);
      }
    };

    _this.onEntering = function (node, appearing) {
      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
          activeClassName = _this$getClassNames2.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onEntering) {
        _this.props.onEntering(node, appearing);
      }
    };

    _this.onEntered = function (node, appearing) {
      var appearClassName = _this.getClassNames('appear').doneClassName;

      var enterClassName = _this.getClassNames('enter').doneClassName;

      var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;

      _this.removeClasses(node, appearing ? 'appear' : 'enter');

      addClass(node, doneClassName);

      if (_this.props.onEntered) {
        _this.props.onEntered(node, appearing);
      }
    };

    _this.onExit = function (node) {
      var _this$getClassNames3 = _this.getClassNames('exit'),
          className = _this$getClassNames3.className;

      _this.removeClasses(node, 'appear');

      _this.removeClasses(node, 'enter');

      addClass(node, className);

      if (_this.props.onExit) {
        _this.props.onExit(node);
      }
    };

    _this.onExiting = function (node) {
      var _this$getClassNames4 = _this.getClassNames('exit'),
          activeClassName = _this$getClassNames4.activeClassName;

      _this.reflowAndAddClass(node, activeClassName);

      if (_this.props.onExiting) {
        _this.props.onExiting(node);
      }
    };

    _this.onExited = function (node) {
      var _this$getClassNames5 = _this.getClassNames('exit'),
          doneClassName = _this$getClassNames5.doneClassName;

      _this.removeClasses(node, 'exit');

      addClass(node, doneClassName);

      if (_this.props.onExited) {
        _this.props.onExited(node);
      }
    };

    _this.getClassNames = function (type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === 'string';
      var prefix = isStringClassNames && classNames ? classNames + '-' : '';
      var className = isStringClassNames ? prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];
      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];
      return {
        className: className,
        activeClassName: activeClassName,
        doneClassName: doneClassName
      };
    };

    return _this;
  }

  var _proto = CSSTransition.prototype;

  _proto.removeClasses = function removeClasses(node, type) {
    var _this$getClassNames6 = this.getClassNames(type),
        className = _this$getClassNames6.className,
        activeClassName = _this$getClassNames6.activeClassName,
        doneClassName = _this$getClassNames6.doneClassName;

    className && removeClass(node, className);
    activeClassName && removeClass(node, activeClassName);
    doneClassName && removeClass(node, doneClassName);
  };

  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
    // This is for to force a repaint,
    // which is necessary in order to transition styles when adding a class name.
    if (className) {
      /* eslint-disable no-unused-expressions */
      node && node.scrollTop;
      /* eslint-enable no-unused-expressions */

      addClass(node, className);
    }
  };

  _proto.render = function render() {
    var props = _extends({}, this.props);

    delete props.classNames;
    return _react.default.createElement(_Transition.default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };

  return CSSTransition;
}(_react.default.Component);

CSSTransition.defaultProps = {
  classNames: ''
};
CSSTransition.propTypes =  false ? _extends({}, _Transition.default.propTypes, {
  /**
   * The animation classNames applied to the component as it enters, exits or
   * has finished the transition. A single name can be provided and it will be
   * suffixed for each stage: e.g.
   *
   * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
   *
   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
   * This allows you to define different behavior for when appearing is done and
   * when regular entering is done, using selectors like
   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
   * epic entrance animation when element first appears in the DOM using
   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   * simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: _PropTypes.classNamesShape,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExit: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: PropTypes.func,

  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * @type Function(node: HtmlElement)
   */
  onExited: PropTypes.func
}) : {};
var _default = CSSTransition;
exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(258);

exports.__esModule = true;
exports.default = addClass;

var _hasClass = _interopRequireDefault(__webpack_require__(259));

function addClass(element, className) {
  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
}

module.exports = exports["default"];

/***/ }),
/* 258 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = hasClass;

function hasClass(element, className) {
  if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

module.exports = exports["default"];

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}

module.exports = function removeClass(element, className) {
  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
};

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(1));

var _react = _interopRequireDefault(__webpack_require__(0));

var _reactDom = __webpack_require__(13);

var _TransitionGroup = _interopRequireDefault(__webpack_require__(131));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */
var ReplaceTransition =
/*#__PURE__*/
function (_React$Component) {
  _inheritsLoose(ReplaceTransition, _React$Component);

  function ReplaceTransition() {
    var _this;

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;

    _this.handleEnter = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return _this.handleLifecycle('onEnter', 0, args);
    };

    _this.handleEntering = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return _this.handleLifecycle('onEntering', 0, args);
    };

    _this.handleEntered = function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return _this.handleLifecycle('onEntered', 0, args);
    };

    _this.handleExit = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return _this.handleLifecycle('onExit', 1, args);
    };

    _this.handleExiting = function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return _this.handleLifecycle('onExiting', 1, args);
    };

    _this.handleExited = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return _this.handleLifecycle('onExited', 1, args);
    };

    return _this;
  }

  var _proto = ReplaceTransition.prototype;

  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;

    var children = this.props.children;

    var child = _react.default.Children.toArray(children)[idx];

    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));
  };

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        inProp = _this$props.in,
        props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);

    var _React$Children$toArr = _react.default.Children.toArray(children),
        first = _React$Children$toArr[0],
        second = _React$Children$toArr[1];

    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
      key: 'first',
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : _react.default.cloneElement(second, {
      key: 'second',
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };

  return ReplaceTransition;
}(_react.default.Component);

ReplaceTransition.propTypes =  false ? {
  in: _propTypes.default.bool.isRequired,
  children: function children(props, propName) {
    if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
    return null;
  }
} : {};
var _default = ReplaceTransition;
exports.default = _default;
module.exports = exports["default"];

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getChildMapping = getChildMapping;
exports.mergeChildMappings = mergeChildMappings;
exports.getInitialChildMapping = getInitialChildMapping;
exports.getNextChildMapping = getNextChildMapping;

var _react = __webpack_require__(0);

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */
function getChildMapping(children, mapFn) {
  var mapper = function mapper(child) {
    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
  };

  var result = Object.create(null);
  if (children) _react.Children.map(children, function (c) {
    return c;
  }).forEach(function (child) {
    // run the map function here instead so that the key is the computed one
    result[child.key] = mapper(child);
  });
  return result;
}
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */


function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};

  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  } // For each key of `next`, the list of keys to insert before that key in
  // the combined list


  var nextKeysPending = Object.create(null);
  var pendingKeys = [];

  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }

  var i;
  var childMapping = {};

  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }

    childMapping[nextKey] = getValueForKey(nextKey);
  } // Finally, add the keys which didn't appear before any key in `next`


  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }

  return childMapping;
}

function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}

function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function (child) {
    return (0, _react.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, 'appear', props),
      enter: getProp(child, 'enter', props),
      exit: getProp(child, 'exit', props)
    });
  });
}

function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function (key) {
    var child = children[key];
    if (!(0, _react.isValidElement)(child)) return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)

    if (hasNext && (!hasPrev || isLeaving)) {
      // console.log('entering', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      // item is old (exiting)
      // console.log('leaving', key)
      children[key] = (0, _react.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
      // item hasn't changed transition states
      // copy over the last transition props;
      // console.log('unchanged', key)
      children[key] = (0, _react.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, 'exit', nextProps),
        enter: getProp(child, 'enter', nextProps)
      });
    }
  });
  return children;
}

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_transition_group_1 = __webpack_require__(85);
var util_1 = __webpack_require__(4);
var noop = function noop() {};
var on = util_1.events.on,
    off = util_1.events.off;
var addClass = util_1.dom.addClass,
    removeClass = util_1.dom.removeClass;
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
function getStyleProperty(node, name) {
    var style = window.getComputedStyle(node);
    var ret = '';
    for (var i = 0; i < prefixes.length; i++) {
        ret = style.getPropertyValue(prefixes[i] + name);
        if (ret) {
            break;
        }
    }
    return ret;
}
var AnimateChild = /** @class */function (_super) {
    tslib_1.__extends(AnimateChild, _super);
    function AnimateChild(props) {
        var _this_1 = _super.call(this, props) || this;
        util_1.func.bindCtx(_this_1, ['handleEnter', 'handleEntering', 'handleEntered', 'handleExit', 'handleExiting', 'handleExited', 'addEndListener']);
        _this_1.endListeners = {
            transitionend: [],
            animationend: []
        };
        _this_1.timeoutMap = {};
        return _this_1;
    }
    AnimateChild.prototype.componentWillUnmount = function () {
        var _this_1 = this;
        Object.keys(this.endListeners).forEach(function (eventName) {
            _this_1.endListeners[eventName].forEach(function (listener) {
                off(_this_1.node, eventName, listener);
            });
        });
        this.endListeners = {
            transitionend: [],
            animationend: []
        };
    };
    AnimateChild.prototype.generateEndListener = function (node, done, eventName, id) {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        var _this = this;
        return function endListener(e) {
            if (e && e.target === node) {
                if (_this.timeoutMap[id]) {
                    clearTimeout(_this.timeoutMap[id]);
                    delete _this.timeoutMap[id];
                }
                done();
                off(node, eventName, endListener);
                var listeners = _this.endListeners[eventName];
                var index = listeners.indexOf(endListener);
                index > -1 && listeners.splice(index, 1);
            }
        };
    };
    AnimateChild.prototype.addEndListener = function (node, done) {
        var _this_1 = this;
        if (util_1.support.transition || util_1.support.animation) {
            var id_1 = (0, util_1.guid)();
            this.node = node;
            if (util_1.support.transition) {
                var transitionEndListener = this.generateEndListener(node, done, 'transitionend', id_1);
                on(node, 'transitionend', transitionEndListener);
                this.endListeners.transitionend.push(transitionEndListener);
            }
            if (util_1.support.animation) {
                var animationEndListener = this.generateEndListener(node, done, 'animationend', id_1);
                on(node, 'animationend', animationEndListener);
                this.endListeners.animationend.push(animationEndListener);
            }
            setTimeout(function () {
                var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
                var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
                var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
                var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
                var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
                if (time) {
                    _this_1.timeoutMap[id_1] = window.setTimeout(function () {
                        done();
                    }, time * 1000 + 200);
                }
            }, 15);
        } else {
            done();
        }
    };
    AnimateChild.prototype.removeEndtListener = function () {
        this.transitionOff && this.transitionOff();
        this.animationOff && this.animationOff();
    };
    AnimateChild.prototype.removeClassNames = function (node, names) {
        Object.keys(names).forEach(function (key) {
            removeClass(node, names[key]);
        });
    };
    AnimateChild.prototype.handleEnter = function (node, isAppearing) {
        var names = this.props.names;
        if (names) {
            this.removeClassNames(node, names);
            var className = isAppearing ? 'appear' : 'enter';
            addClass(node, names[className]);
        }
        var hook = isAppearing ? this.props.onAppear : this.props.onEnter;
        hook(node);
    };
    AnimateChild.prototype.handleEntering = function (node, isAppearing) {
        var _this_1 = this;
        setTimeout(function () {
            var names = _this_1.props.names;
            if (names) {
                var className = isAppearing ? 'appearActive' : 'enterActive';
                addClass(node, names[className]);
            }
            var hook = isAppearing ? _this_1.props.onAppearing : _this_1.props.onEntering;
            hook(node);
        }, 10);
    };
    AnimateChild.prototype.handleEntered = function (node, isAppearing) {
        var names = this.props.names;
        if (names) {
            var classNames = isAppearing ? [names.appear, names.appearActive] : [names.enter, names.enterActive];
            classNames.forEach(function (className) {
                removeClass(node, className);
            });
        }
        var hook = isAppearing ? this.props.onAppeared : this.props.onEntered;
        hook(node);
    };
    AnimateChild.prototype.handleExit = function (node) {
        var names = this.props.names;
        if (names) {
            this.removeClassNames(node, names);
            addClass(node, names.leave);
        }
        this.props.onExit(node);
    };
    AnimateChild.prototype.handleExiting = function (node) {
        var _this_1 = this;
        setTimeout(function () {
            var names = _this_1.props.names;
            if (names) {
                addClass(node, names.leaveActive);
            }
            _this_1.props.onExiting(node);
        }, 10);
    };
    AnimateChild.prototype.handleExited = function (node) {
        var names = this.props.names;
        if (names) {
            [names.leave, names.leaveActive].forEach(function (className) {
                removeClass(node, className);
            });
        }
        this.props.onExited(node);
    };
    AnimateChild.prototype.render = function () {
        var _a = this.props,
            names = _a.names,
            onAppear = _a.onAppear,
            onAppeared = _a.onAppeared,
            onAppearing = _a.onAppearing,
            onEnter = _a.onEnter,
            onEntering = _a.onEntering,
            onEntered = _a.onEntered,
            onExit = _a.onExit,
            onExiting = _a.onExiting,
            onExited = _a.onExited,
            others = tslib_1.__rest(_a, ["names", "onAppear", "onAppeared", "onAppearing", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited"]);
        return react_1.default.createElement(react_transition_group_1.Transition, tslib_1.__assign({}, others, { onEnter: this.handleEnter, onEntering: this.handleEntering, onEntered: this.handleEntered, onExit: this.handleExit, onExiting: this.handleExiting, onExited: this.handleExited, addEndListener: this.addEndListener }));
    };
    AnimateChild.displayName = 'AnimateChild';
    AnimateChild.propTypes = {
        names: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),
        onAppear: prop_types_1.default.func,
        onAppearing: prop_types_1.default.func,
        onAppeared: prop_types_1.default.func,
        onEnter: prop_types_1.default.func,
        onEntering: prop_types_1.default.func,
        onEntered: prop_types_1.default.func,
        onExit: prop_types_1.default.func,
        onExiting: prop_types_1.default.func,
        onExited: prop_types_1.default.func
    };
    AnimateChild.defaultProps = {
        onAppear: noop,
        onAppearing: noop,
        onAppeared: noop,
        onEnter: noop,
        onEntering: noop,
        onEntered: noop,
        onExit: noop,
        onExiting: noop,
        onExited: noop
    };
    return AnimateChild;
}(react_1.Component);
exports.default = AnimateChild;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var util_1 = __webpack_require__(4);
var animate_1 = tslib_1.__importDefault(__webpack_require__(128));
var noop = function noop() {};
var getStyle = util_1.dom.getStyle;
var Expand = /** @class */function (_super) {
    tslib_1.__extends(Expand, _super);
    function Expand(props) {
        var _this = _super.call(this, props) || this;
        util_1.func.bindCtx(_this, ['beforeEnter', 'onEnter', 'afterEnter', 'beforeLeave', 'onLeave', 'afterLeave']);
        return _this;
    }
    Expand.prototype.beforeEnter = function (node) {
        if (this.leaving) {
            this.afterLeave(node);
        }
        this.cacheCurrentStyle(node);
        this.cacheComputedStyle(node);
        this.setCurrentStyleToZero(node);
        this.props.beforeEnter(node);
    };
    Expand.prototype.onEnter = function (node) {
        this.setCurrentStyleToComputedStyle(node);
        this.props.onEnter(node);
    };
    Expand.prototype.afterEnter = function (node) {
        this.restoreCurrentStyle(node);
        this.props.afterEnter(node);
    };
    Expand.prototype.beforeLeave = function (node) {
        this.leaving = true;
        this.cacheCurrentStyle(node);
        this.cacheComputedStyle(node);
        this.setCurrentStyleToComputedStyle(node);
        this.props.beforeLeave(node);
    };
    Expand.prototype.onLeave = function (node) {
        this.setCurrentStyleToZero(node);
        this.props.onLeave(node);
    };
    Expand.prototype.afterLeave = function (node) {
        this.leaving = false;
        this.restoreCurrentStyle(node);
        this.props.afterLeave(node);
    };
    Expand.prototype.cacheCurrentStyle = function (node) {
        this.styleBorderTopWidth = node.style.borderTopWidth;
        this.stylePaddingTop = node.style.paddingTop;
        this.styleHeight = node.style.height;
        this.stylePaddingBottom = node.style.paddingBottom;
        this.styleBorderBottomWidth = node.style.borderBottomWidth;
    };
    Expand.prototype.cacheComputedStyle = function (node) {
        this.borderTopWidth = getStyle(node, 'borderTopWidth');
        this.paddingTop = getStyle(node, 'paddingTop');
        this.height = node.offsetHeight;
        this.paddingBottom = getStyle(node, 'paddingBottom');
        this.borderBottomWidth = getStyle(node, 'borderBottomWidth');
    };
    Expand.prototype.setCurrentStyleToZero = function (node) {
        node.style.borderTopWidth = '0px';
        node.style.paddingTop = '0px';
        node.style.height = '0px';
        node.style.paddingBottom = '0px';
        node.style.borderBottomWidth = '0px';
    };
    Expand.prototype.setCurrentStyleToComputedStyle = function (node) {
        node.style.borderTopWidth = "".concat(this.borderTopWidth, "px");
        node.style.paddingTop = "".concat(this.paddingTop, "px");
        node.style.height = "".concat(this.height, "px");
        node.style.paddingBottom = "".concat(this.paddingBottom, "px");
        node.style.borderBottomWidth = "".concat(this.borderBottomWidth, "px");
    };
    Expand.prototype.restoreCurrentStyle = function (node) {
        node.style.borderTopWidth = this.styleBorderTopWidth;
        node.style.paddingTop = this.stylePaddingTop;
        node.style.height = this.styleHeight;
        node.style.paddingBottom = this.stylePaddingBottom;
        node.style.borderBottomWidth = this.styleBorderBottomWidth;
    };
    Expand.prototype.render = function () {
        var _a = this.props,
            animation = _a.animation,
            others = tslib_1.__rest(_a, ["animation"]);
        var newAnimation = animation || 'expand';
        return react_1.default.createElement(animate_1.default, tslib_1.__assign({}, others, { animation: newAnimation, beforeEnter: this.beforeEnter, onEnter: this.onEnter, afterEnter: this.afterEnter, beforeLeave: this.beforeLeave, onLeave: this.onLeave, afterLeave: this.afterLeave }));
    };
    Expand.displayName = 'Expand';
    Expand.propTypes = {
        animation: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.object]),
        beforeEnter: prop_types_1.default.func,
        onEnter: prop_types_1.default.func,
        afterEnter: prop_types_1.default.func,
        beforeLeave: prop_types_1.default.func,
        onLeave: prop_types_1.default.func,
        afterLeave: prop_types_1.default.func
    };
    Expand.defaultProps = {
        beforeEnter: noop,
        onEnter: noop,
        afterEnter: noop,
        beforeLeave: noop,
        onLeave: noop,
        afterLeave: noop
    };
    return Expand;
}(react_1.Component);
exports.default = Expand;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var react_transition_group_1 = __webpack_require__(85);
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var OverlayAnimate = function OverlayAnimate(props) {
    var animation = props.animation,
        visible = props.visible,
        children = props.children,
        _a = props.timeout,
        timeout = _a === void 0 ? 300 : _a,
        style = props.style,
        mountOnEnter = props.mountOnEnter,
        unmountOnExit = props.unmountOnExit,
        appear = props.appear,
        enter = props.enter,
        exit = props.exit,
        onEnter = props.onEnter,
        onEntering = props.onEntering,
        onEntered = props.onEntered,
        onExit = props.onExit,
        onExiting = props.onExiting,
        onExited = props.onExited,
        others = tslib_1.__rest(props, ["animation", "visible", "children", "timeout", "style", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited"]);
    var animateProps = {
        mountOnEnter: mountOnEnter,
        unmountOnExit: unmountOnExit,
        appear: appear,
        enter: enter,
        exit: exit,
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited
    };
    Object.keys(animateProps).forEach(function (k) {
        if (!(k in props) || typeof props[k] === 'undefined') {
            delete animateProps[k];
        }
    });
    var animationMap = typeof animation === 'string' ? { in: animation, out: animation } : animation;
    var animateClsMap = animationMap ? {
        entering: animationMap.in,
        exiting: animationMap.out
    } : {};
    if (animation === false) {
        animateClsMap.entering = '';
        animateClsMap.exiting = '';
    }
    return react_1.default.createElement(react_transition_group_1.Transition, tslib_1.__assign({}, animateProps, { in: visible, timeout: animation ? timeout : 0, appear: true }), function (state) {
        var _a;
        var cls = (0, classnames_1.default)((_a = {}, _a[children.props.className] = !!children.props.className, _a[animateClsMap[state]] = state in animateClsMap && animateClsMap[state], _a));
        var childProps = tslib_1.__assign(tslib_1.__assign({}, others), { className: cls });
        if (style && children.props && children.props.style) {
            childProps.style = (0, _extends3.default)({}, children.props.style, style);
        }
        return react_1.default.cloneElement(children, childProps);
    });
};
exports.default = OverlayAnimate;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var sup_1 = tslib_1.__importDefault(__webpack_require__(267));
/**
 * Badge
 */
var Badge = /** @class */function (_super) {
    tslib_1.__extends(Badge, _super);
    function Badge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Badge.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            dot = _b.dot,
            className = _b.className,
            children = _b.children,
            content = _b.content,
            style = _b.style,
            rtl = _b.rtl,
            originCount = _b.count,
            showZero = _b.showZero,
            originOverflowCount = _b.overflowCount;
        var count = parseInt(originCount, 10);
        var overflowCount = parseInt(originOverflowCount, 10);
        var others = util_1.obj.pickOthers(Badge.propTypes, this.props);
        // 如果是数字，则添加默认的 title
        if (count || count === 0 && showZero) {
            others.title = others.title || "".concat(count);
        }
        var classes = (0, classnames_1.default)("".concat(prefix, "badge"), (_a = {}, _a["".concat(prefix, "badge-not-a-wrapper")] = !children, _a), className);
        return react_1.default.createElement("span", tslib_1.__assign({ dir: rtl ? 'rtl' : undefined, className: classes }, others), children, react_1.default.createElement(sup_1.default, { prefix: prefix, content: content, count: count, showZero: showZero, overflowCount: overflowCount, dot: dot, style: style }));
    };
    Badge.propTypes = {
        // 样式类名的品牌前缀
        prefix: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        // 自定义类名
        className: prop_types_1.default.string,
        // 自定义内联样式
        style: prop_types_1.default.object,
        /**
         * 徽标依托的内容，一般显示在其右上方
         */
        children: prop_types_1.default.node,
        /**
         * 展示的数字，大于 `overflowCount` 时显示为 `${overflowCount}+`，为 `0` 时默认隐藏
         */
        count: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
        /**
         * 当`count`为`0`时，是否显示 count
         * @version 1.16
         */
        showZero: prop_types_1.default.bool,
        /**
         * 自定义徽标中的内容
         */
        content: prop_types_1.default.node,
        /**
         * 展示的封顶的数字
         */
        overflowCount: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
        /**
         * 不展示数字，只展示一个小红点
         */
        dot: prop_types_1.default.bool
    };
    Badge.defaultProps = {
        prefix: 'next-',
        count: 0,
        showZero: false,
        overflowCount: 99,
        dot: false
    };
    return Badge;
}(react_1.Component);
exports.default = config_provider_1.default.config(Badge);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var util_1 = __webpack_require__(4);
/**
 * badge sup component
 */
// util::getDigitArray
var getDigitArray = function getDigitArray(num) {
    return num.toString().split('').reverse().map(function (i) {
        return parseInt(i, 10);
    });
};
var Sup = /** @class */function (_super) {
    tslib_1.__extends(Sup, _super);
    function Sup(props) {
        var _this = _super.call(this, props) || this;
        _this.saveRef = function (ref) {
            _this.supEl = ref;
        };
        // render 时，上一次的渲染数字 和 当前渲染的数字
        _this.state = {
            lastCount: 0,
            currentCount: props.count
        };
        return _this;
    }
    // 单排可滚动的数字列表
    Sup.renderDigit = function (prefix, digit, key) {
        var children = [];
        for (var i = 0; i < 30; i++) {
            children.push(react_1.default.createElement("span", { key: i }, i % 10));
        }
        return react_1.default.createElement("span", { className: "".concat(prefix, "badge-scroll-number-only"), key: key }, children);
    };
    // 可滚动数字组
    Sup.renderNumber = function (prefix, count) {
        return getDigitArray(count).map(function (digit, i) {
            return Sup.renderDigit(prefix, digit, i);
        }).reverse();
    };
    Sup.getDerivedStateFromProps = function (nextProps, prevState) {
        if ('count' in nextProps) {
            return {
                lastCount: prevState.currentCount,
                currentCount: nextProps.count
            };
        }
        return null;
    };
    Sup.prototype.componentDidMount = function () {
        this.computeStyle(true);
    };
    Sup.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (prevProps.count !== this.props.count) {
            this.computeStyle(false);
            // NOTE why called `computeStyle` again after 300ms ?
            setTimeout(function () {
                _this.computeStyle(true, true);
            }, 300);
        }
    };
    Sup.prototype.computeStyle = function (removeTransition, revert) {
        var _this = this;
        var _a = this.props,
            prefix = _a.prefix,
            count = _a.count,
            overflowCount = _a.overflowCount;
        var lastCount = this.state.lastCount;
        if (lastCount === undefined || count === undefined || overflowCount === undefined || Number(count) < 0) {
            return;
        }
        var supNode = this.supEl;
        if (supNode && util_1.dom.hasClass(supNode, "".concat(prefix, "badge-count"))) {
            var scrollNums_1 = supNode.querySelectorAll(".".concat(prefix, "badge-scroll-number-only"));
            if (scrollNums_1.length) {
                var height_1 = window.getComputedStyle(supNode).height;
                scrollNums_1 = [].slice.call(scrollNums_1, 0).reverse();
                getDigitArray(count).forEach(function (digit, i) {
                    var position = _this.getPositionByDigit(digit, i, revert);
                    var transformTo = -position * parseFloat(height_1);
                    removeTransition = removeTransition || typeof getDigitArray(lastCount)[i] === 'undefined' || lastCount > overflowCount || Number(lastCount) <= 0;
                    var scrollStyle = util_1.support.animation ? {
                        transition: removeTransition ? 'none' : 'transform .3s cubic-bezier(.645, .045, .355, 1), -webkit-transform .3s cubic-bezier(.645, .045, .355, 1)',
                        WebkitTransform: "translateY(".concat(transformTo, "px)"),
                        transform: "translateY(".concat(transformTo, "px)"),
                        height: height_1,
                        lineHeight: height_1
                    } : {
                        top: "".concat(transformTo, "px"),
                        height: height_1,
                        lineHeight: height_1
                    };
                    Object.keys(scrollStyle).forEach(function (key) {
                        scrollNums_1[i].style.setProperty(key, scrollStyle[key]);
                    });
                });
            }
        }
    };
    Sup.prototype.getPositionByDigit = function (digit, i, revert) {
        var lastCount = this.state.lastCount;
        if (revert) {
            return 10 + digit;
        }
        var lastDigit = getDigitArray(lastCount)[i] || 0;
        if (this.props.count > lastCount) {
            return (digit >= lastDigit ? 10 : 20) + digit;
        }
        if (digit <= lastDigit) {
            return 10 + digit;
        }
        return digit;
    };
    Sup.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            count = _b.count,
            showZero = _b.showZero,
            _c = _b.overflowCount,
            overflowCount = _c === void 0 ? 99 : _c,
            dot = _b.dot,
            style = _b.style,
            content = _b.content;
        var supClasses = (0, classnames_1.default)("".concat(prefix, "badge-scroll-number"), (_a = {}, _a["".concat(prefix, "badge-count")] = !!count || count === 0 && showZero, _a["".concat(prefix, "badge-dot")] = dot, _a["".concat(prefix, "badge-custom")] = !!content, _a));
        var children = null;
        var show = dot || count > 0 || count === 0 && showZero || content;
        if (count > 0 || count === 0 && showZero) {
            var realCount = overflowCount > 0 && count > overflowCount ? "".concat(overflowCount, "+") : count;
            children = isNaN(realCount) ? realCount : Sup.renderNumber(prefix, count);
        } else if (content) {
            children = content;
        }
        var animation = {
            appear: 'zoomIn',
            enter: 'zoomIn',
            leave: 'zoomOut'
        };
        var wrapper = util_1.support.animation ? react_1.default.createElement(animate_1.default, { animation: animation }) : react_1.default.createElement("span", null);
        var element = show ? react_1.default.createElement("sup", { ref: this.saveRef, className: supClasses, style: style }, children) : null;
        return react_1.default.cloneElement(wrapper, {}, element);
    };
    Sup.propTypes = {
        prefix: prop_types_1.default.string,
        count: prop_types_1.default.number,
        showZero: prop_types_1.default.bool,
        overflowCount: prop_types_1.default.number,
        content: prop_types_1.default.node,
        dot: prop_types_1.default.bool,
        style: prop_types_1.default.object
    };
    Sup.defaultProps = {
        prefix: 'next-',
        count: 0,
        showZero: false,
        overflowCount: 99,
        dot: false
    };
    return Sup;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Sup);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _util = __webpack_require__(4);

var _inner = __webpack_require__(86);

var _inner2 = _interopRequireDefault(_inner);

var _alignMap = __webpack_require__(87);

var _util2 = __webpack_require__(138);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop;
var Popup = _overlay2.default.Popup;

var alignList = ['t', 'r', 'b', 'l', 'tl', 'tr', 'bl', 'br', 'lt', 'lb', 'rt', 'rb'];

var alignMap = _alignMap.normalMap;

/** Balloon */
var Balloon = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Balloon, _React$Component);

    function Balloon(props, context) {
        (0, _classCallCheck3.default)(this, Balloon);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

        _this.beforePosition = function (result, obj) {
            var placement = result.config.placement;

            if (placement !== _this.state.align) {
                _this.setState({
                    align: placement,
                    innerAlign: true
                });
            }

            if (_this.props.arrowPointToCenter) {
                var _obj$target = obj.target,
                    width = _obj$target.width,
                    height = _obj$target.height;

                if (placement.length === 2) {
                    var offset = _alignMap.normalMap[placement].offset;
                    switch (placement[0]) {
                        case 'b':
                        case 't':
                            {
                                var plus = offset[0] > 0 ? 1 : -1;
                                result.style.left = result.style.left + plus * width / 2 - offset[0];
                            }
                            break;
                        case 'l':
                        case 'r':
                            {
                                var _plus = offset[0] > 0 ? 1 : -1;
                                result.style.top = result.style.top + _plus * height / 2 - offset[1];
                            }
                            break;
                    }
                }
            }

            return result;
        };

        _this.state = {
            align: alignList.includes(props.align) ? props.align : 'b',
            visible: 'visible' in props ? props.visible : props.defaultVisible
        };
        _this._onClose = _this._onClose.bind(_this);
        _this._onPosition = _this._onPosition.bind(_this);
        _this._onVisibleChange = _this._onVisibleChange.bind(_this);
        return _this;
    }

    Balloon.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var nextState = {};
        if ('visible' in nextProps) {
            nextState.visible = nextProps.visible;
        }

        if (!prevState.innerAlign && 'align' in nextProps && alignList.includes(nextProps.align) && nextProps.align !== prevState.align) {
            nextState.align = nextProps.align;
            nextState.innerAlign = false;
        }

        return nextState;
    };

    Balloon.prototype._onVisibleChange = function _onVisibleChange(visible, trigger) {
        // Not Controlled
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, trigger);

        if (!visible) {
            this.props.onClose();
        }
    };

    Balloon.prototype._onClose = function _onClose(e) {
        this._onVisibleChange(false, 'closeClick');

        //必须加上preventDefault,否则单测IE下报错,出现full page reload 异常
        e.preventDefault();
    };

    Balloon.prototype._onPosition = function _onPosition(res) {
        var rtl = this.props.rtl;

        alignMap = this.props.alignEdge ? _alignMap.edgeMap : _alignMap.normalMap;
        var newAlign = res.align.join(' ');
        var resAlign = void 0;

        var alignKey = 'align';
        if (rtl) {
            alignKey = 'rtlAlign';
        }

        for (var key in alignMap) {
            if (alignMap[key][alignKey] === newAlign) {
                resAlign = key;

                break;
            }
        }

        resAlign = resAlign || this.state.align;
        if (resAlign !== this.state.align) {
            this.setState({
                align: resAlign,
                innerAlign: true
            });
        }
    };

    Balloon.prototype.render = function render() {
        var _props = this.props,
            id = _props.id,
            type = _props.type,
            prefix = _props.prefix,
            className = _props.className,
            title = _props.title,
            alignEdge = _props.alignEdge,
            trigger = _props.trigger,
            triggerType = _props.triggerType,
            children = _props.children,
            closable = _props.closable,
            shouldUpdatePosition = _props.shouldUpdatePosition,
            delay = _props.delay,
            needAdjust = _props.needAdjust,
            autoAdjust = _props.autoAdjust,
            safeId = _props.safeId,
            autoFocus = _props.autoFocus,
            safeNode = _props.safeNode,
            onClick = _props.onClick,
            onHover = _props.onHover,
            animation = _props.animation,
            offset = _props.offset,
            style = _props.style,
            container = _props.container,
            popupContainer = _props.popupContainer,
            cache = _props.cache,
            popupStyle = _props.popupStyle,
            popupClassName = _props.popupClassName,
            popupProps = _props.popupProps,
            followTrigger = _props.followTrigger,
            rtl = _props.rtl,
            v2 = _props.v2,
            arrowPointToCenter = _props.arrowPointToCenter,
            _props$placementOffse = _props.placementOffset,
            placementOffset = _props$placementOffse === undefined ? 0 : _props$placementOffse,
            others = (0, _objectWithoutProperties3.default)(_props, ['id', 'type', 'prefix', 'className', 'title', 'alignEdge', 'trigger', 'triggerType', 'children', 'closable', 'shouldUpdatePosition', 'delay', 'needAdjust', 'autoAdjust', 'safeId', 'autoFocus', 'safeNode', 'onClick', 'onHover', 'animation', 'offset', 'style', 'container', 'popupContainer', 'cache', 'popupStyle', 'popupClassName', 'popupProps', 'followTrigger', 'rtl', 'v2', 'arrowPointToCenter', 'placementOffset']);

        if (container) {
            _util.log.deprecated('container', 'popupContainer', 'Balloon');
        }

        var align = this.state.align;

        alignMap = alignEdge || v2 ? _alignMap.edgeMap : _alignMap.normalMap;
        var _prefix = this.context.prefix || prefix;

        var trOrigin = 'trOrigin';
        if (rtl) {
            trOrigin = 'rtlTrOrigin';
        }

        var _offset = [alignMap[align].offset[0] + offset[0], alignMap[align].offset[1] + offset[1]];
        var transformOrigin = alignMap[align][trOrigin];
        var _style = (0, _extends3.default)({ transformOrigin: transformOrigin }, style);

        var content = _react2.default.createElement(_inner2.default, (0, _extends3.default)({}, _util.obj.pickOthers(Object.keys(Balloon.propTypes), others), {
            id: id,
            title: title,
            prefix: _prefix,
            closable: closable,
            onClose: this._onClose,
            className: className,
            style: _style,
            align: align,
            type: type,
            rtl: rtl,
            alignEdge: alignEdge,
            v2: v2
        }), children);

        var triggerProps = {};
        triggerProps['aria-describedby'] = id;
        triggerProps.tabIndex = '0';

        var ariaTrigger = id ? _react2.default.cloneElement(trigger, triggerProps) : trigger;

        var newTrigger = (0, _util2.getDisabledCompatibleTrigger)(_react2.default.isValidElement(ariaTrigger) ? ariaTrigger : _react2.default.createElement('span', null, ariaTrigger));

        var otherProps = {
            delay: delay,
            shouldUpdatePosition: shouldUpdatePosition,
            needAdjust: needAdjust,
            align: alignMap[align].align,
            offset: _offset,
            safeId: safeId,
            onHover: onHover,
            onPosition: this._onPosition
        };

        if (v2) {
            delete otherProps.align;
            delete otherProps.shouldUpdatePosition;
            delete otherProps.needAdjust;
            delete otherProps.safeId;
            delete otherProps.onHover;
            delete otherProps.onPosition;

            (0, _extends3.default)(otherProps, {
                placement: align,
                placementOffset: placementOffset + 12,
                v2: true,
                beforePosition: this.beforePosition,
                autoAdjust: autoAdjust
            });
        }

        return _react2.default.createElement(Popup, (0, _extends3.default)({}, popupProps, {
            followTrigger: followTrigger,
            trigger: newTrigger,
            cache: cache,
            triggerType: triggerType,
            visible: this.state.visible,
            onClick: onClick,
            afterClose: this.props.afterClose,
            onVisibleChange: this._onVisibleChange,
            animation: animation,
            autoFocus: triggerType === 'focus' ? false : autoFocus,
            safeNode: safeNode,
            container: popupContainer || container,
            className: popupClassName,
            style: popupStyle,
            rtl: rtl
        }, otherProps), content);
    };

    return Balloon;
}(_react2.default.Component), _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    /**
     * 自定义类名
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内敛样式
     */
    style: _propTypes2.default.object,
    /**
     * 浮层的内容
     */
    children: _propTypes2.default.any,
    size: _propTypes2.default.string,
    /**
     * 样式类型
     */
    type: _propTypes2.default.oneOf(['normal', 'primary']),
    /**
     * 标题
     * @version 1.23
     */
    title: _propTypes2.default.node,
    /**
     * 弹层当前显示的状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认显示的状态
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层在显示和隐藏触发的事件
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示或隐藏的来源， closeClick 表示由自带的关闭按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    alignEdge: _propTypes2.default.bool,
    /**
     * 开启 v2 版本
     * @version 1.25
     */
    v2: _propTypes2.default.bool,
    /**
     * [v2] 箭头是否指向目标元素的中心
     * @version 1.25
     */
    arrowPointToCenter: _propTypes2.default.bool,
    /**
     * [v2] 弹层偏离触发元素的像素值
     */
    placementOffset: _propTypes2.default.number,
    /**
     * 是否显示关闭按钮
     */
    closable: _propTypes2.default.bool,
    /**
     * 弹出层位置
     * @enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下
     */
    align: _propTypes2.default.oneOf(alignList),
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _propTypes2.default.array,
    /**
     * 触发元素
     */
    trigger: _propTypes2.default.any,
    /**
     * 触发行为
     * 鼠标悬浮, 鼠标点击('hover','click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若弹窗内容有复杂交互请使用click
     */
    triggerType: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),

    onClick: _propTypes2.default.func,
    /**
     * 任何visible为false时会触发的事件
     */
    onClose: _propTypes2.default.func,
    onHover: _propTypes2.default.func,
    /**
     * [v2] 是否进行自动位置调整，默认自动开启。
     * @version 1.25
     */
    autoAdjust: _propTypes2.default.bool,
    needAdjust: _propTypes2.default.bool,
    /**
     * 弹层在触发以后的延时显示, 单位毫秒 ms
     */
    delay: _propTypes2.default.number,
    /**
     * 浮层关闭后触发的事件, 如果有动画，则在动画结束后触发
     */
    afterClose: _propTypes2.default.func,
    shouldUpdatePosition: _propTypes2.default.bool,
    /**
     * 弹层出现后是否自动focus到内部第一个元素
     */
    autoFocus: _propTypes2.default.bool,
    /**
     * 安全节点:对于triggetType为click的浮层,会在点击除了浮层外的其它区域时关闭浮层.safeNode用于添加不触发关闭的节点, 值可以是dom节点的id或者是节点的dom对象
     */
    safeNode: _propTypes2.default.string,
    /**
     * 用来指定safeNode节点的id，和safeNode配合使用
     */
    safeId: _propTypes2.default.string,
    /**
     * 配置动画的播放方式，格式是{in: '', out: ''}， 常用的动画class请查看Animate组件文档
     * @param {String} in 进场动画
     * @param {String} out 出场动画
     */
    animation: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),

    /**
     * 弹层的dom节点关闭时是否删除
     */
    cache: _propTypes2.default.bool,
    /**
     * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。
     */
    popupContainer: _propTypes2.default.any,
    container: _propTypes2.default.any,
    /**
     * 弹层组件style，透传给Popup
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层组件className，透传给Popup
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 弹层id, 传入值才会支持无障碍
     */
    id: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    type: 'normal',
    closable: true,
    defaultVisible: false,
    size: 'medium',
    alignEdge: false,
    arrowPointToCenter: false,
    align: 'b',
    offset: [0, 0],
    trigger: _react2.default.createElement('span', null),
    onClose: noop,
    afterClose: noop,
    onVisibleChange: noop,
    needAdjust: false,
    triggerType: 'hover',
    safeNode: undefined,
    safeId: null,
    autoFocus: true,
    animation: {
        in: 'zoomIn zoomInBig',
        out: 'zoomOut zoomOutBig'
    },
    cache: false,
    popupStyle: {},
    popupClassName: '',
    popupProps: {}
}, _temp);
Balloon.displayName = 'Balloon';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Balloon);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(270), __esModule: true };

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(271);
module.exports = __webpack_require__(26).Object.setPrototypeOf;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(32);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(272).set });


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(34);
var anObject = __webpack_require__(45);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(112)(Function.call, __webpack_require__(120).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(274), __esModule: true };

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(275);
var $Object = __webpack_require__(26).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(32);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(74) });


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var overlayManager = {
    allOverlays: [],

    addOverlay: function addOverlay(overlay) {
        this.removeOverlay(overlay);
        this.allOverlays.unshift(overlay);
    },
    isCurrentOverlay: function isCurrentOverlay(overlay) {
        return overlay && this.allOverlays[0] === overlay;
    },
    removeOverlay: function removeOverlay(overlay) {
        var i = this.allOverlays.indexOf(overlay);
        if (i > -1) {
            this.allOverlays.splice(i, 1);
        }
    }
};

exports.default = overlayManager;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _class, _temp, _initialiseProps;

var _util = __webpack_require__(4);

var _findNode = __webpack_require__(59);

var _findNode2 = _interopRequireDefault(_findNode);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var VIEWPORT = 'viewport';

// IE8 not support pageXOffset
var getPageX = function getPageX() {
    return window.pageXOffset || document.documentElement.scrollLeft;
};
var getPageY = function getPageY() {
    return window.pageYOffset || document.documentElement.scrollTop;
};

/**
 * @private get element size
 * @param       {Element} element
 * @return      {Object}
 */
function _getSize(element) {
    // element like `svg` do not have offsetWidth and offsetHeight prop
    // then getBoundingClientRect
    if ('offsetWidth' in element && 'offsetHeight' in element) {
        return {
            width: element.offsetWidth,
            height: element.offsetHeight
        };
    } else {
        var _element$getBoundingC = element.getBoundingClientRect(),
            width = _element$getBoundingC.width,
            height = _element$getBoundingC.height;

        return {
            width: width,
            height: height
        };
    }
}

/**
 * @private get element rect
 * @param       {Element} elem
 * @return      {Object}
 */
function _getElementRect(elem, container) {
    var offsetTop = 0,
        offsetLeft = 0,
        scrollTop = 0,
        scrollLeft = 0;

    var _getSize2 = _getSize(elem),
        width = _getSize2.width,
        height = _getSize2.height;

    do {
        if (!isNaN(elem.offsetTop)) {
            offsetTop += elem.offsetTop;
        }
        if (!isNaN(elem.offsetLeft)) {
            offsetLeft += elem.offsetLeft;
        }
        if (elem && elem.offsetParent) {
            if (!isNaN(elem.offsetParent.scrollLeft) && elem.offsetParent !== document.body) {
                scrollLeft += elem.offsetParent.scrollLeft;
            }

            if (!isNaN(elem.offsetParent.scrollTop) && elem.offsetParent !== document.body) {
                scrollTop += elem.offsetParent.scrollTop;
            }
        }

        elem = elem.offsetParent;
    } while (elem !== null && elem !== container);

    // if container is body or invalid, treat as window, use client width & height
    var treatAsWindow = !container || container === document.body;

    return {
        top: offsetTop - scrollTop - (treatAsWindow ? document.documentElement.scrollTop || document.body.scrollTop : 0),
        left: offsetLeft - scrollLeft - (treatAsWindow ? document.documentElement.scrollLeft || document.body.scrollLeft : 0),
        width: width,
        height: height
    };
}

/**
 * @private get viewport size
 * @return {Object}
 */
function _getViewportSize(container) {
    if (!container || container === document.body) {
        return {
            width: document.documentElement.clientWidth,
            height: document.documentElement.clientHeight
        };
    }

    var _container$getBoundin = container.getBoundingClientRect(),
        width = _container$getBoundin.width,
        height = _container$getBoundin.height;

    return {
        width: width,
        height: height
    };
}

var getContainer = function getContainer(_ref) {
    var container = _ref.container,
        baseElement = _ref.baseElement;

    // SSR下会有副作用
    if (typeof document === 'undefined') {
        return container;
    }

    var calcContainer = (0, _findNode2.default)(container, baseElement);

    if (!calcContainer) {
        calcContainer = document.body;
    }

    while (_util.dom.getStyle(calcContainer, 'position') === 'static') {
        if (!calcContainer || calcContainer === document.body) {
            return document.body;
        }
        calcContainer = calcContainer.parentNode;
    }

    return calcContainer;
};

var Position = (_temp = _class = function () {
    function Position(props) {
        (0, _classCallCheck3.default)(this, Position);

        _initialiseProps.call(this);

        this.pinElement = props.pinElement;
        this.baseElement = props.baseElement;
        this.pinFollowBaseElementWhenFixed = props.pinFollowBaseElementWhenFixed;
        this.container = getContainer(props);
        this.autoFit = props.autoFit || false;
        this.align = props.align || 'tl tl';
        this.offset = props.offset || [0, 0];
        this.needAdjust = props.needAdjust || false;
        this.isRtl = props.isRtl || false;
    }

    /**
     * @public static place method
     * @param  {Object}       props
     *     @param  {DOM}      props.pinElement
     *     @param  {DOM}      props.baseElement
     *     @param  {String}   props.align
     *     @param  {Number}   props.offset
     *     @param  {Boolean}  props.needAdjust
     *     @param  {Boolean}  props.isRtl
     * @return {Position}
     */

    Position.prototype.setPosition = function setPosition() {
        var pinElement = this.pinElement;
        var baseElement = this.baseElement;
        var pinFollowBaseElementWhenFixed = this.pinFollowBaseElementWhenFixed;
        var expectedAlign = this._getExpectedAlign();
        var isPinFixed = void 0,
            isBaseFixed = void 0,
            firstPositionResult = void 0;
        if (pinElement === VIEWPORT) {
            return;
        }
        if (_util.dom.getStyle(pinElement, 'position') !== 'fixed') {
            _util.dom.setStyle(pinElement, 'position', 'absolute');
            isPinFixed = false;
        } else {
            isPinFixed = true;
        }
        if (baseElement === VIEWPORT || _util.dom.getStyle(baseElement, 'position') !== 'fixed') {
            isBaseFixed = false;
        } else {
            isBaseFixed = true;
        }

        // 根据期望的定位
        for (var i = 0; i < expectedAlign.length; i++) {
            var align = expectedAlign[i];
            var pinElementPoints = this._normalizePosition(pinElement, align.split(' ')[0], isPinFixed);
            var baseElementPoints = this._normalizePosition(baseElement, align.split(' ')[1],
            // 忽略元素位置，发生在类似dialog的场景下
            isPinFixed && !pinFollowBaseElementWhenFixed);

            var pinElementParentOffset = this._getParentOffset(pinElement);
            var pinElementParentScrollOffset = this._getParentScrollOffset(pinElement);

            var baseElementOffset = isPinFixed && isBaseFixed ? this._getLeftTop(baseElement) : // 在 pin 是 fixed 布局，并且又需要根据 base 计算位置时，计算 base 的 offset 需要忽略页面滚动
            baseElementPoints.offset(isPinFixed && pinFollowBaseElementWhenFixed);
            var top = baseElementOffset.top + baseElementPoints.y - pinElementParentOffset.top - pinElementPoints.y + pinElementParentScrollOffset.top;
            var left = baseElementOffset.left + baseElementPoints.x - pinElementParentOffset.left - pinElementPoints.x + pinElementParentScrollOffset.left;

            // 此处若真实改变元素位置可能为导致布局发生变化，从而导致 container 发生 resize，进而重复触发 postion 和 componentUpdate，导致崩溃
            // 需要根据新的 left、top 进行模拟计算 isInViewport
            var xOffset = Math.round(left + this.offset[0] - _util.dom.getStyle(pinElement, 'left'));
            var yOffset = Math.round(top + this.offset[1] - _util.dom.getStyle(pinElement, 'top'));

            if (this._isInViewport(pinElement, align, [xOffset, yOffset])) {
                // 如果在视区内，则设置 pin 位置，并中断 postion 返回设置的位置
                this._setPinElementPostion(pinElement, { left: left, top: top }, this.offset);
                return align;
            } else if (!firstPositionResult) {
                if (this.needAdjust && !this.autoFit) {
                    var _getViewportOffset2 = this._getViewportOffset(pinElement, align),
                        right = _getViewportOffset2.right;

                    firstPositionResult = {
                        left: right < 0 ? left + right : left,
                        top: top
                    };
                } else {
                    firstPositionResult = { left: left, top: top };
                }
            }
        }

        // This will only execute if `pinElement` could not be placed entirely in the Viewport
        var inViewportLeft = this._makeElementInViewport(pinElement, firstPositionResult.left, 'Left', isPinFixed);
        var inViewportTop = this._makeElementInViewport(pinElement, firstPositionResult.top, 'Top', isPinFixed);

        this._setPinElementPostion(pinElement, { left: inViewportLeft, top: inViewportTop }, this._calPinOffset(expectedAlign[0]));

        return expectedAlign[0];
    };

    Position.prototype._getParentOffset = function _getParentOffset(element) {
        var parent = element.offsetParent || document.documentElement;
        var offset = void 0;
        if (parent === document.body && _util.dom.getStyle(parent, 'position') === 'static') {
            offset = {
                top: 0,
                left: 0
            };
        } else {
            offset = this._getElementOffset(parent);
        }

        offset.top += parseFloat(_util.dom.getStyle(parent, 'border-top-width'), 10);
        offset.left += parseFloat(_util.dom.getStyle(parent, 'border-left-width'), 10);
        offset.offsetParent = parent;
        return offset;
    };

    Position.prototype._makeElementInViewport = function _makeElementInViewport(pinElement, number, type, isPinFixed) {
        // pinElement.offsetParent is never body because wrapper has position: absolute
        // refactored to make code clearer. Revert if wrapper style changes.
        var result = number;
        var docElement = document.documentElement;
        var offsetParent = pinElement.offsetParent || document.documentElement;

        if (result < 0) {
            if (isPinFixed) {
                result = 0;
            } else if (offsetParent === document.body && _util.dom.getStyle(offsetParent, 'position') === 'static') {
                // Only when div's offsetParent is document.body, we set new position result.
                result = Math.max(docElement['scroll' + type], document.body['scroll' + type]);
            }
        }
        return result;
    };

    // 这里的第三个参数真实含义为：是否为fixed布局，并且像dialog一样，不跟随trigger元素


    Position.prototype._normalizePosition = function _normalizePosition(element, align, ignoreElementOffset) {
        var points = this._normalizeElement(element, ignoreElementOffset);
        this._normalizeXY(points, align);

        return points;
    };

    Position.prototype._normalizeXY = function _normalizeXY(points, align) {
        var x = align.split('')[1];
        var y = align.split('')[0];

        points.x = this._xyConverter(x, points, 'width');
        points.y = this._xyConverter(y, points, 'height');

        return points;
    };

    Position.prototype._xyConverter = function _xyConverter(align, points, type) {
        var res = align.replace(/t|l/gi, '0%').replace(/c/gi, '50%').replace(/b|r/gi, '100%').replace(/(\d+)%/gi, function (m, d) {
            return points.size()[type] * (d / 100);
        });

        return parseFloat(res, 10) || 0;
    };

    Position.prototype._getLeftTop = function _getLeftTop(element) {
        return {
            left: parseFloat(_util.dom.getStyle(element, 'left')) || 0,
            top: parseFloat(_util.dom.getStyle(element, 'top')) || 0
        };
    };

    Position.prototype._normalizeElement = function _normalizeElement(element, ignoreElementOffset) {
        var _this = this;

        var result = {
            element: element,
            x: 0,
            y: 0
        },
            isViewport = element === VIEWPORT,
            docElement = document.documentElement;

        result.offset = function (ignoreScroll) {
            // 这里是关键，第二个参数的含义以ing该是：是否为 fixed 布局，并且像 dialog 一样，不跟随 trigger 元素
            if (ignoreElementOffset) {
                return {
                    left: 0,
                    top: 0
                };
            } else if (isViewport) {
                return {
                    left: getPageX(),
                    top: getPageY()
                };
            } else {
                return _this._getElementOffset(element, ignoreScroll);
            }
        };

        result.size = function () {
            if (isViewport) {
                return {
                    width: docElement.clientWidth,
                    height: docElement.clientHeight
                };
            } else {
                return _getSize(element);
            }
        };

        return result;
    };

    // ignoreScroll 在 pin 元素为 fixed 的时候生效，此时需要忽略页面滚动
    // 对 fixed 模式下 subNav 弹层的计算很重要，只有在这种情况下，才同时需要元素的相对位置，又不关心页面滚动


    Position.prototype._getElementOffset = function _getElementOffset(element, ignoreScroll) {
        var rect = element.getBoundingClientRect();
        var docElement = document.documentElement;
        var body = document.body;
        var docClientLeft = docElement.clientLeft || body.clientLeft || 0;
        var docClientTop = docElement.clientTop || body.clientTop || 0;

        return {
            left: rect.left + (ignoreScroll ? 0 : getPageX()) - docClientLeft,
            top: rect.top + (ignoreScroll ? 0 : getPageY()) - docClientTop
        };
    };

    // According to the location of the overflow to calculate the desired positioning


    Position.prototype._getExpectedAlign = function _getExpectedAlign() {
        var align = this.isRtl ? this._replaceAlignDir(this.align, /l|r/g, { l: 'r', r: 'l' }) : this.align;
        var expectedAlign = [align];
        if (this.needAdjust) {
            if (/t|b/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /t|b/g, { t: 'b', b: 't' }));
            }
            if (/l|r/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /l|r/g, { l: 'r', r: 'l' }));
            }
            if (/c/g.test(align)) {
                expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, { c: 'l' }));
                expectedAlign.push(this._replaceAlignDir(align, /c(?= |$)/g, { c: 'r' }));
            }
            expectedAlign.push(this._replaceAlignDir(align, /l|r|t|b/g, {
                l: 'r',
                r: 'l',
                t: 'b',
                b: 't'
            }));
        }
        return expectedAlign;
    };

    // Transform align order.


    Position.prototype._replaceAlignDir = function _replaceAlignDir(align, regExp, map) {
        return align.replace(regExp, function (res) {
            return map[res];
        });
    };

    // Are the right sides of the pin and base aligned?


    Position.prototype._isRightAligned = function _isRightAligned(align) {
        var _align$split = align.split(' '),
            pinAlign = _align$split[0],
            baseAlign = _align$split[1];

        return pinAlign[1] === 'r' && pinAlign[1] === baseAlign[1];
    };

    // Are the bottoms of the pin and base aligned?


    Position.prototype._isBottomAligned = function _isBottomAligned(align) {
        var _align$split2 = align.split(' '),
            pinAlign = _align$split2[0],
            baseAlign = _align$split2[1];

        return pinAlign[0] === 'b' && pinAlign[0] === baseAlign[0];
    };

    // Detecting element is in the window， we want to adjust position later.


    Position.prototype._isInViewport = function _isInViewport(element, align) {
        var adjustOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

        var viewportSize = _getViewportSize(this.container);
        var elementRect = _getElementRect(element, this.container);
        var _adjustOffset$ = adjustOffset[0],
            xOffset = _adjustOffset$ === undefined ? 0 : _adjustOffset$,
            _adjustOffset$2 = adjustOffset[1],
            yOffset = _adjustOffset$2 === undefined ? 0 : _adjustOffset$2;

        var left = elementRect.left + xOffset;
        var top = elementRect.top + yOffset;
        var elementSize = _getSize(element);

        // https://github.com/alibaba-fusion/next/issues/853
        // Equality causes issues in Chrome when pin element is off screen to right or bottom.
        // If it is not supposed to align with the bottom or right, then subtract 1 to use strict less than.
        var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
        var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;

        // 临时方案，在 select + table 的场景下，不需要关注横向上是否在可视区域内
        // 在 balloon 场景下需要关注
        if (this.autoFit) {
            return top >= 0 && top + element.offsetHeight <= viewportHeight;
        }

        // Avoid animate problem that use offsetWidth instead of getBoundingClientRect.
        return left >= 0 && left + elementSize.width <= viewportWidth && top >= 0 && top + elementSize.height <= viewportHeight;
    };

    Position.prototype._getViewportOffset = function _getViewportOffset(element, align) {
        var viewportSize = _getViewportSize(this.container);
        var elementRect = _getElementRect(element, this.container);
        var elementSize = _getSize(element);

        var viewportWidth = this._isRightAligned(align) ? viewportSize.width : viewportSize.width - 1;
        var viewportHeight = this._isBottomAligned(align) ? viewportSize.height : viewportSize.height - 1;

        return {
            top: elementRect.top,
            right: viewportWidth - (elementRect.left + elementSize.width),
            bottom: viewportHeight - (elementRect.top + elementSize.height),
            left: elementRect.left
        };
    };

    // 在这里做RTL判断 top-left 定位转化为等效的 top-right定位


    Position.prototype._setPinElementPostion = function _setPinElementPostion(pinElement, postion) {
        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];
        var top = postion.top,
            left = postion.left;

        if (!this.isRtl) {
            _util.dom.setStyle(pinElement, {
                left: left + offset[0] + 'px',
                top: top + offset[1] + 'px'
            });
            return;
        }

        // transfer {left,top} equaly to {right,top}
        var pinElementParentOffset = this._getParentOffset(pinElement);

        var _getElementRect2 = _getElementRect(pinElementParentOffset.offsetParent),
            offsetParentWidth = _getElementRect2.width;

        var _getElementRect3 = _getElementRect(pinElement),
            width = _getElementRect3.width;

        var right = offsetParentWidth - (left + width);
        _util.dom.setStyle(pinElement, {
            left: 'auto',
            right: right + offset[0] + 'px',
            top: top + offset[1] + 'px'
        });
    };

    return Position;
}(), _class.VIEWPORT = VIEWPORT, _class.place = function (props) {
    return new Position(props).setPosition();
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this._calPinOffset = function (align) {
        var offset = [].concat(_this2.offset);

        if (_this2.autoFit && align && _this2.container && _this2.container !== document.body) {
            var baseElementRect = _getElementRect(_this2.baseElement, _this2.container);
            var pinElementRect = _getElementRect(_this2.pinElement, _this2.container);
            var viewportSize = _getViewportSize(_this2.container);
            var pinAlign = align.split(' ')[0];
            var x = pinAlign.charAt(1);
            var y = pinAlign.charAt(0);

            if (pinElementRect.top < 0 || pinElementRect.top + pinElementRect.height > viewportSize.height) {
                offset[1] = -baseElementRect.top - (y === 't' ? baseElementRect.height : 0);
            }
        }
        return offset;
    };

    this._getParentScrollOffset = function (elem) {
        var top = 0;
        var left = 0;

        if (elem && elem.offsetParent && elem.offsetParent !== document.body) {
            if (!isNaN(elem.offsetParent.scrollTop)) {
                top += elem.offsetParent.scrollTop;
            }
            if (!isNaN(elem.offsetParent.scrollLeft)) {
                left += elem.offsetParent.scrollLeft;
            }
        }

        return {
            top: top,
            left: left
        };
    };
}, _temp);
exports.default = Position;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _overlay = __webpack_require__(60);

var _overlay2 = _interopRequireDefault(_overlay);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Overlay2 = function Overlay2(props) {
    var _classNames;

    if (!_react.useState || !_react.useRef || !_react.useEffect) {
        _util.log.warning('need react version > 16.8.0');
        return null;
    }

    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$animation = props.animation,
        animation = _props$animation === undefined ? { in: 'expandInDown', out: 'expandOutUp' } : _props$animation,
        visible = props.visible,
        hasMask = props.hasMask,
        align = props.align,
        _props$points = props.points,
        points = _props$points === undefined ? align ? align.split(' ') : undefined : _props$points,
        onPosition = props.onPosition,
        children = props.children,
        className = props.className,
        style = props.style,
        wrapperClassName = props.wrapperClassName,
        beforeOpen = props.beforeOpen,
        onOpen = props.onOpen,
        afterOpen = props.afterOpen,
        beforeClose = props.beforeClose,
        onClose = props.onClose,
        afterClose = props.afterClose,
        others = (0, _objectWithoutProperties3.default)(props, ['prefix', 'animation', 'visible', 'hasMask', 'align', 'points', 'onPosition', 'children', 'className', 'style', 'wrapperClassName', 'beforeOpen', 'onOpen', 'afterOpen', 'beforeClose', 'onClose', 'afterClose']);

    var _useState = (0, _react.useState)(true),
        isAnimationEnd = _useState[0],
        markAnimationEnd = _useState[1];

    var overlayRef = (0, _react.useRef)(null);

    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        typeof beforeOpen === 'function' && beforeOpen(overlayRef.current);
    };
    var handleEntering = function handleEntering() {
        typeof onOpen === 'function' && onOpen(overlayRef.current);
    };
    var handleEntered = function handleEntered() {
        typeof afterOpen === 'function' && afterOpen(overlayRef.current);
    };
    var handleExit = function handleExit() {
        typeof beforeClose === 'function' && beforeClose(overlayRef.current);
    };
    var handleExiting = function handleExiting() {
        typeof onClose === 'function' && onClose(overlayRef.current);
    };
    var handleExited = function handleExited() {
        markAnimationEnd(true);
        typeof afterClose === 'function' && afterClose(overlayRef.current);
    };

    var childrenNode = _react2.default.createElement(_animate2.default.OverlayAnimate, {
        visible: visible,
        animation: animation,
        onEnter: handleEnter,
        onEntering: handleEntering,
        onEntered: handleEntered,
        onExit: handleExit,
        onExiting: handleExiting,
        onExited: handleExited,
        timeout: 300,
        style: style
    }, children ? (0, _react.cloneElement)(children, {
        className: (0, _classnames2.default)([prefix + 'overlay-inner', className, children && children.props && children.props.className])
    }) : _react2.default.createElement('span', null));

    var wraperCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'overlay-wrapper v2'] = true, _classNames[wrapperClassName] = wrapperClassName, _classNames.opened = visible, _classNames));

    var handlePosition = function handlePosition(result) {
        // 兼容 1.x, 2.x 可去除这段逻辑
        (0, _extends3.default)(result, { align: result.config.points });

        typeof onPosition === 'function' && onPosition(result);
    };

    var maskRender = function maskRender(node) {
        return _react2.default.createElement(_animate2.default.OverlayAnimate, {
            visible: visible,
            animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false,
            timeout: 300,
            unmountOnExit: true
        }, node);
    };

    return _react2.default.createElement(_overlay2.default, (0, _extends3.default)({}, others, {
        visible: visible,
        isAnimationEnd: isAnimationEnd,
        hasMask: hasMask,
        wrapperClassName: wraperCls,
        maskClassName: prefix + 'overlay-backdrop',
        maskRender: maskRender,
        points: points,
        onPosition: handlePosition,
        ref: overlayRef
    }), childrenNode);
}; /* istanbul ignore file */
exports.default = Overlay2;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(280);
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  setPrototypeOf(subClass, superClass);
}
module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 280 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _overlay = __webpack_require__(132);

var _overlay2 = _interopRequireDefault(_overlay);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop,
    makeChain = _util.func.makeChain,
    bindCtx = _util.func.bindCtx;

/**
 * Overlay.Popup
 * @description 继承 Overlay 的 API，除非特别说明
 * */

var Popup = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Popup, _Component);

    function Popup(props) {
        (0, _classCallCheck3.default)(this, Popup);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.state = {
            visible: typeof props.visible === 'undefined' ? props.defaultVisible : props.visible
        };

        bindCtx(_this, ['handleTriggerClick', 'handleTriggerKeyDown', 'handleTriggerMouseEnter', 'handleTriggerMouseLeave', 'handleTriggerFocus', 'handleTriggerBlur', 'handleContentMouseEnter', 'handleContentMouseLeave', 'handleContentMouseDown', 'handleRequestClose', 'handleMaskMouseEnter', 'handleMaskMouseLeave']);
        return _this;
    }

    Popup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if ('visible' in nextProps) {
            return (0, _extends3.default)({}, prevState, {
                visible: nextProps.visible
            });
        }

        return null;
    };

    Popup.prototype.componentWillUnmount = function componentWillUnmount() {
        var _this2 = this;

        ['_timer', '_hideTimer', '_showTimer'].forEach(function (time) {
            _this2[time] && clearTimeout(_this2[time]);
        });
    };

    Popup.prototype.handleVisibleChange = function handleVisibleChange(visible, type, e) {
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        this.props.onVisibleChange(visible, type, e);
    };

    Popup.prototype.handleTriggerClick = function handleTriggerClick(e) {
        if (this.state.visible && !this.props.canCloseByTrigger) {
            return;
        }

        this.handleVisibleChange(!this.state.visible, 'fromTrigger', e);
    };

    Popup.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e) {
        var triggerClickKeycode = this.props.triggerClickKeycode;

        var keycodes = Array.isArray(triggerClickKeycode) ? triggerClickKeycode : [triggerClickKeycode];
        if (keycodes.includes(e.keyCode)) {
            e.preventDefault();
            this.handleTriggerClick(e);
        }
    };

    Popup.prototype.handleTriggerMouseEnter = function handleTriggerMouseEnter(e) {
        var _this3 = this;

        this._mouseNotFirstOnMask = false;

        if (this._hideTimer) {
            clearTimeout(this._hideTimer);
            this._hideTimer = null;
        }
        if (this._showTimer) {
            clearTimeout(this._showTimer);
            this._showTimer = null;
        }
        if (!this.state.visible) {
            this._showTimer = setTimeout(function () {
                _this3.handleVisibleChange(true, 'fromTrigger', e);
            }, this.props.delay);
        }
    };

    Popup.prototype.handleTriggerMouseLeave = function handleTriggerMouseLeave(e, type) {
        var _this4 = this;

        if (this._showTimer) {
            clearTimeout(this._showTimer);
            this._showTimer = null;
        }
        if (this.state.visible) {
            this._hideTimer = setTimeout(function () {
                _this4.handleVisibleChange(false, type || 'fromTrigger', e);
            }, this.props.delay);
        }
    };

    Popup.prototype.handleTriggerFocus = function handleTriggerFocus(e) {
        this.handleVisibleChange(true, 'fromTrigger', e);
    };

    Popup.prototype.handleTriggerBlur = function handleTriggerBlur(e) {
        if (!this._isForwardContent) {
            this.handleVisibleChange(false, 'fromTrigger', e);
        }
        this._isForwardContent = false;
    };

    Popup.prototype.handleContentMouseDown = function handleContentMouseDown() {
        this._isForwardContent = true;
    };

    Popup.prototype.handleContentMouseEnter = function handleContentMouseEnter() {
        clearTimeout(this._hideTimer);
    };

    Popup.prototype.handleContentMouseLeave = function handleContentMouseLeave(e) {
        this.handleTriggerMouseLeave(e, 'fromContent');
    };

    Popup.prototype.handleMaskMouseEnter = function handleMaskMouseEnter() {
        if (!this._mouseNotFirstOnMask) {
            clearTimeout(this._hideTimer);
            this._hideTimer = null;
            this._mouseNotFirstOnMask = false;
        }
    };

    Popup.prototype.handleMaskMouseLeave = function handleMaskMouseLeave() {
        this._mouseNotFirstOnMask = true;
    };

    Popup.prototype.handleRequestClose = function handleRequestClose(type, e) {
        this.handleVisibleChange(false, type, e);
    };

    Popup.prototype.renderTrigger = function renderTrigger() {
        var _this5 = this;

        var _props = this.props,
            trigger = _props.trigger,
            disabled = _props.disabled;

        var props = {
            key: 'trigger',
            'aria-haspopup': true,
            'aria-expanded': this.state.visible
        };

        if (!this.state.visible) {
            props['aria-describedby'] = undefined;
        }

        if (!disabled) {
            var triggerType = this.props.triggerType;

            var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];

            var _ref = trigger && trigger.props || {},
                onClick = _ref.onClick,
                onKeyDown = _ref.onKeyDown,
                onMouseEnter = _ref.onMouseEnter,
                onMouseLeave = _ref.onMouseLeave,
                onFocus = _ref.onFocus,
                onBlur = _ref.onBlur;

            triggerTypes.forEach(function (triggerType) {
                switch (triggerType) {
                    case 'click':
                        props.onClick = makeChain(_this5.handleTriggerClick, onClick);
                        props.onKeyDown = makeChain(_this5.handleTriggerKeyDown, onKeyDown);
                        break;
                    case 'hover':
                        props.onMouseEnter = makeChain(_this5.handleTriggerMouseEnter, onMouseEnter);
                        props.onMouseLeave = makeChain(_this5.handleTriggerMouseLeave, onMouseLeave);
                        break;
                    case 'focus':
                        props.onFocus = makeChain(_this5.handleTriggerFocus, onFocus);
                        props.onBlur = makeChain(_this5.handleTriggerBlur, onBlur);
                        break;
                    default:
                        break;
                }
            });
        }

        return trigger && _react2.default.cloneElement(trigger, props);
    };

    Popup.prototype.renderContent = function renderContent() {
        var _this6 = this;

        var _props2 = this.props,
            children = _props2.children,
            triggerType = _props2.triggerType;

        var triggerTypes = Array.isArray(triggerType) ? triggerType : [triggerType];
        var content = _react.Children.only(children);
        var _content$props = content.props,
            onMouseDown = _content$props.onMouseDown,
            onMouseEnter = _content$props.onMouseEnter,
            onMouseLeave = _content$props.onMouseLeave;

        var props = {
            key: 'portal'
        };

        triggerTypes.forEach(function (triggerType) {
            switch (triggerType) {
                case 'focus':
                    props.onMouseDown = makeChain(_this6.handleContentMouseDown, onMouseDown);
                    break;
                case 'hover':
                    props.onMouseEnter = makeChain(_this6.handleContentMouseEnter, onMouseEnter);
                    props.onMouseLeave = makeChain(_this6.handleContentMouseLeave, onMouseLeave);
                    break;
                default:
                    break;
            }
        });

        return _react2.default.cloneElement(content, props);
    };

    Popup.prototype.renderPortal = function renderPortal() {
        var _this7 = this;

        var _props3 = this.props,
            target = _props3.target,
            safeNode = _props3.safeNode,
            followTrigger = _props3.followTrigger,
            triggerType = _props3.triggerType,
            hasMask = _props3.hasMask,
            wrapperStyle = _props3.wrapperStyle,
            others = (0, _objectWithoutProperties3.default)(_props3, ['target', 'safeNode', 'followTrigger', 'triggerType', 'hasMask', 'wrapperStyle']);
        var container = this.props.container;

        var findTriggerNode = function findTriggerNode() {
            return (0, _reactDom.findDOMNode)(_this7);
        };
        var safeNodes = Array.isArray(safeNode) ? [].concat(safeNode) : [safeNode];
        safeNodes.unshift(findTriggerNode);

        var newWrapperStyle = wrapperStyle || {};

        if (followTrigger) {
            container = function container(trigger) {
                return trigger && trigger.parentNode || trigger;
            };
            newWrapperStyle.position = 'relative';
        }

        if (triggerType === 'hover' && hasMask) {
            others.onMaskMouseEnter = this.handleMaskMouseEnter;
            others.onMaskMouseLeave = this.handleMaskMouseLeave;
        }

        return _react2.default.createElement(_overlay2.default, (0, _extends3.default)({}, others, {
            key: 'overlay',
            ref: function ref(overlay) {
                return _this7.overlay = overlay;
            },
            visible: this.state.visible,
            target: target || findTriggerNode,
            container: container,
            safeNode: safeNodes,
            wrapperStyle: newWrapperStyle,
            triggerType: triggerType,
            hasMask: hasMask,
            onRequestClose: this.handleRequestClose
        }), this.props.children && this.renderContent());
    };

    Popup.prototype.render = function render() {
        return [this.renderTrigger(), this.renderPortal()];
    };

    return Popup;
}(_react.Component), _class.propTypes = {
    /**
     * 弹层内容
     */
    children: _propTypes2.default.node,
    /**
     * 触发弹层显示或隐藏的元素
     */
    trigger: _propTypes2.default.element,
    /**
     * 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，'focus'，或者它们组成的数组，如 ['hover', 'focus']
     */
    triggerType: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 当 triggerType 为 click 时才生效，可自定义触发弹层显示的键盘码
     */
    triggerClickKeycode: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.array]),
    /**
     * 弹层当前是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层显示或隐藏时触发的回调函数
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     * @param {Object} e DOM事件
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 设置此属性，弹层无法显示或隐藏
     */
    disabled: _propTypes2.default.bool,
    autoFit: _propTypes2.default.bool,
    /**
     * 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效
     */
    delay: _propTypes2.default.number,
    /**
     * trigger 是否可以关闭弹层
     */
    canCloseByTrigger: _propTypes2.default.bool,
    /**
     * 弹层定位的参照元素
     * @default target 属性，即触发元素
     */
    target: _propTypes2.default.any,
    safeNode: _propTypes2.default.any,
    /**
     * 是否跟随trigger滚动
     */
    followTrigger: _propTypes2.default.bool,
    container: _propTypes2.default.any,
    hasMask: _propTypes2.default.bool,
    wrapperStyle: _propTypes2.default.object,
    rtl: _propTypes2.default.bool,
    /**
     * 开启 v2 版本
     */
    v2: _propTypes2.default.bool,
    /**
     * [v2] 快捷位置，包含 'tl' | 't' | 'tr' | 'rt' | 'r' | 'rb' | 'bl' | 'b' | 'br' | 'lt' | 'l' | 'lb'
     */
    placement: _propTypes2.default.string,
    /**
     * [v2] 弹层偏离触发元素的像素值
     */
    placementOffset: _propTypes2.default.number,
    /**
     * [v2] 浮窗被遮挡时是否自动调整位置
     */
    autoAdjust: _propTypes2.default.bool
}, _class.defaultProps = {
    triggerType: 'hover',
    triggerClickKeycode: [_util.KEYCODE.SPACE, _util.KEYCODE.ENTER],
    defaultVisible: false,
    onVisibleChange: noop,
    disabled: false,
    autoFit: false,
    delay: 200,
    canCloseByTrigger: true,
    followTrigger: false,
    container: function container() {
        return document.body;
    },
    rtl: false
}, _temp);
Popup.displayName = 'Popup';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Popup);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _overlay = __webpack_require__(60);

var _overlay2 = _interopRequireDefault(_overlay);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = function Popup(props) {
    var _classNames;

    if (!_react.useState || !_react.useRef || !_react.useEffect) {
        _util.log.warning('need react version > 16.8.0');
        return null;
    }

    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$animation = props.animation,
        panimation = _props$animation === undefined ? { in: 'expandInDown', out: 'expandOutUp' } : _props$animation,
        defaultVisible = props.defaultVisible,
        _props$onVisibleChang = props.onVisibleChange,
        onVisibleChange = _props$onVisibleChang === undefined ? function () {} : _props$onVisibleChang,
        trigger = props.trigger,
        _props$triggerType = props.triggerType,
        triggerType = _props$triggerType === undefined ? 'hover' : _props$triggerType,
        overlay = props.overlay,
        onPosition = props.onPosition,
        children = props.children,
        className = props.className,
        style = props.style,
        wrapperClassName = props.wrapperClassName,
        triggerClickKeycode = props.triggerClickKeycode,
        align = props.align,
        beforeOpen = props.beforeOpen,
        onOpen = props.onOpen,
        afterOpen = props.afterOpen,
        beforeClose = props.beforeClose,
        onClose = props.onClose,
        afterClose = props.afterClose,
        others = (0, _objectWithoutProperties3.default)(props, ['prefix', 'animation', 'defaultVisible', 'onVisibleChange', 'trigger', 'triggerType', 'overlay', 'onPosition', 'children', 'className', 'style', 'wrapperClassName', 'triggerClickKeycode', 'align', 'beforeOpen', 'onOpen', 'afterOpen', 'beforeClose', 'onClose', 'afterClose']);

    var _useState = (0, _react.useState)(defaultVisible),
        visible = _useState[0],
        setVisible = _useState[1];

    var _useState2 = (0, _react.useState)(panimation),
        animation = _useState2[0],
        setAnimation = _useState2[1];

    var _useState3 = (0, _react.useState)(true),
        isAnimationEnd = _useState3[0],
        markAnimationEnd = _useState3[1];

    var overlayRef = (0, _react.useRef)(null);

    (0, _react.useEffect)(function () {
        if ('visible' in props) {
            setVisible(props.visible);
        }
    }, [props.visible]);

    (0, _react.useEffect)(function () {
        if ('animation' in props && animation !== panimation) {
            setAnimation(panimation);
        }
    }, [panimation]);

    var handleVisibleChange = function handleVisibleChange(visible) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        if (!('visible' in props)) {
            setVisible(visible);
        }

        onVisibleChange.apply(undefined, [visible].concat(args));
    };

    var triggerNode = overlay ? children : trigger;
    var overlayNode = overlay ? overlay : children;

    var handleEnter = function handleEnter() {
        markAnimationEnd(false);
        typeof beforeOpen === 'function' && beforeOpen(overlayRef.current);
    };
    var handleEntering = function handleEntering() {
        typeof onOpen === 'function' && onOpen(overlayRef.current);
    };
    var handleEntered = function handleEntered() {
        typeof afterOpen === 'function' && afterOpen(overlayRef.current);
    };
    var handleExit = function handleExit() {
        typeof beforeClose === 'function' && beforeClose(overlayRef.current);
    };
    var handleExiting = function handleExiting() {
        typeof onClose === 'function' && onClose(overlayRef.current);
    };
    var handleExited = function handleExited() {
        markAnimationEnd(true);
        typeof afterClose === 'function' && afterClose(overlayRef.current);
    };

    overlayNode = _react2.default.createElement(_animate2.default.OverlayAnimate, {
        visible: visible,
        animation: animation,
        timeout: 200,
        onEnter: handleEnter,
        onEntering: handleEntering,
        onEntered: handleEntered,
        onExit: handleExit,
        onExiting: handleExiting,
        onExited: handleExited,
        style: style
    }, overlayNode ? (0, _react.cloneElement)(overlayNode, {
        className: (0, _classnames2.default)([prefix + 'overlay-inner', className, overlayNode && overlayNode.props && overlayNode.props.className])
    }) : _react2.default.createElement('span', null));

    var handlePosition = function handlePosition(result) {
        // 兼容 1.x, 2.x 可去除这段逻辑
        (0, _extends3.default)(result, { align: result.config.points });

        var placement = result.config.placement;
        if (placement && typeof placement === 'string') {
            if (animation.in === 'expandInDown' && animation.out === 'expandOutUp' && placement.match(/t/)) {
                setAnimation({
                    in: 'expandInUp',
                    out: 'expandOutDown'
                });
            } else if (animation.in === 'expandInUp' && animation.out === 'expandOutDown' && placement.match(/b/)) {
                setAnimation({
                    in: 'expandInDown',
                    out: 'expandOutUp'
                });
            }
        }

        typeof onPosition === 'function' && onPosition(result);
    };

    var wraperCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'overlay-wrapper v2'] = true, _classNames[wrapperClassName] = wrapperClassName, _classNames.opened = visible, _classNames));

    // 兼容
    var v1Props = {};
    if (align) {
        v1Props.points = align.split(' ');
    }

    var maskRender = function maskRender(node) {
        return _react2.default.createElement(_animate2.default.OverlayAnimate, {
            visible: visible,
            animation: animation ? { in: 'fadeIn', out: 'fadeOut' } : false,
            timeout: 200,
            unmountOnExit: true
        }, node);
    };

    return _react2.default.createElement(_overlay2.default.Popup, (0, _extends3.default)({}, others, v1Props, {
        wrapperClassName: wraperCls,
        overlay: overlayNode,
        visible: visible,
        isAnimationEnd: isAnimationEnd,
        triggerType: triggerType,
        onVisibleChange: handleVisibleChange,
        onPosition: handlePosition,
        triggerClickKeyCode: triggerClickKeycode,
        maskRender: maskRender,
        ref: overlayRef
    }), triggerNode);
}; /* istanbul ignore file */
exports.default = Popup;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

exports.default = createFromIconfontCN;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _icon = __webpack_require__(137);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var customCache = new Set();

var ConfigIcon = _configProvider2.default.config(_icon2.default);

/** Icon.createFromIconfontCN
 *  @description 通过自定义 iconfont源来使用使用svg格式的图片
 *  @order 1
 */
function createFromIconfontCN() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var scriptUrl = options.scriptUrl,
        _options$extraCommonP = options.extraCommonProps,
        extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;

    var hasExist = customCache.has(scriptUrl);

    if (document.querySelector('script[data-namespace="' + scriptUrl + '"]')) {
        hasExist = true;
    }

    /**
     * DOM API required.
     * Make sure in browser environment.
     * The Custom Icon will create a <script/>
     * that loads SVG symbols and insert the SVG Element into the document body.
     */
    if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !hasExist) {
        var script = document.createElement('script');
        script.setAttribute('src', scriptUrl);
        script.setAttribute('data-namespace', scriptUrl);
        customCache.add(scriptUrl);
        document.body.appendChild(script);
    }

    var Iconfont = function Iconfont(props) {
        var _cx;

        var type = props.type,
            size = props.size,
            children = props.children,
            className = props.className,
            _props$prefix = props.prefix,
            prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
            others = (0, _objectWithoutProperties3.default)(props, ['type', 'size', 'children', 'className', 'prefix']);

        // component > children > type

        var content = null;
        if (props.type) {
            content = _react2.default.createElement('use', { xlinkHref: '#' + type });
        }
        if (children) {
            content = children;
        }

        var classes = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'icon-remote'] = true, _cx), className);

        return (
            // FIXME: 这里理论上优先级是 props 中的 prefix 优先级更高，不过之前的行为一直是取上层 ConfigProvider 中的 prefix，
            // 先兼容之前的表现，will be fixed in 2.x
            // https://github.com/alibaba-fusion/next/issues/3906
            _react2.default.createElement(ConfigIcon, { size: size }, _react2.default.createElement('svg', (0, _extends3.default)({ className: classes, focusable: false }, others, extraCommonProps), content))
        );
    };

    Iconfont.displayName = 'Iconfont';

    return _configProvider2.default.config(Iconfont);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _inner = __webpack_require__(86);

var _inner2 = _interopRequireDefault(_inner);

var _alignMap = __webpack_require__(87);

var _util = __webpack_require__(138);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

var alignMap = _alignMap.normalMap;
/** Balloon.Tooltip */
var Tooltip = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Tooltip, _React$Component);

    function Tooltip(props) {
        (0, _classCallCheck3.default)(this, Tooltip);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.beforePosition = function (result, obj) {
            var placement = result.config.placement;

            if (placement !== _this.state.align) {
                _this.setState({
                    align: placement,
                    innerAlign: true
                });
            }

            if (_this.props.arrowPointToCenter) {
                var _obj$target = obj.target,
                    width = _obj$target.width,
                    height = _obj$target.height;

                if (placement.length === 2) {
                    var offset = _alignMap.normalMap[placement].offset;
                    switch (placement[0]) {
                        case 'b':
                        case 't':
                            {
                                var plus = offset[0] > 0 ? 1 : -1;
                                result.style.left = result.style.left + plus * width / 2 - offset[0];
                            }
                            break;
                        case 'l':
                        case 'r':
                            {
                                var _plus = offset[0] > 0 ? 1 : -1;
                                result.style.top = result.style.top + _plus * height / 2 - offset[1];
                            }
                            break;
                    }
                }
            }

            return result;
        };

        _this.state = {
            align: props.placement || props.align,
            innerAlign: false
        };
        return _this;
    }

    Tooltip.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        if (nextProps.v2 && !prevState.innerAlign && 'align' in nextProps && nextProps.align !== prevState.align) {
            return {
                align: nextProps.align,
                innerAlign: false
            };
        }

        return null;
    };

    Tooltip.prototype.render = function render() {
        var _props = this.props,
            id = _props.id,
            className = _props.className,
            palign = _props.align,
            style = _props.style,
            prefix = _props.prefix,
            trigger = _props.trigger,
            children = _props.children,
            popupContainer = _props.popupContainer,
            popupProps = _props.popupProps,
            popupClassName = _props.popupClassName,
            popupStyle = _props.popupStyle,
            followTrigger = _props.followTrigger,
            triggerType = _props.triggerType,
            autoFocus = _props.autoFocus,
            alignEdge = _props.alignEdge,
            autoAdjust = _props.autoAdjust,
            rtl = _props.rtl,
            delay = _props.delay,
            v2 = _props.v2,
            arrowPointToCenter = _props.arrowPointToCenter,
            others = (0, _objectWithoutProperties3.default)(_props, ['id', 'className', 'align', 'style', 'prefix', 'trigger', 'children', 'popupContainer', 'popupProps', 'popupClassName', 'popupStyle', 'followTrigger', 'triggerType', 'autoFocus', 'alignEdge', 'autoAdjust', 'rtl', 'delay', 'v2', 'arrowPointToCenter']);

        var trOrigin = 'trOrigin';
        if (rtl) {
            others.rtl = true;
            trOrigin = 'rtlTrOrigin';
        }

        alignMap = alignEdge || v2 ? _alignMap.edgeMap : _alignMap.normalMap;
        var align = v2 ? this.state.align : palign;

        var transformOrigin = alignMap[align][trOrigin];
        var _offset = alignMap[align].offset;
        var _style = (0, _extends3.default)({ transformOrigin: transformOrigin }, style);

        var content = _react2.default.createElement(_inner2.default, (0, _extends3.default)({}, others, {
            id: id,
            prefix: prefix,
            closable: false,
            isTooltip: true,
            className: className,
            style: _style,
            align: align,
            rtl: rtl,
            alignEdge: alignEdge,
            v2: v2
        }), children);

        var triggerProps = {};
        triggerProps['aria-describedby'] = id;
        triggerProps.tabIndex = '0';

        var newTriggerType = triggerType;

        if (triggerType === 'hover' && id) {
            newTriggerType = ['focus', 'hover'];
        }

        var ariaTrigger = id ? _react2.default.cloneElement(trigger, triggerProps) : trigger;

        var newTrigger = (0, _util.getDisabledCompatibleTrigger)(_react2.default.isValidElement(ariaTrigger) ? ariaTrigger : _react2.default.createElement('span', null, ariaTrigger));

        var otherProps = {
            delay: delay,
            shouldUpdatePosition: true,
            needAdjust: false,
            align: alignMap[align].align,
            offset: _offset
        };

        if (v2) {
            delete otherProps.align;
            delete otherProps.shouldUpdatePosition;
            delete otherProps.needAdjust;
            delete otherProps.offset;

            (0, _extends3.default)(otherProps, {
                placement: align,
                placementOffset: 12,
                v2: true,
                beforePosition: this.beforePosition,
                autoAdjust: autoAdjust
            });
        }

        return _react2.default.createElement(Popup, (0, _extends3.default)({
            role: 'tooltip',
            animation: {
                in: 'zoomIn',
                out: 'zoomOut'
            },
            className: popupClassName,
            container: popupContainer,
            followTrigger: followTrigger,
            trigger: newTrigger,
            triggerType: newTriggerType,
            style: popupStyle,
            rtl: rtl,
            autoFocus: triggerType === 'focus' ? false : autoFocus
        }, otherProps, popupProps), content);
    };

    return Tooltip;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 自定义类名
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * tooltip的内容
     */
    children: _propTypes2.default.any,
    /**
     * 弹出层位置
     * @enumdesc 上, 右, 下, 左, 上左, 上右, 下左, 下右, 左上, 左下, 右上, 右下
     */
    align: _propTypes2.default.oneOf(['t', 'r', 'b', 'l', 'tl', 'tr', 'bl', 'br', 'lt', 'lb', 'rt', 'rb']),
    /**
     * 触发元素
     */
    trigger: _propTypes2.default.any,
    /**
     * 触发行为
     * 鼠标悬浮,  鼠标点击('hover', 'click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若有复杂交互，推荐使用triggerType为click的Balloon组件
     */
    triggerType: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 弹层组件style，透传给Popup
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层组件className，透传给Popup
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否pure render
     */
    pure: _propTypes2.default.bool,
    /**
     * 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 弹层id, 传入值才会支持无障碍
     */
    id: _propTypes2.default.string,
    /**
     * 如果需要让 Tooltip 内容可被点击，可以设置这个参数，例如 100
     */
    delay: _propTypes2.default.number,
    /**
     * 开启 v2 版本
     */
    v2: _propTypes2.default.bool,
    /**
     * [v2] 箭头是否指向目标元素的中心
     */
    arrowPointToCenter: _propTypes2.default.bool
}, _class.defaultProps = {
    triggerType: 'hover',
    prefix: 'next-',
    align: 'b',
    delay: 50,
    trigger: _react2.default.createElement('span', null),
    arrowPointToCenter: false
}, _temp);
Tooltip.displayName = 'Tooltip';
exports.default = Tooltip;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _dropdown = __webpack_require__(47);

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _item = __webpack_require__(296);

var _item2 = _interopRequireDefault(_item);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Breadcrumb
 */
var Breadcrumb = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Breadcrumb, _Component);

    function Breadcrumb(props) {
        (0, _classCallCheck3.default)(this, Breadcrumb);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _initialiseProps.call(_this);

        _this.state = {
            maxNode: props.maxNode === 'auto' ? 100 : props.maxNode
        };
        return _this;
    }

    Breadcrumb.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (state.prevMaxNode === props.maxNode) {
            return {};
        }

        return {
            prevMaxNode: props.maxNode,
            maxNode: props.maxNode === 'auto' ? 100 : props.maxNode
        };
    };

    Breadcrumb.prototype.componentDidMount = function componentDidMount() {
        this.computeMaxNode();
        _util.events.on(window, 'resize', this.computeMaxNode);
    };

    Breadcrumb.prototype.componentDidUpdate = function componentDidUpdate() {
        this.computeMaxNode();
    };

    Breadcrumb.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.computeMaxNode);
    };

    Breadcrumb.prototype.renderEllipsisNodeWithMenu = function renderEllipsisNodeWithMenu(children, breakpointer) {
        // 拿到被隐藏的项
        var hiddenItems = [];
        _react.Children.forEach(children, function (item, i) {
            var _item$props = item.props,
                link = _item$props.link,
                itemChildren = _item$props.children,
                onClick = _item$props.onClick;

            if (i > 0 && i <= breakpointer) {
                hiddenItems.push(_react2.default.createElement(_menu2.default.Item, { key: i, onClick: onClick }, link ? _react2.default.createElement('a', { href: link }, itemChildren) : itemChildren));
            }
        });

        var _props = this.props,
            prefix = _props.prefix,
            followTrigger = _props.followTrigger,
            popupContainer = _props.popupContainer,
            popupProps = _props.popupProps;

        return _react2.default.createElement(_dropdown2.default, (0, _extends3.default)({
            trigger: _react2.default.createElement('span', null, '...')
        }, popupProps, {
            container: popupContainer,
            followTrigger: followTrigger
        }), _react2.default.createElement('div', { className: prefix + 'breadcrumb-dropdown-wrapper' }, _react2.default.createElement(_menu2.default, null, hiddenItems)));
    };

    Breadcrumb.prototype.render = function render() {
        var _this2 = this;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            className = _props2.className,
            children = _props2.children,
            component = _props2.component,
            showHiddenItems = _props2.showHiddenItems,
            maxNodeProp = _props2.maxNode,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'className', 'children', 'component', 'showHiddenItems', 'maxNode']);

        var separator = this.props.separator || _react2.default.createElement(_icon2.default, { type: 'arrow-right', className: prefix + 'breadcrumb-icon-sep' });

        var maxNode = this.state.maxNode;

        var items = void 0;
        var length = _react.Children.count(children);

        if (maxNode > 1 && length > maxNode) {
            var breakpointer = length - maxNode + 1;
            items = [];

            _react.Children.forEach(children, function (item, i) {
                var ariaProps = {};

                // 增加空值判断
                if (!item) {
                    return;
                }
                if (i === length - 1) {
                    ariaProps['aria-current'] = 'page';
                }

                if (i && i === breakpointer) {
                    items.push(_react2.default.cloneElement(item, (0, _extends3.default)({
                        separator: separator,
                        prefix: prefix,
                        key: i,
                        activated: i === length - 1
                    }, ariaProps, {
                        className: showHiddenItems ? prefix + 'breadcrumb-text-ellipsis-clickable' : prefix + 'breadcrumb-text-ellipsis'
                    }), showHiddenItems ? _this2.renderEllipsisNodeWithMenu(children, breakpointer) : '...'));
                } else if (!i || i > breakpointer) {
                    items.push(_react2.default.cloneElement(item, (0, _extends3.default)({
                        separator: separator,
                        prefix: prefix,
                        key: i
                    }, ariaProps, {
                        activated: i === length - 1
                    })));
                }
            });
        } else {
            items = _react.Children.map(children, function (item, i) {
                var ariaProps = {};
                // 增加空值判断
                if (!item) {
                    return;
                }
                if (i === length - 1) {
                    ariaProps['aria-current'] = 'page';
                }

                return _react2.default.cloneElement(item, (0, _extends3.default)({
                    separator: separator,
                    prefix: prefix,
                    activated: i === length - 1
                }, ariaProps, {
                    key: i
                }));
            });
        }

        if (rtl) {
            others.dir = 'rtl';
        }

        var BreadcrumbComponent = component;

        delete others.maxNode;

        return _react2.default.createElement(BreadcrumbComponent, (0, _extends3.default)({
            'aria-label': 'Breadcrumb',
            className: className
        }, others, {
            style: (0, _extends3.default)({ position: 'relative' }, others.style || {})
        }), _react2.default.createElement('ul', { className: prefix + 'breadcrumb' }, items), maxNodeProp === 'auto' ? _react2.default.createElement('ul', {
            style: {
                position: 'absolute',
                left: 0,
                right: 0,
                top: 0,
                visibility: 'hidden'
            },
            ref: this.saveBreadcrumbRef,
            className: prefix + 'breadcrumb'
        }, _react.Children.map(children, function (item, i) {
            return _react2.default.cloneElement(item, {
                separator: separator,
                prefix: prefix,
                activated: i === length - 1,
                key: i
            });
        })) : null);
    };

    return Breadcrumb;
}(_react.Component), _class.Item = _item2.default, _class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /*eslint-disable*/
    /**
     * 面包屑子节点，需传入 Breadcrumb.Item
     */
    children: function children(props, propName) {
        _react.Children.forEach(props[propName], function (child) {
            if (!(child && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && child.type._typeMark === 'breadcrumb_item')) {
                throw new Error("Breadcrumb's children must be Breadcrumb.Item!");
            }
        });
    },
    /*eslint-enable*/
    /**
     * 面包屑最多显示个数，超出部分会被隐藏, 设置为 auto 会自动根据父元素的宽度适配。
     */
    maxNode: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.oneOf(['auto'])]),
    /**
     * 当超过的项被隐藏时，是否可通过点击省略号展示菜单（包含被隐藏的项）
     * @version 1.23
     */
    showHiddenItems: _propTypes2.default.bool,
    /**
     * 弹层挂载的容器节点（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 是否跟随trigger滚动（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 添加到弹层上的属性（在showHiddenItems为true时才有意义）
     * @version 1.23
     */
    popupProps: _propTypes2.default.object,
    /**
     * 分隔符，可以是文本或 Icon
     */
    separator: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    className: _propTypes2.default.any,
    onClick: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    maxNode: 100,
    showHiddenItems: false,
    component: 'nav'
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.computeMaxNode = function () {
        // 计算最大node节点，无法获取到 ... 节点的宽度，目前会有 nodeWidth - ellipsisNodeWidth 的误差
        if (_this3.props.maxNode !== 'auto' || !_this3.breadcrumbEl) return;
        var scrollWidth = _this3.breadcrumbEl.scrollWidth;
        var rect = _this3.breadcrumbEl.getBoundingClientRect();

        if (scrollWidth <= rect.width) return;
        var maxNode = _this3.breadcrumbEl.children.length;
        var index = 1;
        var fullWidth = scrollWidth;

        while (index < _this3.breadcrumbEl.children.length - 1) {
            var el = _this3.breadcrumbEl.children[index];
            maxNode--;
            fullWidth -= el.getBoundingClientRect().width;
            if (fullWidth <= rect.width) {
                break;
            }
            index++;
        }

        maxNode = Math.max(3, maxNode);

        if (maxNode !== _this3.state.maxNode) {
            _this3.setState({
                maxNode: maxNode
            });
        }
    };

    this.saveBreadcrumbRef = function (ref) {
        _this3.breadcrumbEl = ref;
    };
}, _temp);
Breadcrumb.displayName = 'Breadcrumb';
exports.default = _configProvider2.default.config((0, _reactLifecyclesCompat.polyfill)(Breadcrumb));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = _util.func.noop,
    makeChain = _util.func.makeChain,
    bindCtx = _util.func.bindCtx;

var Popup = _overlay2.default.Popup;

/**
 * Dropdown
 * @description 继承 Popup 的 API，除非特别说明
 */
var Dropdown = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Dropdown, _Component);

    function Dropdown(props) {
        (0, _classCallCheck3.default)(this, Dropdown);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.state = {
            visible: 'visible' in props ? props.visible : props.defaultVisible || false,
            autoFocus: 'autoFocus' in props ? props.autoFocus : false
        };

        bindCtx(_this, ['onTriggerKeyDown', 'onMenuClick', 'onVisibleChange']);
        return _this;
    }

    Dropdown.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var state = {};

        if ('visible' in nextProps) {
            state.visible = nextProps.visible;
        }

        return state;
    };

    Dropdown.prototype.getVisible = function getVisible() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

        return 'visible' in props ? props.visible : this.state.visible;
    };

    Dropdown.prototype.onMenuClick = function onMenuClick() {
        var autoClose = this.props.autoClose;

        if (!('visible' in this.props) && autoClose) {
            this.setState({
                visible: false
            });
        }
        this.onVisibleChange(false, 'fromContent');
    };

    Dropdown.prototype.onVisibleChange = function onVisibleChange(visible, from) {
        this.setState({ visible: visible });

        this.props.onVisibleChange(visible, from);
    };

    Dropdown.prototype.onTriggerKeyDown = function onTriggerKeyDown() {
        var autoFocus = true;

        if ('autoFocus' in this.props) {
            autoFocus = this.props.autoFocus;
        }

        this.setState({
            autoFocus: autoFocus
        });
    };

    Dropdown.prototype.render = function render() {
        var _props = this.props,
            trigger = _props.trigger,
            rtl = _props.rtl,
            autoClose = _props.autoClose;

        var child = _react.Children.only(this.props.children);
        var content = child;
        if (typeof child.type === 'function' && child.type.isNextMenu) {
            content = _react2.default.cloneElement(child, {
                onItemClick: makeChain(this.onMenuClick, child.props.onItemClick)
            });
        } else if (autoClose) {
            content = _react2.default.cloneElement(child, {
                onClick: makeChain(this.onMenuClick, child.props.onClick)
            });
        }

        var newTrigger = _react2.default.cloneElement(trigger, {
            onKeyDown: makeChain(this.onTriggerKeyDown, trigger.props.onKeyDown)
        });

        return _react2.default.createElement(Popup, (0, _extends3.default)({}, this.props, {
            rtl: rtl,
            autoFocus: this.state.autoFocus,
            trigger: newTrigger,
            visible: this.getVisible(),
            onVisibleChange: this.onVisibleChange,
            canCloseByOutSideClick: true
        }), content);
    };

    return Dropdown;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    /**
     * 弹层内容
     */
    children: _propTypes2.default.node,
    /**
     * 弹层当前是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层显示或隐藏时触发的回调函数
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 触发弹层显示或者隐藏的元素
     */
    trigger: _propTypes2.default.node,
    /**
     * 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，或者它们组成的数组，如 ['hover', 'click']
     */
    triggerType: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 设置此属性，弹层无法显示或隐藏
     */
    disabled: _propTypes2.default.bool,
    /**
     * 弹层相对于触发元素的定位, 详见 Overlay 的定位部分
     */
    align: _propTypes2.default.string,
    /**
     * 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量
     * e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px
     */
    offset: _propTypes2.default.array,
    /**
     * 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效
     */
    delay: _propTypes2.default.number,
    /**
     * 弹层打开时是否让其中的元素自动获取焦点
     */
    autoFocus: _propTypes2.default.bool,
    /**
     * 是否显示遮罩
     */
    hasMask: _propTypes2.default.bool,
    /**
     * 开启后，children 不管是不是Menu，点击后都默认关掉弹层（2.x默认设置为true）
     * @version 1.23
     */
    autoClose: _propTypes2.default.bool,
    /**
     * 隐藏时是否保留子节点
     */
    cache: _propTypes2.default.bool,
    /**
     * 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画
     * @default { in: 'expandInDown', out: 'expandOutUp' }
     */
    animation: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool])
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    defaultVisible: false,
    autoClose: false,
    onVisibleChange: noop,
    triggerType: 'hover',
    disabled: false,
    align: 'tl bl',
    offset: [0, 0],
    delay: 200,
    hasMask: false,
    cache: false,
    onPosition: noop
}, _temp);
Dropdown.displayName = 'Dropdown';
exports.default = Dropdown;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _checkableItem = __webpack_require__(142);

var _checkableItem2 = _interopRequireDefault(_checkableItem);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Menu.CheckboxItem
 * @order 3
 * @description 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑
 */
var CheckboxItem = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(CheckboxItem, _Component);

  function CheckboxItem() {
    (0, _classCallCheck3.default)(this, CheckboxItem);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  CheckboxItem.prototype.render = function render() {
    var _props = this.props,
        checkboxDisabled = _props.checkboxDisabled,
        others = (0, _objectWithoutProperties3.default)(_props, ['checkboxDisabled']);

    return _react2.default.createElement(_checkableItem2.default, (0, _extends3.default)({ role: 'menuitemcheckbox', checkType: 'checkbox', checkDisabled: checkboxDisabled }, others));
  };

  return CheckboxItem;
}(_react.Component), _class.menuChildType = 'item', _class.propTypes = {
  /**
   * 是否选中
   */
  checked: _propTypes2.default.bool,
  /**
   * 是否半选中
   */
  indeterminate: _propTypes2.default.bool,
  /**
   * 是否禁用
   */
  disabled: _propTypes2.default.bool,
  /**
   * 选中或取消选中触发的回调函数
   * @param {Boolean} checked 是否选中
   * @param {Object} event 选中事件对象
   */
  onChange: _propTypes2.default.func,
  /**
   * 帮助文本
   */
  helper: _propTypes2.default.node,
  /**
   * 标签内容
   */
  children: _propTypes2.default.node,
  checkboxDisabled: _propTypes2.default.bool
}, _class.defaultProps = {
  checked: false,
  indeterminate: false,
  disabled: false,
  onChange: function onChange() {},
  checkboxDisabled: false
}, _temp);
CheckboxItem.displayName = 'CheckboxItem';
exports.default = CheckboxItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var React = tslib_1.__importStar(__webpack_require__(0));
var PropTypes = tslib_1.__importStar(__webpack_require__(1));
function withCheckboxContext(Checkbox) {
    var _a;
    return _a = /** @class */function (_super) {
        tslib_1.__extends(WrappedComp, _super);
        function WrappedComp() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        WrappedComp.prototype.render = function () {
            return React.createElement(Checkbox, tslib_1.__assign({}, this.props, { context: this.context }));
        };
        return WrappedComp;
    }(React.Component), _a.displayName = 'Checkbox', _a.contextTypes = {
        onChange: PropTypes.func,
        __group__: PropTypes.bool,
        selectedValue: PropTypes.array,
        disabled: PropTypes.bool,
        prefix: PropTypes.string
    }, _a;
}
exports.default = withCheckboxContext;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var React = tslib_1.__importStar(__webpack_require__(0));
var PropTypes = tslib_1.__importStar(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var checkbox_1 = tslib_1.__importDefault(__webpack_require__(143));
var pickOthers = util_1.obj.pickOthers;
/** Checkbox.Group */
var CheckboxGroup = /** @class */function (_super) {
    tslib_1.__extends(CheckboxGroup, _super);
    function CheckboxGroup(props) {
        var _this = _super.call(this, props) || this;
        var value = [];
        if ('value' in props) {
            value = props.value;
        } else if ('defaultValue' in props) {
            value = props.defaultValue;
        }
        if (!Array.isArray(value)) {
            if (value === null || value === undefined) {
                value = [];
            } else {
                value = [value];
            }
        }
        _this.state = {
            value: tslib_1.__spreadArray([], tslib_1.__read(value), false)
        };
        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }
    CheckboxGroup.prototype.getChildContext = function () {
        return {
            __group__: true,
            onChange: this.onChange,
            selectedValue: this.state.value,
            disabled: this.props.disabled
        };
    };
    CheckboxGroup.getDerivedStateFromProps = function (nextProps) {
        if ('value' in nextProps) {
            var value = nextProps.value;
            if (!Array.isArray(value)) {
                if (value === null || value === undefined) {
                    value = [];
                } else {
                    value = [value];
                }
            }
            return { value: value };
        }
        return null;
    };
    CheckboxGroup.prototype.onChange = function (currentValue, event) {
        var _a, _b;
        var value = this.state.value;
        var index = value.indexOf(currentValue);
        var valTemp = tslib_1.__spreadArray([], tslib_1.__read(value), false);
        if (index === -1) {
            valTemp.push(currentValue);
        } else {
            valTemp.splice(index, 1);
        }
        if (!('value' in this.props)) {
            this.setState({ value: valTemp });
        }
        (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, valTemp, event);
    };
    CheckboxGroup.prototype.render = function () {
        var _a;
        var _this = this;
        var _b;
        var _c = this.props,
            className = _c.className,
            style = _c.style,
            prefix = _c.prefix,
            disabled = _c.disabled,
            direction = _c.direction,
            rtl = _c.rtl,
            isPreview = _c.isPreview,
            renderPreview = _c.renderPreview;
        var others = pickOthers(CheckboxGroup.propTypes, this.props);
        // 如果内嵌标签跟 dataSource 同时存在，以内嵌标签为主
        var children;
        var previewed = [];
        if (this.props.children) {
            children = React.Children.map(this.props.children, function (child) {
                var _a, _b, _c, _d;
                if (!React.isValidElement(child)) {
                    return child;
                }
                var checked = _this.state.value && _this.state.value.indexOf((_a = child.props) === null || _a === void 0 ? void 0 : _a.value) > -1;
                if (checked) {
                    previewed.push({
                        label: (_b = child.props) === null || _b === void 0 ? void 0 : _b.children,
                        value: (_c = child.props) === null || _c === void 0 ? void 0 : _c.value
                    });
                }
                return React.cloneElement(child, ((_d = child.props) === null || _d === void 0 ? void 0 : _d.rtl) === undefined ? { rtl: rtl } : {});
            });
        } else {
            children = (_b = this.props.dataSource) === null || _b === void 0 ? void 0 : _b.map(function (item, index) {
                var option;
                if ((typeof item === "undefined" ? "undefined" : (0, _typeof3.default)(item)) !== 'object') {
                    option = {
                        label: item,
                        value: item,
                        disabled: disabled
                    };
                } else {
                    option = item;
                }
                var checked = _this.state.value && _this.state.value.indexOf(option.value) > -1;
                if (checked) {
                    previewed.push({
                        label: option.label,
                        value: option.value
                    });
                }
                return React.createElement(checkbox_1.default, { key: index, value: option.value, checked: checked, rtl: rtl, disabled: disabled || option.disabled, label: option.label });
            });
        }
        if (isPreview) {
            var previewCls = (0, classnames_1.default)(className, "".concat(prefix, "form-preview"));
            if ('renderPreview' in this.props) {
                return React.createElement("div", tslib_1.__assign({}, others, { dir: rtl ? 'rtl' : undefined, className: previewCls }), renderPreview === null || renderPreview === void 0 ? void 0 : renderPreview(previewed, this.props));
            }
            return React.createElement("p", tslib_1.__assign({}, others, { dir: rtl ? 'rtl' : undefined, className: previewCls }), previewed.map(function (item) {
                return item.label;
            }).join(', '));
        }
        var cls = (0, classnames_1.default)(className, (_a = {}, _a["".concat(prefix, "checkbox-group")] = true, _a["".concat(prefix, "checkbox-group-").concat(direction)] = true, _a.disabled = disabled, _a));
        return React.createElement("span", tslib_1.__assign({ dir: rtl ? 'rtl' : undefined }, others, { className: cls, style: style }), children);
    };
    CheckboxGroup.propTypes = {
        prefix: PropTypes.string,
        rtl: PropTypes.bool,
        className: PropTypes.string,
        style: PropTypes.object,
        disabled: PropTypes.bool,
        dataSource: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.object)]),
        value: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number, PropTypes.bool]),
        defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.number, PropTypes.bool]),
        children: PropTypes.arrayOf(PropTypes.element),
        onChange: PropTypes.func,
        direction: PropTypes.oneOf(['hoz', 'ver']),
        isPreview: PropTypes.bool,
        renderPreview: PropTypes.func
    };
    CheckboxGroup.defaultProps = {
        dataSource: [],
        onChange: function onChange() {},
        prefix: 'next-',
        direction: 'hoz',
        isPreview: false
    };
    CheckboxGroup.childContextTypes = {
        onChange: PropTypes.func,
        __group__: PropTypes.bool,
        selectedValue: PropTypes.array,
        disabled: PropTypes.bool
    };
    return CheckboxGroup;
}(React.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(CheckboxGroup);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
function withContext(Radio) {
    var WrappedComp = /** @class */function (_super) {
        tslib_1.__extends(WrappedComp, _super);
        function WrappedComp(props) {
            var _this = _super.call(this, props) || this;
            _this.radioRef = null;
            return _this;
        }
        WrappedComp.prototype.focus = function () {
            if (this.radioRef) {
                this.radioRef.focus();
            }
        };
        WrappedComp.prototype.render = function () {
            var _this = this;
            return react_1.default.createElement(Radio, tslib_1.__assign({ ref: function ref(el) {
                    _this.radioRef = el;
                } }, this.props, { context: this.context }));
        };
        WrappedComp.displayName = 'Radio';
        WrappedComp.contextTypes = {
            onChange: prop_types_1.default.func,
            __group__: prop_types_1.default.bool,
            isButton: prop_types_1.default.bool,
            selectedValue: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]),
            disabled: prop_types_1.default.bool
        };
        return WrappedComp;
    }(react_1.default.Component);
    return WrappedComp;
}
exports.default = withContext;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var radio_1 = tslib_1.__importDefault(__webpack_require__(145));
var makeChain = util_1.func.makeChain;
var focusRef = util_1.focus.focusRef;
var pickOthers = util_1.obj.pickOthers;
var RadioGroup = /** @class */function (_super) {
    tslib_1.__extends(RadioGroup, _super);
    function RadioGroup(props) {
        var _this = _super.call(this, props) || this;
        _this.saveRadioRef = function (el, index) {
            if (el && typeof el.getInstance === 'function') {
                var radio = el.getInstance();
                _this.radioRefs[index] = radio;
            }
        };
        var value = '';
        if ('value' in props) {
            value = props.value;
        } else if ('defaultValue' in props) {
            value = props.defaultValue;
        }
        // The reference for the first Radio and for the selected Radio.
        _this.radioRefs = [];
        _this.hasFocus = false;
        _this.state = { value: value };
        _this.onChange = _this.onChange.bind(_this);
        return _this;
    }
    RadioGroup.getDerivedStateFromProps = function (props, state) {
        if ('value' in props && props.value !== state.value) {
            return {
                value: props.value
            };
        }
        return null;
    };
    RadioGroup.prototype.getChildContext = function () {
        var disabled = this.props.disabled;
        return {
            __group__: true,
            isButton: this.props.shape === 'button',
            onChange: this.onChange,
            selectedValue: this.state.value,
            disabled: disabled
        };
    };
    RadioGroup.prototype.onChange = function (currentValue, e) {
        if (!('value' in this.props)) {
            this.setState({ value: currentValue });
        }
        if (currentValue !== this.state.value) {
            this.props.onChange(currentValue, e);
        }
    };
    RadioGroup.prototype.focus = function () {
        if (!this.hasFocus) {
            var availableRef = this.radioRefs.filter(function (ref) {
                if (ref) {
                    return !ref.props.disabled;
                }
                return false;
            });
            var radioRef = availableRef.find(function (ref) {
                if (ref) {
                    return ref.props.checked;
                }
                return false;
            });
            if (radioRef) {
                focusRef(radioRef);
            } else if (availableRef.length > 0) {
                focusRef(availableRef[0]);
            }
        }
    };
    RadioGroup.prototype.render = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            rtl = _b.rtl,
            className = _b.className,
            disabled = _b.disabled,
            shape = _b.shape,
            size = _b.size,
            style = _b.style,
            prefix = _b.prefix,
            direction = _b.direction,
            component = _b.component,
            isPreview = _b.isPreview,
            renderPreview = _b.renderPreview;
        var others = pickOthers(RadioGroup.propTypes, this.props);
        if (rtl) {
            others.dir = 'rtl';
        }
        var children;
        var previewed = {};
        this.radioRefs = [];
        if (this.props.children) {
            children = react_1.default.Children.map(this.props.children, function (child, index) {
                if (!react_1.default.isValidElement(child)) {
                    return child;
                }
                var checked = _this.state.value === child.props.value;
                if (checked) {
                    previewed.label = child.props.children;
                    previewed.value = child.props.value;
                }
                var tabIndex = index === 0 && !_this.state.value || checked ? 0 : -1;
                var childrtl = child.props.rtl === undefined ? rtl : child.props.rtl;
                if (child.type && child.type.displayName === 'Config(Radio)') {
                    return react_1.default.cloneElement(child, {
                        checked: checked,
                        tabIndex: tabIndex,
                        rtl: childrtl,
                        ref: function ref(e) {
                            _this.saveRadioRef(e, index);
                        }
                    });
                }
                return react_1.default.cloneElement(child, {
                    checked: checked,
                    rtl: childrtl,
                    ref: function ref(e) {
                        _this.saveRadioRef(e, index);
                    }
                });
            });
        } else {
            children = this.props.dataSource.map(function (item, index) {
                var option;
                if ((typeof item === "undefined" ? "undefined" : (0, _typeof3.default)(item)) !== 'object') {
                    option = {
                        label: item,
                        value: item,
                        disabled: disabled
                    };
                } else {
                    option = item;
                }
                var checked = _this.state.value === option.value;
                if (checked) {
                    previewed.label = option.label;
                    previewed.value = option.value;
                }
                return react_1.default.createElement(radio_1.default, { key: index, tabIndex: index === 0 && !_this.state.value || checked ? 0 : -1, value: option.value, checked: checked, label: option.label, disabled: disabled || option.disabled, ref: function ref(e) {
                        _this.saveRadioRef(e, index);
                    } });
            });
        }
        if (isPreview) {
            var previewCls = (0, classnames_1.default)(className, "".concat(prefix, "form-preview"));
            if ('renderPreview' in this.props) {
                return react_1.default.createElement("div", tslib_1.__assign({}, others, { className: previewCls }), renderPreview(previewed, this.props));
            }
            return react_1.default.createElement("p", tslib_1.__assign({}, others, { className: previewCls }), previewed.label);
        }
        var isButtonShape = shape === 'button';
        var cls = (0, classnames_1.default)(className, (_a = {}, _a["".concat(prefix, "radio-group")] = true, _a["".concat(prefix, "radio-group-").concat(direction)] = !isButtonShape, _a["".concat(prefix, "radio-button")] = isButtonShape, _a["".concat(prefix, "radio-button-").concat(size)] = isButtonShape, _a.disabled = disabled, _a));
        var TagName = component;
        return react_1.default.createElement(TagName, tslib_1.__assign({}, others, { "aria-disabled": disabled, role: "radiogroup", className: cls, style: style, onFocus: makeChain(function () {
                this.hasFocus = true;
            }.bind(this), this.props.onFocus), onBlur: makeChain(function () {
                this.hasFocus = false;
            }.bind(this), this.props.onBlur) }), children);
    };
    RadioGroup.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, className: prop_types_1.default.string, style: prop_types_1.default.object, name: prop_types_1.default.string, value: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]), defaultValue: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]), component: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func]), onChange: prop_types_1.default.func, disabled: prop_types_1.default.bool, shape: prop_types_1.default.oneOf(['normal', 'button']), size: prop_types_1.default.oneOf(['large', 'medium', 'small']), dataSource: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.string), prop_types_1.default.arrayOf(prop_types_1.default.object)]), children: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.element), prop_types_1.default.element]), direction: prop_types_1.default.oneOf(['hoz', 'ver']), isPreview: prop_types_1.default.bool, renderPreview: prop_types_1.default.func });
    RadioGroup.defaultProps = {
        dataSource: [],
        size: 'medium',
        onChange: function onChange() {},
        prefix: 'next-',
        component: 'div',
        direction: 'hoz',
        isPreview: false
    };
    RadioGroup.childContextTypes = {
        onChange: prop_types_1.default.func,
        __group__: prop_types_1.default.bool,
        isButton: prop_types_1.default.bool,
        selectedValue: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.bool]),
        disabled: prop_types_1.default.bool
    };
    return RadioGroup;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(RadioGroup);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _checkableItem = __webpack_require__(142);

var _checkableItem2 = _interopRequireDefault(_checkableItem);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Menu.RadioItem
 * @order 4
 * @description 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑
 */
var RadioItem = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(RadioItem, _Component);

  function RadioItem() {
    (0, _classCallCheck3.default)(this, RadioItem);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  RadioItem.prototype.render = function render() {
    return _react2.default.createElement(_checkableItem2.default, (0, _extends3.default)({ role: 'menuitemradio', checkType: 'radio' }, this.props));
  };

  return RadioItem;
}(_react.Component), _class.menuChildType = 'item', _class.propTypes = {
  /**
   * 是否选中
   */
  checked: _propTypes2.default.bool,
  /**
   * 是否禁用
   */
  disabled: _propTypes2.default.bool,
  /**
   * 选中或取消选中触发的回调函数
   * @param {Boolean} checked 是否选中
   * @param {Object} event 选中事件对象
   */
  onChange: _propTypes2.default.func,
  /**
   * 帮助文本
   */
  helper: _propTypes2.default.node,
  /**
   * 标签内容
   */
  children: _propTypes2.default.node
}, _class.defaultProps = {
  checked: false,
  disabled: false,
  onChange: function onChange() {}
}, _temp);
RadioItem.displayName = 'RadioItem';
exports.default = RadioItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _item = __webpack_require__(38);

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Menu.Group
 * @order 5
 */
var Group = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Group, _Component);

    function Group() {
        (0, _classCallCheck3.default)(this, Group);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Group.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            root = _props.root,
            className = _props.className,
            label = _props.label,
            children = _props.children,
            parentMode = _props.parentMode,
            others = (0, _objectWithoutProperties3.default)(_props, ['root', 'className', 'label', 'children', 'parentMode']);
        var prefix = root.props.prefix;

        var newClassName = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-group-label'] = true, _cx[className] = !!className, _cx));

        var newChildren = children.map(function (child) {
            var _cx2;

            // to fix https://github.com/alibaba-fusion/next/issues/952
            if (typeof child !== 'function' && (typeof child === 'undefined' ? 'undefined' : (0, _typeof3.default)(child)) !== 'object') {
                return child;
            }
            var className = child.props.className;

            var newChildClassName = (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'menu-group-item'] = true, _cx2[className] = !!className, _cx2));

            return (0, _react.cloneElement)(child, {
                parentMode: parentMode,
                className: newChildClassName
            });
        });

        return [_react2.default.createElement(_item2.default, (0, _extends3.default)({
            key: 'menu-group-label',
            className: newClassName,
            replaceClassName: true,
            root: root,
            parentMode: parentMode
        }, others), label)].concat(newChildren);
    };

    return Group;
}(_react.Component), _class.menuChildType = 'group', _class.propTypes = {
    root: _propTypes2.default.object,
    className: _propTypes2.default.string,
    /**
     * 标签内容
     */
    label: _propTypes2.default.node,
    /**
     * 菜单项
     */
    children: _propTypes2.default.node,
    parentMode: _propTypes2.default.oneOf(['inline', 'popup'])
}, _temp);
Group.displayName = 'Group';
exports.default = Group;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Menu.Divider
 * @order 6
 */
var Divider = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Divider, _Component);

    function Divider() {
        (0, _classCallCheck3.default)(this, Divider);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Divider.prototype.render = function render() {
        var _cx;

        var _props = this.props,
            root = _props.root,
            className = _props.className,
            parentMode = _props.parentMode,
            parent = _props.parent,
            others = (0, _objectWithoutProperties3.default)(_props, ['root', 'className', 'parentMode', 'parent']);
        var prefix = root.props.prefix;

        var newClassName = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'menu-divider'] = true, _cx[className] = !!className, _cx));

        return _react2.default.createElement('li', (0, _extends3.default)({ role: 'separator', className: newClassName }, others));
    };

    return Divider;
}(_react.Component), _class.menuChildType = 'divider', _class.propTypes = {
    root: _propTypes2.default.object,
    className: _propTypes2.default.string
}, _temp);
Divider.displayName = 'Divider';
exports.default = Divider;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

exports.default = create;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _util = __webpack_require__(4);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _menu = __webpack_require__(139);

var _menu2 = _interopRequireDefault(_menu);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var getContextProps = _configProvider2.default.getContextProps;

var Menu = _configProvider2.default.config(_menu2.default);

var menuInstance = void 0;

var ContextMenu = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(ContextMenu, _Component);

    function ContextMenu(props) {
        (0, _classCallCheck3.default)(this, ContextMenu);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.state = {
            visible: true
        };

        bindCtx(_this, ['handleOverlayClose', 'handleOverlayOpen', 'handleItemClick', 'getOverlay']);
        return _this;
    }

    ContextMenu.prototype.getOverlay = function getOverlay(ref) {
        this.overlay = ref;
    };

    ContextMenu.prototype.close = function close() {
        this.setState({
            visible: false
        });
        menuInstance = null;
    };

    ContextMenu.prototype.handleOverlayClose = function handleOverlayClose(triggerType, e) {
        var clickedPopupMenu = triggerType === 'docClick' && this.popupNodes.some(function (node) {
            return node.contains(e.target);
        });
        if (!clickedPopupMenu) {
            this.close();
            var overlayProps = this.props.overlayProps;

            if (overlayProps && overlayProps.onRequestClose) {
                for (var _len = arguments.length, others = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
                    others[_key - 2] = arguments[_key];
                }

                overlayProps.onRequestClose.apply(overlayProps, [triggerType, e].concat(others));
            }
        }
    };

    ContextMenu.prototype.handleOverlayOpen = function handleOverlayOpen() {
        this.popupNodes = this.overlay.getInstance().getContent().getInstance().popupNodes;
        var overlayProps = this.props.overlayProps;

        if (overlayProps && overlayProps.onOpen) {
            overlayProps.onOpen();
        }
    };

    ContextMenu.prototype.handleItemClick = function handleItemClick() {
        var _props;

        this.close();

        this.props.onItemClick && (_props = this.props).onItemClick.apply(_props, arguments);
    };

    ContextMenu.prototype.render = function render() {
        var _cx, _cx2;

        var _props2 = this.props,
            className = _props2.className,
            popupClassName = _props2.popupClassName,
            target = _props2.target,
            align = _props2.align,
            offset = _props2.offset,
            afterClose = _props2.afterClose,
            _props2$overlayProps = _props2.overlayProps,
            overlayProps = _props2$overlayProps === undefined ? {} : _props2$overlayProps,
            others = (0, _objectWithoutProperties3.default)(_props2, ['className', 'popupClassName', 'target', 'align', 'offset', 'afterClose', 'overlayProps']);

        var contextProps = getContextProps(this.props);
        var prefix = contextProps.prefix;
        var visible = this.state.visible;

        var newOverlayProps = (0, _extends3.default)({}, contextProps, overlayProps, {
            target: target,
            align: align,
            offset: offset,
            afterClose: afterClose,
            visible: visible,
            onRequestClose: this.handleOverlayClose,
            onOpen: this.handleOverlayOpen,
            ref: this.getOverlay
        });
        var menuProps = (0, _extends3.default)({}, contextProps, {
            triggerType: 'hover'
        }, others, {
            className: (0, _classnames2.default)((_cx = {}, _cx[prefix + 'context'] = true, _cx[className] = !!className, _cx)),
            popupClassName: (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'context'] = true, _cx2[popupClassName] = !!popupClassName, _cx2)),
            onItemClick: this.handleItemClick
        });

        newOverlayProps.rtl = false;

        return _react2.default.createElement(_overlay2.default, newOverlayProps, _react2.default.createElement(Menu, menuProps));
    };

    return ContextMenu;
}(_react.Component), _class.propTypes = {
    className: _propTypes2.default.string,
    popupClassName: _propTypes2.default.string,
    target: _propTypes2.default.any,
    align: _propTypes2.default.string,
    offset: _propTypes2.default.array,
    overlayProps: _propTypes2.default.object,
    afterClose: _propTypes2.default.func,
    mode: _propTypes2.default.oneOf(['inline', 'popup']),
    onOpen: _propTypes2.default.func,
    onItemClick: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    align: 'tl tl',
    mode: 'popup'
}, _temp);

/**
 * 创建上下文菜单
 * @exportName create
 * @param {Object} props 属性对象
 */

ContextMenu.displayName = 'ContextMenu';
function create(props) {
    if (menuInstance) {
        menuInstance.destroy();
    }

    /* eslint-disable no-unused-vars */
    var afterClose = props.afterClose,
        others = (0, _objectWithoutProperties3.default)(props, ['afterClose']);
    /* eslint-enable no-unused-vars */

    var div = document.createElement('div');
    document.body.appendChild(div);

    var closeChain = function closeChain() {
        (0, _reactDom.unmountComponentAtNode)(div);
        document.body.removeChild(div);

        afterClose && afterClose();
    };

    var newContext = _configProvider2.default.getContext();

    var menu = void 0;
    (0, _reactDom.render)(_react2.default.createElement(_configProvider2.default, newContext, _react2.default.createElement(ContextMenu, (0, _extends3.default)({
        ref: function ref(_ref) {
            menu = _ref;
        },
        afterClose: closeChain
    }, others))), div);

    menuInstance = {
        destroy: function destroy() {
            if (menu) {
                menu.close();
            }
        }
    };

    return menuInstance;
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Breadcrumb.Item
 */
var Item = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Item, _Component);

    function Item() {
        (0, _classCallCheck3.default)(this, Item);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    // stateless separator component
    Item.Separator = function Separator(_ref) {
        var prefix = _ref.prefix,
            children = _ref.children;

        return _react2.default.createElement('span', { className: prefix + 'breadcrumb-separator' }, children);
    };

    Item.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            className = _props.className,
            children = _props.children,
            link = _props.link,
            activated = _props.activated,
            separator = _props.separator,
            onClick = _props.onClick,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'rtl', 'className', 'children', 'link', 'activated', 'separator', 'onClick']);

        var clazz = (0, _classnames2.default)(prefix + 'breadcrumb-text', className, {
            activated: activated
        });

        return _react2.default.createElement('li', { dir: rtl ? 'rtl' : null, className: prefix + 'breadcrumb-item', onClick: onClick }, link ? _react2.default.createElement('a', (0, _extends3.default)({ href: link, className: clazz }, others), children) : _react2.default.createElement('span', (0, _extends3.default)({ className: clazz }, others), children), activated ? null : Item.Separator({ prefix: prefix, children: separator }));
    };

    return Item;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 面包屑节点链接，如果设置这个属性，则该节点为`<a />` ，否则是`<span />`
     */
    link: _propTypes2.default.string,
    activated: _propTypes2.default.bool,
    separator: _propTypes2.default.node,
    className: _propTypes2.default.any,
    children: _propTypes2.default.node,
    /**
     * 元素点击事件
     * @param {MouseEvent} e Click Mouse Event
     */
    onClick: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-'
}, _class._typeMark = 'breadcrumb_item', _temp);
Item.displayName = 'Item';
exports.default = _configProvider2.default.config(Item);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
function mapIconSize(size) {
    return {
        large: 'small',
        medium: 'xs',
        small: 'xs'
    }[size];
}
var Button = /** @class */function (_super) {
    tslib_1.__extends(Button, _super);
    function Button() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.onMouseUp = function (e) {
            // @ts-expect-error fixme: may have no blur
            _this.button.blur();
            if (_this.props.onMouseUp) {
                _this.props.onMouseUp(e);
            }
        };
        _this.buttonRefHandler = function (button) {
            _this.button = button;
        };
        return _this;
    }
    Button.prototype.render = function () {
        var _a, _b;
        var _c = this.props,
            prefix = _c.prefix,
            className = _c.className,
            type = _c.type,
            size = _c.size,
            htmlType = _c.htmlType,
            loading = _c.loading,
            text = _c.text,
            warning = _c.warning,
            ghost = _c.ghost,
            component = _c.component,
            iconSize = _c.iconSize,
            icons = _c.icons,
            disabled = _c.disabled,
            onClick = _c.onClick,
            children = _c.children,
            rtl = _c.rtl,
            others = tslib_1.__rest(_c, ["prefix", "className", "type", "size", "htmlType", "loading", "text", "warning", "ghost", "component", "iconSize", "icons", "disabled", "onClick", "children", "rtl"]);
        var ghostType = ['light', 'dark'].indexOf(ghost) >= 0 ? ghost : 'dark';
        var btnClsObj = (_a = {}, _a["".concat(prefix, "btn")] = true, _a["".concat(prefix).concat(size)] = size, _a["".concat(prefix, "btn-").concat(type)] = type && !ghost, _a["".concat(prefix, "btn-text")] = text, _a["".concat(prefix, "btn-warning")] = warning, _a["".concat(prefix, "btn-loading")] = loading, _a["".concat(prefix, "btn-ghost")] = ghost, _a["".concat(prefix, "btn-").concat(ghostType)] = ghost, _a[className] = className, _a);
        var loadingIcon = null;
        // 如果传入了 loading 的 icons，使用该节点来渲染
        if (icons && icons.loading && (0, react_1.isValidElement)(icons.loading)) {
            if (loading) {
                delete btnClsObj["".concat(prefix, "btn-loading")];
                btnClsObj["".concat(prefix, "btn-custom-loading")] = true;
            }
            var loadingSize = iconSize || mapIconSize(size);
            loadingIcon = react_1.default.cloneElement(icons.loading, {
                className: (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "btn-custom-loading-icon")] = true, _b.show = loading, _b)),
                size: loadingSize
            });
        }
        var count = react_1.Children.count(children);
        // fixme: react children is a complex types, map children to modify is unrecommended
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var clonedChildren = react_1.Children.map(children, function (child, index) {
            var _a;
            if (child && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && child.type._typeMark === 'icon') {
                var iconCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "btn-icon")] = !iconSize, _a["".concat(prefix, "btn-icon-size")] = iconSize, _a["".concat(prefix, "icon-first")] = count > 1 && index === 0, _a["".concat(prefix, "icon-last")] = count > 1 && index === count - 1, _a["".concat(prefix, "icon-alone")] = count === 1, _a[child.props.className] = !!child.props.className, _a));
                if ('size' in child.props) {
                    util_1.log.warning("The size of Icon will not take effect, when Icon is the [direct child element] of Button(<Button><Icon size=\"".concat(child.props.size, "\" /></Button>), use <Button iconSize=\"").concat(child.props.size, "\"> or <Button><div><Icon size=\"").concat(child.props.size, "\" /></div></Button> instead of."));
                }
                return react_1.default.cloneElement(child, {
                    className: iconCls,
                    size: iconSize || mapIconSize(size)
                });
            }
            if (!(0, react_1.isValidElement)(child)) {
                return react_1.default.createElement("span", { className: "".concat(prefix, "btn-helper") }, child);
            }
            return child;
        });
        var TagName = component;
        var tagAttrs = tslib_1.__assign(tslib_1.__assign({}, util_1.obj.pickOthers(Object.keys(Button.propTypes), others)), { type: htmlType, disabled: disabled, onClick: onClick, className: (0, classnames_1.default)(btnClsObj) });
        if (TagName !== 'button') {
            delete tagAttrs.type;
            if (tagAttrs.disabled) {
                delete tagAttrs.onClick; // a 标签的 onClick 浏览器默认不会禁用
                if ('href' in tagAttrs && tagAttrs.href) {
                    delete tagAttrs.href; // a 标签在禁用状态下无跳转
                }
            }
        }
        return react_1.default.createElement(TagName, tslib_1.__assign({}, tagAttrs, { dir: rtl ? 'rtl' : undefined, onMouseUp: this.onMouseUp, ref: this.buttonRefHandler }), loadingIcon, clonedChildren);
    };
    Button.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, rtl: prop_types_1.default.bool, type: prop_types_1.default.oneOf(['primary', 'secondary', 'normal']), size: prop_types_1.default.oneOf(['small', 'medium', 'large']), icons: prop_types_1.default.shape({ loading: prop_types_1.default.node }), iconSize: prop_types_1.default.oneOfType([prop_types_1.default.oneOf(['xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl', 'inherit']), prop_types_1.default.number]), htmlType: prop_types_1.default.oneOf(['submit', 'reset', 'button']), component: prop_types_1.default.oneOf(['button', 'a', 'div', 'span']), loading: prop_types_1.default.bool, ghost: prop_types_1.default.oneOf([true, false, 'light', 'dark']), text: prop_types_1.default.bool, warning: prop_types_1.default.bool, disabled: prop_types_1.default.bool, onClick: prop_types_1.default.func, className: prop_types_1.default.string, onMouseUp: prop_types_1.default.func, children: prop_types_1.default.node });
    Button.defaultProps = {
        prefix: 'next-',
        type: 'normal',
        size: 'medium',
        icons: {},
        htmlType: 'button',
        component: 'button',
        loading: false,
        ghost: false,
        text: false,
        warning: false,
        disabled: false,
        onClick: function onClick() {}
    };
    return Button;
}(react_1.Component);
exports.default = Button;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
/**
 * Button.Group
 */
var ButtonGroup = /** @class */function (_super) {
    tslib_1.__extends(ButtonGroup, _super);
    function ButtonGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroup.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            size = _b.size,
            children = _b.children,
            rtl = _b.rtl,
            others = tslib_1.__rest(_b, ["prefix", "className", "size", "children", "rtl"]);
        var groupCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "btn-group")] = true, _a[className] = className, _a));
        var cloneChildren = react_1.Children.map(children, function (child) {
            if (child) {
                // fixme: child may not be cloned
                return react_1.default.cloneElement(child, {
                    size: size
                });
            }
        });
        if (rtl) {
            others.dir = 'rtl';
        }
        return react_1.default.createElement("div", tslib_1.__assign({}, others, { className: groupCls }), cloneChildren);
    };
    ButtonGroup.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { rtl: prop_types_1.default.bool, prefix: prop_types_1.default.string, size: prop_types_1.default.string, className: prop_types_1.default.string, children: prop_types_1.default.node });
    ButtonGroup.defaultProps = {
        prefix: 'next-',
        size: 'medium'
    };
    return ButtonGroup;
}(react_1.Component);
exports.default = config_provider_1.default.config(ButtonGroup);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _cardHeader = __webpack_require__(300);

var _cardHeader2 = _interopRequireDefault(_cardHeader);

var _datePanelHeader = __webpack_require__(312);

var _datePanelHeader2 = _interopRequireDefault(_datePanelHeader);

var _monthPanelHeader = __webpack_require__(152);

var _monthPanelHeader2 = _interopRequireDefault(_monthPanelHeader);

var _yearPanelHeader = __webpack_require__(153);

var _yearPanelHeader2 = _interopRequireDefault(_yearPanelHeader);

var _dateTable = __webpack_require__(154);

var _dateTable2 = _interopRequireDefault(_dateTable);

var _monthTable = __webpack_require__(155);

var _monthTable2 = _interopRequireDefault(_monthTable);

var _yearTable = __webpack_require__(156);

var _yearTable2 = _interopRequireDefault(_yearTable);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var isValueChanged = function isValueChanged(value, oldVlaue) {
    if (value && oldVlaue) {
        if (!_moment2.default.isMoment(value)) {
            value = (0, _moment2.default)(value);
        }
        if (!_moment2.default.isMoment(oldVlaue)) {
            oldVlaue = (0, _moment2.default)(oldVlaue);
        }
        return value.valueOf() !== oldVlaue.valueOf();
    } else {
        return value !== oldVlaue;
    }
};

/** Calendar */
var Calendar = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Calendar, _Component);

    function Calendar(props, context) {
        (0, _classCallCheck3.default)(this, Calendar);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var value = (0, _utils.formatDateValue)(props.value || props.defaultValue);
        var visibleMonth = (0, _utils.getVisibleMonth)(props.defaultVisibleMonth, value);

        _this.MODES = props.modes;
        _this.today = (0, _moment2.default)();
        _this.state = {
            value: value,
            mode: props.mode || _this.MODES[0],
            MODES: _this.MODES,
            visibleMonth: visibleMonth
        };
        return _this;
    }

    Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};
        if ('value' in props) {
            var value = (0, _utils.formatDateValue)(props.value);
            if (value && isValueChanged(props.value, state.value)) {
                st.visibleMonth = value;
            }
            st.value = value;
        }

        if (props.mode && state.MODES.indexOf(props.mode) > -1) {
            st.mode = props.mode;
        }

        return st;
    };

    /**
     * 根据日期偏移量设置当前展示的月份
     * @param {Number} offset 日期偏移的数量
     * @param {String} type 日期偏移的类型 days, months, years
     */
    Calendar.prototype.changeVisibleMonthByOffset = function changeVisibleMonthByOffset(offset, type) {
        var cloneValue = this.state.visibleMonth.clone();
        cloneValue.add(offset, type);
        this.changeVisibleMonth(cloneValue, 'buttonClick');
    };

    Calendar.prototype.render = function render() {
        var _classnames, _tables, _panelHeaders;

        var _props = this.props,
            prefix = _props.prefix,
            rtl = _props.rtl,
            className = _props.className,
            shape = _props.shape,
            showOtherMonth = _props.showOtherMonth,
            format = _props.format,
            locale = _props.locale,
            dateCellRender = _props.dateCellRender,
            monthCellRender = _props.monthCellRender,
            yearCellRender = _props.yearCellRender,
            disabledDate = _props.disabledDate,
            yearRange = _props.yearRange,
            disableChangeMode = _props.disableChangeMode,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'rtl', 'className', 'shape', 'showOtherMonth', 'format', 'locale', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'disabledDate', 'yearRange', 'disableChangeMode']);

        var state = this.state;

        var classNames = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'calendar'] = true, _classnames[prefix + 'calendar-' + shape] = shape, _classnames), className);

        if (rtl) {
            others.dir = 'rtl';
        }

        var visibleMonth = state.visibleMonth;

        // reset moment locale
        if (locale.momentLocale) {
            state.value && state.value.locale(locale.momentLocale);
            visibleMonth.locale(locale.momentLocale);
        }

        var localeData = (0, _utils.getLocaleData)(locale.format || {}, visibleMonth.localeData());

        var headerProps = {
            prefix: prefix,
            value: state.value,
            mode: state.mode,
            disableChangeMode: disableChangeMode,
            yearRange: yearRange,
            locale: locale,
            rtl: rtl,
            visibleMonth: visibleMonth,
            momentLocale: localeData,
            changeMode: this.changeMode,
            changeVisibleMonth: this.changeVisibleMonth,
            goNextDecade: this.goNextDecade,
            goNextYear: this.goNextYear,
            goNextMonth: this.goNextMonth,
            goPrevDecade: this.goPrevDecade,
            goPrevYear: this.goPrevYear,
            goPrevMonth: this.goPrevMonth
        };

        var tableProps = {
            prefix: prefix,
            visibleMonth: visibleMonth,
            showOtherMonth: showOtherMonth,
            value: state.value,
            mode: state.mode,
            locale: locale,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            disabledDate: disabledDate,
            momentLocale: localeData,
            today: this.today,
            goPrevDecade: this.goPrevDecade,
            goNextDecade: this.goNextDecade
        };

        var tables = (_tables = {}, _tables[_utils.CALENDAR_MODE_DATE] = _react2.default.createElement(_dateTable2.default, (0, _extends3.default)({ format: format }, tableProps, { onSelectDate: this.onSelectCell })), _tables[_utils.CALENDAR_MODE_MONTH] = _react2.default.createElement(_monthTable2.default, (0, _extends3.default)({}, tableProps, { onSelectMonth: this.onSelectCell })), _tables[_utils.CALENDAR_MODE_YEAR] = _react2.default.createElement(_yearTable2.default, (0, _extends3.default)({}, tableProps, { rtl: rtl, onSelectYear: this.onSelectCell })), _tables);

        var panelHeaders = (_panelHeaders = {}, _panelHeaders[_utils.CALENDAR_MODE_DATE] = _react2.default.createElement(_datePanelHeader2.default, headerProps), _panelHeaders[_utils.CALENDAR_MODE_MONTH] = _react2.default.createElement(_monthPanelHeader2.default, headerProps), _panelHeaders[_utils.CALENDAR_MODE_YEAR] = _react2.default.createElement(_yearPanelHeader2.default, headerProps), _panelHeaders);

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(Calendar.propTypes, others), { className: classNames }), shape === 'panel' ? panelHeaders[state.mode] : _react2.default.createElement(_cardHeader2.default, headerProps), tables[state.mode]);
    };

    return Calendar;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 默认选中的日期（moment 对象）
     */
    defaultValue: _utils.checkMomentObj,
    /**
     * 选中的日期值 (moment 对象)
     */
    value: _utils.checkMomentObj,
    /**
     * 面板模式
     */
    mode: _propTypes2.default.oneOf(_utils.CALENDAR_MODES), // 生成 API 文档需要手动改回 ['date', 'month', 'year']
    // 面板可变化的模式列表，仅初始化时接收一次
    modes: _propTypes2.default.array,
    // 禁用更改面板模式，采用 dropdown 的方式切换显示日期 (暂不正式对外透出)
    disableChangeMode: _propTypes2.default.bool,
    // 日期值的格式（用于日期title显示的格式）
    format: _propTypes2.default.string,
    /**
     * 是否展示非本月的日期
     */
    showOtherMonth: _propTypes2.default.bool,
    /**
     * 默认展示的月份
     */
    defaultVisibleMonth: _propTypes2.default.func,
    /**
     * 展现形态
     */
    shape: _propTypes2.default.oneOf(['card', 'fullscreen', 'panel']),
    /**
     * 选择日期单元格时的回调
     * @param {Object} value 对应的日期值 (moment 对象)
     */
    onSelect: _propTypes2.default.func,
    /**
     * 面板模式变化时的回调
     * @param {String} mode 对应面板模式 date month year
     */
    onModeChange: _propTypes2.default.func,
    /**
     * 展现的月份变化时的回调
     * @param {Object} value 显示的月份 (moment 对象)
     * @param {String} reason 触发月份改变原因
     */
    onVisibleMonthChange: _propTypes2.default.func,
    /**
     * 自定义样式类
     */
    className: _propTypes2.default.string,
    /**
     * 自定义日期渲染函数
     * @param {Object} value 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _propTypes2.default.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    /**
     * 年份范围，[START_YEAR, END_YEAR] (只在shape 为 ‘card’, 'fullscreen' 下生效)
     */
    yearRange: _propTypes2.default.arrayOf(_propTypes2.default.number),
    /**
     * 不可选择的日期
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @returns {Boolean}
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 国际化配置
     */
    locale: _propTypes2.default.object
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    shape: 'fullscreen',
    modes: _utils.CALENDAR_MODES,
    disableChangeMode: false,
    format: 'YYYY-MM-DD',
    onSelect: _util.func.noop,
    onVisibleMonthChange: _util.func.noop,
    onModeChange: _util.func.noop,
    dateCellRender: function dateCellRender(value) {
        return value.date();
    },
    locale: _zhCn2.default.Calendar,
    showOtherMonth: true
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onSelectCell = function (date, nextMode) {
        var visibleMonth = _this2.state.visibleMonth;
        var _props2 = _this2.props,
            shape = _props2.shape,
            showOtherMonth = _props2.showOtherMonth;

        // 点击其他月份日期不生效

        if (!showOtherMonth && !(0, _utils.isSameYearMonth)(visibleMonth, date)) {
            return;
        }

        _this2.changeVisibleMonth(date, 'cellClick');

        if (!('value' in _this2.props)) {
            // 非受控模式，直接修改当前state
            _this2.setState({
                value: date
            });
        }

        // 当用户所在的面板为初始化面板时，则选择动作为触发 onSelect 回调
        if (_this2.state.mode === _this2.MODES[0]) {
            _this2.props.onSelect(date);
        }

        if (shape === 'panel') {
            _this2.changeMode(nextMode);
        }
    };

    this.changeMode = function (nextMode) {
        if (nextMode && _this2.MODES.indexOf(nextMode) > -1 && nextMode !== _this2.state.mode) {
            _this2.setState({ mode: nextMode });
            _this2.props.onModeChange(nextMode);
        }
    };

    this.changeVisibleMonth = function (date, reason) {
        if (!(0, _utils.isSameYearMonth)(date, _this2.state.visibleMonth)) {
            _this2.setState({ visibleMonth: date });
            _this2.props.onVisibleMonthChange(date, reason);
        }
    };

    this.goPrevDecade = function () {
        _this2.changeVisibleMonthByOffset(-10, 'years');
    };

    this.goNextDecade = function () {
        _this2.changeVisibleMonthByOffset(10, 'years');
    };

    this.goPrevYear = function () {
        _this2.changeVisibleMonthByOffset(-1, 'years');
    };

    this.goNextYear = function () {
        _this2.changeVisibleMonthByOffset(1, 'years');
    };

    this.goPrevMonth = function () {
        _this2.changeVisibleMonthByOffset(-1, 'months');
    };

    this.goNextMonth = function () {
        _this2.changeVisibleMonthByOffset(1, 'months');
    };
}, _temp);
Calendar.displayName = 'Calendar';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Calendar);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _select = __webpack_require__(30);

var _select2 = _interopRequireDefault(_select);

var _radio = __webpack_require__(49);

var _radio2 = _interopRequireDefault(_radio);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var CardHeader = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(CardHeader, _React$Component);

    function CardHeader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, CardHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            var device = _this.props.device;

            if (device === 'phone') {
                return document.body;
            }
            return target.parentNode;
        }, _this.onYearChange = function (year) {
            var _this$props = _this.props,
                visibleMonth = _this$props.visibleMonth,
                changeVisibleMonth = _this$props.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().year(year), 'yearSelect');
        }, _this.changeVisibleMonth = function (month) {
            var _this$props2 = _this.props,
                visibleMonth = _this$props2.visibleMonth,
                changeVisibleMonth = _this$props2.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().month(month), 'monthSelect');
        }, _this.onModePanelChange = function (mode) {
            _this.props.changeMode(mode);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    CardHeader.prototype.getYearSelect = function getYearSelect(year) {
        var _props = this.props,
            prefix = _props.prefix,
            yearRangeOffset = _props.yearRangeOffset,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange,
            locale = _props.locale;
        var startYear = yearRange[0],
            endYear = yearRange[1];

        if (!startYear || !endYear) {
            startYear = year - yearRangeOffset;
            endYear = year + yearRangeOffset;
        }

        var options = [];
        for (var i = startYear; i <= endYear; i++) {
            options.push(_react2.default.createElement(_select2.default.Option, { key: i, value: i }, i));
        }

        return _react2.default.createElement(_select2.default, {
            prefix: prefix,
            value: year,
            'aria-label': locale.yearSelectAriaLabel,
            onChange: this.onYearChange,
            popupContainer: this.selectContainerHandler
        }, options);
    };

    CardHeader.prototype.getMonthSelect = function getMonthSelect(month) {
        var _props2 = this.props,
            prefix = _props2.prefix,
            momentLocale = _props2.momentLocale,
            locale = _props2.locale;

        var localeMonths = momentLocale.monthsShort();
        var options = [];
        for (var i = 0; i < 12; i++) {
            options.push(_react2.default.createElement(_select2.default.Option, { key: i, value: i }, localeMonths[i]));
        }
        return _react2.default.createElement(_select2.default, {
            'aria-label': locale.monthSelectAriaLabel,
            prefix: prefix,
            value: month,
            onChange: this.changeVisibleMonth,
            popupContainer: this.selectContainerHandler
        }, options);
    };

    CardHeader.prototype.render = function render() {
        var _props3 = this.props,
            prefix = _props3.prefix,
            mode = _props3.mode,
            locale = _props3.locale,
            visibleMonth = _props3.visibleMonth;

        var yearSelect = this.getYearSelect(visibleMonth.year());
        var monthSelect = mode === 'month' ? null : this.getMonthSelect(visibleMonth.month());
        var panelSelect = _react2.default.createElement(_radio2.default.Group, { shape: 'button', size: 'medium', value: mode, onChange: this.onModePanelChange }, _react2.default.createElement(_radio2.default, { value: 'date' }, locale.month), _react2.default.createElement(_radio2.default, { value: 'month' }, locale.year));

        return _react2.default.createElement('div', { className: prefix + 'calendar-header' }, yearSelect, monthSelect, panelSelect);
    };

    return CardHeader;
}(_react2.default.Component), _class.propTypes = {
    yearRange: _propTypes2.default.arrayOf(_propTypes2.default.number),
    yearRangeOffset: _propTypes2.default.number,
    locale: _propTypes2.default.object
}, _class.defaultProps = {
    yearRangeOffset: 10
}, _temp2);
CardHeader.displayName = 'CardHeader';
exports.default = _configProvider2.default.config(CardHeader);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp; /* eslint-disable valid-jsdoc */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _tag = __webpack_require__(146);

var _tag2 = _interopRequireDefault(_tag);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _base = __webpack_require__(150);

var _base2 = _interopRequireDefault(_base);

var _util2 = __webpack_require__(61);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx,
    noop = _util.func.noop;

var isIE9 = _util.env.ieVersion === 9;

/**
 * 无障碍化注意事项:
 * 1. Select 无搜索情况下，不应该让 Input 可focus，此时外层wrap必须可focus，并且需要相应focus事件让外边框发生变化
 *
 * TODO: hightLight 后续改造注意点
 * 1. hightLight 跟随点击变化(fixed) 2. 弹窗打开时根据 是否高亮第一个选项的 api开关设置是否hightLight 第一项
 */

// 自定义弹层：1. 不需要关心Menu的点击事件 2. 不需要关心dataSource变化

/**
 * Select
 */
var Select = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(Select, _Base);

    function Select(props) {
        (0, _classCallCheck3.default)(this, Select);

        // because dataSource maybe updated while select a item, so we should cache choosen value's item
        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _this.handleWrapClick = function (e) {
            // ignore click on input to choose text
            if (e.target.nodeName !== 'INPUT') {
                e.preventDefault();
            }
            _this.focusInput();
        };

        _this.handleArrowClick = function (e) {
            e.preventDefault();
            _this.focusInput();

            // because of can not close Popup by click Input while hasSearch.
            // so when Popup open and hasSearch, we should close Popup intentionally
            _this.state.visible && _this.hasSearch() && _this.setVisible(false);
        };

        _this.handleClear = function (e) {
            e.stopPropagation();
            _this.selectAllYet = false;
            _this.handleChange(undefined, 'clear');
        };

        _this.valueDataSource = {
            valueDS: [], // [{value,label}]
            mapValueDS: {} // {value: {value,label}}
        };

        var searchValue = 'searchValue' in props ? props.searchValue : '';

        _this.dataStore.setOptions({
            key: searchValue,
            addonKey: props.mode === 'tag' // tag 模式手动输入的数据
        });

        (0, _extends3.default)(_this.state, {
            searchValue: searchValue,
            dataSource: _this.setDataSource(props)
        });

        // 根据value和计算后的dataSource，更新value对应的详细数据valueDataSource
        if (typeof _this.state.value !== 'undefined') {
            _this.valueDataSource = (0, _util2.getValueDataSource)(_this.state.value, _this.valueDataSource.mapValueDS, _this.dataStore.getMapDS());
        }

        bindCtx(_this, ['handleMenuSelect', 'handleItemClick', 'handleSearch', 'handleSearchKeyDown', 'handleSelectAll', 'maxTagPlaceholder']);
        return _this;
    }

    Select.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('value' in nextProps && nextProps.value !== prevState.value) {
            (0, _extends3.default)(state, {
                value: nextProps.value
            });
        }

        if ('highlightKey' in nextProps && nextProps.highlightKey !== prevState.highlightKey) {
            (0, _extends3.default)(state, {
                highlightKey: nextProps.highlightKey
            });
        } else if ('value' in nextProps && nextProps.value !== prevState.value && nextProps.mode === 'single') {
            (0, _extends3.default)(state, {
                highlightKey: nextProps.value
            });
        }

        if ('searchValue' in nextProps && nextProps.searchValue !== prevState.searchValue) {
            var searchValue = nextProps.searchValue;
            (0, _extends3.default)(state, {
                searchValue: searchValue === undefined || searchValue === null ? '' : searchValue
            });
        }

        if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            (0, _extends3.default)(state, {
                visible: nextProps.visible
            });
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    Select.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var props = this.props;
        if ('searchValue' in props && this.state.searchValue !== prevState.searchValue) {
            this.dataStore.setOptions({ key: this.state.searchValue });
        }

        if (props.mode !== prevProps.mode) {
            this.dataStore.setOptions({
                addonKey: props.mode === 'tag'
            });
        }
        if (props.mode !== prevProps.mode) {
            this.dataStore.setOptions({
                addonKey: props.mode === 'tag'
            });
        }
        if (props.filter !== prevProps.filter) {
            this.dataStore.setOptions({
                filter: props.filter
            });
        }
        if (props.filterLocal !== prevProps.filterLocal) {
            this.dataStore.setOptions({
                filterLocal: props.filterLocal
            });
        }

        if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
            /* eslint-disable react/no-did-update-set-state */
            this.setState({
                dataSource: this.setDataSource(props)
            });

            if (!props.popupContent) {
                this.setFirstHightLightKeyForMenu(this.state.searchValue);
            }
        }

        if ('value' in props) {
            this.valueDataSource = (0, _util2.getValueDataSource)(props.value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
            this.updateSelectAllYet(this.valueDataSource.value);
        } else if ('defaultValue' in props && props.defaultValue === this.valueDataSource.value && (props.children !== prevProps.children || props.dataSource !== prevProps.dataSource)) {
            // has defaultValue and value not changed and dataSource changed
            // fix: set defaultValue first, then update dataSource.
            this.valueDataSource = (0, _util2.getValueDataSource)(props.defaultValue, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());
        }

        if (prevProps.label !== this.props.label || prevState.value !== this.state.value || props.searchValue !== this.state.searchValue) {
            this.syncWidth();
        }
    };

    Select.prototype.componentDidMount = function componentDidMount() {
        if (isIE9) {
            this.ie9Hack();
        }
        _Base.prototype.componentDidMount.call(this);
    };

    // ie9 下 table-cell 布局不支持宽度超出隐藏


    Select.prototype.ie9Hack = function ie9Hack() {
        try {
            var width = this.selectDOM.currentStyle.width;
            this.setState({
                fixWidth: width !== 'auto'
            });
        } catch (e) {
            //
        }
    };

    Select.prototype.useDetailValue = function useDetailValue() {
        var _props = this.props,
            popupContent = _props.popupContent,
            useDetailValue = _props.useDetailValue,
            dataSource = _props.dataSource;

        return useDetailValue || popupContent && !dataSource;
    };

    Select.prototype.hasSearch = function hasSearch() {
        var _props2 = this.props,
            showSearch = _props2.showSearch,
            mode = _props2.mode;

        return showSearch || mode === 'tag';
    };

    Select.prototype.getTagSize = function getTagSize() {
        var _props3 = this.props,
            size = _props3.size,
            adjustTagSize = _props3.adjustTagSize;

        if (adjustTagSize) {
            return size;
        }
        return size === 'large' ? 'medium' : 'small';
    };

    /**
     * Menu.Item onSelect
     * @private
     * @param  {Array<string>} keys
     * @
     */

    Select.prototype.handleMenuSelect = function handleMenuSelect(keys, item) {
        var _props4 = this.props,
            mode = _props4.mode,
            readOnly = _props4.readOnly,
            disabled = _props4.disabled;

        if (readOnly || disabled) {
            return false;
        }

        var isSingle = mode === 'single';

        if (isSingle) {
            // 单选
            return this.handleSingleSelect(keys[0], 'itemClick');
        } else {
            // 正常多选
            return this.handleMultipleSelect(keys, 'itemClick', item.props && item.props._key);
        }
    };

    Select.prototype.handleItemClick = function handleItemClick(key) {
        if (!this.props.popupAutoFocus) {
            this.focusInput();
        }

        // key is string type here, fix https://github.com/alibaba-fusion/next/issues/4004
        if (this.props.mode === 'single' && key === String(this.state.value)) {
            this.setVisible(false, 'itemClick');
        }
    };

    /**
     * 单选模式
     */

    Select.prototype.handleSingleSelect = function handleSingleSelect(key, triggerType) {
        // TODO: 这里 cacheValue=false 有问题，dataSource 更新的时候就应该处理
        var cacheValue = this.props.cacheValue;
        // get data only from dataStore while cacheValue=false

        var itemObj = (0, _util2.getValueDataSource)(key, cacheValue ? this.valueDataSource.mapValueDS : {}, this.dataStore.getMapDS());
        this.valueDataSource = itemObj;

        this.setVisible(false, triggerType);

        // 应在return之前传出highlightKey
        this.setState({
            highlightKey: key
        });

        if (this.useDetailValue()) {
            return this.handleChange(itemObj.valueDS, triggerType);
        } else {
            this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
        }

        // 清空搜索
        if (!('searchValue' in this.props) && this.state.searchValue) {
            this.handleSearchClear(triggerType);
        }
    };

    /**
     * 多选模式 multiple/tag
     */

    Select.prototype.handleMultipleSelect = function handleMultipleSelect(keys, triggerType, key, keepSearchValue) {
        var _this2 = this;

        var itemObj = (0, _util2.getValueDataSource)(keys, this.valueDataSource.mapValueDS, this.dataStore.getMapDS());

        var _props5 = this.props,
            cacheValue = _props5.cacheValue,
            mode = _props5.mode,
            hiddenSelected = _props5.hiddenSelected;

        // cache those value maybe not exists in dataSource

        if (cacheValue || mode === 'tag') {
            this.valueDataSource = itemObj;
        }

        if (hiddenSelected) {
            this.setVisible(false, triggerType);
        }

        // 因为搜索后会设置 hightLight 为第一个item，menu渲染会自动滚动到 hightLight 的元素上面。
        // 所以设置 hightLight 为当前选中项避免滚动
        key && this.state.visible && this.setState({
            highlightKey: key
        });

        if (this.useDetailValue()) {
            this.handleChange(itemObj.valueDS, triggerType);
        } else {
            this.handleChange(itemObj.value, triggerType, itemObj.valueDS);
        }

        this.updateSelectAllYet(itemObj.value);

        // 清空搜索
        if (!('searchValue' in this.props) && this.state.searchValue && !keepSearchValue) {
            // 因为 SearchValue 被 clear 后会重新渲染 Menu，所以在 Overlay 检测 safeNode 的时候 e.target 可能会找不到导致弹窗关闭
            setTimeout(function () {
                _this2.handleSearchClear(triggerType);
            });
        }
    };

    Select.prototype.updateSelectAllYet = function updateSelectAllYet(value) {
        var _this3 = this;

        // multiple mode
        // is current state select all or not
        this.selectAllYet = false;
        if (this.props.hasSelectAll && Array.isArray(value)) {
            var selectAllValues = this.dataStore.getEnableDS().map(function (item) {
                return item.value;
            });

            if (selectAllValues.length <= value.length) {
                this.selectAllYet = true;

                selectAllValues.forEach(function (val) {
                    if (value.indexOf(val) === -1) {
                        _this3.selectAllYet = false;
                        return;
                    }
                });
            }
        }
    };

    Select.prototype.handleSearchValue = function handleSearchValue(value) {
        if (this.state.searchValue === value) {
            return;
        }

        var filterLocal = this.props.filterLocal;

        if (filterLocal) {
            if (!('searchValue' in this.props)) {
                this.setState({
                    searchValue: value,
                    dataSource: this.dataStore.updateByKey(value)
                });
                this.setFirstHightLightKeyForMenu(value);
            }
        } else if (!('searchValue' in this.props)) {
            this.setState({
                searchValue: value
            });
        }
    };

    /**
     * Handle search input change event
     * @param {String} value search text
     * @param {Event} e change Event
     */

    Select.prototype.handleSearch = function handleSearch(value, e) {
        this.handleSearchValue(value);

        // inputing should trigger popup open
        if (!this.state.visible && value) {
            this.setVisible(true);
        }

        this.props.onSearch(value, e);
    };

    Select.prototype.handleSearchClear = function handleSearchClear(triggerType) {
        this.handleSearchValue('');
        this.props.onSearchClear(triggerType);
    };

    // 搜索框 keyDown 事件


    Select.prototype.handleSearchKeyDown = function handleSearchKeyDown(e) {
        var _props6 = this.props,
            popupContent = _props6.popupContent,
            onKeyDown = _props6.onKeyDown,
            showSearch = _props6.showSearch,
            mode = _props6.mode,
            hasClear = _props6.hasClear,
            onToggleHighlightItem = _props6.onToggleHighlightItem,
            readOnly = _props6.readOnly,
            disabled = _props6.disabled;

        var hasSearch = this.hasSearch();

        if (popupContent) {
            // 搜索的时候不阻止冒泡会无法输入
            if (hasSearch && e.keyCode === _util.KEYCODE.SPACE) {
                e.stopPropagation();
            }
            return onKeyDown(e);
        }

        var proxy = 'search';

        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(-1, e), 'up');
                break;
            case _util.KEYCODE.DOWN:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(1, e), 'down');
                break;
            case _util.KEYCODE.ENTER:
                e.preventDefault();
                if (readOnly || disabled) {
                    break;
                }
                this.chooseHighlightItem(proxy, e);
                break;
            case _util.KEYCODE.ESC:
                e.preventDefault();
                this.state.visible && this.setVisible(false, 'keyDown');
                break;
            case _util.KEYCODE.SPACE:
                e.stopPropagation();
                !hasSearch && e.preventDefault();
                break;
            case _util.KEYCODE.BACKSPACE:
                if (readOnly || disabled) {
                    break;
                }
                if (mode === 'multiple' && showSearch || mode === 'tag') {
                    // 在多选并且有搜索的情况下，删除最后一个 tag
                    var valueDS = this.valueDataSource.valueDS;
                    if (valueDS && valueDS.length && !valueDS[valueDS.length - 1].disabled) {
                        this.handleDeleteTag(e);
                    }
                } else if (mode === 'single' && hasClear && !this.state.visible) {
                    // 单选、非展开、并且可清除的情况，允许按删除键清除
                    this.handleClear(e);
                }
                break;
            default:
                break;
        }

        onKeyDown(e);
    };

    Select.prototype.chooseMultipleItem = function chooseMultipleItem(key) {
        var value = this.state.value || [];
        var keys = value.map(function (v) {
            return (0, _util2.valueToSelectKey)(v);
        });

        var keepSearchValue = false;

        var index = keys.map(function (v) {
            return '' + v;
        }).indexOf(key);

        if (index > -1) {
            // unselect
            keys.splice(index, 1);
            keepSearchValue = true; // 回车反选保留搜索值
        } else {
            // select
            keys.push(key);
        }

        this.handleMultipleSelect(keys, 'enter', null, keepSearchValue);
    };

    // 回车 选择高亮的 item


    Select.prototype.chooseHighlightItem = function chooseHighlightItem(proxy, e) {
        var mode = this.props.mode;

        if (!this.state.visible) {
            // input tag by itself
            if (mode === 'tag' && this.state.searchValue) {
                this.chooseMultipleItem(this.state.searchValue);
            }
            return false;
        }

        var highlightKey = this.state.highlightKey;

        // 没有高亮选项 或者 没有可选菜单

        if (highlightKey === null || !this.dataStore.getMenuDS().length) {
            return;
        }

        if (mode === 'single') {
            this.handleSingleSelect(highlightKey, 'enter');
        } else {
            this.chooseMultipleItem(highlightKey);
            // 阻止事件冒泡到最外层，让Popup 监听到触发弹层关闭
            e && e.stopPropagation();
        }
    };

    /**
     * Handle Tag close event
     * @param  {Object} item
     * @return {Boolean} false  return false to prevent auto close
     * ----
     * It MUST be multiple mode, needn't additional judgement
     */

    Select.prototype.handleTagClose = function handleTagClose(item) {
        var readOnly = this.props.readOnly;

        if (readOnly) return false;
        if (this.useDetailValue()) {
            var value = this.state.value.filter(function (v) {
                return item.value !== v.value;
            });

            this.handleChange(value, 'tag');
        } else {
            // filter out current item, and then call handleMenuSelect
            var _value = this.state.value.filter(function (v) {
                return item.value !== v;
            });

            this.handleMultipleSelect(_value, 'tag');
        }

        this.props.onRemove(item);

        // prevent tag close
        return false;
    };

    // eslint-disable-next-line valid-jsdoc
    /**
     * Handle BACKSPACE key event
     * @param {Event} e keyDown event
     * ---
     * It MUST be multiple mode
     */

    Select.prototype.handleDeleteTag = function handleDeleteTag(e) {
        var value = this.state.value;
        var searchValue = this.state.searchValue;

        if (searchValue || !value || !value.length) {
            return false;
        }

        e.preventDefault();

        var nextValues = value.slice(0, value.length - 1);
        // 手动调用 handleMenuSelect 时直接传入原生的 value，可以减少 toString 的操作

        if (this.useDetailValue()) {
            this.handleChange(nextValues, 'tag');
        } else {
            this.handleMultipleSelect(nextValues, 'tag');
        }
    };

    /**
     * Handle SelectAll span click event
     * @param {Event} e click event
     */

    Select.prototype.handleSelectAll = function handleSelectAll(e) {
        e && e.preventDefault();
        var nextValues = void 0;

        if (this.selectAllYet) {
            nextValues = [];
        } else {
            nextValues = this.dataStore.getEnableDS().map(function (item) {
                return item.value;
            });
        }

        // 直接传 values，减少 toString 操作
        this.handleMultipleSelect(nextValues, 'selectAll');
    };

    Select.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        this.setVisible(visible, type);
    };

    Select.prototype.afterClose = function afterClose() {
        // 关闭的时候清空搜索值
        if (this.hasSearch()) {
            this.handleSearchClear('popupClose');
        }
    };

    Select.prototype.maxTagPlaceholder = function maxTagPlaceholder(selectedValues, totalValues) {
        var locale = this.props.locale;

        return '' + _util.str.template(locale.maxTagPlaceholder, {
            selected: selectedValues.length,
            total: totalValues.length
        });
    };

    /**
     * 如果用户是自定义的弹层，则直接以 value 为准，不再校验 dataSource
     * TODO: 2.0 中 value 接受 string/object{value,label} 两种类型的数据，自动做识别，可以避免用户去转换，也和 date-picker 对齐
     * 此外 onChange 第一个参数根据 api 来控制类型是 [string] 还是 [object{value,label}]
     * @param {object} props
     */

    Select.prototype.renderValues = function renderValues() {
        var _this4 = this;

        var _props7 = this.props,
            prefix = _props7.prefix,
            mode = _props7.mode,
            valueRender = _props7.valueRender,
            fillProps = _props7.fillProps,
            disabled = _props7.disabled,
            maxTagCount = _props7.maxTagCount,
            maxTagPlaceholder = _props7.maxTagPlaceholder,
            tagInline = _props7.tagInline,
            tagClosable = _props7.tagClosable;

        var tagSize = this.getTagSize();
        var value = this.state.value;

        if ((0, _util2.isNull)(value)) {
            return null;
        }

        // get detail value
        if (!this.useDetailValue()) {
            if (value === this.valueDataSource.value) {
                value = this.valueDataSource.valueDS;
            } else {
                value = (0, _util2.getValueDataSource)(value, this.valueDataSource.mapValueDS, this.dataStore.getMapDS()).valueDS;
            }
        }

        if (mode === 'single') {
            if (!value) {
                return null;
            }

            var retvalue = fillProps && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && fillProps in value ? value[fillProps] : valueRender(value);
            // 0 => '0'
            return typeof retvalue === 'number' ? retvalue.toString() : retvalue;
        } else if (value) {
            var limitedCountValue = value;
            var maxTagPlaceholderEl = void 0;
            var totalValue = this.dataStore.getFlattenDS();
            var holder = 'maxTagPlaceholder' in this.props ? maxTagPlaceholder : this.maxTagPlaceholder;

            if (maxTagCount !== undefined && value.length > maxTagCount && !tagInline) {
                limitedCountValue = limitedCountValue.slice(0, maxTagCount);
                maxTagPlaceholderEl = _react2.default.createElement(_tag2.default, { key: '_count', type: 'primary', size: tagSize, animation: false }, holder(value, totalValue));
            }

            if (value.length > 0 && tagInline) {
                maxTagPlaceholderEl = _react2.default.createElement('div', { className: prefix + 'select-tag-compact', key: '_count' }, holder(value, totalValue));
            }

            value = limitedCountValue;
            if (!Array.isArray(value)) {
                value = [value];
            }

            var selectedValueNodes = value.map(function (v) {
                if (!v) {
                    return null;
                }
                var labelNode = fillProps ? v[fillProps] : valueRender(v);

                return _react2.default.createElement(_tag2.default, {
                    key: v.value,
                    disabled: disabled || v.disabled,
                    type: 'primary',
                    size: tagSize,
                    animation: false,
                    onClose: _this4.handleTagClose.bind(_this4, v),
                    closable: tagClosable,
                    color: v.color
                }, labelNode);
            });

            if (maxTagPlaceholderEl) {
                if (tagInline) {
                    selectedValueNodes.unshift(maxTagPlaceholderEl);
                } else {
                    selectedValueNodes.push(maxTagPlaceholderEl);
                }
            }
            return selectedValueNodes;
        }

        return null;
    };
    /**
     * 1. fix flash while click <label/>
     * 2. fix onBlur while has clear
     * @returns
     */

    Select.prototype.hasClear = function hasClear() {
        var _props8 = this.props,
            hasClear = _props8.hasClear,
            readOnly = _props8.readOnly,
            disabled = _props8.disabled,
            showSearch = _props8.showSearch;
        var _state = this.state,
            value = _state.value,
            visible = _state.visible;

        return typeof value !== 'undefined' && value !== null && (Array.isArray(value) ? value.length > 0 : true) && hasClear && !readOnly && !disabled && !(showSearch && visible);
    };

    /**
     * render arrow
     * @param {object} props
     * @param {function} [clickHandler]
     */

    Select.prototype.renderExtraNode = function renderExtraNode() {
        var _props9 = this.props,
            hasArrow = _props9.hasArrow,
            hasClear = _props9.hasClear,
            prefix = _props9.prefix;

        var ret = [];

        if (hasArrow) {
            ret.push(_react2.default.createElement('span', { key: 'arrow', 'aria-hidden': true, onClick: this.handleArrowClick, className: prefix + 'select-arrow' }, _react2.default.createElement(_icon2.default, { type: 'arrow-down', className: prefix + 'select-symbol-fold' })));
        }

        // do not use this.hasClear() here, to make sure clear btn always exists, can not influenced by apis like `disabled` `readOnly`
        if (hasClear) {
            ret.push(_react2.default.createElement('span', { key: 'clear', 'aria-hidden': true, onClick: this.handleClear, className: prefix + 'select-clear' }, _react2.default.createElement(_icon2.default, { type: 'delete-filling' })));
        }

        return ret;
    };

    /**
     * 选择器
     * @override
     * @param {object} props
     */

    Select.prototype.renderSelect = function renderSelect() {
        var _classNames,
            _this5 = this;

        var _props10 = this.props,
            prefix = _props10.prefix,
            showSearch = _props10.showSearch,
            placeholder = _props10.placeholder,
            mode = _props10.mode,
            size = _props10.size,
            className = _props10.className,
            style = _props10.style,
            readOnly = _props10.readOnly,
            disabled = _props10.disabled,
            hasBorder = _props10.hasBorder,
            label = _props10.label,
            locale = _props10.locale,
            state = _props10.state,
            onBlur = _props10.onBlur,
            onFocus = _props10.onFocus,
            onMouseEnter = _props10.onMouseEnter,
            onMouseLeave = _props10.onMouseLeave,
            rtl = _props10.rtl;

        var others = _util.obj.pickOthers(Select.propTypes, this.props);
        // select不是输入框，应过滤掉addonTextAfter
        if ('addonTextAfter' in others) {
            delete others.addonTextAfter;
        }
        var othersData = _util.obj.pickAttrsWith(others, 'data-');

        var visible = this.state.visible;
        var isSingle = mode === 'single';
        var hasSearch = this.hasSearch();
        var valueNodes = this.renderValues();

        // compatible with selectPlaceHolder. TODO: removed in 2.0 version
        var _placeholder = placeholder || locale.selectPlaceholder || locale.selectPlaceHolder;
        if (valueNodes && valueNodes.length) {
            _placeholder = null;
        }

        // 弹窗展开时将当前的值作为 placeholder，这个功能的前提是 valueNode 必须是一个字符串
        if (showSearch && visible && isSingle && typeof valueNodes === 'string') {
            _placeholder = valueNodes;
        }

        // 下拉箭头
        var extra = this.renderExtraNode();

        var triggerClazz = (0, _classnames2.default)([prefix + 'select', prefix + 'select-trigger', prefix + 'select-' + mode, '' + prefix + size, className], (_classNames = {}, _classNames[prefix + 'active'] = visible, _classNames[prefix + 'inactive'] = !visible, _classNames[prefix + 'no-search'] = !hasSearch, _classNames[prefix + 'has-search'] = hasSearch, _classNames[prefix + 'select-in-ie'] = isIE9, _classNames[prefix + 'select-in-ie-fixwidth'] = this.state.fixWidth, _classNames[prefix + 'has-clear'] = this.hasClear(), _classNames));

        var valuetext = this.valueDataSource.valueDS ? this.valueDataSource.valueDS.label : '';
        return _react2.default.createElement('span', (0, _extends3.default)({}, othersData, {
            className: triggerClazz,
            style: style,
            dir: rtl ? 'rtl' : undefined,
            ref: this.saveSelectRef,
            onClick: this.handleWrapClick,
            onMouseEnter: onMouseEnter,
            onMouseLeave: onMouseLeave,
            onMouseDown: this.handleWrapClick
        }), _react2.default.createElement(_input2.default, (0, _extends3.default)({
            'aria-valuetext': valuetext
        }, _util.obj.pickOthers(othersData, others), {
            role: 'combobox',
            tabIndex: 0,
            'aria-expanded': this.state.visible,
            'aria-disabled': disabled,
            state: state,
            label: label,
            extra: extra,
            value: this.state.searchValue,
            size: size,
            readOnly: !this.hasSearch() || readOnly,
            disabled: disabled,
            placeholder: _placeholder,
            hasBorder: hasBorder,
            hasClear: false,
            htmlSize: '1',
            inputRender: function inputRender(inputEl) {
                return _this5.renderSearchInput(valueNodes, _placeholder, inputEl);
            },
            onChange: this.handleSearch,
            onKeyDown: this.handleSearchKeyDown,
            onFocus: onFocus,
            onBlur: onBlur,
            className: prefix + 'select-inner',
            ref: this.saveInputRef
        })), _react2.default.createElement('span', { className: prefix + 'sr-only', 'aria-live': 'polite' }, this.state.srReader));
    };

    Select.prototype.renderSearchInput = function renderSearchInput(valueNodes, placeholder, inputEl) {
        var _classNames2;

        var _props11 = this.props,
            prefix = _props11.prefix,
            mode = _props11.mode,
            tagInline = _props11.tagInline;

        var isSingle = mode === 'single';

        var mirrorText = this.state.searchValue;

        var cls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'select-values'] = true, _classNames2[prefix + 'input-text-field'] = true, _classNames2[prefix + 'select-compact'] = !isSingle && tagInline, _classNames2));
        var title = typeof valueNodes === 'string' ? valueNodes : '';
        var searchInput = [isSingle && valueNodes ? _react2.default.createElement('em', { title: title, key: 'select-value' }, valueNodes) : valueNodes];
        var triggerSearch = _react2.default.createElement('span', { key: 'trigger-search', className: prefix + 'select-trigger-search' }, inputEl, _react2.default.createElement('span', { 'aria-hidden': true }, _react2.default.createElement('span', null, mirrorText || placeholder), _react2.default.createElement('span', { style: { display: 'inline-block', width: 1 } }, '\xA0')));

        if (!isSingle && tagInline) {
            searchInput.unshift(triggerSearch);
        } else {
            searchInput.push(triggerSearch);
        }

        return _react2.default.createElement('span', { className: cls }, searchInput);
    };

    /**
     * 渲染弹层的 header 内容
     * @override
     * @param {object} props
     */

    Select.prototype.renderMenuHeader = function renderMenuHeader() {
        var _classNames3, _classNames4;

        var _props12 = this.props,
            prefix = _props12.prefix,
            hasSelectAll = _props12.hasSelectAll,
            mode = _props12.mode,
            locale = _props12.locale,
            menuProps = _props12.menuProps;

        if (menuProps && 'header' in menuProps) {
            return menuProps.header;
        }

        var sourceCount = this.dataStore.getEnableDS().length;
        // 多选模式下才有全选
        if (!hasSelectAll || mode === 'single' || !sourceCount) {
            return null;
        }

        var text = typeof hasSelectAll === 'boolean' ? locale.selectAll : hasSelectAll;

        var selectAllYet = this.selectAllYet;

        var cls = (0, _classnames2.default)((_classNames3 = {}, _classNames3[prefix + 'select-all'] = true, _classNames3[prefix + 'selected'] = selectAllYet, _classNames3));

        var clsInner = (0, _classnames2.default)((_classNames4 = {}, _classNames4[prefix + 'select-all-inner'] = true, _classNames4));

        // remove style={{'lineHeight': 'unset'}} in next Y
        // remove style={{'display': 'none'}} in next Y
        return _react2.default.createElement('div', { key: 'all', onClick: this.handleSelectAll, className: cls, style: { lineHeight: 'unset' } }, selectAllYet ? _react2.default.createElement(_icon2.default, { className: prefix + 'menu-icon-selected', style: { display: 'none' }, type: 'select' }) : null, _react2.default.createElement('span', { className: clsInner }, text));
    };

    Select.prototype.render = function render() {
        var mode = this.props.mode;

        var props = (0, _extends3.default)({}, this.props);

        // forbid to close Popup by click Input while hasSearch
        if (this.hasSearch()) {
            props.canCloseByTrigger = false;
        }
        if (mode === 'single') {
            props.cache = true;
        }
        return _Base.prototype.render.call(this, props);
    };

    return Select;
}(_base2.default), _class.propTypes = (0, _extends3.default)({}, _base2.default.propTypes, {
    /**
     * 选择器模式
     */
    mode: _propTypes2.default.oneOf(['single', 'multiple', 'tag']),
    /**
     * 当前值，用于受控模式
     */
    value: _propTypes2.default.any,
    /**
     * 初始的默认值
     */
    defaultValue: _propTypes2.default.any,
    /**
     * Select发生改变时触发的回调
     * @param {*} value 选中的值
     * @param {String} actionType 触发的方式, 'itemClick', 'enter', 'tag'
     * @param {*} item 选中的值的对象数据 (useDetailValue=false有效)
     */
    onChange: _propTypes2.default.func,
    /**
     * 传入的数据源，可以动态渲染子项，详见 [dataSource的使用](#dataSource的使用)
     */
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.shape({
        value: _propTypes2.default.any,
        label: _propTypes2.default.any,
        disabled: _propTypes2.default.bool,
        children: _propTypes2.default.array
    }), _propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string])),
    /**
     * 是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _propTypes2.default.bool,
    /**
     * 展开后是否能搜索（tag 模式下固定为true）
     */
    showSearch: _propTypes2.default.bool,
    /**
     * 当搜索框值变化时回调
     * @param {String} value 数据
     */
    onSearch: _propTypes2.default.func,
    /**
     * 当搜索框值被(选择、弹窗关闭)导致清空时候的回调
     * @param {String} actionType 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)
     */
    onSearchClear: _propTypes2.default.func,
    /**
     * 多选模式下是否有全选功能
     */
    hasSelectAll: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
    /**
     * 填充到选择框里的值的 key
     */
    fillProps: _propTypes2.default.string,
    /**
     * value 使用对象类型 `{value, label}`, 同时 onChange 第一个参数返回也修改为 dataSource 中的对象
     */
    useDetailValue: _propTypes2.default.bool,
    /**
     * dataSource 变化的时是否保留已选的内容
     */
    cacheValue: _propTypes2.default.bool,
    /**
     * 渲染 Select 展现内容的方法
     * @param {Object} item 渲染节点的item
     * @return {ReactNode} 展现内容
     * @default item => `item.label || item.value`
     */
    valueRender: _propTypes2.default.func,
    /**
     * 渲染 MenuItem 内容的方法
     * @param {Object} item 渲染节点的item
     * @param {String} searchValue 搜索关键字（如果开启搜索）
     * @return {ReactNode} item node
     */
    itemRender: _propTypes2.default.func,
    /**
     * 弹层内容为空的文案
     */
    notFoundContent: _propTypes2.default.node,
    style: _propTypes2.default.object,
    /**
     * 受控搜索值，一般不需要设置
     * @type {[type]}
     */
    searchValue: _propTypes2.default.string,
    /**
     * 是否一行显示，仅在 mode 为 multiple 的时候生效
     * @version 1.15
     */
    tagInline: _propTypes2.default.bool,
    /**
     * tag 是否可关闭
     * @version 1.20
     */
    tagClosable: _propTypes2.default.bool,
    /**
     * tag 尺寸是否和 select 保持一致(mode=multiple/tag 模式生效），默认false
     * @version 1.24
     */
    adjustTagSize: _propTypes2.default.bool,
    /**
     * 最多显示多少个 tag
     * @version 1.15
     */
    maxTagCount: _propTypes2.default.number,
    /**
     * 隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用
     * @param {object} selectedValues 当前已选中的元素
     * @param {object} totalValues 总待选元素
     * @version 1.15
     */
    maxTagPlaceholder: _propTypes2.default.func,
    /**
     * 选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)
     */
    hiddenSelected: _propTypes2.default.bool,
    /**
     * tag 删除回调
     * @param {object} item 渲染节点的item
     */
    onRemove: _propTypes2.default.func,
    /**
     * 焦点事件
     */
    onFocus: _propTypes2.default.func,
    /**
     * 是否自动高亮第一个选项
     */
    // highlightFirstItem: PropTypes.bool,
    /**
     * 失去焦点事件
     */
    onBlur: _propTypes2.default.func,
    onMouseEnter: _propTypes2.default.func,
    onMouseLeave: _propTypes2.default.func,
    onKeyDown: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    /**
     * 展开下拉菜单时是否自动焦点到弹层
     */
    popupAutoFocus: _propTypes2.default.bool,
    /**
     * 是否展示 dataSource 中 children
     */
    showDataSourceChildren: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _base2.default.defaultProps, {
    locale: _zhCn2.default.Select,
    mode: 'single',
    showSearch: false,
    cacheValue: true,
    tagInline: false,
    adjustTagSize: false,
    onSearch: noop,
    onSearchClear: noop,
    hasArrow: true,
    onRemove: noop,
    // highlightFirstItem: true,
    valueRender: function valueRender(item) {
        return item && (item.label || item.value);
    },
    onKeyDown: noop,
    onFocus: noop,
    onBlur: noop,
    onMouseEnter: noop,
    onMouseLeave: noop,
    popupAutoFocus: false,
    tagClosable: true
}), _class.displayName = 'Select', _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(Select);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var Group = /** @class */function (_super) {
    tslib_1.__extends(Group, _super);
    function Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Group.prototype.render = function () {
        var _a = this.props,
            className = _a.className,
            prefix = _a.prefix,
            children = _a.children,
            rtl = _a.rtl,
            others = tslib_1.__rest(_a, ["className", "prefix", "children", "rtl"]);
        var clazz = (0, classnames_1.default)("".concat(prefix || 'next-', "tag-group"), className);
        return react_1.default.createElement("div", tslib_1.__assign({ className: clazz, dir: rtl ? 'rtl' : undefined }, others), children);
    };
    Group.defaultProps = {
        prefix: 'next-',
        rtl: false
    };
    return Group;
}(react_1.Component);
exports.default = Group;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var tag_1 = tslib_1.__importDefault(__webpack_require__(90));
var noop = util_1.func.noop,
    bindCtx = util_1.func.bindCtx;
var Selectable = /** @class */function (_super) {
    tslib_1.__extends(Selectable, _super);
    function Selectable(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            checked: 'checked' in props ? props.checked : props.defaultChecked || false
        };
        bindCtx(_this, ['handleClick']);
        return _this;
    }
    Selectable.getDerivedStateFromProps = function (props, state) {
        if (props.checked !== undefined && props.checked !== state.checked) {
            return {
                checked: props.checked
            };
        }
        return null;
    };
    Selectable.prototype.handleClick = function (e) {
        e && e.preventDefault();
        // IE9 不支持 pointer-events，还是可能会触发 click 事件
        if (this.props.disabled) {
            return false;
        }
        var checked = this.state.checked;
        this.setState({
            checked: !checked
        });
        this.props.onChange(!checked, e);
    };
    Selectable.prototype.render = function () {
        var attrFilterTarget = ['checked', 'defaultChecked', 'onChange', 'className',
        // 防止这些额外的参数影响 tag 的类型
        '_shape', 'closable'];
        var others = util_1.obj.pickOthers(attrFilterTarget, this.props);
        var isChecked = 'checked' in this.props ? this.props.checked : this.state.checked;
        var clazz = (0, classnames_1.default)(this.props.className, {
            checked: isChecked
        });
        return react_1.default.createElement(tag_1.default, tslib_1.__assign({}, others, { role: "checkbox", _shape: "checkable", "aria-checked": isChecked, className: clazz, onClick: this.handleClick }));
    };
    Selectable.defaultProps = {
        onChange: noop
    };
    return Selectable;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Selectable);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var tag_1 = tslib_1.__importDefault(__webpack_require__(90));
var Closeable = /** @class */function (_super) {
    tslib_1.__extends(Closeable, _super);
    function Closeable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Closeable.prototype.render = function () {
        var _a = this.props,
            disabled = _a.disabled,
            className = _a.className,
            closeArea = _a.closeArea,
            onClose = _a.onClose,
            afterClose = _a.afterClose,
            onClick = _a.onClick,
            type = _a.type,
            size = _a.size,
            children = _a.children,
            rtl = _a.rtl,
            others = tslib_1.__rest(_a, ["disabled", "className", "closeArea", "onClose", "afterClose", "onClick", "type", "size", "children", "rtl"]);
        return react_1.default.createElement(tag_1.default, tslib_1.__assign({}, others, { rtl: rtl, disabled: disabled, className: className, closeArea: closeArea, onClose: onClose, afterClose: afterClose, onClick: onClick, type: type, size: size, closable: true }), children);
    };
    Closeable.defaultProps = {
        disabled: false,
        type: 'normal'
    };
    return Closeable;
}(react_1.Component);
exports.default = Closeable;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _input = __webpack_require__(147);

var _input2 = _interopRequireDefault(_input);

var _index = __webpack_require__(12);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function preventDefault(e) {
    e.preventDefault();
}
var Password = (_temp2 = _class = function (_Input) {
    (0, _inherits3.default)(Password, _Input);

    function Password() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Password);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Input.call.apply(_Input, [this].concat(args))), _this), _this.state = {
            hint: 'eye-close',
            htmlType: 'password'
        }, _this.toggleEye = function (e) {
            e.preventDefault();
            if (_this.props.disabled) return;
            var eyeClose = _this.state.hint === 'eye';

            _this.setState({
                hint: eyeClose ? 'eye-close' : 'eye',
                htmlType: eyeClose || !_this.props.showToggle ? 'password' : 'text'
            });
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Password.prototype.render = function render() {
        var _props = this.props,
            showToggle = _props.showToggle,
            others = (0, _objectWithoutProperties3.default)(_props, ['showToggle']);
        var _state = this.state,
            hint = _state.hint,
            htmlType = _state.htmlType;

        var extra = showToggle ? _react2.default.createElement(_index2.default, { type: hint, onClick: this.toggleEye, onMouseDown: preventDefault }) : null;

        return _react2.default.createElement(_input2.default, (0, _extends3.default)({}, others, { extra: extra, htmlType: htmlType }));
    };

    return Password;
}(_input2.default), _class.displayName = 'Password', _class.getDerivedStateFromProps = _input2.default.getDerivedStateFromProps, _class.propTypes = (0, _extends3.default)({}, _input2.default.propTypes, {
    /**
     * 是否展示切换按钮
     */
    showToggle: _propTypes2.default.bool
}), _class.defaultProps = (0, _extends3.default)({}, _input2.default.defaultProps, {
    showToggle: true
}), _temp2);
exports.default = Password;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _base = __webpack_require__(148);

var _base2 = _interopRequireDefault(_base);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function onNextFrame(cb) {
    if (window.requestAnimationFrame) {
        return window.requestAnimationFrame(cb);
    }
    return window.setTimeout(cb, 1);
}

function clearNextFrameAction(nextFrameId) {
    if (window.cancelAnimationFrame) {
        window.cancelAnimationFrame(nextFrameId);
    } else {
        window.clearTimeout(nextFrameId);
    }
}

// safari in mac
var isMacSafari = typeof navigator !== 'undefined' && navigator && navigator.userAgent ? navigator.userAgent.match(/^((?!chrome|android|windows).)*safari/i) : false;

var hiddenStyle = {
    visibility: 'hidden',
    position: 'absolute',
    zIndex: '-1000',
    top: '-1000px',
    overflowY: 'hidden',
    left: 0,
    right: 0
};

/**
 * Input.TextArea
 * @order 2
 */
var TextArea = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(TextArea, _Base);

    function TextArea(props) {
        (0, _classCallCheck3.default)(this, TextArea);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _initialiseProps.call(_this);

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: typeof value === 'undefined' || value === null ? '' : value
        };
        return _this;
    }

    TextArea.prototype.componentDidMount = function componentDidMount() {
        var autoHeight = this.props.autoHeight;
        if (autoHeight) {
            if ((typeof autoHeight === 'undefined' ? 'undefined' : (0, _typeof3.default)(autoHeight)) === 'object') {
                /* eslint-disable react/no-did-mount-set-state */
                this.setState(this._getMinMaxHeight(autoHeight, this.state.value));
            } else {
                this.setState({
                    height: this._getHeight(this.state.value),
                    overflowY: 'hidden'
                });
            }
        }
    };

    TextArea.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (this.props.autoHeight && (this.props.value !== prevProps.value || this.props.isPreview !== prevProps.isPreview)) {
            this._resizeTextArea(this.props.value);
        }
    };

    TextArea.prototype._getMinMaxHeight = function _getMinMaxHeight(_ref, value) {
        var minRows = _ref.minRows,
            maxRows = _ref.maxRows;

        var node = _reactDom2.default.findDOMNode(this.helpRef);
        if (!node) {
            return {};
        }
        node.setAttribute('rows', minRows);
        var minHeight = node.clientHeight;

        node.setAttribute('rows', maxRows);
        var maxHeight = node.clientHeight;

        node.setAttribute('rows', '1');
        var height = this._getHeight(value);

        return {
            minHeight: minHeight,
            maxHeight: maxHeight,
            height: height,
            overflowY: height <= maxHeight ? 'hidden' : undefined
        };
    };

    TextArea.prototype._getHeight = function _getHeight(value) {
        var node = _reactDom2.default.findDOMNode(this.helpRef);
        if (!node) {
            return 0;
        }
        node.value = value;

        return node.scrollHeight;
    };

    TextArea.prototype.ieHack = function ieHack(value) {
        // Fix: textarea dit not support maxLength in ie9
        /* istanbul ignore if */
        if (_util.env.ieVersion === 9 && this.props.maxLength) {
            var maxLength = parseInt(this.props.maxLength);
            var len = this.getValueLength(value, true);
            if (len > maxLength && this.props.cutString) {
                value = value.replace(/\n/g, '\n\n');
                value = value.substr(0, maxLength);
                value = value.replace(/\n\n/g, '\n');
            }
        }

        this.props.autoHeight && this._resizeTextArea(value);

        return value;
    };

    /**
     * value.length !== maxLength  in ie/safari(mac) while value has `Enter`
     * about maxLength compute: `Enter` was considered to be one char(\n) in chrome , but two chars(\r\n) in ie/safari(mac).
     * so while value has `Enter`, we should let display length + 1
     */

    TextArea.prototype.getValueLength = function getValueLength(value) {
        var _props = this.props,
            maxLength = _props.maxLength,
            cutString = _props.cutString;

        var nv = '' + value;
        var strLen = this.props.getValueLength(nv);
        if (typeof strLen !== 'number') {
            strLen = nv.length;
        }

        /* istanbul ignore if */
        if (_util.env.ieVersion || isMacSafari) {
            strLen = strLen + nv.split('\n').length - 1;
            if (strLen > maxLength && cutString) {
                strLen = maxLength;
            }
        }

        return strLen;
    };

    TextArea.prototype.saveTextAreaRef = function saveTextAreaRef(textArea) {
        this.inputRef = textArea;
    };

    TextArea.prototype.saveHelpRef = function saveHelpRef(ref) {
        this.helpRef = ref;
    };

    TextArea.prototype.renderClear = function renderClear() {
        var _classNames;

        var _props2 = this.props,
            hasClear = _props2.hasClear,
            readOnly = _props2.readOnly,
            state = _props2.state,
            prefix = _props2.prefix,
            disabled = _props2.disabled,
            locale = _props2.locale;

        var clearWrap = null;
        // showClear属性应该与disable属性为互斥状态
        var showClear = hasClear && !readOnly && !!('' + this.state.value) && !disabled;
        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'input-textarea-clear'] = true, _classNames));
        clearWrap = showClear ? _react2.default.createElement('span', {
            className: cls,
            onClick: this.onClear.bind(this),
            onKeyDown: this.handleKeyDownFromClear
        }, ' ', locale.clear) : null;
        if (state === 'loading') {
            clearWrap = null;
        }
        return clearWrap;
    };

    TextArea.prototype.renderControl = function renderControl() {
        var _this2 = this;

        var prefix = this.props.prefix;

        var lenWrap = this.renderLength();
        var clearText = this.renderClear();
        var isShowLine = Boolean(lenWrap && clearText);

        var cls = (0, _classnames2.default)(prefix + 'input-control', prefix + 'input-textarea-control');

        return lenWrap || clearText ? _react2.default.createElement('span', { onClick: function onClick() {
                return _this2.focus();
            }, className: cls }, lenWrap, isShowLine && _react2.default.createElement('span', { className: prefix + 'input-textarea-control-line' }), clearText) : null;
    };

    TextArea.prototype.render = function render() {
        var _classNames2, _classNames3;

        var _props3 = this.props,
            rows = _props3.rows,
            style = _props3.style,
            className = _props3.className,
            autoHeight = _props3.autoHeight,
            isPreview = _props3.isPreview,
            renderPreview = _props3.renderPreview,
            prefix = _props3.prefix,
            rtl = _props3.rtl,
            hasBorder = _props3.hasBorder,
            size = _props3.size,
            composition = _props3.composition;

        var cls = (0, _classnames2.default)(this.getClass(), (_classNames2 = {}, _classNames2['' + prefix + size] = size === 'large' || 'size' === 'small', _classNames2[prefix + 'input-textarea'] = true, _classNames2[prefix + 'noborder'] = !hasBorder, _classNames2[className] = !!className, _classNames2));

        var props = this.getProps();
        // custom data attributes are assigned to the top parent node
        // data-类自定义数据属性分配到顶层node节点
        var dataProps = _util.obj.pickAttrsWith(this.props, 'data-');
        // Custom props are transparently transmitted to the core input node by default
        // 自定义属性默认透传到核心node节点：input
        var others = _util.obj.pickOthers((0, _extends3.default)({}, dataProps, TextArea.propTypes), this.props);

        var textareStyle = (0, _extends3.default)({}, props.style, {
            height: this.state.height,
            minHeight: this.state.minHeight,
            maxHeight: this.state.maxHeight,
            overflowY: this.state.overflowY
        });

        var previewCls = (0, _classnames2.default)((_classNames3 = {}, _classNames3[prefix + 'input-textarea'] = true, _classNames3[prefix + 'form-preview'] = true, _classNames3[className] = !!className, _classNames3));

        var wrapStyle = autoHeight ? (0, _extends3.default)({}, style, { position: 'relative' }) : style;

        if (isPreview) {
            var value = props.value;

            if ('renderPreview' in this.props) {
                return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
            }
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), value.split('\n').map(function (data, i) {
                return _react2.default.createElement('p', { key: 'p-' + i }, data);
            }));
        }

        var compositionProps = {};
        if (composition) {
            compositionProps.onCompositionStart = this.handleCompositionStart;
            compositionProps.onCompositionEnd = this.handleCompositionEnd;
        }

        return _react2.default.createElement('span', (0, _extends3.default)({ className: cls, style: wrapStyle, dir: rtl ? 'rtl' : undefined }, dataProps), _react2.default.createElement('textarea', (0, _extends3.default)({}, others, props, compositionProps, {
            'data-real': true,
            rows: rows,
            style: textareStyle,
            ref: this.saveRef.bind(this),
            onKeyDown: this.onKeyDown.bind(this)
        })), autoHeight ? _react2.default.createElement('textarea', {
            'data-fake': true,
            ref: this.saveHelpRef.bind(this),
            style: (0, _extends3.default)({}, props.style, hiddenStyle),
            rows: '1'
        }) : null, this.renderControl());
    };

    return TextArea;
}(_base2.default), _class.displayName = 'TextArea', _class.getDerivedStateFromProps = _base2.default.getDerivedStateFromProps, _class.propTypes = (0, _extends3.default)({}, _base2.default.propTypes, {
    /**
     * 是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 状态
     * @enumdesc 错误
     */
    state: _propTypes2.default.oneOf(['error', 'warning']),
    /**
     * 自动高度 true / {minRows: 2, maxRows: 4}
     */
    autoHeight: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.object]),
    /**
     * 多行文本框高度 <br />(不要直接用height设置多行文本框的高度, ie9 10会有兼容性问题)
     */
    rows: _propTypes2.default.number,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 国际化配置
     */
    locale: _propTypes2.default.object
}), _class.defaultProps = (0, _extends3.default)({}, _base2.default.defaultProps, {
    hasBorder: true,
    isPreview: false,
    rows: 4,
    autoHeight: false,
    locale: _zhCn2.default.TextArea
}), _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this._resizeTextArea = function (value) {
        if (_this3.nextFrameActionId) {
            clearNextFrameAction(_this3.nextFrameActionId);
        }
        _this3.nextFrameActionId = onNextFrame(function () {
            var height = _this3._getHeight(value);
            var maxHeight = _this3.state.maxHeight ? _this3.state.maxHeight : Infinity;

            _this3.setState({
                height: _this3._getHeight(value),
                overflowY: height <= maxHeight ? 'hidden' : undefined
            });
        });
    };
}, _temp);
exports.default = TextArea;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _util = __webpack_require__(61);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * manage dataSource for menu list
 */
var DataStore = function () {
    function DataStore(options) {
        (0, _classCallCheck3.default)(this, DataStore);

        this.options = (0, _extends3.default)({
            filter: _util.filter,
            key: undefined,
            addonKey: false,
            filterLocal: true,
            showDataSourceChildren: true
        }, options);

        // origin data
        this.dataSource = [];
        // current data for menu display
        this.menuDataSource = [];
        // key=>value map for menuDataSource
        this.mapDataSource = {};
        // current data can be select (not disabled) on menu
        this.enabledDataSource = [];
        this.flattenDataSource = [];
    }

    DataStore.prototype.setOptions = function setOptions(options) {
        (0, _extends3.default)(this.options, options);
    };

    DataStore.prototype.updateByDS = function updateByDS(dataSource) {
        var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        this.dataSource = isChildren ? (0, _util.parseDataSourceFromChildren)(dataSource) : (0, _util.normalizeDataSource)(dataSource, 0, this.options.showDataSourceChildren);
        return this.updateAll();
    };

    DataStore.prototype.updateByKey = function updateByKey(key) {
        if (key === this.options.key) {
            return this.getMenuDS();
        }

        this.options.key = key;
        return this.updateAll();
    };

    DataStore.prototype.getOriginDS = function getOriginDS() {
        return this.dataSource;
    };

    DataStore.prototype.getMenuDS = function getMenuDS() {
        return this.menuDataSource;
    };

    DataStore.prototype.getFlattenDS = function getFlattenDS() {
        return this.flattenDataSource;
    };

    DataStore.prototype.getEnableDS = function getEnableDS() {
        return this.enabledDataSource;
    };

    DataStore.prototype.getMapDS = function getMapDS() {
        return this.mapDataSource;
    };

    DataStore.prototype.updateAll = function updateAll() {
        var _this = this;

        var _options = this.options,
            key = _options.key,
            filter = _options.filter,
            filterLocal = _options.filterLocal,
            showDataSourceChildren = _options.showDataSourceChildren;

        this.menuDataSource = (0, _util.filterDataSource)(this.dataSource, filterLocal ? key : '', filter, this.options.addonKey);

        this.flattenDataSource = showDataSourceChildren ? (0, _util.flattingDataSource)(this.menuDataSource) : this.menuDataSource;

        this.mapDataSource = {};
        this.flattenDataSource.forEach(function (item) {
            _this.mapDataSource['' + item.value] = item;
        });

        this.enabledDataSource = this.flattenDataSource.filter(function (item) {
            return !item.disabled;
        });

        return this.menuDataSource;
    };

    return DataStore;
}();

exports.default = DataStore;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _reactDom = __webpack_require__(13);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var NOOP = function NOOP() {};
var MAX_SYNC_UPDATES = 40;

var isEqualSubset = function isEqualSubset(a, b) {
    for (var key in b) {
        if (a[key] !== b[key]) {
            return false;
        }
    }

    return true;
};

var getOffset = function getOffset(el) {
    var offset = el.clientLeft || 0;
    do {
        offset += el.offsetTop || 0;
        el = el.offsetParent;
    } while (el);
    return offset;
};

var constrain = function constrain(from, size, _ref) {
    var children = _ref.children,
        minSize = _ref.minSize;

    var length = children && children.length;
    size = Math.max(size, minSize);
    if (size > length) {
        size = length;
    }
    from = from ? Math.max(Math.min(from, length - size), 0) : 0;

    return { from: from, size: size };
};
/** VirtualList */
var VirtualList = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(VirtualList, _Component);

    function VirtualList(props) {
        (0, _classCallCheck3.default)(this, VirtualList);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        var jumpIndex = props.jumpIndex;

        var _constrain = constrain(jumpIndex, 0, props),
            from = _constrain.from,
            size = _constrain.size;

        _this.state = { from: from, size: size };
        _this.cache = {};
        _this.cacheAdd = {};
        _this.scrollTo = _this.scrollTo.bind(_this);
        _this.cachedScroll = null;
        _this.unstable = false;
        _this.updateCounter = 0;
        return _this;
    }

    VirtualList.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var from = prevState.from,
            size = prevState.size;

        return constrain(from, size, nextProps);
    };

    VirtualList.prototype.componentDidMount = function componentDidMount() {
        var jumpIndex = this.props.jumpIndex;

        this.updateFrameAndClearCache = this.updateFrameAndClearCache.bind(this);

        _util.events.on(window, 'resize', this.updateFrameAndClearCache);

        this.updateFrame(this.scrollTo.bind(this, jumpIndex));
    };

    VirtualList.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _this2 = this;

        var oldIndex = prevProps.jumpIndex;
        var newIndex = this.props.jumpIndex;

        if (oldIndex !== newIndex) {
            this.updateFrame(this.scrollTo.bind(this, newIndex));
        }

        // If the list has reached an unstable state, prevent an infinite loop.
        if (this.unstable) {
            return;
        }

        if (++this.updateCounter > MAX_SYNC_UPDATES) {
            this.unstable = true;
        }

        if (!this.updateCounterTimeoutId) {
            this.updateCounterTimeoutId = setTimeout(function () {
                _this2.updateCounter = 0;
                delete _this2.updateCounterTimeoutId;
            }, 0);
        }

        this.updateFrame();
    };

    VirtualList.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.updateFrameAndClearCache);

        _util.events.off(this.scrollParent, 'scroll', this.updateFrameAndClearCache);
        _util.events.off(this.scrollParent, 'mousewheel', NOOP);
    };

    VirtualList.prototype.maybeSetState = function maybeSetState(b, cb) {
        if (isEqualSubset(this.state, b)) {
            return cb();
        }

        this.setState(b, cb);
    };

    VirtualList.prototype.getEl = function getEl() {
        return this.el || this.items || {};
    };

    VirtualList.prototype.getScrollParent = function getScrollParent() {
        var el = this.getEl();
        el = el.parentElement;

        switch (window.getComputedStyle(el).overflowY) {
            case 'auto':
            case 'scroll':
            case 'overlay':
            case 'visible':
                return el;
        }

        return window;
    };

    VirtualList.prototype.getScroll = function getScroll() {
        // Cache scroll position as this causes a forced synchronous layout.
        // if (typeof this.cachedScroll === 'number') {
        //     return this.cachedScroll;
        // }
        var scrollParent = this.scrollParent;

        var scrollKey = 'scrollTop';
        var actual = scrollParent === window ? // Firefox always returns document.body[scrollKey] as 0 and Chrome/Safari
        // always return document.documentElement[scrollKey] as 0, so take
        // whichever has a value.
        document.body[scrollKey] || document.documentElement[scrollKey] : scrollParent[scrollKey];
        var max = this.getScrollSize() - this.getViewportSize();

        var scroll = Math.max(0, Math.min(actual, max));
        var el = this.getEl();
        this.cachedScroll = getOffset(scrollParent) + scroll - getOffset(el);

        return this.cachedScroll;
    };

    VirtualList.prototype.setScroll = function setScroll(offset) {
        var scrollParent = this.scrollParent;

        offset += getOffset(this.getEl());
        if (scrollParent === window) {
            return window.scrollTo(0, offset);
        }

        offset -= getOffset(this.scrollParent);
        scrollParent.scrollTop = offset;
    };

    VirtualList.prototype.getViewportSize = function getViewportSize() {
        var scrollParent = this.scrollParent;

        return scrollParent === window ? window.innerHeight : scrollParent.clientHeight;
    };

    VirtualList.prototype.getScrollSize = function getScrollSize() {
        var scrollParent = this.scrollParent;
        var _document = document,
            body = _document.body,
            documentElement = _document.documentElement;

        var key = 'scrollHeight';
        return scrollParent === window ? Math.max(body[key], documentElement[key]) : scrollParent[key];
    };

    VirtualList.prototype.getStartAndEnd = function getStartAndEnd() {
        var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.threshold;

        var scroll = this.getScroll();

        var trueScroll = scroll;
        var start = Math.max(0, trueScroll - threshold);
        var end = trueScroll + this.getViewportSize() + threshold;

        return { start: start, end: end };
    };

    // Called by 'scroll' and 'resize' events, clears scroll position cache.


    VirtualList.prototype.updateFrameAndClearCache = function updateFrameAndClearCache(cb) {
        this.cachedScroll = null;
        return this.updateFrame(cb);
    };

    VirtualList.prototype.updateFrame = function updateFrame(cb) {
        this.updateScrollParent();

        if (typeof cb !== 'function') {
            cb = NOOP;
        }

        return this.updateVariableFrame(cb);
    };

    VirtualList.prototype.updateScrollParent = function updateScrollParent() {
        var prev = this.scrollParent;
        this.scrollParent = this.getScrollParent();

        if (prev === this.scrollParent) {
            return;
        }
        if (prev) {
            _util.events.off(prev, 'scroll', this.updateFrameAndClearCache);
            _util.events.off(prev, 'mousewheel', NOOP);
        }

        _util.events.on(this.scrollParent, 'scroll', this.updateFrameAndClearCache);
        _util.events.on(this.scrollParent, 'mousewheel', NOOP);

        // You have to attach mousewheel listener to the scrollable element.
        // Just an empty listener. After that onscroll events will be fired synchronously.
    };

    VirtualList.prototype.updateVariableFrame = function updateVariableFrame(cb) {
        if (!this.props.itemSizeGetter) {
            this.cacheSizes();
        }

        var _getStartAndEnd = this.getStartAndEnd(),
            start = _getStartAndEnd.start,
            end = _getStartAndEnd.end;

        var _props = this.props,
            pageSize = _props.pageSize,
            children = _props.children;

        var length = children.length;
        var space = 0;
        var from = 0;
        var size = 0;
        var maxFrom = length - 1;

        while (from < maxFrom) {
            var itemSize = this.getSizeOf(from);
            if (itemSize === null || itemSize === undefined || space + itemSize > start) {
                break;
            }
            space += itemSize;
            ++from;
        }

        var maxSize = length - from;

        while (size < maxSize && space < end) {
            var _itemSize = this.getSizeOf(from + size);
            if (_itemSize === null || _itemSize === undefined) {
                size = Math.min(size + pageSize, maxSize);
                break;
            }
            space += _itemSize;
            ++size;
        }

        this.maybeSetState({ from: from, size: size }, cb);
    };

    VirtualList.prototype.getSpaceBefore = function getSpaceBefore(index) {
        var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!index) {
            return 0;
        }
        if (cache[index] !== null && cache[index] !== undefined) {
            return cache[index] || 0;
        }

        // Find the closest space to index there is a cached value for.
        var from = index;
        while (from > 0 && (cache[from] === null || cache[from] === undefined)) {
            from--;
        }

        // Finally, accumulate sizes of items from - index.
        var space = cache[from] || 0;
        for (var i = from; i < index; ++i) {
            cache[i] = space;
            var itemSize = this.getSizeOf(i);
            if (itemSize === null || itemSize === undefined) {
                break;
            }
            space += itemSize;
        }

        cache[index] = space;

        return cache[index] || 0;
    };

    VirtualList.prototype.cacheSizes = function cacheSizes() {
        var cache = this.cache;
        var from = this.state.from;
        var _items = this.items,
            children = _items.children,
            _items$props = _items.props,
            props = _items$props === undefined ? {} : _items$props;

        var itemEls = children || props.children || [];

        try {
            // <Select useVirtual /> 模式下，在快速点击切换Tab的情况下（Select实例快速出现、消失） 有时会出现this.items不存在，导致页面报错。怀疑是Select的异步timer渲染逻辑引起的
            for (var i = 0, l = itemEls.length; i < l; ++i) {
                var ulRef = (0, _reactDom.findDOMNode)(this.items);
                var height = ulRef.children[i].offsetHeight;
                if (height > 0) {
                    cache[from + i] = height;
                }
            }
        } catch (error) {
            // ...
        }
    };

    VirtualList.prototype.getSizeOf = function getSizeOf(index) {
        var cache = this.cache;
        var _props2 = this.props,
            itemSizeGetter = _props2.itemSizeGetter,
            jumpIndex = _props2.jumpIndex;

        // Try the cache.

        if (index in cache) {
            return cache[index];
        }
        if (itemSizeGetter) {
            return itemSizeGetter(index);
        }

        if (!this.defaultItemHeight && jumpIndex > -1) {
            var keysList = Object.keys(this.cache);
            var len = keysList.length;
            var height = this.cache[len - 1];
            this.defaultItemHeight = height;
        }

        if (this.defaultItemHeight) {
            return this.defaultItemHeight;
        }
    };

    VirtualList.prototype.scrollTo = function scrollTo(index) {
        this.setScroll(this.getSpaceBefore(index, this.cacheAdd));
    };

    VirtualList.prototype.renderMenuItems = function renderMenuItems() {
        var _this3 = this;

        var _props3 = this.props,
            children = _props3.children,
            itemsRenderer = _props3.itemsRenderer;
        var _state = this.state,
            from = _state.from,
            size = _state.size;

        var items = [];

        for (var i = 0; i < size; ++i) {
            items.push(children[from + i]);
        }

        return itemsRenderer(items, function (c) {
            _this3.items = c;
            return _this3.items;
        });
    };

    VirtualList.prototype.render = function render() {
        var _cx,
            _this4 = this;

        var _props4 = this.props,
            _props4$children = _props4.children,
            children = _props4$children === undefined ? [] : _props4$children,
            prefix = _props4.prefix,
            className = _props4.className;

        var length = children.length;
        var from = this.state.from;

        var items = this.renderMenuItems();

        var style = { position: 'relative' };

        var size = this.getSpaceBefore(length, {});

        if (size) {
            style.height = size;
        }
        var offset = this.getSpaceBefore(from, this.cacheAdd);
        var transform = 'translate(0px, ' + offset + 'px)';
        var listStyle = {
            msTransform: transform,
            WebkitTransform: transform,
            transform: transform
        };

        var cls = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'virtual-list-wrapper'] = true, _cx[className] = !!className, _cx));

        return _react2.default.createElement('div', {
            className: cls,
            style: style,
            ref: function ref(c) {
                _this4.el = c;
                return _this4.el;
            }
        }, _react2.default.createElement('div', { style: listStyle }, items));
    };

    return VirtualList;
}(_react.Component), _class.displayName = 'VirtualList', _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 渲染的子节点
     */
    children: _propTypes2.default.any,
    /**
     * 最小加载数量
     */
    minSize: _propTypes2.default.number,
    /**
     * 一屏数量
     */
    pageSize: _propTypes2.default.number,
    /**
     * 父渲染函数，默认为 (items, ref) => <ul ref={ref}>{items}</ul>
     */
    itemsRenderer: _propTypes2.default.func,
    /**
     * 缓冲区高度
     */
    threshold: _propTypes2.default.number,
    /**
     * 获取item高度的函数
     */
    itemSizeGetter: _propTypes2.default.func,
    /**
     * 设置跳转位置，需要设置 itemSizeGetter 才能生效, 不设置认为元素等高并取第一个元素高度作为默认高
     */
    jumpIndex: _propTypes2.default.number,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    itemsRenderer: function itemsRenderer(items, ref) {
        return _react2.default.createElement('ul', { ref: ref }, items);
    },
    minSize: 1,
    pageSize: 10,
    jumpIndex: 0,
    threshold: 100
}, _temp);
VirtualList.displayName = 'VirtualList';
exports.default = (0, _reactLifecyclesCompat.polyfill)(VirtualList);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _base = __webpack_require__(150);

var _base2 = _interopRequireDefault(_base);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx,
    noop = _util.func.noop;

/**
 * Select.AutoComplete
 */

var AutoComplete = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(AutoComplete, _Base);

    function AutoComplete(props) {
        (0, _classCallCheck3.default)(this, AutoComplete);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _this.handleChange = function (value, proxy, item) {
            var _this$props = _this.props,
                disabled = _this$props.disabled,
                readOnly = _this$props.readOnly,
                filterLocal = _this$props.filterLocal;

            if (disabled || readOnly) {
                return false;
            }

            var actionType = typeof proxy === 'string' ? proxy : 'change';

            _this.isInputing = actionType === 'change';

            if (filterLocal) {
                _this.setState({
                    dataSource: _this.dataStore.updateByKey(value)
                });

                _this.shouldControlPopup(_this.props, actionType);
                _this.setFirstHightLightKeyForMenu(value);
            }

            // 非受控模式清空内部数据
            if (!('value' in _this.props)) {
                _this.setState({
                    value: value
                });
            }

            // 不自动高亮的情况下, highlightKey 根据value精确值走，也就是被选中元素自动高亮，这样也不会影响不在选项内的用户搜索操作
            if (!_this.props.autoHighlightFirstItem) {
                _this.setState({
                    highlightKey: value
                });
            }

            _this.props.onChange(value, actionType, item);

            if (actionType === 'itemClick' || actionType === 'enter') {
                // 点击 item 的时候不会触发关闭，需要手动关闭，其它类型比如 keyDown 等都会有其它事件句柄处理
                _this.setVisible(false, actionType);
            }
        };

        _this.isAutoComplete = true;
        _this.isInputing = false;

        _this.dataStore.setOptions({ key: _this.state.value });
        (0, _extends3.default)(_this.state, {
            dataSource: _this.setDataSource(props)
        });

        bindCtx(_this, ['handleTriggerKeyDown', 'handleMenuSelect', 'handleItemClick']);
        return _this;
    }

    AutoComplete.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        if ('value' in nextProps && nextProps.value !== prevState.value) {
            (0, _extends3.default)(state, {
                value: nextProps.value
            });
        }

        if ('visible' in nextProps && nextProps.visible !== prevState.visible) {
            (0, _extends3.default)(state, {
                visible: nextProps.visible
            });
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    AutoComplete.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var props = this.props;

        if ('value' in props) {
            this.dataStore.setOptions({ key: props.value });
        }

        if (props.filter !== prevProps.filter) {
            this.dataStore.setOptions({
                filter: props.filter
            });
        }
        if (props.filterLocal !== prevProps.filterLocal) {
            this.dataStore.setOptions({
                filterLocal: props.filterLocal
            });
        }

        if (prevProps.children !== props.children || prevProps.dataSource !== props.dataSource) {
            /* eslint-disable react/no-did-update-set-state */
            this.setState({
                dataSource: this.setDataSource(props)
            });

            // remote dataSource and focused
            // 因为autoComplete没有下拉数据不展示，搜索并且有数据了需要自动展示下拉
            if (!props.filterLocal && this.isInputing) {
                this.shouldControlPopup(props, 'update');
            }
            if (!props.filterLocal && !props.popupContent) {
                this.setFirstHightLightKeyForMenu();
            }
        }
    };

    AutoComplete.prototype.shouldControlPopup = function shouldControlPopup() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
        var type = arguments[1];

        var hasPopup = props.popupContent || this.dataStore.getMenuDS().length;
        if (hasPopup) {
            this.setVisible(true, type);
        } else {
            this.setVisible(false, type);
        }
    };

    AutoComplete.prototype.handleMenuSelect = function handleMenuSelect(keys) {
        var key = keys[0];

        var mapDS = this.dataStore.getMapDS();

        if (key in mapDS) {
            var item = mapDS[key];
            this.handleSelectEvent(key, item, 'itemClick');
        }
    };

    AutoComplete.prototype.handleItemClick = function handleItemClick() {
        this.setVisible(false, 'itemClick');
    };

    AutoComplete.prototype.handleSelectEvent = function handleSelectEvent(key, item, triggerType) {
        var value = item && item[this.props.fillProps] || key;

        if (triggerType === 'itemClick' || triggerType === 'enter') {
            // 点击 item 的时候不会触发关闭，需要手动关闭，其它类型比如 keyDown 等都会有其它事件句柄处理
            this.setVisible(false, triggerType);
        }

        this.handleChange(value, triggerType, item);
    };

    AutoComplete.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        if (!('visible' in this.props) && visible && !this.props.popupContent && !this.dataStore.getMenuDS().length) {
            return;
        }

        this.setVisible(visible, type);
    };

    AutoComplete.prototype.beforeClose = function beforeClose() {
        this.isInputing = false;
    };

    /**
     * Handle trigger keydown event
     * @param {Event} e
     */

    AutoComplete.prototype.handleTriggerKeyDown = function handleTriggerKeyDown(e) {
        var _props = this.props,
            popupContent = _props.popupContent,
            onToggleHighlightItem = _props.onToggleHighlightItem,
            onKeyDown = _props.onKeyDown;

        if (popupContent) {
            e.stopPropagation(); //stopPropagation can make use onChange triggerd while typing space('') in Input
            return onKeyDown(e);
        }

        switch (e.keyCode) {
            case _util.KEYCODE.UP:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(-1, e), 'up');
                break;
            case _util.KEYCODE.DOWN:
                e.preventDefault();
                onToggleHighlightItem(this.toggleHighlightItem(1, e), 'down');
                break;
            case _util.KEYCODE.ENTER:
                e.preventDefault();
                this.chooseHighlightItem(e);
                break;
            case _util.KEYCODE.SPACE:
                // stopPropagation can make use onChange triggerd while typing space('') in Input
                e.stopPropagation();
                break;
            case _util.KEYCODE.ESC:
                e.preventDefault();
                this.state.visible && this.setVisible(false, 'esc');
                break;
            default:
                break;
        }

        onKeyDown(e);
    };

    // 回车 选择高亮的 item


    AutoComplete.prototype.chooseHighlightItem = function chooseHighlightItem() {
        if (!this.state.visible) {
            return false;
        }

        var highlightKey = this.state.highlightKey;

        var highlightItem = this.dataStore.getEnableDS().find(function (item) {
            return highlightKey === '' + item.value;
        });

        if (highlightItem) {
            this.handleSelectEvent(highlightKey, highlightItem, 'enter');
        }
    };

    AutoComplete.prototype.hasClear = function hasClear() {
        var _props2 = this.props,
            hasClear = _props2.hasClear,
            readOnly = _props2.readOnly,
            disabled = _props2.disabled;
        var value = this.state.value;

        return value && hasClear && !readOnly && !disabled;
    };

    /**
     * 选择器
     * @override
     * @param {object} props
     */

    AutoComplete.prototype.renderSelect = function renderSelect() {
        var _classNames;

        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
        var placeholder = props.placeholder,
            size = props.size,
            prefix = props.prefix,
            className = props.className,
            style = props.style,
            label = props.label,
            readOnly = props.readOnly,
            disabled = props.disabled,
            highlightHolder = props.highlightHolder,
            locale = props.locale,
            hasClear = props.hasClear,
            state = props.state,
            rtl = props.rtl;

        var others = _util.obj.pickOthers(AutoComplete.propTypes, props);
        var othersData = _util.obj.pickAttrsWith(others, 'data-');

        var value = this.state.value;
        var visible = this.state.visible;

        // // 下拉箭头
        // const arrowNode = this.renderArrowNode(props, () => {
        //     this.focusInput();
        //     this.setVisible(!this.state.visible);
        // });

        // trigger className
        var triggerClazz = (0, _classnames2.default)([prefix + 'select', prefix + 'select-auto-complete', prefix + 'size-' + size, className], (_classNames = {}, _classNames[prefix + 'active'] = visible, _classNames[prefix + 'disabled'] = disabled, _classNames));

        // highlightKey into placeholder
        // compatible with selectPlaceHolder. TODO: removed in 2.0 version
        var _placeholder = placeholder || locale.autoCompletePlaceholder || locale.autoCompletePlaceHolder;
        if (highlightHolder && visible) {
            _placeholder = this.state.highlightKey || _placeholder;
        }

        // Input props
        var _inputProps = (0, _extends3.default)({}, _util.obj.pickOthers(othersData, others), {
            state: state,
            ref: this.saveInputRef,
            hasClear: hasClear,
            value: value,
            size: size,
            disabled: disabled,
            readOnly: readOnly,
            placeholder: _placeholder,
            label: label,
            // extra: arrowNode,
            onChange: this.handleChange,
            onKeyDown: this.handleTriggerKeyDown
        });

        return _react2.default.createElement('span', (0, _extends3.default)({}, othersData, {
            className: triggerClazz,
            style: style,
            dir: rtl ? 'rtl' : undefined,
            ref: this.saveSelectRef,
            onClick: this.focusInput
        }), _react2.default.createElement(_input2.default, (0, _extends3.default)({
            role: 'combobox',
            'aria-autocomplete': 'list',
            'aria-disabled': disabled,
            'aria-expanded': this.state.visible
        }, _inputProps)), _react2.default.createElement('span', { className: prefix + 'sr-only', 'aria-live': 'polite' }, this.state.srReader));
    };

    AutoComplete.prototype.render = function render() {
        var _this2 = this;

        if (this.hasClear()) {
            // clear 按钮点击后，会在 dom 结构中被删除掉，需要将其额外设置为安全节点，防止触发弹层的显示或隐藏
            var safeNode = this.props.popupProps.safeNode || [];
            var safeNodes = Array.isArray(safeNode) ? safeNode : [safeNode];
            safeNodes.push(function () {
                return _this2.clearNode;
            });
            this.props.popupProps.safeNode = safeNodes;
        }

        return _Base.prototype.render.call(this, (0, _extends3.default)({}, this.props, { canCloseByTrigger: false }));
    };

    return AutoComplete;
}(_base2.default), _class.propTypes = (0, _extends3.default)({}, _base2.default.propTypes, {
    /**
     * 当前值，用于受控模式
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /**
     * 初始化的默认值
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /**
     * Select发生改变时触发的回调
     * @param {*} value 选中的值
     * @param {String} actionType 触发的方式, 'itemClick', 'enter', 'change'
     * @param {*} item 选中的值的对象数据
     */
    onChange: _propTypes2.default.func,
    /**
     * 传入的数据源，可以动态渲染子项
     */
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.shape({
        value: _propTypes2.default.string,
        label: _propTypes2.default.any,
        disabled: _propTypes2.default.bool,
        children: _propTypes2.default.array
    }), _propTypes2.default.string])),
    /**
     * 填充到选择框里的值的 key，默认是 value
     */
    fillProps: _propTypes2.default.string,
    /**
     * 渲染 MenuItem 内容的方法
     * @param {Object} item 渲染节点的 item
     * @return {ReactNode} item node
     */
    itemRender: _propTypes2.default.func,
    // input keydown
    onKeyDown: _propTypes2.default.func,
    // 是否将当前高亮的选项作为 placeholder
    highlightHolder: _propTypes2.default.bool,
    style: _propTypes2.default.object
}), _class.defaultProps = (0, _extends3.default)({}, _base2.default.defaultProps, {
    onKeyDown: noop,
    fillProps: 'value'
}), _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(AutoComplete);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore file */

/**
 * Select.Option
 */
var Option = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(Option, _React$Component);

  function Option() {
    (0, _classCallCheck3.default)(this, Option);
    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
  }

  Option.prototype.render = function render() {
    return this.props.children;
  };

  return Option;
}(_react2.default.Component), _class.propTypes = {
  /**
   * 选项值
   */
  value: _propTypes2.default.any.isRequired,
  /**
   * 是否禁用
   */
  disabled: _propTypes2.default.bool,
  children: _propTypes2.default.any
}, _class._typeMark = 'next_select_option', _temp);
Option.displayName = 'Option';
exports.default = Option;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore file */

/**
 * Select.OptionGroup
 */
var OptionGroup = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(OptionGroup, _React$Component);

    function OptionGroup() {
        (0, _classCallCheck3.default)(this, OptionGroup);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    OptionGroup.prototype.render = function render() {
        return this.props.children;
    };

    return OptionGroup;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 设置分组的文案
     */
    label: _propTypes2.default.node,
    children: _propTypes2.default.any
}, _class._typeMark = 'next_select_option_group', _temp);
OptionGroup.displayName = 'OptionGroup';
exports.default = OptionGroup;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2; /* istanbul ignore file */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _dropdown = __webpack_require__(47);

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__(151);

var _menu2 = _interopRequireDefault(_menu);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable */
var DatePanelHeader = (_temp2 = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(DatePanelHeader, _React$PureComponent);

    function DatePanelHeader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, DatePanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            return target.parentNode;
        }, _this.onYearChange = function (year) {
            var _this$props = _this.props,
                visibleMonth = _this$props.visibleMonth,
                changeVisibleMonth = _this$props.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().year(year), 'yearSelect');
        }, _this.changeVisibleMonth = function (month) {
            var _this$props2 = _this.props,
                visibleMonth = _this$props2.visibleMonth,
                changeVisibleMonth = _this$props2.changeVisibleMonth;

            changeVisibleMonth(visibleMonth.clone().month(month), 'monthSelect');
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    DatePanelHeader.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            visibleMonth = _props.visibleMonth,
            momentLocale = _props.momentLocale,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goNextMonth = _props.goNextMonth,
            goNextYear = _props.goNextYear,
            goPrevMonth = _props.goPrevMonth,
            goPrevYear = _props.goPrevYear,
            disableChangeMode = _props.disableChangeMode,
            yearRangeOffset = _props.yearRangeOffset,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange;

        var localedMonths = momentLocale.months();
        var monthLabel = localedMonths[visibleMonth.month()];
        var yearLabel = visibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        var monthButton = _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            className: btnCls,
            title: monthLabel,
            onClick: function onClick() {
                return changeMode('month', 'start');
            }
        }, monthLabel);

        var yearButton = _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            className: btnCls,
            title: yearLabel,
            onClick: function onClick() {
                return changeMode('year', 'start');
            }
        }, yearLabel);

        if (disableChangeMode) {
            var months = (0, _utils.getMonths)(momentLocale);
            var years = (0, _utils.getYears)(yearRange, yearRangeOffset, visibleMonth.year());

            monthButton = _react2.default.createElement(_dropdown2.default, {
                align: 'tc bc',
                container: this.selectContainerHandler,
                trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: monthLabel }, monthLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
                triggerType: 'click'
            }, _react2.default.createElement(_menu2.default, {
                prefix: prefix,
                value: visibleMonth.month(),
                dataSource: months,
                onChange: function onChange(value) {
                    return _this2.changeVisibleMonth(value);
                }
            }));

            yearButton = _react2.default.createElement(_dropdown2.default, {
                align: 'tc bc',
                container: this.selectContainerHandler,
                trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: yearLabel }, yearLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
                triggerType: 'click'
            }, _react2.default.createElement(_menu2.default, {
                prefix: prefix,
                value: visibleMonth.year(),
                dataSource: years,
                onChange: this.onYearChange
            }));
        }

        return _react2.default.createElement('div', { className: prefix + 'calendar-panel-header' }, _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevYear,
            className: btnCls + ' ' + btnCls + '-prev-year',
            onClick: goPrevYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevMonth,
            className: btnCls + ' ' + btnCls + '-prev-month',
            onClick: goPrevMonth
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-left', className: prefix + 'calendar-symbol-prev' })), _react2.default.createElement('div', { className: prefix + 'calendar-panel-header-full' }, monthButton, yearButton), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextMonth,
            className: btnCls + ' ' + btnCls + '-next-month',
            onClick: goNextMonth
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-right', className: prefix + 'calendar-symbol-next' })), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextYear,
            className: btnCls + ' ' + btnCls + '-next-year',
            onClick: goNextYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })));
    };

    return DatePanelHeader;
}(_react2.default.PureComponent), _class.defaultProps = {
    yearRangeOffset: 10
}, _temp2);
exports.default = DatePanelHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DateTableHead = function (_PureComponent) {
    (0, _inherits3.default)(DateTableHead, _PureComponent);

    function DateTableHead() {
        (0, _classCallCheck3.default)(this, DateTableHead);
        return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
    }

    DateTableHead.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            momentLocale = _props.momentLocale;

        var firstDayOfWeek = momentLocale.firstDayOfWeek();
        var weekdaysShort = momentLocale.weekdaysShort();

        var elements = [];
        for (var i = 0; i < _utils.DAYS_OF_WEEK; i++) {
            var index = (firstDayOfWeek + i) % _utils.DAYS_OF_WEEK;
            elements.push(_react2.default.createElement('th', { key: i, className: prefix + 'calendar-th', role: 'cell' }, weekdaysShort[index]));
        }

        return _react2.default.createElement('thead', { className: prefix + 'calendar-thead', role: 'rowgroup' }, _react2.default.createElement('tr', { role: 'row' }, elements));
    };

    return DateTableHead;
}(_react.PureComponent);

exports.default = DateTableHead;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2; /* istanbul ignore file */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _dropdown = __webpack_require__(47);

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__(151);

var _menu2 = _interopRequireDefault(_menu);

var _utils = __webpack_require__(24);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable */
var RangePanelHeader = (_temp2 = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(RangePanelHeader, _React$PureComponent);

    function RangePanelHeader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, RangePanelHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.selectContainerHandler = function (target) {
            return target.parentNode;
        }, _this.onYearChange = function (visibleMonth, year, tag) {
            var changeVisibleMonth = _this.props.changeVisibleMonth;

            var startYear = visibleMonth.clone().year(year).add(tag === 'end' ? -1 : 0, 'month');
            changeVisibleMonth(startYear, 'yearSelect');
        }, _this.changeVisibleMonth = function (visibleMonth, month, tag) {
            var changeVisibleMonth = _this.props.changeVisibleMonth;

            var startMonth = tag === 'end' ? month - 1 : month;
            changeVisibleMonth(visibleMonth.clone().month(startMonth), 'monthSelect');
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    RangePanelHeader.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            startVisibleMonth = _props.startVisibleMonth,
            endVisibleMonth = _props.endVisibleMonth,
            _props$yearRange = _props.yearRange,
            yearRange = _props$yearRange === undefined ? [] : _props$yearRange,
            yearRangeOffset = _props.yearRangeOffset,
            momentLocale = _props.momentLocale,
            locale = _props.locale,
            changeMode = _props.changeMode,
            goNextMonth = _props.goNextMonth,
            goNextYear = _props.goNextYear,
            goPrevMonth = _props.goPrevMonth,
            goPrevYear = _props.goPrevYear,
            disableChangeMode = _props.disableChangeMode;

        var localedMonths = momentLocale.months();
        var startMonthLabel = localedMonths[startVisibleMonth.month()];
        var endMonthLabel = localedMonths[endVisibleMonth.month()];
        var startYearLabel = startVisibleMonth.year();
        var endYearLabel = endVisibleMonth.year();
        var btnCls = prefix + 'calendar-btn';

        var months = (0, _utils.getMonths)(momentLocale);
        var startYears = (0, _utils.getYears)(yearRange, yearRangeOffset, startVisibleMonth.year());
        var endYears = (0, _utils.getYears)(yearRange, yearRangeOffset, endVisibleMonth.year());

        return _react2.default.createElement('div', { className: prefix + 'calendar-panel-header' }, _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevYear,
            className: btnCls + ' ' + btnCls + '-prev-year',
            onClick: goPrevYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-left', className: prefix + 'calendar-symbol-prev-super' })), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.prevMonth,
            className: btnCls + ' ' + btnCls + '-prev-month',
            onClick: goPrevMonth
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-left', className: prefix + 'calendar-symbol-prev' })), _react2.default.createElement('div', { className: prefix + 'calendar-panel-header-left' }, disableChangeMode ? _react2.default.createElement(_dropdown2.default, {
            align: 'tc bc',
            container: this.selectContainerHandler,
            trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: startMonthLabel }, startMonthLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
            triggerType: 'click'
        }, _react2.default.createElement(_menu2.default, {
            prefix: prefix,
            value: startVisibleMonth.month(),
            dataSource: months,
            onChange: function onChange(value) {
                return _this2.changeVisibleMonth(startVisibleMonth, value, 'start');
            }
        })) : _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: startMonthLabel,
            className: btnCls,
            onClick: function onClick() {
                return changeMode('month', 'start');
            }
        }, startMonthLabel), disableChangeMode ? _react2.default.createElement(_dropdown2.default, {
            align: 'tc bc',
            container: this.selectContainerHandler,
            trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: startYearLabel }, startYearLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
            triggerType: 'click'
        }, _react2.default.createElement(_menu2.default, {
            prefix: prefix,
            value: startVisibleMonth.year(),
            dataSource: startYears,
            onChange: function onChange(v) {
                return _this2.onYearChange(startVisibleMonth, v, 'start');
            }
        })) : _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: startYearLabel,
            className: btnCls,
            onClick: function onClick() {
                return changeMode('year', 'start');
            }
        }, startYearLabel)), _react2.default.createElement('div', { className: prefix + 'calendar-panel-header-right' }, disableChangeMode ? _react2.default.createElement(_dropdown2.default, {
            align: 'tc bc',
            container: this.selectContainerHandler,
            trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: endMonthLabel }, endMonthLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
            triggerType: 'click'
        }, _react2.default.createElement(_menu2.default, {
            prefix: prefix,
            value: endVisibleMonth.month(),
            dataSource: months,
            onChange: function onChange(value) {
                return _this2.changeVisibleMonth(endVisibleMonth, value, 'end');
            }
        })) : _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: endMonthLabel,
            className: btnCls,
            onClick: function onClick() {
                return changeMode('month', 'end');
            }
        }, endMonthLabel), disableChangeMode ? _react2.default.createElement(_dropdown2.default, {
            align: 'tc bc',
            container: this.selectContainerHandler,
            trigger: _react2.default.createElement('button', { role: 'button', type: 'button', className: btnCls, title: endYearLabel }, endYearLabel, _react2.default.createElement(_icon2.default, { type: 'arrow-down' })),
            triggerType: 'click'
        }, _react2.default.createElement(_menu2.default, {
            prefix: prefix,
            value: endVisibleMonth.year(),
            dataSource: endYears,
            onChange: function onChange(v) {
                return _this2.onYearChange(endVisibleMonth, v, 'end');
            }
        })) : _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: endYearLabel,
            className: btnCls,
            onClick: function onClick() {
                return changeMode('year', 'end');
            }
        }, endYearLabel)), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextMonth,
            className: btnCls + ' ' + btnCls + '-next-month',
            onClick: goNextMonth
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-right', className: prefix + 'calendar-symbol-next' })), _react2.default.createElement('button', {
            role: 'button',
            type: 'button',
            title: locale.nextYear,
            className: btnCls + ' ' + btnCls + '-next-year',
            onClick: goNextYear
        }, _react2.default.createElement(_icon2.default, { type: 'arrow-double-right', className: prefix + 'calendar-symbol-next-super' })));
    };

    return RangePanelHeader;
}(_react2.default.PureComponent), _class.defaultProps = {
    yearRangeOffset: 10
}, _temp2);
exports.default = RangePanelHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _card = __webpack_require__(316);

var _card2 = _interopRequireDefault(_card);

var _header = __webpack_require__(317);

var _header2 = _interopRequireDefault(_header);

var _bulletHeader = __webpack_require__(158);

var _bulletHeader2 = _interopRequireDefault(_bulletHeader);

var _media = __webpack_require__(160);

var _media2 = _interopRequireDefault(_media);

var _divider = __webpack_require__(318);

var _divider2 = _interopRequireDefault(_divider);

var _content = __webpack_require__(319);

var _content2 = _interopRequireDefault(_content);

var _collapseContent = __webpack_require__(159);

var _collapseContent2 = _interopRequireDefault(_collapseContent);

var _actions = __webpack_require__(161);

var _actions2 = _interopRequireDefault(_actions);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_card2.default.Header = _header2.default;
_card2.default.Media = _media2.default;
_card2.default.Divider = _divider2.default;
_card2.default.Content = _content2.default;
_card2.default.Actions = _actions2.default;
_card2.default.BulletHeader = _bulletHeader2.default;
_card2.default.CollaspeContent = _collapseContent2.default;
_card2.default.CollapseContent = _collapseContent2.default;

exports.default = _configProvider2.default.config(_card2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('titlePrefixLine' in props) {
            deprecated('titlePrefixLine', 'showTitleBullet', 'Card');
            var _props = props,
                titlePrefixLine = _props.titlePrefixLine,
                others = (0, _objectWithoutProperties3.default)(_props, ['titlePrefixLine']);

            props = (0, _extends3.default)({ showTitleBullet: titlePrefixLine }, others);
        }
        if ('titleBottomLine' in props) {
            deprecated('titleBottomLine', 'showHeadDivider', 'Card');

            var _props2 = props,
                titleBottomLine = _props2.titleBottomLine,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['titleBottomLine']);

            props = (0, _extends3.default)({ showHeadDivider: titleBottomLine }, _others);
        }
        if ('bodyHeight' in props) {
            deprecated('bodyHeight', 'contentHeight', 'Card');

            var _props3 = props,
                bodyHeight = _props3.bodyHeight,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['bodyHeight']);

            props = (0, _extends3.default)({ contentHeight: bodyHeight }, _others2);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp; /* eslint-disable valid-jsdoc */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _bulletHeader = __webpack_require__(158);

var _bulletHeader2 = _interopRequireDefault(_bulletHeader);

var _collapseContent = __webpack_require__(159);

var _collapseContent2 = _interopRequireDefault(_collapseContent);

var _media = __webpack_require__(160);

var _media2 = _interopRequireDefault(_media);

var _actions = __webpack_require__(161);

var _actions2 = _interopRequireDefault(_actions);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var pickOthers = _util.obj.pickOthers;

/**
 * Card
 * @order 0
 */

var Card = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(Card, _React$Component);

  function Card() {
    (0, _classCallCheck3.default)(this, Card);
    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
  }

  Card.prototype.render = function render() {
    var _classNames;

    var _props = this.props,
        prefix = _props.prefix,
        className = _props.className,
        title = _props.title,
        subTitle = _props.subTitle,
        extra = _props.extra,
        showTitleBullet = _props.showTitleBullet,
        showHeadDivider = _props.showHeadDivider,
        children = _props.children,
        rtl = _props.rtl,
        contentHeight = _props.contentHeight,
        free = _props.free,
        actions = _props.actions,
        hasBorder = _props.hasBorder,
        media = _props.media;

    var cardCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'card'] = true, _classNames[prefix + 'card-free'] = free, _classNames[prefix + 'card-noborder'] = !hasBorder, _classNames[prefix + 'card-show-divider'] = showHeadDivider, _classNames[prefix + 'card-hide-divider'] = !showHeadDivider, _classNames), className);

    var others = pickOthers(Object.keys(Card.propTypes), this.props);

    others.dir = rtl ? 'rtl' : undefined;

    return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: cardCls }), media && _react2.default.createElement(_media2.default, null, media), _react2.default.createElement(_bulletHeader2.default, { title: title, subTitle: subTitle, extra: extra, showTitleBullet: showTitleBullet }), free ? children : _react2.default.createElement(_collapseContent2.default, { contentHeight: contentHeight }, children), actions && _react2.default.createElement(_actions2.default, null, actions));
  };

  return Card;
}(_react2.default.Component), _class.displayName = 'Card', _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
  prefix: _propTypes2.default.string,
  rtl: _propTypes2.default.bool,
  /**
   * 卡片的上的图片 / 视频
   */
  media: _propTypes2.default.node,
  /**
   * 卡片的标题
   */
  title: _propTypes2.default.node,
  /**
   * 卡片的副标题
   */
  subTitle: _propTypes2.default.node,
  /**
   * 卡片操作组，位置在卡片底部
   */
  actions: _propTypes2.default.node,
  /**
   * 是否显示标题的项目符号
   */
  showTitleBullet: _propTypes2.default.bool,
  /**
   * 是否展示头部的分隔线
   */
  showHeadDivider: _propTypes2.default.bool,
  /**
   * 内容区域的固定高度
   */
  contentHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
   * 标题区域的用户自定义内容
   */
  extra: _propTypes2.default.node,
  /**
   * 是否开启自由模式，开启后card 将使用子组件配合使用, 设置此项后 title, subtitle, 等等属性都将失效
   */
  free: _propTypes2.default.bool,
  /**
   * 是否带边框
   * @version 1.24
   */
  hasBorder: _propTypes2.default.bool,
  className: _propTypes2.default.string,
  children: _propTypes2.default.node
}), _class.defaultProps = {
  prefix: 'next-',
  free: false,
  showTitleBullet: true,
  showHeadDivider: true,
  hasBorder: true,
  contentHeight: 120
}, _temp);
Card.displayName = 'Card';
exports.default = Card;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.Header
 * @order 2
 */
var CardHeader = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardHeader, _Component);

    function CardHeader() {
        (0, _classCallCheck3.default)(this, CardHeader);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardHeader.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            title = _props.title,
            subTitle = _props.subTitle,
            extra = _props.extra,
            className = _props.className,
            Component = _props.component,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'title', 'subTitle', 'extra', 'className', 'component']);

        return _react2.default.createElement(Component, (0, _extends3.default)({}, others, { className: (0, _classnames2.default)(prefix + 'card-header', className) }), extra && _react2.default.createElement('div', { className: prefix + 'card-header-extra' }, extra), _react2.default.createElement('div', { className: prefix + 'card-header-titles' }, title && _react2.default.createElement('div', { className: prefix + 'card-header-title' }, title), subTitle && _react2.default.createElement('div', { className: prefix + 'card-header-subtitle' }, subTitle)));
    };

    return CardHeader;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 卡片的标题
     */
    title: _propTypes2.default.node,
    /**
     * 卡片的副标题
     */
    subTitle: _propTypes2.default.node,
    /**
     * 标题区域的用户自定义内容
     */
    extra: _propTypes2.default.node,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, _temp);
CardHeader.displayName = 'CardHeader';
exports.default = _configProvider2.default.config(CardHeader);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.Divider
 * @order 4
 */
var CardDivider = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardDivider, _Component);

    function CardDivider() {
        (0, _classCallCheck3.default)(this, CardDivider);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardDivider.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            prefix = _props.prefix,
            Component = _props.component,
            inset = _props.inset,
            className = _props.className,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'component', 'inset', 'className']);

        var dividerClassName = (0, _classnames2.default)(prefix + 'card-divider', (_classNames = {}, _classNames[prefix + 'card-divider--inset'] = inset, _classNames), className);

        return _react2.default.createElement(Component, (0, _extends3.default)({}, others, { className: dividerClassName }));
    };

    return CardDivider;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    /**
     * 分割线是否向内缩进
     */
    inset: _propTypes2.default.bool,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'hr'
}, _temp);
CardDivider.displayName = 'CardDivider';
exports.default = _configProvider2.default.config(CardDivider);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Card.Content
 * @order 3
 */
var CardContent = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CardContent, _Component);

    function CardContent() {
        (0, _classCallCheck3.default)(this, CardContent);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    CardContent.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            Component = _props.component,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'component']);

        return _react2.default.createElement(Component, (0, _extends3.default)({}, others, { className: (0, _classnames2.default)(prefix + 'card-content-container', className) }));
    };

    return CardContent;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    component: 'div'
}, _temp);
CardContent.displayName = 'CardContent';
exports.default = _configProvider2.default.config(CardContent);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var lodash_clonedeep_1 = tslib_1.__importDefault(__webpack_require__(321));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var util_1 = __webpack_require__(4);
var menu_2 = tslib_1.__importDefault(__webpack_require__(322));
var item_1 = tslib_1.__importDefault(__webpack_require__(323));
var utils_1 = __webpack_require__(324);
var bindCtx = util_1.func.bindCtx;
var pickOthers = util_1.obj.pickOthers;
var addClass = util_1.dom.addClass,
    removeClass = util_1.dom.removeClass,
    setStyle = util_1.dom.setStyle,
    getStyle = util_1.dom.getStyle;
// 数据打平
var flatDataSource = function flatDataSource(data, prefix, v2n, p2n) {
    if (prefix === void 0) {
        prefix = '0';
    }
    if (v2n === void 0) {
        v2n = {};
    }
    if (p2n === void 0) {
        p2n = {};
    }
    data.forEach(function (item, index) {
        var value = item.value,
            children = item.children;
        var pos = "".concat(prefix, "-").concat(index);
        var newValue = String(value);
        item.value = newValue;
        v2n[newValue] = p2n[pos] = tslib_1.__assign(tslib_1.__assign({}, item), { pos: pos, _source: item });
        if (children && children.length) {
            flatDataSource(children, pos, v2n, p2n);
        }
    });
    return { v2n: v2n, p2n: p2n };
};
function preHandleData(data, immutable) {
    var _data = immutable ? (0, lodash_clonedeep_1.default)(data) : data;
    try {
        return flatDataSource(_data);
    } catch (err) {
        if ((err.message || '').match('Cannot assign to read only property')) {
            // eslint-disable-next-line no-console
            console.error(err.message, 'try to set immutable to true to allow immutable dataSource');
        }
        throw err;
    }
}
var getExpandedValue = function getExpandedValue(v, _v2n, _p2n) {
    if (!v || !_v2n[v]) {
        return [];
    }
    var pos = _v2n[v].pos;
    if (pos.split('-').length === 2) {
        return [];
    }
    var expandedMap = {};
    Object.keys(_p2n).forEach(function (p) {
        if ((0, utils_1.isDescendantOrSelf)(p, pos) && p !== pos) {
            expandedMap[_p2n[p].value] = p;
        }
    });
    return Object.keys(expandedMap).sort(function (prev, next) {
        return expandedMap[prev].split('-').length - expandedMap[next].split('-').length;
    });
};
var normalizeValue = function normalizeValue(value) {
    if (value) {
        if (Array.isArray(value)) {
            return value;
        }
        return [value];
    }
    return [];
};
/**
 * Cascader
 */
var Cascader = /** @class */function (_super) {
    tslib_1.__extends(Cascader, _super);
    function Cascader(props) {
        var _this = _super.call(this, props) || this;
        var defaultValue = props.defaultValue,
            value = props.value,
            defaultExpandedValue = props.defaultExpandedValue,
            expandedValue = props.expandedValue,
            dataSource = props.dataSource,
            multiple = props.multiple,
            checkStrictly = props.checkStrictly,
            canOnlyCheckLeaf = props.canOnlyCheckLeaf,
            loadData = props.loadData,
            immutable = props.immutable;
        var _a = preHandleData(dataSource, immutable),
            v2n = _a.v2n,
            p2n = _a.p2n;
        var normalizedValue = normalizeValue(typeof value === 'undefined' ? defaultValue : value);
        if (!loadData) {
            normalizedValue = normalizedValue.filter(function (v) {
                return v2n[v];
            });
        }
        var realExpandedValue = typeof expandedValue === 'undefined' ? typeof defaultExpandedValue === 'undefined' ? getExpandedValue(normalizedValue[0], v2n, p2n) : normalizeValue(defaultExpandedValue) : normalizeValue(expandedValue);
        var st = {
            value: normalizedValue,
            expandedValue: realExpandedValue,
            isExpandedValueSetByAction: false
        };
        if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
            st.value = (0, utils_1.getAllCheckedValues)(st.value, v2n, p2n);
        }
        _this.lastExpandedValue = tslib_1.__spreadArray([], tslib_1.__read(st.expandedValue), false);
        _this.state = tslib_1.__assign(tslib_1.__assign({}, st), { _v2n: v2n, _p2n: p2n });
        bindCtx(_this, ['handleMouseLeave', 'handleFocus', 'handleFold', 'getCascaderNode', 'getCascaderInnerNode', 'onBlur']);
        return _this;
    }
    Cascader.getDerivedStateFromProps = function (props, state) {
        var _a = preHandleData(props.dataSource, props.immutable),
            v2n = _a.v2n,
            p2n = _a.p2n;
        var states = {};
        if ('value' in props) {
            states.value = normalizeValue(props.value);
            if (!props.loadData) {
                states.value = states.value.filter(function (v) {
                    return v2n[v];
                });
            }
            var multiple = props.multiple,
                checkStrictly = props.checkStrictly,
                canOnlyCheckLeaf = props.canOnlyCheckLeaf;
            if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
                states.value = (0, utils_1.getAllCheckedValues)(states.value, v2n, p2n);
            }
            if (
            // 非受控模式下，若已经通过用户事件调整了 expandedValue，则忽略下面的空值兜底处理
            !state.isExpandedValueSetByAction && !state.expandedValue.length && !('expandedValue' in props)) {
                states.expandedValue = getExpandedValue(states.value[0], v2n, p2n);
            }
        }
        if ('expandedValue' in props) {
            states.expandedValue = normalizeValue(props.expandedValue);
            // 受控模式则重置 isExpandedValueSetByAction
            states.isExpandedValueSetByAction = false;
        }
        return tslib_1.__assign(tslib_1.__assign({}, states), { _v2n: v2n, _p2n: p2n });
    };
    Cascader.prototype.componentDidMount = function () {
        this.setCascaderInnerWidth();
    };
    Cascader.prototype.componentDidUpdate = function () {
        this.setCascaderInnerWidth();
    };
    Cascader.prototype.getCascaderNode = function (ref) {
        this.cascader = ref;
    };
    Cascader.prototype.getCascaderInnerNode = function (ref) {
        this.cascaderInner = ref;
    };
    Cascader.prototype.setCascaderInnerWidth = function () {
        if (!this.cascaderInner) {
            return;
        }
        var menus = [].slice.call(this.cascaderInner.querySelectorAll(".".concat(this.props.prefix, "cascader-menu-wrapper")));
        if (menus.length === 0) {
            return;
        }
        var menusWidth = Math.ceil(menus.reduce(function (ret, menu) {
            return ret + Math.ceil(menu.getBoundingClientRect().width);
        }, 0));
        if (getStyle(this.cascaderInner, 'width') !== menusWidth) {
            setStyle(this.cascaderInner, 'width', menusWidth);
        }
        if (getStyle(this.cascader, 'display') === 'inline-block') {
            var hasRightBorderClass_1 = "".concat(this.props.prefix, "has-right-border");
            menus.forEach(function (menu) {
                return removeClass(menu, hasRightBorderClass_1);
            });
            if (this.cascader.clientWidth > menusWidth) {
                addClass(menus[menus.length - 1], hasRightBorderClass_1);
            }
        }
    };
    Cascader.prototype.flatValue = function (value) {
        return (0, utils_1.filterChildValue)(value, this.state._v2n, this.state._p2n);
    };
    Cascader.prototype.getValue = function (pos) {
        return this.state._p2n[pos] ? this.state._p2n[pos].value : null;
    };
    Cascader.prototype.getPos = function (value) {
        return this.state._v2n[value] ? this.state._v2n[value].pos : null;
    };
    Cascader.prototype.getData = function (value) {
        var _this = this;
        return value.map(function (v) {
            return _this.state._v2n[v];
        });
    };
    Cascader.prototype.processValue = function (value, v, checked) {
        var index = value.indexOf(v);
        if (checked && index === -1) {
            value.push(v);
        } else if (!checked && index > -1) {
            value.splice(index, 1);
        }
    };
    Cascader.prototype.handleSelect = function (v, canExpand) {
        var _this = this;
        if (!(this.props.canOnlySelectLeaf && canExpand)) {
            var data = this.state._v2n[v];
            var nums_1 = data.pos.split('-');
            var selectedPath = nums_1.slice(1).reduce(function (ret, num, index) {
                var p = nums_1.slice(0, index + 2).join('-');
                ret.push(_this.state._p2n[p]);
                return ret;
            }, []);
            if (this.state.value[0] !== v) {
                if (!('value' in this.props)) {
                    this.setState({
                        value: [v]
                    });
                }
                if ('onChange' in this.props) {
                    this.props.onChange(v, data, {
                        selectedPath: selectedPath
                    });
                }
            }
            if ('onSelect' in this.props) {
                this.props.onSelect(v, data, {
                    selectedPath: selectedPath
                });
            }
        }
        if (canExpand) {
            if (!this.props.canOnlySelectLeaf) {
                this.lastExpandedValue = this.state.expandedValue.slice(0, -1);
            }
        } else {
            this.lastExpandedValue = tslib_1.__spreadArray([], tslib_1.__read(this.state.expandedValue), false);
        }
    };
    Cascader.prototype.handleCheck = function (v, checked) {
        var _this = this;
        var _a = this.props,
            checkStrictly = _a.checkStrictly,
            canOnlyCheckLeaf = _a.canOnlyCheckLeaf;
        var value = tslib_1.__spreadArray([], tslib_1.__read(this.state.value), false);
        if (checkStrictly || canOnlyCheckLeaf) {
            this.processValue(value, v, checked);
        } else {
            var pos = this.getPos(v);
            var ps = Object.keys(this.state._p2n);
            (0, utils_1.forEachEnableNode)(this.state._v2n[v], function (node) {
                if (node.checkable === false) return;
                _this.processValue(value, node.value, checked);
            });
            var currentPos = pos;
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentCheck = true;
                var parentPos = nums.slice(0, i - 1).join('-');
                if (this.state._p2n[parentPos].disabled || this.state._p2n[parentPos].checkboxDisabled || this.state._p2n[parentPos].checkable === false) {
                    currentPos = parentPos;
                    continue;
                }
                var parentValue = this.state._p2n[parentPos].value;
                var parentChecked = value.indexOf(parentValue) > -1;
                if (!checked && !parentChecked) {
                    break;
                }
                for (var j = 0; j < ps.length; j++) {
                    var p = ps[j];
                    var pnode = this.state._p2n[p];
                    if ((0, utils_1.isSiblingOrSelf)(currentPos, p) && !pnode.disabled && !pnode.checkboxDisabled) {
                        var k = pnode.value;
                        if (pnode.checkable === false) {
                            if (!pnode.children || pnode.children.length === 0) {
                                continue;
                            }
                            for (var m = 0; m < pnode.children.length; m++) {
                                if (!pnode.children.every(function (child) {
                                    return (0, utils_1.isNodeChecked)(child, value);
                                })) {
                                    parentCheck = false;
                                    break;
                                }
                            }
                        } else if (value.indexOf(k) === -1) {
                            parentCheck = false;
                        }
                        if (!parentCheck) break;
                    }
                }
                this.processValue(value, parentValue, parentCheck);
                currentPos = parentPos;
            }
        }
        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }
        if ('onChange' in this.props) {
            if (checkStrictly || canOnlyCheckLeaf) {
                var data = this.getData(value);
                this.props.onChange(value, data, {
                    checked: checked,
                    currentData: this.state._v2n[v],
                    checkedData: data
                });
            } else {
                var flatValue = this.flatValue(value);
                var flatData = this.getData(flatValue);
                var checkedData = this.getData(value);
                var indeterminateValue = this.getIndeterminate(value);
                var indeterminateData = this.getData(indeterminateValue);
                this.props.onChange(flatValue, flatData, {
                    checked: checked,
                    currentData: this.state._v2n[v],
                    checkedData: checkedData,
                    indeterminateData: indeterminateData
                });
            }
        }
        this.lastExpandedValue = tslib_1.__spreadArray([], tslib_1.__read(this.state.expandedValue), false);
    };
    Cascader.prototype.handleExpand = function (value, level, canExpand, focusedFirstChild) {
        var _this = this;
        var expandedValue = this.state.expandedValue;
        if (canExpand || expandedValue.length > level) {
            // FIXME 此处实现有 bug，state.expandedValue 被直接修改，并没有考虑受控非受控的情况
            if (canExpand) {
                expandedValue.splice(level, expandedValue.length - level, value);
            } else {
                expandedValue.splice(level);
            }
            var callback = function callback() {
                _this.setExpandValue(expandedValue, true);
                if (focusedFirstChild) {
                    var endExpandedValue = expandedValue[expandedValue.length - 1];
                    _this.setState({
                        focusedValue: _this.state._v2n[endExpandedValue].children[0].value
                    });
                }
            };
            var loadData = this.props.loadData;
            if (canExpand && loadData) {
                var data = this.state._v2n[value];
                return loadData(data, data._source).then(callback);
            } else {
                return callback();
            }
        }
    };
    Cascader.prototype.handleMouseLeave = function () {
        this.setExpandValue(tslib_1.__spreadArray([], tslib_1.__read(this.lastExpandedValue), false), true);
    };
    Cascader.prototype.setExpandValue = function (expandedValue, isExpandedValueSetByAction) {
        if (isExpandedValueSetByAction === void 0) {
            isExpandedValueSetByAction = false;
        }
        if (!('expandedValue' in this.props)) {
            this.setState({
                expandedValue: expandedValue,
                isExpandedValueSetByAction: isExpandedValueSetByAction
            });
        }
        if ('onExpand' in this.props) {
            this.props.onExpand(expandedValue);
        }
    };
    Cascader.prototype.getFirstFocusKeyByDataSource = function (dataSource) {
        if (!dataSource || dataSource.length === 0) {
            return '';
        }
        for (var i = 0; i < dataSource.length; i++) {
            if (dataSource[i] && !dataSource[i].disabled) {
                return dataSource[i].value;
            }
        }
        return '';
    };
    Cascader.prototype.getFirstFocusKeyByFilteredPaths = function (filteredPaths) {
        if (!filteredPaths || filteredPaths.length === 0) {
            return '';
        }
        for (var i = 0; i < filteredPaths.length; i++) {
            var path = filteredPaths[i];
            if (!path.some(function (item) {
                return item.disabled;
            })) {
                var lastItem = path[path.length - 1];
                return lastItem.value;
            }
        }
        return '';
    };
    Cascader.prototype.getFirstFocusKey = function () {
        var _a = this.props,
            dataSource = _a.dataSource,
            searchValue = _a.searchValue,
            filteredPaths = _a.filteredPaths;
        return !searchValue ? this.getFirstFocusKeyByDataSource(dataSource) : this.getFirstFocusKeyByFilteredPaths(filteredPaths);
    };
    Cascader.prototype.setFocusValue = function () {
        this.setState({
            focusedValue: this.getFirstFocusKey()
        });
    };
    Cascader.prototype.handleFocus = function (focusedValue) {
        this.setState({
            focusedValue: focusedValue
        });
    };
    Cascader.prototype.handleFold = function () {
        var expandedValue = this.state.expandedValue;
        if (expandedValue.length > 0) {
            this.setExpandValue(expandedValue.slice(0, -1), true);
        }
        this.setState({
            focusedValue: expandedValue[expandedValue.length - 1]
        });
    };
    Cascader.prototype.getIndeterminate = function (value) {
        var _this = this;
        var indeterminateValues = [];
        var poss = (0, utils_1.filterChildValue)(value.filter(function (v) {
            return !!_this.state._v2n[v];
        }).filter(function (v) {
            return !_this.state._v2n[v].disabled && !_this.state._v2n[v].checkboxDisabled && _this.state._v2n[v].checkable !== false;
        }), this.state._v2n, this.state._p2n).map(function (v) {
            return _this.state._v2n[v].pos;
        });
        poss.forEach(function (pos) {
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parent_1 = _this.state._p2n[parentPos];
                if (parent_1.disabled || parent_1.checkboxDisabled) break;
                var parentValue = parent_1.value;
                if (indeterminateValues.indexOf(parentValue) === -1) {
                    indeterminateValues.push(parentValue);
                }
            }
        });
        return indeterminateValues;
    };
    Cascader.prototype.onBlur = function (e) {
        this.setState({
            focusedValue: undefined
        });
        this.props.onBlur && this.props.onBlur(e);
    };
    Cascader.prototype.renderMenu = function (data, level) {
        var _this = this;
        var _a = this.props,
            prefix = _a.prefix,
            multiple = _a.multiple,
            useVirtual = _a.useVirtual,
            checkStrictly = _a.checkStrictly,
            expandTriggerType = _a.expandTriggerType,
            loadData = _a.loadData,
            canOnlyCheckLeaf = _a.canOnlyCheckLeaf,
            listClassName = _a.listClassName,
            listStyle = _a.listStyle,
            itemRender = _a.itemRender;
        var _b = this.state,
            value = _b.value,
            expandedValue = _b.expandedValue,
            focusedValue = _b.focusedValue;
        return react_1.default.createElement(menu_2.default, { key: level, prefix: prefix, useVirtual: useVirtual, className: listClassName, style: listStyle, focusedKey: focusedValue, onItemFocus: this.handleFocus, onBlur: this.onBlur }, data.map(function (item) {
            var disabled = !!item.disabled;
            var canExpand = !!item.children && !!item.children.length || !!loadData && !item.isLeaf;
            var expanded = expandedValue[level] === item.value;
            var props = {
                prefix: prefix,
                disabled: disabled,
                canExpand: canExpand,
                expanded: expanded,
                expandTriggerType: expandTriggerType,
                onExpand: _this.handleExpand.bind(_this, item.value, level, canExpand),
                onFold: _this.handleFold
            };
            if ('title' in item) {
                props.title = item.title;
            }
            if (multiple) {
                props.checkable = !(canOnlyCheckLeaf && canExpand);
                props.checked = value.indexOf(item.value) > -1 || !!item.checked;
                props.indeterminate = (checkStrictly || canOnlyCheckLeaf ? false : _this.indeterminate.indexOf(item.value) > -1) || !!item.indeterminate;
                props.checkboxDisabled = !!item.checkboxDisabled;
                props.onCheck = _this.handleCheck.bind(_this, item.value);
            } else {
                props.selected = value[0] === item.value;
                props.onSelect = _this.handleSelect.bind(_this, item.value, canExpand);
            }
            var itemContent = itemRender(item, props);
            if (itemContent === null) {
                return null;
            }
            return react_1.default.createElement(item_1.default, tslib_1.__assign({ key: item.value }, props), itemContent);
        }).filter(function (v) {
            return v;
        }));
    };
    Cascader.prototype.renderMenus = function () {
        var dataSource = this.props.dataSource;
        var expandedValue = this.state.expandedValue;
        var menus = [];
        var data = dataSource;
        for (var i = 0; i <= expandedValue.length; i++) {
            if (!data) {
                break;
            }
            menus.push(this.renderMenu(data, i));
            var expandedItem = void 0;
            for (var j = 0; j < data.length; j++) {
                if (data[j].value === expandedValue[i]) {
                    expandedItem = data[j];
                    break;
                }
            }
            data = expandedItem ? expandedItem.children : null;
        }
        return menus;
    };
    Cascader.prototype.renderFilteredItem = function (path) {
        var _a = this.props,
            prefix = _a.prefix,
            resultRender = _a.resultRender,
            searchValue = _a.searchValue,
            multiple = _a.multiple;
        var value = this.state.value;
        var lastItem = path[path.length - 1];
        var Item;
        var props = {
            className: "".concat(prefix, "cascader-filtered-item"),
            disabled: path.some(function (item) {
                return item.disabled;
            }),
            children: resultRender(searchValue, path)
        };
        if (multiple) {
            Item = menu_1.default.CheckboxItem;
            var _b = this.props,
                checkStrictly = _b.checkStrictly,
                canOnlyCheckLeaf = _b.canOnlyCheckLeaf;
            props = tslib_1.__assign(tslib_1.__assign({}, props), { checked: value.indexOf(lastItem.value) > -1, indeterminate: !checkStrictly && !canOnlyCheckLeaf && this.indeterminate.indexOf(lastItem.value) > -1, checkboxDisabled: lastItem.checkboxDisabled, onChange: this.handleCheck.bind(this, lastItem.value) });
        } else {
            Item = menu_1.default.Item;
            props = tslib_1.__assign(tslib_1.__assign({}, props), { selected: value[0] === lastItem.value, onSelect: this.handleSelect.bind(this, lastItem.value, false) });
        }
        return react_1.default.createElement(Item, tslib_1.__assign({ key: lastItem.value }, props));
    };
    Cascader.prototype.renderFilteredList = function () {
        var _this = this;
        var _a = this.props,
            prefix = _a.prefix,
            filteredListStyle = _a.filteredListStyle,
            filteredPaths = _a.filteredPaths,
            _b = _a.focusable,
            focusable = _b === void 0 ? false : _b;
        var focusedValue = this.state.focusedValue;
        return react_1.default.createElement(menu_1.default
        // 如果不设置为false， CascaderSelect 开启 showSearch后，弹窗展开时，光标无法到input上去，也无法输入.
        // TODO: set focusable=true in 2.x
        , {
            // 如果不设置为false， CascaderSelect 开启 showSearch后，弹窗展开时，光标无法到input上去，也无法输入.
            // TODO: set focusable=true in 2.x
            focusable: focusable, focusedKey: focusedValue, onItemFocus: this.handleFocus, className: "".concat(prefix, "cascader-filtered-list"), style: filteredListStyle }, filteredPaths.map(function (path) {
            return _this.renderFilteredItem(path);
        }));
    };
    Cascader.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            rtl = _b.rtl,
            className = _b.className,
            expandTriggerType = _b.expandTriggerType,
            multiple = _b.multiple,
            dataSource = _b.dataSource,
            checkStrictly = _b.checkStrictly,
            canOnlyCheckLeaf = _b.canOnlyCheckLeaf,
            searchValue = _b.searchValue;
        // FIXME 这样做风险比较大，propTypes 如果不全，就会出现一些 div 接收不了的参数传导到 div
        var others = pickOthers(Cascader.propTypes, this.props);
        var value = this.state.value;
        if (rtl) {
            others.dir = 'rtl';
        }
        var props = tslib_1.__assign({ className: (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "cascader")] = true, _a.multiple = multiple, _a[className] = !!className, _a)), ref: 'cascader' }, others);
        if (expandTriggerType === 'hover') {
            props.onMouseLeave = this.handleMouseLeave;
        }
        if (multiple && !checkStrictly && !canOnlyCheckLeaf) {
            this.indeterminate = this.getIndeterminate(value);
        }
        return react_1.default.createElement("div", tslib_1.__assign({}, props, { ref: this.getCascaderNode }), !searchValue ? react_1.default.createElement("div", { className: "".concat(prefix, "cascader-inner"), ref: this.getCascaderInnerNode }, dataSource && dataSource.length ? this.renderMenus() : null) : this.renderFilteredList());
    };
    Cascader.propTypes = {
        prefix: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        pure: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        dataSource: prop_types_1.default.arrayOf(prop_types_1.default.object),
        defaultValue: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.arrayOf(prop_types_1.default.string)]),
        value: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.arrayOf(prop_types_1.default.string)]),
        onChange: prop_types_1.default.func,
        onSelect: prop_types_1.default.func,
        defaultExpandedValue: prop_types_1.default.arrayOf(prop_types_1.default.string),
        expandedValue: prop_types_1.default.arrayOf(prop_types_1.default.string),
        expandTriggerType: prop_types_1.default.oneOf(['click', 'hover']),
        onExpand: prop_types_1.default.func,
        useVirtual: prop_types_1.default.bool,
        multiple: prop_types_1.default.bool,
        canOnlySelectLeaf: prop_types_1.default.bool,
        canOnlyCheckLeaf: prop_types_1.default.bool,
        checkStrictly: prop_types_1.default.bool,
        listStyle: prop_types_1.default.object,
        listClassName: prop_types_1.default.string,
        itemRender: prop_types_1.default.func,
        loadData: prop_types_1.default.func,
        searchValue: prop_types_1.default.string,
        onBlur: prop_types_1.default.func,
        filteredPaths: prop_types_1.default.array,
        filteredListStyle: prop_types_1.default.object,
        resultRender: prop_types_1.default.func,
        immutable: prop_types_1.default.bool
    };
    Cascader.defaultProps = {
        prefix: 'next-',
        rtl: false,
        pure: false,
        dataSource: [],
        defaultValue: null,
        canOnlySelectLeaf: false,
        canOnlyCheckLeaf: false,
        expandTriggerType: 'click',
        multiple: false,
        useVirtual: false,
        checkStrictly: false,
        itemRender: function itemRender(item) {
            return item.label;
        },
        immutable: false
    };
    return Cascader;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Cascader);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/**
 * Adds the key-value `pair` to `map`.
 *
 * @private
 * @param {Object} map The map to modify.
 * @param {Array} pair The key-value pair to add.
 * @returns {Object} Returns `map`.
 */
function addMapEntry(map, pair) {
  // Don't return `map.set` because it's not chainable in IE 11.
  map.set(pair[0], pair[1]);
  return map;
}

/**
 * Adds `value` to `set`.
 *
 * @private
 * @param {Object} set The set to modify.
 * @param {*} value The value to add.
 * @returns {Object} Returns `set`.
 */
function addSetEntry(set, value) {
  // Don't return `set.add` because it's not chainable in IE 11.
  set.add(value);
  return set;
}

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array ? array.length : 0;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @param {boolean} [isFull] Specify a clone including symbols.
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
  var result;
  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      if (isHostObject(value)) {
        return object ? value : {};
      }
      result = initCloneObject(isFunc ? {} : value);
      if (!isDeep) {
        return copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, baseClone, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (!isArr) {
    var props = isFull ? getAllKeys(value) : keys(value);
  }
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
  });
  return result;
}

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} prototype The object to inherit from.
 * @returns {Object} Returns the new object.
 */
function baseCreate(proto) {
  return isObject(proto) ? objectCreate(proto) : {};
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var result = new buffer.constructor(buffer.length);
  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/**
 * Creates a clone of `map`.
 *
 * @private
 * @param {Object} map The map to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned map.
 */
function cloneMap(map, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
  return arrayReduce(array, addMapEntry, new map.constructor);
}

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/**
 * Creates a clone of `set`.
 *
 * @private
 * @param {Object} set The set to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned set.
 */
function cloneSet(set, isDeep, cloneFunc) {
  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
  return arrayReduce(array, addSetEntry, new set.constructor);
}

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    assignValue(object, key, newValue === undefined ? source[key] : newValue);
  }
  return object;
}

/**
 * Copies own symbol properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {Function} cloneFunc The function to clone values.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, cloneFunc, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return cloneMap(object, isDeep, cloneFunc);

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return cloneSet(object, isDeep, cloneFunc);

    case symbolTag:
      return cloneSymbol(object);
  }
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, true, true);
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = cloneDeep;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(69), __webpack_require__(163)(module)))

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_dom_1 = __webpack_require__(13);
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var virtual_list_1 = tslib_1.__importDefault(__webpack_require__(50));
var CascaderMenu = /** @class */function (_super) {
    tslib_1.__extends(CascaderMenu, _super);
    function CascaderMenu() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.saveMenuRef = function (ref) {
            _this.menuEl = ref;
        };
        _this.saveVirtualRef = function (ref) {
            _this.virtualEl = ref;
        };
        return _this;
    }
    CascaderMenu.prototype.componentDidMount = function () {
        this.scrollToSelectedItem();
    };
    CascaderMenu.prototype.scrollToSelectedItem = function () {
        var _a = this.props,
            prefix = _a.prefix,
            useVirtual = _a.useVirtual,
            children = _a.children;
        // FIXME 这里的判断很容易报错
        if (!children || children.length === 0) {
            return;
        }
        var selectedIndex = children.findIndex(function (item) {
            return !!item.props.checked || !!item.props.selected || !!item.props.expanded;
        });
        if (selectedIndex === -1) {
            return;
        }
        if (useVirtual) {
            // @ts-expect-error VirtualList 尚未做优化，因此无法取得 getInstance
            var instance_1 = this.virtualEl.getInstance();
            setTimeout(function () {
                return instance_1.scrollTo(selectedIndex);
            }, 0);
        } else {
            var itemSelector = ".".concat(prefix, "menu-item");
            var menu = (0, react_dom_1.findDOMNode)(this.menuEl);
            var targetItem = menu.querySelectorAll(itemSelector)[selectedIndex];
            if (targetItem) {
                menu.scrollTop = targetItem.offsetTop - Math.floor((menu.clientHeight / targetItem.clientHeight - 1) / 2) * targetItem.clientHeight;
            }
        }
    };
    CascaderMenu.prototype.renderMenu = function (items, ref, props) {
        var _this = this;
        function isItem(node) {
            // FIXME 这里的判断很容易报错，node.type 可以是 string 或者函数组件
            return react_1.default.isValidElement(node) && node.type.menuChildType === 'item';
        }
        return react_1.default.createElement(menu_1.default, tslib_1.__assign({ ref: ref, role: "listbox" }, props), items.map(function (node) {
            if (isItem(node)) {
                return react_1.default.cloneElement(node, {
                    menu: _this
                });
            }
            return node;
        }));
    };
    CascaderMenu.prototype.render = function () {
        var _this = this;
        var _a = this.props,
            prefix = _a.prefix,
            useVirtual = _a.useVirtual,
            className = _a.className,
            style = _a.style,
            children = _a.children,
            others = tslib_1.__rest(_a, ["prefix", "useVirtual", "className", "style", "children"]);
        var menuProps = tslib_1.__assign({ labelToggleChecked: false, className: "".concat(prefix, "cascader-menu") }, others);
        return react_1.default.createElement("div", { ref: this.saveMenuRef, className: "".concat(prefix, "cascader-menu-wrapper ").concat(className ? className : ''), style: style }, useVirtual ? react_1.default.createElement(virtual_list_1.default, { ref: this.saveVirtualRef, itemsRenderer: function itemsRenderer(items, ref) {
                return _this.renderMenu(items, ref, menuProps);
            } }, children) : this.renderMenu(children, undefined, menuProps));
    };
    CascaderMenu.propTypes = {
        prefix: prop_types_1.default.string,
        className: prop_types_1.default.string,
        useVirtual: prop_types_1.default.bool,
        children: prop_types_1.default.node
    };
    return CascaderMenu;
}(react_1.Component);
exports.default = CascaderMenu;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var util_1 = __webpack_require__(4);
var bindCtx = util_1.func.bindCtx;
var pickOthers = util_1.obj.pickOthers;
var CascaderMenuItem = /** @class */function (_super) {
    tslib_1.__extends(CascaderMenuItem, _super);
    function CascaderMenuItem(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            loading: false
        };
        bindCtx(_this, ['handleExpand', 'handleClick', 'handleMouseEnter', 'handleKeyDown', 'removeLoading']);
        return _this;
    }
    CascaderMenuItem.prototype.addLoading = function () {
        this.setState({
            loading: true
        });
    };
    CascaderMenuItem.prototype.removeLoading = function () {
        this.setState({
            loading: false
        });
    };
    CascaderMenuItem.prototype.setLoadingIfNeed = function (p) {
        if (p && typeof p.then === 'function') {
            this.addLoading();
            p.then(this.removeLoading).catch(this.removeLoading);
        }
    };
    CascaderMenuItem.prototype.handleExpand = function (focusedFirstChild) {
        this.setLoadingIfNeed(this.props.onExpand(focusedFirstChild));
    };
    CascaderMenuItem.prototype.handleClick = function () {
        this.handleExpand(false);
    };
    CascaderMenuItem.prototype.handleMouseEnter = function () {
        this.handleExpand(false);
    };
    CascaderMenuItem.prototype.handleKeyDown = function (e) {
        if (!this.props.disabled) {
            if (e.keyCode === util_1.KEYCODE.RIGHT || e.keyCode === util_1.KEYCODE.ENTER) {
                if (this.props.canExpand) {
                    this.handleExpand(true);
                }
            } else if (e.keyCode === util_1.KEYCODE.LEFT || e.keyCode === util_1.KEYCODE.ESC) {
                this.props.onFold();
            } else if (e.keyCode === util_1.KEYCODE.SPACE) {
                this.handleExpand(false);
            }
        }
    };
    CascaderMenuItem.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            menu = _b.menu,
            disabled = _b.disabled,
            selected = _b.selected,
            onSelect = _b.onSelect,
            expanded = _b.expanded,
            canExpand = _b.canExpand,
            expandTriggerType = _b.expandTriggerType,
            checkable = _b.checkable,
            checked = _b.checked,
            indeterminate = _b.indeterminate,
            checkboxDisabled = _b.checkboxDisabled,
            onCheck = _b.onCheck,
            children = _b.children;
        var others = pickOthers(CascaderMenuItem.propTypes, this.props);
        var loading = this.state.loading;
        var itemProps = tslib_1.__assign({ className: (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "cascader-menu-item")] = true, _a["".concat(prefix, "expanded")] = expanded, _a[className] = !!className, _a)), disabled: disabled, menu: menu, onKeyDown: this.handleKeyDown, role: 'option' }, others);
        if (!disabled) {
            if (expandTriggerType === 'hover') {
                itemProps.onMouseEnter = this.handleMouseEnter;
            } else {
                itemProps.onClick = this.handleClick;
            }
        }
        var Item, title;
        if (checkable) {
            Item = menu_1.default.CheckboxItem;
            itemProps.checked = checked;
            itemProps.indeterminate = indeterminate;
            itemProps.checkboxDisabled = checkboxDisabled;
            itemProps.onChange = onCheck;
        } else {
            Item = menu_1.default.Item;
            itemProps.selected = selected;
            itemProps.onSelect = onSelect;
        }
        if (typeof children === 'string') {
            title = children;
        }
        return react_1.default.createElement(Item, tslib_1.__assign({ title: title }, itemProps), children, canExpand ? loading ? react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "cascader-menu-icon-right ").concat(prefix, "cascader-menu-icon-loading"), type: "loading" }) : react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "cascader-menu-icon-right ").concat(prefix, "cascader-menu-icon-expand"), type: "arrow-right" }) : null);
    };
    CascaderMenuItem.menuChildType = 'item';
    CascaderMenuItem.propTypes = {
        prefix: prop_types_1.default.string,
        className: prop_types_1.default.string,
        disabled: prop_types_1.default.bool,
        selected: prop_types_1.default.bool,
        onSelect: prop_types_1.default.func,
        expanded: prop_types_1.default.bool,
        canExpand: prop_types_1.default.bool,
        menu: prop_types_1.default.any,
        expandTriggerType: prop_types_1.default.oneOf(['click', 'hover']),
        onExpand: prop_types_1.default.func,
        onFold: prop_types_1.default.func,
        checkable: prop_types_1.default.bool,
        checked: prop_types_1.default.bool,
        indeterminate: prop_types_1.default.bool,
        checkboxDisabled: prop_types_1.default.bool,
        onCheck: prop_types_1.default.func,
        children: prop_types_1.default.node
    };
    return CascaderMenuItem;
}(react_1.Component);
exports.default = CascaderMenuItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllCheckedValues = exports.isSiblingOrSelf = exports.isDescendantOrSelf = exports.filterParentValue = exports.filterChildValue = exports.getCheckableParentNode = exports.isNodeDisabledChecked = exports.forEachEnableNode = exports.isNodeChecked = exports.normalizeToArray = void 0;
var tslib_1 = __webpack_require__(9);
/**
 * 将 values 正规化为数组形式
 * @param values - 要被正规化的值
 * @returns 正规化为数组形式的值
 */
function normalizeToArray(values) {
    if (values !== undefined && values !== null) {
        if (Array.isArray(values)) {
            return tslib_1.__spreadArray([], tslib_1.__read(values), false);
        }
        return [values];
    }
    return [];
}
exports.normalizeToArray = normalizeToArray;
/**
 * 判断子节点是否是选中状态，如果 checkable=false 则向下递归，
 * @param child - 子节点
 * @param checkedValues - 选中的值
 */
function isNodeChecked(node, checkedValues) {
    if (node.disabled || node.checkboxDisabled) return true;
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(function (c) {
            return isNodeChecked(c, checkedValues);
        });
    }
    return checkedValues.indexOf(node.value) > -1;
}
exports.isNodeChecked = isNodeChecked;
/**
 * 遍历所有可用的子节点
 * @param node - 子节点
 * @param callback - 遍历的回调
 */
function forEachEnableNode(node, callback) {
    if (callback === void 0) {
        callback = function callback() {};
    }
    if (node.disabled || node.checkboxDisabled) return;
    callback(node);
    if (node.children && node.children.length > 0) {
        node.children.forEach(function (child) {
            return forEachEnableNode(child, callback);
        });
    }
}
exports.forEachEnableNode = forEachEnableNode;
/**
 * 判断节点是否禁用 checked
 * @param node - 节点
 */
function isNodeDisabledChecked(node) {
    if (node.disabled || node.checkboxDisabled) return true;
    if (node.checkable === false) {
        return !node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked);
    }
    return false;
}
exports.isNodeDisabledChecked = isNodeDisabledChecked;
/**
 * 递归获取一个 checkable=true 的父节点，当 checkable=false 时继续往上查找
 * @param node - 子节点
 * @param _p2n - 位置信息
 * @returns checkable=true 的父节点
 */
function getCheckableParentNode(node, _p2n) {
    var parentPos = node.pos.split('-');
    if (parentPos.length === 2) return node;
    parentPos.splice(parentPos.length - 1, 1);
    parentPos = parentPos.join('-');
    var parentNode = _p2n[parentPos];
    if (parentNode.disabled || parentNode.checkboxDisabled) return false;
    if (parentNode.checkable === false) {
        return getCheckableParentNode(parentNode, _p2n);
    }
    return parentNode;
}
exports.getCheckableParentNode = getCheckableParentNode;
/**
 * 过滤子节点的值
 * @param values - 子节点的值
 * @param _v2n - 节点信息
 * @param _p2n - 位置信息
 */
function filterChildValue(values, _v2n, _p2n) {
    var newValues = [];
    values.forEach(function (value) {
        var node = getCheckableParentNode(_v2n[value], _p2n);
        if (!node || node.checkable === false || node === _v2n[value] || values.indexOf(node.value) === -1) {
            newValues.push(value);
        }
    });
    return newValues;
}
exports.filterChildValue = filterChildValue;
function filterParentValue(values, _v2n) {
    var newValues = [];
    for (var i = 0; i < values.length; i++) {
        var node = _v2n[values[i]];
        if (!node.children || node.children.length === 0 || node.children.every(isNodeDisabledChecked)) {
            newValues.push(values[i]);
        }
    }
    return newValues;
}
exports.filterParentValue = filterParentValue;
/**
 * 判断当前节点是否是目标节点的子孙节点
 * @param currentPos - 当前节点的位置
 * @param targetPos - 目标节点的位置
 */
function isDescendantOrSelf(currentPos, targetPos) {
    if (!currentPos || !targetPos) {
        return false;
    }
    var currentNums = currentPos.split('-');
    var targetNums = targetPos.split('-');
    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}
exports.isDescendantOrSelf = isDescendantOrSelf;
/**
 * 判断当前节点是否是目标节点的兄弟节点
 * @param currentPos - 当前节点的位置
 * @param targetPos - 目标节点的位置
 */
function isSiblingOrSelf(currentPos, targetPos) {
    var currentNums = currentPos.split('-').slice(0, -1);
    var targetNums = targetPos.split('-').slice(0, -1);
    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
        return num === targetNums[index];
    });
}
exports.isSiblingOrSelf = isSiblingOrSelf;
/**
 * 获取所有选中的值
 * @param checkedValues - 候选值
 * @param _v2n - 节点信息
 * @param _p2n - 位置信息
 * @returns 所有选中的值
 */
function getAllCheckedValues(checkedValues, _v2n, _p2n) {
    checkedValues = normalizeToArray(checkedValues);
    var filteredValues = checkedValues.filter(function (value) {
        return !!_v2n[value];
    });
    var flatValues = tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(filterChildValue(filteredValues, _v2n, _p2n)), false), tslib_1.__read(filteredValues.filter(function (value) {
        return _v2n[value].disabled || _v2n[value].checkboxDisabled;
    })), false);
    var removeValue = function removeValue(child) {
        if (child.disabled || child.checkboxDisabled) return;
        if (child.checkable === false && child.children && child.children.length > 0) {
            return child.children.forEach(removeValue);
        }
        flatValues.splice(flatValues.indexOf(child.value), 1);
    };
    var addParentValue = function addParentValue(i, parent) {
        return flatValues.splice(i, 0, parent.value);
    };
    var values = tslib_1.__spreadArray([], tslib_1.__read(flatValues), false);
    for (var i = 0; i < values.length; i++) {
        var pos = _v2n[values[i]].pos;
        var nums = pos.split('-');
        if (nums.length === 2) {
            break;
        }
        for (var j = nums.length - 2; j > 0; j--) {
            var parentPos = nums.slice(0, j + 1).join('-');
            var parent_1 = _p2n[parentPos];
            if (parent_1.checkable === false || parent_1.disabled || parent_1.checkboxDisabled) continue;
            var parentChecked = parent_1.children.every(function (child) {
                return isNodeChecked(child, flatValues);
            });
            if (parentChecked) {
                parent_1.children.forEach(removeValue);
                addParentValue(i, parent_1);
            } else {
                break;
            }
        }
    }
    var newValues = [];
    flatValues.forEach(function (value) {
        if (_v2n[value].disabled || _v2n[value].checkboxDisabled) {
            newValues.push(value);
            return;
        }
        forEachEnableNode(_v2n[value], function (node) {
            if (node.checkable === false) return;
            newValues.push(node.value);
        });
    });
    return newValues;
}
exports.getAllCheckedValues = getAllCheckedValues;

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _cascaderSelect = __webpack_require__(326);

var _cascaderSelect2 = _interopRequireDefault(_cascaderSelect);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_cascaderSelect2.default, {
    exportNames: ['focus'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'hasBorder', 'CascaderSelect');
            var _props = props,
                shape = _props.shape,
                others = (0, _objectWithoutProperties3.default)(_props, ['shape']);

            props = (0, _extends3.default)({ hasBorder: shape !== 'arrow-only' }, others);
        }

        if ('container' in props) {
            deprecated('container', 'popupContainer', 'CascaderSelect');

            var _props2 = props,
                container = _props2.container,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['container']);

            props = (0, _extends3.default)({ popupContainer: container }, _others);
        }

        if ('expandTrigger' in props) {
            deprecated('expandTrigger', 'expandTriggerType', 'CascaderSelect');

            var _props3 = props,
                expandTrigger = _props3.expandTrigger,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['expandTrigger']);

            props = (0, _extends3.default)({ expandTriggerType: expandTrigger }, _others2);
        }

        if ('showItemCount' in props) {
            deprecated('showItemCount', 'listStyle | listClassName', 'CascaderSelect');
        }
        if ('labelWidth' in props) {
            deprecated('labelWidth', 'listStyle | listClassName', 'CascaderSelect');
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _select = __webpack_require__(30);

var _select2 = _interopRequireDefault(_select);

var _cascader = __webpack_require__(162);

var _cascader2 = _interopRequireDefault(_cascader);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;
var getStyle = _util.dom.getStyle;

var normalizeValue = function normalizeValue(value) {
    if (value) {
        if (Array.isArray(value)) {
            return value;
        }

        return [value];
    }

    return [];
};

/**
 * CascaderSelect
 */
var CascaderSelect = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(CascaderSelect, _Component);

    function CascaderSelect(props) {
        (0, _classCallCheck3.default)(this, CascaderSelect);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.refreshValueDataCache = function (curValue) {
            if (curValue) {
                var valueArr = Array.isArray(curValue) ? curValue : [curValue];

                valueArr.length && Object.keys(_this._valueDataCache).forEach(function (v) {
                    if (!valueArr.includes(v)) {
                        delete _this._valueDataCache[v];
                    }
                });
            } else {
                _this._valueDataCache = {};
            }
        };

        _this.state = {
            value: normalizeValue('value' in props ? props.value : props.defaultValue),
            searchValue: '',
            visible: typeof props.visible === 'undefined' ? props.defaultVisible : props.visible
        };

        // 缓存选中值数据
        _this._valueDataCache = {};

        bindCtx(_this, ['handleVisibleChange', 'handleAfterOpen', 'handleSelect', 'handleChange', 'handleClear', 'handleRemove', 'handleSearch', 'getPopup', 'saveSelectRef', 'saveCascaderRef', 'handleKeyDown']);
        return _this;
    }

    CascaderSelect.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};

        if ('value' in props) {
            st.value = normalizeValue(props.value);
        }
        if ('visible' in props) {
            st.visible = props.visible;
        }

        return st;
    };

    /**
     * 使组件获得焦点
     * @public
     */

    CascaderSelect.prototype.focus = function focus() {
        this.select && this.select.focusInput();
    };

    CascaderSelect.prototype.updateCache = function updateCache(dataSource) {
        var _this2 = this;

        this._v2n = {};
        this._p2n = {};
        var loop = function loop(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return data.forEach(function (item, index) {
                var value = item.value,
                    children = item.children;

                var pos = prefix + '-' + index;
                _this2._v2n[value] = _this2._p2n[pos] = (0, _extends3.default)({}, item, { pos: pos });

                if (children && children.length) {
                    loop(children, pos);
                }
            });
        };

        loop(dataSource);
    };

    CascaderSelect.prototype.flatValue = function flatValue(value) {
        var _this3 = this;

        var getDepth = function getDepth(v) {
            var pos = _this3.getPos(v);
            if (!pos) {
                return 0;
            }
            return pos.split('-').length;
        };
        var newValue = value.slice(0).sort(function (prev, next) {
            return getDepth(prev) - getDepth(next);
        });

        for (var i = 0; i < newValue.length; i++) {
            for (var j = 0; j < newValue.length; j++) {
                if (i !== j && this.isDescendantOrSelf(this.getPos(newValue[i]), this.getPos(newValue[j]))) {
                    newValue.splice(j, 1);
                    j--;
                }
            }
        }

        return newValue;
    };

    CascaderSelect.prototype.isDescendantOrSelf = function isDescendantOrSelf(currentPos, targetPos) {
        if (!currentPos || !targetPos) {
            return false;
        }

        var currentNums = currentPos.split('-');
        var targetNums = targetPos.split('-');

        return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {
            return num === targetNums[index];
        });
    };

    CascaderSelect.prototype.getValue = function getValue(pos) {
        return this._p2n[pos] ? this._p2n[pos].value : null;
    };

    CascaderSelect.prototype.getPos = function getPos(value) {
        return this._v2n[value] ? this._v2n[value].pos : null;
    };

    CascaderSelect.prototype.getData = function getData(value) {
        var _this4 = this;

        return value.map(function (v) {
            return _this4._v2n[v] || _this4._valueDataCache[v];
        });
    };

    CascaderSelect.prototype.getLabelPath = function getLabelPath(data) {
        var _this5 = this;

        var nums = data.pos.split('-');
        return nums.slice(1).reduce(function (ret, num, index) {
            var p = nums.slice(0, index + 2).join('-');
            ret.push(_this5._p2n[p].label);
            return ret;
        }, []);
    };

    CascaderSelect.prototype.getSingleData = function getSingleData(value) {
        if (!value.length) {
            return null;
        }

        if (Array.isArray(value)) value = value[0];

        var data = this._v2n[value];

        if (data) {
            var labelPath = this.getLabelPath(data);
            var displayRender = this.props.displayRender || function (labels) {
                return labels.join(' / ');
            };

            data = (0, _extends3.default)({}, data, {
                label: displayRender(labelPath, data)
            });

            this._valueDataCache[value] = data;
            this.refreshValueDataCache(value);
        } else {
            data = this._valueDataCache[value];
        }

        return data || {
            value: value
        };
    };

    CascaderSelect.prototype.getMultipleData = function getMultipleData(value) {
        var _this6 = this;

        if (!value.length) {
            return null;
        }

        var _props = this.props,
            checkStrictly = _props.checkStrictly,
            canOnlyCheckLeaf = _props.canOnlyCheckLeaf,
            displayRender = _props.displayRender;

        var flatValue = checkStrictly || canOnlyCheckLeaf ? value : this.flatValue(value);
        var data = flatValue.map(function (v) {
            var item = _this6._v2n[v];

            if (item) {
                _this6._valueDataCache[v] = item;
            } else {
                item = _this6._valueDataCache[v];
            }

            return item || { value: v };
        });

        if (displayRender) {
            data = data.map(function (item) {
                if (!item.pos || !(item.value in _this6._v2n)) {
                    return item;
                }

                var labelPath = _this6.getLabelPath(item);
                var newItem = (0, _extends3.default)({}, item, {
                    label: displayRender(labelPath, item)
                });

                _this6._valueDataCache[item.value] = newItem;

                return newItem;
            });
        }

        return data;
    };

    CascaderSelect.prototype.getIndeterminate = function getIndeterminate(value) {
        var _this7 = this;

        var indeterminate = [];

        var positions = value.map(this.getPos.bind(this));
        positions.forEach(function (pos) {
            if (!pos) {
                return false;
            }
            var nums = pos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parentValue = _this7.getValue(parentPos);
                if (indeterminate.indexOf(parentValue) === -1) {
                    indeterminate.push(parentValue);
                }
            }
        });

        return indeterminate;
    };

    CascaderSelect.prototype.saveSelectRef = function saveSelectRef(ref) {
        this.select = ref;
    };

    CascaderSelect.prototype.saveCascaderRef = function saveCascaderRef(ref) {
        this.cascader = ref;
    };

    CascaderSelect.prototype.completeValue = function completeValue(value) {
        var newValue = [];

        var flatValue = this.flatValue(value).reverse();
        var ps = Object.keys(this._p2n);
        for (var i = 0; i < ps.length; i++) {
            for (var j = 0; j < flatValue.length; j++) {
                var v = flatValue[j];
                if (this.isDescendantOrSelf(this.getPos(v), ps[i])) {
                    newValue.push(this.getValue(ps[i]));
                    ps.splice(i, 1);
                    i--;
                    break;
                }
            }
        }

        return newValue;
    };

    CascaderSelect.prototype.isLeaf = function isLeaf(data) {
        return !(data.children && data.children.length || !!this.props.loadData && !data.isLeaf);
    };

    CascaderSelect.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        var _this8 = this;

        var searchValue = this.state.searchValue;

        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        if (!visible && searchValue) {
            this.setState({
                searchValue: ''
            });
        }

        if (['fromCascader', 'keyboard'].indexOf(type) !== -1 && !visible) {
            // 这里需要延迟下，showSearch 的情况下通过手动设置 menuProps={{focusable: true}} 回车 focus 会有延迟
            setTimeout(function () {
                return _this8.select.focusInput();
            }, 0);
        }

        this.props.onVisibleChange(visible, type);
    };

    CascaderSelect.prototype.handleKeyDown = function handleKeyDown(e) {
        var onKeyDown = this.props.onKeyDown;
        var visible = this.state.visible;

        if (onKeyDown) {
            onKeyDown(e);
        }

        if (!visible) {
            switch (e.keyCode) {
                case _util.KEYCODE.UP:
                case _util.KEYCODE.DOWN:
                    {
                        e.preventDefault();
                        this.handleVisibleChange(true, 'keyboard');
                        break;
                    }
                // no default
            }
            return;
        }

        switch (e.keyCode) {
            case _util.KEYCODE.UP:
            case _util.KEYCODE.DOWN:
                this.cascader.setFocusValue();
                e.preventDefault();
                break;
            default:
                break;
        }
    };

    CascaderSelect.prototype.getPopup = function getPopup(ref) {
        this.popup = ref;
        if (typeof this.props.popupProps.ref === 'function') {
            this.props.popupProps.ref(ref);
        }
    };

    CascaderSelect.prototype.handleAfterOpen = function handleAfterOpen() {
        if (!this.popup) {
            return;
        }

        var _props2 = this.props,
            prefix = _props2.prefix,
            popupProps = _props2.popupProps;
        var _popupProps$v = popupProps.v2,
            v2 = _popupProps$v === undefined ? false : _popupProps$v;

        if (!v2) {
            var dropDownNode = this.popup.getInstance().overlay.getInstance().getContentNode();
            var cascaderNode = dropDownNode.querySelector('.' + prefix + 'cascader');
            if (cascaderNode) {
                this.cascaderHeight = getStyle(cascaderNode, 'height');
            }
        }

        if (typeof popupProps.afterOpen === 'function') {
            popupProps.afterOpen();
        }
    };

    CascaderSelect.prototype.handleSelect = function handleSelect(value, data) {
        var _props3 = this.props,
            multiple = _props3.multiple,
            changeOnSelect = _props3.changeOnSelect;
        var _state = this.state,
            visible = _state.visible,
            searchValue = _state.searchValue;

        if (!multiple && (!changeOnSelect || this.isLeaf(data) || !!searchValue)) {
            this.handleVisibleChange(!visible, 'fromCascader');
        }
    };

    /**
     * 刷新值数据缓存，删除无效值
     * @param {Arrary | String} curValue 当前值
     */

    CascaderSelect.prototype.handleChange = function handleChange(value, data, extra) {
        var _this9 = this;

        var _props4 = this.props,
            multiple = _props4.multiple,
            onChange = _props4.onChange;
        var _state2 = this.state,
            searchValue = _state2.searchValue,
            stateValue = _state2.value;

        var st = {};

        if (multiple && stateValue && Array.isArray(stateValue)) {
            var noExistedValues = stateValue.filter(function (v) {
                return !_this9._v2n[v];
            });

            if (noExistedValues.length > 0) {
                value = value.filter(function (v) {
                    return !(noExistedValues.indexOf(v) >= 0);
                });
            }

            value = [].concat(noExistedValues, value);
            // onChange 中的 data 参数也应该保留不存在的 value 的数据
            // 在 dataSource 异步加载的情况下，会出现value重复的现象，需要去重
            data = [].concat(noExistedValues.map(function (v) {
                return _this9._valueDataCache[v];
            }).filter(function (v) {
                return v;
            }), data).filter(function (current, index, arr) {
                return index === arr.indexOf(current);
            });
            // 更新缓存
            this.refreshValueDataCache(value);
        }

        if (!('value' in this.props)) {
            st.value = value;
        }
        if (!multiple && searchValue) {
            st.searchValue = '';
        }
        if (Object.keys(st).length) {
            this.setState(st);
        }

        if (onChange) {
            onChange(value, data, extra);
        }

        if (searchValue && this.select) {
            this.select.handleSearchClear();
        }
    };

    CascaderSelect.prototype.handleClear = function handleClear() {
        // 单选时点击清空按钮
        var _props5 = this.props,
            hasClear = _props5.hasClear,
            multiple = _props5.multiple,
            treeCheckable = _props5.treeCheckable;

        if (hasClear && (!multiple || !treeCheckable)) {
            if (!('value' in this.props)) {
                this.setState({
                    value: []
                });
            }

            this.props.onChange(null, null);
        }
    };

    CascaderSelect.prototype.handleRemove = function handleRemove(currentData) {
        var currentValue = currentData.value;

        var value = void 0;

        var _props6 = this.props,
            multiple = _props6.multiple,
            checkStrictly = _props6.checkStrictly,
            onChange = _props6.onChange;

        if (multiple) {
            value = [].concat(this.state.value);
            value.splice(value.indexOf(currentValue), 1);

            if (this.props.onChange) {
                var data = this.getData(value);
                var checked = false;

                if (checkStrictly) {
                    this.props.onChange(value, data, {
                        checked: checked,
                        currentData: currentData,
                        checkedData: data
                    });
                } else {
                    var checkedValue = this.completeValue(value);
                    var checkedData = this.getData(checkedValue);
                    var indeterminateValue = this.getIndeterminate(value);
                    var indeterminateData = this.getData(indeterminateValue);
                    this.props.onChange(value, data, {
                        checked: checked,
                        currentData: currentData,
                        checkedData: checkedData,
                        indeterminateData: indeterminateData
                    });
                }
            }
        } else {
            value = [];
            onChange(null, null);
        }

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        this.refreshValueDataCache(value);
    };

    CascaderSelect.prototype.handleSearch = function handleSearch(searchValue) {
        this.setState({
            searchValue: searchValue
        });

        this.props.onSearch && this.props.onSearch(searchValue);
    };

    CascaderSelect.prototype.getPath = function getPath(pos) {
        var items = [];

        var nums = pos.split('-');
        if (nums === 2) {
            items.push(this._p2n[pos]);
        } else {
            for (var i = 1; i < nums.length; i++) {
                var p = nums.slice(0, i + 1).join('-');
                items.push(this._p2n[p]);
            }
        }

        return items;
    };

    CascaderSelect.prototype.filterItems = function filterItems() {
        var _this10 = this;

        var _props7 = this.props,
            multiple = _props7.multiple,
            changeOnSelect = _props7.changeOnSelect,
            canOnlyCheckLeaf = _props7.canOnlyCheckLeaf,
            filter = _props7.filter;
        var searchValue = this.state.searchValue;

        var items = Object.keys(this._p2n).map(function (p) {
            return _this10._p2n[p];
        });
        if (!multiple && !changeOnSelect || multiple && canOnlyCheckLeaf) {
            items = items.filter(function (item) {
                return !item.children || !item.children.length;
            });
        }

        return items.map(function (item) {
            return _this10.getPath(item.pos);
        }).filter(function (path) {
            return filter(searchValue, path);
        });
    };

    CascaderSelect.prototype.renderNotFound = function renderNotFound() {
        var _props8 = this.props,
            prefix = _props8.prefix,
            notFoundContent = _props8.notFoundContent,
            locale = _props8.locale;

        return _react2.default.createElement(_menu2.default, { className: prefix + 'cascader-select-not-found' }, _react2.default.createElement(_menu2.default.Item, null, notFoundContent || locale.notFoundContent));
    };

    CascaderSelect.prototype.renderCascader = function renderCascader() {
        var dataSource = this.props.dataSource;

        if (dataSource.length === 0) {
            return this.renderNotFound();
        }

        var searchValue = this.state.searchValue;

        var filteredPaths = [];

        if (searchValue) {
            filteredPaths = this.filterItems();
            if (filteredPaths.length === 0) {
                return this.renderNotFound();
            }
        }

        var _props9 = this.props,
            multiple = _props9.multiple,
            useVirtual = _props9.useVirtual,
            changeOnSelect = _props9.changeOnSelect,
            checkStrictly = _props9.checkStrictly,
            canOnlyCheckLeaf = _props9.canOnlyCheckLeaf,
            defaultExpandedValue = _props9.defaultExpandedValue,
            expandTriggerType = _props9.expandTriggerType,
            onExpand = _props9.onExpand,
            listStyle = _props9.listStyle,
            listClassName = _props9.listClassName,
            loadData = _props9.loadData,
            showSearch = _props9.showSearch,
            resultRender = _props9.resultRender,
            readOnly = _props9.readOnly,
            itemRender = _props9.itemRender,
            immutable = _props9.immutable,
            _props9$menuProps = _props9.menuProps,
            menuProps = _props9$menuProps === undefined ? {} : _props9$menuProps;
        var value = this.state.value;

        var props = {
            dataSource: dataSource,
            value: value,
            multiple: multiple,
            useVirtual: useVirtual,
            canOnlySelectLeaf: !changeOnSelect,
            checkStrictly: checkStrictly,
            canOnlyCheckLeaf: canOnlyCheckLeaf,
            defaultExpandedValue: defaultExpandedValue,
            expandTriggerType: expandTriggerType,
            ref: this.saveCascaderRef,
            onExpand: onExpand,
            listStyle: listStyle,
            listClassName: listClassName,
            loadData: loadData,
            itemRender: itemRender,
            immutable: immutable
        };

        if ('expandedValue' in this.props) {
            props.expandedValue = this.props.expandedValue;
        }

        if (!readOnly) {
            props.onChange = this.handleChange;
            props.onSelect = this.handleSelect;
        }
        if (showSearch) {
            props.searchValue = searchValue;
            props.filteredPaths = filteredPaths;
            props.resultRender = resultRender;
            props.filteredListStyle = { height: this.cascaderHeight };
        }

        return _react2.default.createElement(_cascader2.default, (0, _extends3.default)({}, props, menuProps));
    };

    CascaderSelect.prototype.renderPopupContent = function renderPopupContent() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            header = _props10.header,
            footer = _props10.footer;

        return _react2.default.createElement('div', { className: prefix + 'cascader-select-dropdown' }, header, this.renderCascader(), footer);
    };

    CascaderSelect.prototype.renderPreview = function renderPreview(others) {
        var _props11 = this.props,
            prefix = _props11.prefix,
            multiple = _props11.multiple,
            className = _props11.className,
            renderPreview = _props11.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames2.default)(className, prefix + 'form-preview');
        var items = (multiple ? this.getMultipleData(value) : this.getSingleData(value)) || [];

        if (!Array.isArray(items)) {
            items = [items];
        }

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(items, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), items.map(function (_ref) {
            var label = _ref.label;
            return label;
        }).join(', '));
    };

    CascaderSelect.prototype.render = function render() {
        var _props12 = this.props,
            prefix = _props12.prefix,
            size = _props12.size,
            hasArrow = _props12.hasArrow,
            hasBorder = _props12.hasBorder,
            hasClear = _props12.hasClear,
            label = _props12.label,
            readOnly = _props12.readOnly,
            placeholder = _props12.placeholder,
            dataSource = _props12.dataSource,
            disabled = _props12.disabled,
            multiple = _props12.multiple,
            className = _props12.className,
            showSearch = _props12.showSearch,
            popupStyle = _props12.popupStyle,
            popupClassName = _props12.popupClassName,
            popupContainer = _props12.popupContainer,
            popupProps = _props12.popupProps,
            followTrigger = _props12.followTrigger,
            isPreview = _props12.isPreview,
            resultAutoWidth = _props12.resultAutoWidth;
        var _state3 = this.state,
            value = _state3.value,
            searchValue = _state3.searchValue,
            visible = _state3.visible;

        var others = pickOthers(Object.keys(CascaderSelect.propTypes), this.props);
        // mode应与multiple api保持一致
        if (multiple && 'mode' in others && others.mode !== 'multiple') {
            delete others.mode;
        }

        this.updateCache(dataSource);

        if (isPreview) {
            return this.renderPreview(others);
        }

        var popupContent = this.renderPopupContent();

        var props = {
            prefix: prefix,
            className: className,
            size: size,
            placeholder: placeholder,
            disabled: disabled,
            hasArrow: hasArrow,
            hasBorder: hasBorder,
            hasClear: hasClear,
            label: label,
            readOnly: readOnly,
            ref: this.saveSelectRef,
            autoWidth: false,
            mode: multiple ? 'multiple' : 'single',
            value: multiple ? this.getMultipleData(value) : this.getSingleData(value),
            onChange: this.handleClear,
            onRemove: this.handleRemove,
            visible: visible,
            onVisibleChange: this.handleVisibleChange,
            showSearch: showSearch,
            onSearch: this.handleSearch,
            onKeyDown: this.handleKeyDown,
            popupContent: popupContent,
            popupStyle: popupStyle,
            popupClassName: popupClassName,
            popupContainer: popupContainer,
            popupProps: popupProps,
            followTrigger: followTrigger
        };

        if (!multiple) {
            // 单选模式 select 会强制cache=true，会导致菜单展开状态的初始化不执行
            // 若用户没有手动设置cache true，这里重置为false
            if (!popupProps || !popupProps.cache) {
                props.popupProps = (0, _extends3.default)({}, popupProps, {
                    cache: false
                });
            }
        }

        if (showSearch) {
            props.popupProps = (0, _extends3.default)({}, popupProps, {
                ref: this.getPopup,
                afterOpen: this.handleAfterOpen
            });
            props.autoWidth = resultAutoWidth && !!searchValue;
        }

        return _react2.default.createElement(_select2.default, (0, _extends3.default)({}, props, others));
    };

    return CascaderSelect;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    /**
     * 选择框大小
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 选择框占位符
     */
    placeholder: _propTypes2.default.string,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _propTypes2.default.bool,
    /**
     * 是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 是否有清除按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 自定义内联 label
     */
    label: _propTypes2.default.node,
    /**
     * 是否只读，只读模式下可以展开弹层但不能选
     */
    readOnly: _propTypes2.default.bool,
    /**
     * 数据源，结构可参考下方说明
     */
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.object),
    /**
     * （非受控）默认值
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),
    /**
     * （受控）当前值
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]),
    /**
     * 选中值改变时触发的回调函数
     * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组
     * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点
     * @param {Object} extra 额外参数
     * @param {Array} extra.selectedPath 单选时选中的数据的路径
     * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中
     * @param {Object} extra.currentData 多选时当前操作的数据
     * @param {Array} extra.checkedData 多选时所有被选中的数据
     * @param {Array} extra.indeterminateData 多选时半选的数据
     */
    onChange: _propTypes2.default.func,
    /**
     * 默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置
     */
    defaultExpandedValue: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * （受控）当前展开值
     */
    expandedValue: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * 展开触发的方式
     */
    expandTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    onExpand: _propTypes2.default.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _propTypes2.default.bool,
    /**
     * 是否多选
     */
    multiple: _propTypes2.default.bool,
    /**
     * 是否选中即发生改变, 该属性仅在单选模式下有效
     */
    changeOnSelect: _propTypes2.default.bool,
    /**
     * 是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效
     */
    canOnlyCheckLeaf: _propTypes2.default.bool,
    /**
     * 父子节点是否选中不关联
     */
    checkStrictly: _propTypes2.default.bool,
    /**
     * 每列列表样式对象
     */
    listStyle: _propTypes2.default.object,
    /**
     * 每列列表类名
     */
    listClassName: _propTypes2.default.string,
    /**
     * 选择框单选时展示结果的自定义渲染函数
     * @param {Array} label 选中路径的文本数组
     * @return {ReactNode} 渲染在选择框中的内容
     * @default 单选时：labelPath => labelPath.join(' / ')；多选时：labelPath => labelPath[labelPath.length - 1]
     */
    displayRender: _propTypes2.default.func,
    /**
     * 渲染 item 内容的方法
     * @param {Object} item 渲染节点的item
     * @return {ReactNode} item node
     */
    itemRender: _propTypes2.default.func,
    /**
     * 是否显示搜索框
     */
    showSearch: _propTypes2.default.bool,
    /**
     * 自定义搜索函数
     * @param {String} searchValue 搜索的关键字
     * @param {Array} path 节点路径
     * @return {Boolean} 是否匹配
     * @default 根据路径所有节点的文本值模糊匹配
     */
    filter: _propTypes2.default.func,
    /**
     * 当搜索框值变化时回调
     * @param {String} value 数据
     * @version 1.23
     */
    onSearch: _propTypes2.default.func,
    /**
     * 搜索结果自定义渲染函数
     * @param {String} searchValue 搜索的关键字
     * @param {Array} path 匹配到的节点路径
     * @return {ReactNode} 渲染的内容
     * @default 按照节点文本 a / b / c 的模式渲染
     */
    resultRender: _propTypes2.default.func,
    /**
     * 搜索结果列表是否和选择框等宽
     */
    resultAutoWidth: _propTypes2.default.bool,
    /**
     * 无数据时显示内容
     */
    notFoundContent: _propTypes2.default.node,
    /**
     * 国际化
     */
    locale: _propTypes2.default.object,
    /**
     * 异步加载数据函数
     * @param {Object} data 当前点击异步加载的数据
     */
    loadData: _propTypes2.default.func,
    /**
     * 自定义下拉框头部
     */
    header: _propTypes2.default.node,
    /**
     * 自定义下拉框底部
     */
    footer: _propTypes2.default.node,
    /**
     * 初始下拉框是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 当前下拉框是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 下拉框显示或关闭时触发事件的回调函数
     * @param {Boolean} visible 是否显示
     * @param {String} type 触发显示关闭的操作类型, fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 下拉框自定义样式对象
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 下拉框样式自定义类名
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 下拉框挂载的容器节点
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 透传到 Popup 的属性对象
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<data>} value 选择值 { label: , value:}
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    size: 'medium',
    disabled: false,
    hasArrow: true,
    hasBorder: true,
    hasClear: false,
    dataSource: [],
    defaultValue: null,
    expandTriggerType: 'click',
    onExpand: function onExpand() {},
    useVirtual: false,
    multiple: false,
    changeOnSelect: false,
    canOnlyCheckLeaf: false,
    checkStrictly: false,
    showSearch: false,
    filter: function filter(searchValue, path) {
        return path.some(function (item) {
            return String(item.label).toLowerCase().indexOf(String(searchValue).toLowerCase()) > -1;
        });
    },
    resultRender: function resultRender(searchValue, path) {
        var parts = [];
        path.forEach(function (item, i) {
            var reExp = searchValue.replace(/[-.+*?^$()[\]{}|\\]/g, function (v) {
                return '\\' + v;
            });

            var re = new RegExp(reExp, 'gi');
            var others = item.label.split(re);
            var matches = item.label.match(re);

            others.forEach(function (other, j) {
                if (other) {
                    parts.push(other);
                }
                if (j < others.length - 1) {
                    parts.push(_react2.default.createElement('em', { key: i + '-' + j }, matches[j]));
                }
            });
            if (i < path.length - 1) {
                parts.push(' / ');
            }
        });
        return _react2.default.createElement('span', null, parts);
    },
    resultAutoWidth: true,
    defaultVisible: false,
    onVisibleChange: function onVisibleChange() {},
    popupProps: {},
    immutable: false,
    locale: _zhCn2.default.Select
}, _temp);
CascaderSelect.displayName = 'CascaderSelect';
exports.default = (0, _reactLifecyclesCompat.polyfill)(CascaderSelect);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var component_1 = __webpack_require__(22);
var collapse_1 = tslib_1.__importDefault(__webpack_require__(328));
var panel_1 = tslib_1.__importDefault(__webpack_require__(164));
var CollapseWithPanel = (0, component_1.assignSubComponent)(collapse_1.default, { Panel: panel_1.default });
exports.default = CollapseWithPanel;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var panel_1 = tslib_1.__importDefault(__webpack_require__(164));
/** Collapse */
var Collapse = /** @class */function (_super) {
    tslib_1.__extends(Collapse, _super);
    function Collapse(props) {
        var _this = _super.call(this, props) || this;
        var expandedKeys;
        if ('expandedKeys' in props) {
            expandedKeys = props.expandedKeys;
        } else {
            expandedKeys = props.defaultExpandedKeys;
        }
        _this.state = {
            expandedKeys: typeof expandedKeys === 'undefined' ? [] : expandedKeys
        };
        return _this;
    }
    Collapse.getDerivedStateFromProps = function (props) {
        if ('expandedKeys' in props) {
            return {
                expandedKeys: typeof props.expandedKeys === 'undefined' ? [] : props.expandedKeys
            };
        }
        return null;
    };
    Collapse.prototype.onItemClick = function (key) {
        var expandedKeys = this.state.expandedKeys;
        if (this.props.accordion) {
            expandedKeys = String(expandedKeys[0]) === String(key) ? [] : [key];
        } else {
            expandedKeys = tslib_1.__spreadArray([], tslib_1.__read(expandedKeys), false);
            var stringKey_1 = String(key);
            var index = expandedKeys.findIndex(function (k) {
                return String(k) === stringKey_1;
            });
            var isExpanded = index > -1;
            if (isExpanded) {
                expandedKeys.splice(index, 1);
            } else {
                expandedKeys.push(key);
            }
        }
        this.setExpandedKey(expandedKeys);
    };
    Collapse.prototype.genratePanelId = function (itemId, index) {
        var collapseId = this.props.id;
        var id;
        if (itemId) {
            // 优先用 item 自带的 id
            id = itemId;
        } else if (collapseId) {
            // 其次用 collapseId 和 index 生成 id
            id = "".concat(collapseId, "-panel-").concat(index);
        }
        return id;
    };
    Collapse.prototype.getProps = function (item, index, key) {
        var _this = this;
        var expandedKeys = this.state.expandedKeys;
        var title = item.title;
        var disabled = this.props.disabled;
        if (!disabled) {
            disabled = item.disabled;
        }
        var isExpanded = false;
        if (this.props.accordion) {
            isExpanded = String(expandedKeys[0]) === String(key);
        } else {
            isExpanded = expandedKeys.some(function (expandedKey) {
                if (expandedKey === null || expandedKey === undefined || key === null || key === undefined) {
                    return false;
                }
                if (expandedKey === key || expandedKey.toString() === key.toString()) {
                    return true;
                }
                return false;
            });
        }
        var id = this.genratePanelId(item.id, index);
        return {
            key: key,
            title: title,
            isExpanded: isExpanded,
            disabled: disabled,
            id: id,
            onClick: disabled ? null : function () {
                var _a;
                _this.onItemClick(key);
                if ('onClick' in item) {
                    (_a = item.onClick) === null || _a === void 0 ? void 0 : _a.call(item, key);
                }
            }
        };
    };
    Collapse.prototype.getItemsByDataSource = function () {
        var _this = this;
        var props = this.props;
        var dataSource = props.dataSource;
        // 是否有 dataSource.item 传入过 key
        var hasKeys = dataSource.some(function (item) {
            return 'key' in item;
        });
        return dataSource.map(function (item, index) {
            // 传入过 key 就用 item.key 没传入则统一使用 index 为 key
            var key = hasKeys ? item.key : "".concat(index);
            return (
                // @ts-expect-error FIXME 这里要确保 key 一定存在才能正常运行，hasKeys 的判断方式需要改进
                react_1.default.createElement(panel_1.default, tslib_1.__assign({}, _this.getProps(item, index, key), { key: key }), item.content)
            );
        });
    };
    Collapse.prototype.getItemsByChildren = function () {
        var _this = this;
        // 是否有 child 传入过 key
        var allKeys = react_1.default.Children.map(this.props.children, function (child) {
            return child && child.key;
        });
        var hasKeys = Boolean(allKeys && allKeys.length);
        return react_1.default.Children.map(this.props.children, function (child, index) {
            if (child && typeof child.type === 'function' && child.type.isNextPanel) {
                // 传入过 key 就用 child.key 没传入则统一使用 index 为 key
                var key = hasKeys ? child.key : "".concat(index);
                // @ts-expect-error FIXME 这里要确保 key 一定存在才能正常运行，hasKeys 的判断方式需要改进
                return react_1.default.cloneElement(child, _this.getProps(child.props, index, key));
            } else {
                return child;
            }
        });
    };
    Collapse.prototype.setExpandedKey = function (expandedKeys) {
        var _a, _b;
        if (!('expandedKeys' in this.props)) {
            this.setState({ expandedKeys: expandedKeys });
        }
        (_b = (_a = this.props).onExpand) === null || _b === void 0 ? void 0 : _b.call(_a, this.props.accordion ? expandedKeys[0] : expandedKeys);
    };
    Collapse.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            style = _b.style,
            disabled = _b.disabled,
            dataSource = _b.dataSource,
            id = _b.id,
            rtl = _b.rtl;
        var collapseClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "collapse")] = true, _a["".concat(prefix, "collapse-disabled")] = disabled, _a[className] = className, _a));
        var others = util_1.obj.pickOthers(Collapse.propTypes, this.props);
        return react_1.default.createElement("div", tslib_1.__assign({ id: id, className: collapseClassName, style: style }, others, { role: "presentation", dir: rtl ? 'rtl' : undefined }), dataSource ? this.getItemsByDataSource() : this.getItemsByChildren());
    };
    Collapse.propTypes = {
        prefix: prop_types_1.default.string,
        style: prop_types_1.default.object,
        dataSource: prop_types_1.default.array,
        defaultExpandedKeys: prop_types_1.default.array,
        expandedKeys: prop_types_1.default.array,
        onExpand: prop_types_1.default.func,
        disabled: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        accordion: prop_types_1.default.bool,
        children: prop_types_1.default.node,
        id: prop_types_1.default.string,
        rtl: prop_types_1.default.bool
    };
    Collapse.defaultProps = {
        accordion: false,
        prefix: 'next-',
        onExpand: util_1.func.noop
    };
    Collapse.contextTypes = {
        prefix: prop_types_1.default.string
    };
    return Collapse;
}(react_1.default.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(config_provider_1.default.config(Collapse));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _datePicker = __webpack_require__(330);

var _datePicker2 = _interopRequireDefault(_datePicker);

var _rangePicker = __webpack_require__(332);

var _rangePicker2 = _interopRequireDefault(_rangePicker);

var _monthPicker = __webpack_require__(333);

var _monthPicker2 = _interopRequireDefault(_monthPicker);

var _yearPicker = __webpack_require__(334);

var _yearPicker2 = _interopRequireDefault(_yearPicker);

var _weekPicker = __webpack_require__(335);

var _weekPicker2 = _interopRequireDefault(_weekPicker);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore next */
var transform = function transform(props, deprecated) {
    var open = props.open,
        defaultOpen = props.defaultOpen,
        onOpenChange = props.onOpenChange,
        others = (0, _objectWithoutProperties3.default)(props, ['open', 'defaultOpen', 'onOpenChange']);

    var newProps = others;

    delete newProps.formater;

    if ('open' in props) {
        deprecated('open', 'visible', 'DatePicker');

        newProps.visible = open;

        if ('visible' in props) {
            newProps.visible = props.visible;
        }
    }

    if ('defaultOpen' in props) {
        deprecated('defaultOpen', 'defaultVisible', 'DatePicker');

        newProps.defaultVisible = defaultOpen;

        if ('defaultVisible' in props) {
            newProps.defaultVisible = props.defaultVisible;
        }
    }

    if ('onOpenChange' in props && typeof onOpenChange === 'function') {
        deprecated('onOpenChange', 'onVisibleChange', 'DatePicker');

        newProps.onVisibleChange = onOpenChange;

        if ('onVisibleChange' in props) {
            newProps.onVisibleChange = props.onVisibleChange;
        }
    }

    if ('formater' in props) {
        deprecated('formater', 'format showTime.format', 'DatePicker');
    }

    if ('format' in props && typeof props.format !== 'string') {
        deprecated('format', 'format: PropTypes.string,', 'DatePicker');
    }

    if ('ranges' in props) {
        deprecated('ranges', 'footerRender: PropTypes.func', 'RangePicker');
    }

    return newProps;
};

_datePicker2.default.RangePicker = _configProvider2.default.config(_rangePicker2.default, {
    componentName: 'DatePicker',
    transform: transform
});
_datePicker2.default.MonthPicker = _configProvider2.default.config(_monthPicker2.default, {
    componentName: 'DatePicker',
    transform: transform
});
_datePicker2.default.YearPicker = _configProvider2.default.config(_yearPicker2.default, {
    componentName: 'DatePicker',
    transform: transform
});

_datePicker2.default.WeekPicker = _configProvider2.default.config(_weekPicker2.default, {
    componentName: 'DatePicker'
});

exports.default = _configProvider2.default.config(_datePicker2.default, {
    transform: transform
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames6 = __webpack_require__(7);

var _classnames7 = _interopRequireDefault(_classnames6);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _calendar = __webpack_require__(39);

var _calendar2 = _interopRequireDefault(_calendar);

var _panel = __webpack_require__(91);

var _panel2 = _interopRequireDefault(_panel);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

var _panelFooter = __webpack_require__(165);

var _panelFooter2 = _interopRequireDefault(_panelFooter);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

/**
 * DatePicker
 */

var DatePicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(DatePicker, _Component);

    function DatePicker(props, context) {
        (0, _classCallCheck3.default)(this, DatePicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var _getDateTimeFormat = (0, _util2.getDateTimeFormat)(props.format, props.showTime),
            format = _getDateTimeFormat.format,
            timeFormat = _getDateTimeFormat.timeFormat,
            dateTimeFormat = _getDateTimeFormat.dateTimeFormat;

        _this.state = {
            value: (0, _util2.formatDateValue)(props.defaultValue, dateTimeFormat),
            dateInputStr: '',
            timeInputStr: '',
            inputing: false, // 当前是否处于输入状态
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string',
            panel: _util2.PANEL.DATE,
            format: format,
            timeFormat: timeFormat,
            dateTimeFormat: dateTimeFormat
        };
        return _this;
    }

    DatePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var formatStates = (0, _util2.getDateTimeFormat)(props.format, props.showTime);
        var states = {};

        if ('value' in props) {
            states.value = (0, _util2.formatDateValue)(props.value, formatStates.dateTimeFormat);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return (0, _extends3.default)({}, states, formatStates);
    };

    DatePicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var _state = this.state,
            value = _state.value,
            dateTimeFormat = _state.dateTimeFormat;

        var previewCls = (0, _classnames7.default)(className, prefix + 'form-preview');

        var label = value ? value.format(dateTimeFormat) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    DatePicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3, _classnames4, _PANEL$DATE$PANEL$TIM;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            showTime = _props2.showTime,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            dateCellRender = _props2.dateCellRender,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            timeInputAriaLabel = _props2.timeInputAriaLabel,
            isPreview = _props2.isPreview,
            disableChangeMode = _props2.disableChangeMode,
            yearRange = _props2.yearRange,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'defaultVisibleMonth', 'onVisibleMonthChange', 'showTime', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'dateInputAriaLabel', 'timeInputAriaLabel', 'isPreview', 'disableChangeMode', 'yearRange']);
        var _state2 = this.state,
            visible = _state2.visible,
            value = _state2.value,
            dateInputStr = _state2.dateInputStr,
            timeInputStr = _state2.timeInputStr,
            panel = _state2.panel,
            inputing = _state2.inputing,
            format = _state2.format,
            timeFormat = _state2.timeFormat,
            dateTimeFormat = _state2.dateTimeFormat;

        var datePickerCls = (0, _classnames7.default)((_classnames = {}, _classnames[prefix + 'date-picker'] = true, _classnames), className);

        var triggerInputCls = (0, _classnames7.default)((_classnames2 = {}, _classnames2[prefix + 'date-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = (0, _classnames7.default)((_classnames3 = {}, _classnames3[prefix + 'date-picker-body'] = true, _classnames3[prefix + 'date-picker-body-show-time'] = showTime, _classnames3));

        var panelDateInputCls = (0, _classnames7.default)((_classnames4 = {}, _classnames4[prefix + 'date-picker-panel-input'] = true, _classnames4[prefix + 'focus'] = panel === _util2.PANEL.DATE, _classnames4));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, DatePicker.PropTypes));
        }

        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing === 'date' ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            'aria-label': dateInputAriaLabel,
            value: dateInputValue,
            onFocus: this.onFoucsDateInput,
            placeholder: format,
            className: panelDateInputCls
        }));

        var datePanel = _react2.default.createElement(_calendar2.default, {
            shape: 'panel',
            value: value,
            format: format,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            onSelect: this.onSelectCalendarPanel,
            defaultVisibleMonth: defaultVisibleMonth,
            onVisibleMonthChange: onVisibleMonthChange,
            disabledDate: disabledDate,
            disableChangeMode: disableChangeMode,
            yearRange: yearRange
        });

        var panelFooter = footerRender();

        var timeInput = null;
        var timePanel = null;

        if (showTime) {
            var _classnames5;

            var timeInputValue = inputing === 'time' ? timeInputStr : value && value.format(timeFormat) || '';
            triggerInputValue = value && value.format(dateTimeFormat) || '';

            var timePanelProps = (typeof showTime === 'undefined' ? 'undefined' : (0, _typeof3.default)(showTime)) === 'object' ? showTime : {};

            var showSecond = timeFormat.indexOf('s') > -1;
            var showMinute = timeFormat.indexOf('m') > -1;

            var panelTimeInputCls = (0, _classnames7.default)((_classnames5 = {}, _classnames5[prefix + 'date-picker-panel-input'] = true, _classnames5[prefix + 'focus'] = panel === _util2.PANEL.TIME, _classnames5));

            timeInput = _react2.default.createElement(_input2.default, {
                placeholder: timeFormat,
                value: timeInputValue,
                size: size,
                'aria-label': timeInputAriaLabel,
                disabled: disabled || !value,
                onChange: this.onTimeInputChange,
                onFocus: this.onFoucsTimeInput,
                onBlur: this.onTimeInputBlur,
                onPressEnter: this.onTimeInputBlur,
                onKeyDown: this.onTimeKeyDown,
                className: panelTimeInputCls
            });

            timePanel = _react2.default.createElement(_panel2.default, (0, _extends3.default)({}, timePanelProps, {
                locale: locale,
                className: prefix + 'date-picker-panel-time',
                showSecond: showSecond,
                showMinute: showMinute,
                disabled: disabled,
                prefix: prefix,
                value: value,
                onSelect: this.onSelectTimePanel
            }));

            panelFooter = panelFooter || _react2.default.createElement(_panelFooter2.default, {
                prefix: prefix,
                locale: locale,
                value: value,
                panel: panel,
                onPanelChange: this.changePanel,
                onOk: this.onOk
            });
        }

        var panelBody = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[_util2.PANEL.DATE] = datePanel, _PANEL$DATE$PANEL$TIM[_util2.PANEL.TIME] = timePanel, _PANEL$DATE$PANEL$TIM)[panel];

        var allowClear = value && hasClear;
        var trigger = _react2.default.createElement('div', { className: prefix + 'date-picker-trigger' }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            value: triggerInputValue,
            role: 'combobox',
            'aria-expanded': visible,
            readOnly: true,
            placeholder: placeholder || (showTime ? locale.datetimePlaceholder : locale.placeholder),
            hint: _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
            hasClear: allowClear,
            className: triggerInputCls
        })));
        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(DatePicker.propTypes, others), { className: datePickerCls }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            autoFocus: true,
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            disabled: disabled,
            visible: visible,
            onVisibleChange: this.onVisibleChange,
            triggerType: popupTriggerType,
            container: popupContainer,
            style: popupStyle,
            className: popupClassName,
            trigger: trigger
        }), popupContent ? popupContent : _react2.default.createElement('div', { dir: others.dir, className: panelBodyClassName }, _react2.default.createElement('div', { className: prefix + 'date-picker-panel-header' }, dateInput, timeInput), panelBody, panelFooter)));
    };

    return DatePicker;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 输入框内置标签
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 默认展现的月
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _propTypes2.default.func,
    onVisibleMonthChange: _propTypes2.default.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: _util2.checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: _util2.checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _propTypes2.default.string,
    /**
     * 是否使用时间控件，传入 TimePicker 的属性 { defaultValue, format, ... }
     */
    showTime: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),
    /**
     * 每次选择日期时是否重置时间（仅在 showTime 开启时有效）
     */
    resetTime: _propTypes2.default.bool,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _propTypes2.default.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _propTypes2.default.func,
    /**
     * 点击确认按钮时的回调
     * @param {MomentObject|String} value 日期值
     */
    onOk: _propTypes2.default.func,
    /**
     * 输入框尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 弹层显示状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式,具体含义见 OverLay文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层其他属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _propTypes2.default.object,
    /**
     * 自定义日期渲染函数
     * @param {Moment} calendarDate 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _propTypes2.default.func,
    /**
     * 自定义月份渲染函数
     * @param {Moment} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    /**
     * 自定义年份渲染函数
     * @param {Moment} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _propTypes2.default.string,
    /**
     * 时间输入框的 aria-label 属性
     */
    timeInputAriaLabel: _propTypes2.default.string,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 日期
     */
    renderPreview: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    /**
     * 自定义弹层组件
     */
    popupComponent: _propTypes2.default.elementType,
    /**
     * 自定义弹层内容
     */
    popupContent: _propTypes2.default.node,
    /**
     * 禁用日期选择器的日期模式切换
     */
    disableChangeMode: _propTypes2.default.bool,
    yearRange: _propTypes2.default.arrayOf(_propTypes2.default.number)
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY-MM-DD',
    size: 'medium',
    showTime: false,
    resetTime: false,
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: _zhCn2.default.DatePicker,
    defaultVisible: false,
    onChange: _util.func.noop,
    onVisibleChange: _util.func.noop,
    onOk: _util.func.noop
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onValueChange = function (newValue) {
        var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'onChange';

        var ret = _this2.state.inputAsString && newValue ? newValue.format(_this2.state.dateTimeFormat) : newValue;
        _this2.props[handler](ret);
    };

    this.onSelectCalendarPanel = function (value) {
        var _props3 = _this2.props,
            showTime = _props3.showTime,
            resetTime = _props3.resetTime;

        var prevValue = _this2.state.value;
        var newValue = value;
        if (showTime) {
            if (!prevValue) {
                // 第一次选择日期值时，如果设置了默认时间，则使用该默认时间
                if (showTime.defaultValue) {
                    var defaultTimeValue = (0, _util2.formatDateValue)(showTime.defaultValue, _this2.state.timeFormat);
                    newValue = (0, _util2.resetValueTime)(value, defaultTimeValue);
                }
            } else if (!resetTime) {
                // 非第一选择日期，如果开启了 resetTime 属性，则记住之前选择的时间值
                newValue = (0, _util2.resetValueTime)(value, prevValue);
            }
        }

        _this2.handleChange(newValue, prevValue, { inputing: false });

        if (!showTime) {
            _this2.onVisibleChange(false, 'calendarSelect');
        }
    };

    this.onSelectTimePanel = function (value) {
        _this2.handleChange(value, _this2.state.value, { inputing: false });
    };

    this.clearValue = function () {
        _this2.setState({
            dateInputStr: '',
            timeInputStr: ''
        });

        _this2.handleChange(null, _this2.state.value, { inputing: false });
    };

    this.onDateInputChange = function (inputStr, e, eventType) {
        if (eventType === 'clear' || !inputStr) {
            e.stopPropagation();
            _this2.clearValue();
        } else {
            _this2.setState({
                dateInputStr: inputStr,
                inputing: 'date'
            });
        }
    };

    this.onTimeInputChange = function (inputStr) {
        _this2.setState({
            timeInputStr: inputStr,
            inputing: 'time'
        });
    };

    this.onDateInputBlur = function () {
        var _state3 = _this2.state,
            dateInputStr = _state3.dateInputStr,
            value = _state3.value,
            format = _state3.format;
        var resetTime = _this2.props.resetTime;

        if (dateInputStr) {
            var disabledDate = _this2.props.disabledDate;

            var parsed = (0, _moment2.default)(dateInputStr, format, true);

            _this2.setState({
                dateInputStr: '',
                inputing: false
            });
            if (parsed.isValid() && !disabledDate(parsed, 'date')) {
                parsed = resetTime ? parsed : (0, _util2.resetValueTime)(parsed, value);
                _this2.handleChange(parsed, value);
            }
        }
    };

    this.onTimeInputBlur = function () {
        var _state4 = _this2.state,
            value = _state4.value,
            timeInputStr = _state4.timeInputStr,
            timeFormat = _state4.timeFormat;

        if (timeInputStr) {
            var parsed = (0, _moment2.default)(timeInputStr, timeFormat, true);

            _this2.setState({
                timeInputStr: '',
                inputing: false
            });

            if (parsed.isValid()) {
                var hour = parsed.hour();
                var minute = parsed.minute();
                var second = parsed.second();
                var newValue = value.clone().hour(hour).minute(minute).second(second);

                _this2.handleChange(newValue, _this2.state.value);
            }
        }
    };

    this.onKeyDown = function (e) {
        var format = _this2.props.format;
        var _state5 = _this2.state,
            dateInputStr = _state5.dateInputStr,
            value = _state5.value;

        var dateStr = (0, _util2.onDateKeydown)(e, { format: format, dateInputStr: dateInputStr, value: value }, 'day');
        if (!dateStr) return;
        _this2.onDateInputChange(dateStr);
    };

    this.onTimeKeyDown = function (e) {
        var showTime = _this2.props.showTime;
        var _state6 = _this2.state,
            timeInputStr = _state6.timeInputStr,
            timeFormat = _state6.timeFormat,
            value = _state6.value;

        var _ref = (typeof showTime === 'undefined' ? 'undefined' : (0, _typeof3.default)(showTime)) === 'object' ? showTime : {},
            disabledMinutes = _ref.disabledMinutes,
            disabledSeconds = _ref.disabledSeconds,
            _ref$hourStep = _ref.hourStep,
            hourStep = _ref$hourStep === undefined ? 1 : _ref$hourStep,
            _ref$minuteStep = _ref.minuteStep,
            minuteStep = _ref$minuteStep === undefined ? 1 : _ref$minuteStep,
            _ref$secondStep = _ref.secondStep,
            secondStep = _ref$secondStep === undefined ? 1 : _ref$secondStep;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = (0, _util2.onTimeKeydown)(e, {
            format: timeFormat,
            timeInputStr: timeInputStr,
            value: value,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            }
        }, unit);

        if (!timeStr) return;

        _this2.onTimeInputChange(timeStr);
    };

    this.handleChange = function (newValue, prevValue) {
        var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

        if (!('value' in _this2.props)) {
            _this2.setState((0, _extends3.default)({
                value: newValue
            }, others));
        } else {
            _this2.setState((0, _extends3.default)({}, others));
        }

        var newValueOf = newValue ? newValue.valueOf() : null;
        var preValueOf = prevValue ? prevValue.valueOf() : null;

        if (newValueOf !== preValueOf) {
            _this2.onValueChange(newValue);
        }
    };

    this.onFoucsDateInput = function () {
        if (_this2.state.panel !== _util2.PANEL.DATE) {
            _this2.setState({
                panel: _util2.PANEL.DATE
            });
        }
    };

    this.onFoucsTimeInput = function () {
        if (_this2.state.panel !== _util2.PANEL.TIME) {
            _this2.setState({
                panel: _util2.PANEL.TIME
            });
        }
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };

    this.changePanel = function (panel) {
        _this2.setState({
            panel: panel
        });
    };

    this.onOk = function (value) {
        _this2.onVisibleChange(false, 'okBtnClick');
        _this2.onValueChange(value || _this2.state.value, 'onOk');
    };
}, _temp);
DatePicker.displayName = 'DatePicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(DatePicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _utils = __webpack_require__(92);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function scrollTo(element, to, duration) {
    var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {
        return setTimeout(arguments.length <= 0 ? undefined : arguments[0], 10);
    };

    if (duration <= 0) {
        element.scrollTop = to;
        return;
    }

    var difference = to - element.scrollTop;
    var perTick = difference / duration * 10;

    requestAnimationFrame(function () {
        element.scrollTop = element.scrollTop + perTick;

        if (element.scrollTop === to) {
            return;
        }

        scrollTo(element, to, duration - 10);
    });
}

var noop = function noop() {};

var TimeMenu = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(TimeMenu, _React$Component);

    function TimeMenu() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TimeMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._menuRefHandler = function (ref) {
            _this.menu = ref;
        }, _this.createMenuItems = function (list) {
            var _this$props = _this.props,
                prefix = _this$props.prefix,
                mode = _this$props.mode,
                disabled = _this$props.disabled,
                disabledItems = _this$props.disabledItems,
                activeIndex = _this$props.activeIndex,
                onSelect = _this$props.onSelect,
                renderTimeMenuItems = _this$props.renderTimeMenuItems,
                timeValue = _this$props.value;

            list = renderTimeMenuItems(list, mode, timeValue) || list;

            return list.map(function (_ref) {
                var _classnames;

                var label = _ref.label,
                    value = _ref.value;

                var isDisabled = disabled || disabledItems(value);
                var itemCls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'time-picker-menu-item'] = true, _classnames[prefix + 'disabled'] = isDisabled, _classnames[prefix + 'selected'] = value === activeIndex, _classnames));
                var onClick = isDisabled ? noop : function () {
                    return onSelect(value, mode);
                };
                return _react2.default.createElement('li', {
                    role: 'option',
                    'aria-selected': String(value === activeIndex),
                    key: value,
                    title: value,
                    className: itemCls,
                    onClick: onClick
                }, label);
            });
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    TimeMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelected(0);
    };

    TimeMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.scrollToSelected(120);
        }
    };

    TimeMenu.prototype.scrollToSelected = function scrollToSelected() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _props = this.props,
            activeIndex = _props.activeIndex,
            step = _props.step;

        var targetIndex = Math.floor((activeIndex || 0) / step);
        var firstItem = this.menu.children[targetIndex];
        var offsetTo = firstItem.offsetTop;
        scrollTo(this.menu, offsetTo, duration);
    };

    TimeMenu.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            title = _props2.title,
            mode = _props2.mode,
            step = _props2.step;

        var total = mode === 'hour' ? 24 : 60;
        var list = [];
        for (var i = 0; i < total; i++) {
            if (i % step === 0) {
                list.push({
                    label: i,
                    value: i
                });
            }
        }

        var menuTitle = title ? _react2.default.createElement('div', { className: prefix + 'time-picker-menu-title' }, title) : null;

        return _react2.default.createElement('div', { className: prefix + 'time-picker-menu' }, menuTitle, _react2.default.createElement('ul', { role: 'listbox', className: prefix + 'time-picker-menu-' + mode, ref: this._menuRefHandler }, this.createMenuItems(list)));
    };

    return TimeMenu;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    title: _propTypes2.default.node,
    mode: _propTypes2.default.oneOf(['hour', 'minute', 'second']),
    step: _propTypes2.default.number,
    activeIndex: _propTypes2.default.number,
    value: _utils.checkMomentObj,
    disabledItems: _propTypes2.default.func,
    renderTimeMenuItems: _propTypes2.default.func,
    onSelect: _propTypes2.default.func,
    disabled: _propTypes2.default.bool
}, _class.defaultProps = {
    step: 1,
    disabledItems: function disabledItems() {
        return false;
    },
    renderTimeMenuItems: function renderTimeMenuItems(list) {
        return list;
    },
    onSelect: function onSelect() {},
    disabled: false
}, _temp2);
TimeMenu.displayName = 'TimeMenu';
exports.default = TimeMenu;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames8 = __webpack_require__(7);

var _classnames9 = _interopRequireDefault(_classnames8);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _calendar = __webpack_require__(39);

var _calendar2 = _interopRequireDefault(_calendar);

var _rangeCalendar = __webpack_require__(157);

var _rangeCalendar2 = _interopRequireDefault(_rangeCalendar);

var _panel = __webpack_require__(91);

var _panel2 = _interopRequireDefault(_panel);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

var _panelFooter = __webpack_require__(165);

var _panelFooter2 = _interopRequireDefault(_panelFooter);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

function mapInputStateName(name) {
    return {
        startValue: 'startDateInputStr',
        endValue: 'endDateInputStr',
        startTime: 'startTimeInputStr',
        endTime: 'endTimeInputStr'
    }[name];
}

function mapTimeToValue(name) {
    return {
        startTime: 'startValue',
        endTime: 'endValue'
    }[name];
}

function getFormatValues(values, format) {
    if (!Array.isArray(values)) {
        return [null, null];
    }
    return [(0, _util2.formatDateValue)(values[0], format), (0, _util2.formatDateValue)(values[1], format)];
}

/**
 * DatePicker.RangePicker
 */
var RangePicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(RangePicker, _Component);

    function RangePicker(props, context) {
        (0, _classCallCheck3.default)(this, RangePicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var _getDateTimeFormat = (0, _util2.getDateTimeFormat)(props.format, props.showTime, props.type),
            format = _getDateTimeFormat.format,
            timeFormat = _getDateTimeFormat.timeFormat,
            dateTimeFormat = _getDateTimeFormat.dateTimeFormat;

        var val = props.value || props.defaultValue;
        var values = getFormatValues(val, dateTimeFormat);

        _this.state = {
            visible: props.visible || props.defaultVisible,
            startValue: values[0],
            endValue: values[1],
            startDateInputStr: '',
            endDateInputStr: '',
            activeDateInput: 'startValue',
            startTimeInputStr: '',
            endTimeInputStr: '',
            inputing: false, // 当前是否处于输入状态
            panel: _util2.PANEL.DATE,
            format: format,
            timeFormat: timeFormat,
            dateTimeFormat: dateTimeFormat,
            inputAsString: val && (typeof val[0] === 'string' || typeof val[1] === 'string')
        };
        return _this;
    }

    RangePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var formatStates = (0, _util2.getDateTimeFormat)(props.format, props.showTime, props.type);
        var states = {};

        if ('value' in props) {
            var values = getFormatValues(props.value, formatStates.dateTimeFormat);
            states.startValue = values[0];
            states.endValue = values[1];
            states.inputAsString = props.value && (typeof props.value[0] === 'string' || typeof props.value[1] === 'string');
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return (0, _extends3.default)({}, states, formatStates);
    };

    // 如果用户没有给定时间禁用逻辑，则给默认到禁用逻辑


    RangePicker.prototype.renderPreview = function renderPreview(_ref, others) {
        var startValue = _ref[0],
            endValue = _ref[1];
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var dateTimeFormat = this.state.dateTimeFormat;

        var previewCls = (0, _classnames9.default)(className, prefix + 'form-preview');
        var startLabel = startValue ? startValue.format(dateTimeFormat) : '';
        var endLabel = endValue ? endValue.format(dateTimeFormat) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview([startValue, endValue], this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), startLabel, ' - ', endLabel);
    };

    RangePicker.prototype.render = function render() {
        var _classnames,
            _classnames2,
            _classnames3,
            _classnames4,
            _classnames5,
            _this2 = this,
            _PANEL$DATE$PANEL$TIM;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            type = _props2.type,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            showTime = _props2.showTime,
            _disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            label = _props2.label,
            _props2$ranges = _props2.ranges,
            ranges = _props2$ranges === undefined ? {} : _props2$ranges,
            inputState = _props2.state,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            locale = _props2.locale,
            inputProps = _props2.inputProps,
            dateCellRender = _props2.dateCellRender,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            startDateInputAriaLabel = _props2.startDateInputAriaLabel,
            startTimeInputAriaLabel = _props2.startTimeInputAriaLabel,
            endDateInputAriaLabel = _props2.endDateInputAriaLabel,
            endTimeInputAriaLabel = _props2.endTimeInputAriaLabel,
            isPreview = _props2.isPreview,
            disableChangeMode = _props2.disableChangeMode,
            yearRange = _props2.yearRange,
            placeholder = _props2.placeholder,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'type', 'defaultVisibleMonth', 'onVisibleMonthChange', 'showTime', 'disabledDate', 'footerRender', 'label', 'ranges', 'state', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'locale', 'inputProps', 'dateCellRender', 'monthCellRender', 'yearCellRender', 'startDateInputAriaLabel', 'startTimeInputAriaLabel', 'endDateInputAriaLabel', 'endTimeInputAriaLabel', 'isPreview', 'disableChangeMode', 'yearRange', 'placeholder']);

        var state = this.state;

        var classNames = (0, _classnames9.default)((_classnames = {}, _classnames[prefix + 'range-picker'] = true, _classnames['' + prefix + size] = size, _classnames[prefix + 'disabled'] = disabled, _classnames), className);

        var panelBodyClassName = (0, _classnames9.default)((_classnames2 = {}, _classnames2[prefix + 'range-picker-body'] = true, _classnames2[prefix + 'range-picker-body-show-time'] = showTime, _classnames2));

        var triggerCls = (0, _classnames9.default)((_classnames3 = {}, _classnames3[prefix + 'range-picker-trigger'] = true, _classnames3[prefix + 'error'] = inputState === 'error', _classnames3));

        var startDateInputCls = (0, _classnames9.default)((_classnames4 = {}, _classnames4[prefix + 'range-picker-panel-input-start-date'] = true, _classnames4[prefix + 'focus'] = state.activeDateInput === 'startValue', _classnames4));

        var endDateInputCls = (0, _classnames9.default)((_classnames5 = {}, _classnames5[prefix + 'range-picker-panel-input-end-date'] = true, _classnames5[prefix + 'focus'] = state.activeDateInput === 'endValue', _classnames5));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview([state.startValue, state.endValue], _util.obj.pickOthers(others, RangePicker.PropTypes));
        }

        var startDateInputValue = state.inputing === 'startValue' ? state.startDateInputStr : state.startValue && state.startValue.format(state.format) || '';
        var endDateInputValue = state.inputing === 'endValue' ? state.endDateInputStr : state.endValue && state.endValue.format(state.format) || '';

        var startTriggerValue = startDateInputValue;
        var endTriggerValue = endDateInputValue;

        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onDateInputKeyDown
        });

        var startDateInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            'aria-label': startDateInputAriaLabel,
            placeholder: state.format,
            value: startDateInputValue,
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('startValue');
            },
            className: startDateInputCls,
            ref: this.startDateInputRef,
            onClick: _util.func.makeChain(this.enableAutoSwitchDateInput, sharedInputProps.onClick)
        }));

        var endDateInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            'aria-label': endDateInputAriaLabel,
            placeholder: state.format,
            value: endDateInputValue,
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('endValue');
            },
            className: endDateInputCls,
            ref: this.endDateInputRef,
            onClick: _util.func.makeChain(this.enableAutoSwitchDateInput, sharedInputProps.onClick)
        }));

        var shareCalendarProps = {
            showOtherMonth: true,
            dateCellRender: dateCellRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            format: state.format,
            defaultVisibleMonth: defaultVisibleMonth,
            onVisibleMonthChange: onVisibleMonthChange
        };

        var datePanel = type === 'date' ? _react2.default.createElement(_rangeCalendar2.default, (0, _extends3.default)({}, shareCalendarProps, {
            yearRange: yearRange,
            disableChangeMode: disableChangeMode,
            disabledDate: _disabledDate,
            onSelect: this.onSelectCalendarPanel,
            startValue: state.startValue,
            endValue: state.endValue
        })) : _react2.default.createElement('div', { className: prefix + 'range-picker-panel-body' }, _react2.default.createElement(_calendar2.default, (0, _extends3.default)({
            shape: 'panel',
            modes: type === 'month' ? ['month', 'year'] : ['year']
        }, (0, _extends3.default)({}, shareCalendarProps), {
            disabledDate: function disabledDate(date) {
                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                }

                return state.endValue && date.isAfter(state.endValue, type) || _disabledDate && _disabledDate.apply(undefined, [date].concat(args));
            },
            onSelect: function onSelect(value) {
                var selectedValue = value.clone().date(1).hour(0).minute(0).second(0);
                if (type === 'year') {
                    selectedValue.month(0);
                }
                _this2.onSelectCalendarPanel(selectedValue, 'startValue');
            },
            value: state.startValue
        })), _react2.default.createElement(_calendar2.default, (0, _extends3.default)({
            shape: 'panel',
            modes: type === 'month' ? ['month', 'year'] : ['year']
        }, shareCalendarProps, {
            disabledDate: function disabledDate(date) {
                for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                    args[_key2 - 1] = arguments[_key2];
                }

                return state.startValue && date.isBefore(state.startValue, type) || _disabledDate && _disabledDate.apply(undefined, [date].concat(args));
            },
            onSelect: function onSelect(value) {
                var selectedValue = value.clone().hour(23).minute(59).second(59);
                if (type === 'year') {
                    selectedValue.month(11).date(31);
                } else {
                    selectedValue.date(selectedValue.daysInMonth());
                }
                _this2.onSelectCalendarPanel(selectedValue, 'endValue');
            },
            value: state.endValue
        })));

        var startTimeInput = null;
        var endTimeInput = null;
        var timePanel = null;
        var panelFooter = footerRender();

        if (showTime) {
            var _classnames6, _classnames7;

            var startTimeInputValue = state.inputing === 'startTime' ? state.startTimeInputStr : state.startValue && state.startValue.format(state.timeFormat) || '';
            var endTimeInputValue = state.inputing === 'endTime' ? state.endTimeInputStr : state.endValue && state.endValue.format(state.timeFormat) || '';

            startTriggerValue = state.startValue && state.startValue.format(state.dateTimeFormat) || '';
            endTriggerValue = state.endValue && state.endValue.format(state.dateTimeFormat) || '';

            var sharedTimeInputProps = {
                size: size,
                placeholder: state.timeFormat,
                onFocus: this.onFocusTimeInput,
                onBlur: this.onTimeInputBlur,
                onPressEnter: this.onTimeInputBlur,
                onChange: this.onTimeInputChange,
                onKeyDown: this.onTimeInputKeyDown
            };

            var startTimeInputCls = (0, _classnames9.default)((_classnames6 = {}, _classnames6[prefix + 'range-picker-panel-input-start-time'] = true, _classnames6[prefix + 'focus'] = state.activeDateInput === 'startTime', _classnames6));

            startTimeInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedTimeInputProps, {
                value: startTimeInputValue,
                'aria-label': startTimeInputAriaLabel,
                disabled: disabled || !state.startValue,
                onFocus: function onFocus() {
                    return _this2.onFocusTimeInput('startTime');
                },
                className: startTimeInputCls
            }));

            var endTimeInputCls = (0, _classnames9.default)((_classnames7 = {}, _classnames7[prefix + 'range-picker-panel-input-end-time'] = true, _classnames7[prefix + 'focus'] = state.activeDateInput === 'endTime', _classnames7));

            endTimeInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedTimeInputProps, {
                value: endTimeInputValue,
                'aria-label': endTimeInputAriaLabel,
                disabled: disabled || !state.endValue,
                onFocus: function onFocus() {
                    return _this2.onFocusTimeInput('endTime');
                },
                className: endTimeInputCls
            }));

            var showSecond = state.timeFormat.indexOf('s') > -1;
            var showMinute = state.timeFormat.indexOf('m') > -1;

            var sharedTimePickerProps = (0, _extends3.default)({}, showTime, {
                prefix: prefix,
                locale: locale,
                disabled: disabled,
                showSecond: showSecond,
                showMinute: showMinute
            });

            var disabledTime = this.getDisabledTime(state);

            timePanel = _react2.default.createElement('div', { className: prefix + 'range-picker-panel-time' }, _react2.default.createElement(_panel2.default, (0, _extends3.default)({}, sharedTimePickerProps, {
                disabled: disabled || !state.startValue,
                className: prefix + 'range-picker-panel-time-start',
                value: state.startValue,
                onSelect: this.onSelectStartTime
            })), _react2.default.createElement(_panel2.default, (0, _extends3.default)({}, sharedTimePickerProps, disabledTime, {
                disabled: disabled || !state.endValue,
                className: prefix + 'range-picker-panel-time-end',
                value: state.endValue,
                onSelect: this.onSelectEndTime
            })));
        }

        panelFooter = panelFooter || _react2.default.createElement(_panelFooter2.default, {
            prefix: prefix,
            value: state.startValue || state.endValue,
            ranges: Object.keys(ranges).map(function (key) {
                return {
                    label: key,
                    value: ranges[key],
                    onChange: function onChange(values) {
                        _this2.setState({
                            startValue: values[0],
                            endValue: values[1]
                        });
                        _this2.onValueChange(values);
                    }
                };
            }),
            disabledOk: !state.startValue || !state.endValue || state.startValue.valueOf() > state.endValue.valueOf(),
            locale: locale,
            panel: state.panel,
            onPanelChange: showTime ? this.changePanel : null,
            onOk: this.onOk
        });

        var panelBody = (_PANEL$DATE$PANEL$TIM = {}, _PANEL$DATE$PANEL$TIM[_util2.PANEL.DATE] = datePanel, _PANEL$DATE$PANEL$TIM[_util2.PANEL.TIME] = timePanel, _PANEL$DATE$PANEL$TIM)[state.panel];

        var allowClear = (state.startValue || state.endValue) && hasClear;

        var _ref2 = placeholder || [],
            startPlaceholder = _ref2[0],
            endPlaceholder = _ref2[1];

        if (typeof placeholder === 'string') {
            startPlaceholder = placeholder;
            endPlaceholder = placeholder;
        }

        var trigger = _react2.default.createElement('div', { className: triggerCls }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            readOnly: true,
            role: 'combobox',
            'aria-expanded': state.visible,
            label: label,
            placeholder: startPlaceholder || locale.startPlaceholder,
            value: startTriggerValue,
            hasBorder: false,
            className: prefix + 'range-picker-trigger-input',
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('startValue');
            }
        })), _react2.default.createElement('span', { className: prefix + 'range-picker-trigger-separator' }, '-'), _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            readOnly: true,
            role: 'combobox',
            'aria-expanded': state.visible,
            placeholder: endPlaceholder || locale.endPlaceholder,
            value: endTriggerValue,
            hasBorder: false,
            className: prefix + 'range-picker-trigger-input',
            onFocus: function onFocus() {
                return _this2.onFocusDateInput('endValue');
            },
            hasClear: allowClear,
            hint: _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' })
        })));

        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(RangePicker.propTypes, others), { className: classNames }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            disabled: disabled,
            visible: state.visible,
            onVisibleChange: this.onVisibleChange,
            beforeOpen: _util.func.makeChain(this.enableAutoSwitchDateInput, popupProps && popupProps.beforeOpen),
            afterOpen: _util.func.makeChain(this.afterOpen, popupProps && popupProps.afterOpen),
            triggerType: popupTriggerType,
            container: popupContainer,
            style: popupStyle,
            className: popupClassName,
            trigger: trigger
        }), popupContent ? popupContent : _react2.default.createElement('div', { dir: others.dir, className: panelBodyClassName }, _react2.default.createElement('div', { className: prefix + 'range-picker-panel-header' }, _react2.default.createElement('div', { className: prefix + 'range-picker-panel-input' }, startDateInput, startTimeInput, _react2.default.createElement('span', { className: prefix + 'range-picker-panel-input-separator' }, '-'), endDateInput, endTimeInput)), panelBody, panelFooter)));
    };

    return RangePicker;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 日期范围类型
     */
    type: _propTypes2.default.oneOf(['date', 'month', 'year']),
    /**
     * 默认展示的起始月份
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _propTypes2.default.func,
    onVisibleMonthChange: _propTypes2.default.func,
    /**
     * 日期范围值数组 [moment, moment]
     */
    value: _propTypes2.default.array,
    /**
     * 初始的日期范围值数组 [moment, moment]
     */
    defaultValue: _propTypes2.default.array,
    /**
     * 日期格式
     */
    format: _propTypes2.default.string,
    /**
     * 是否使用时间控件，支持传入 TimePicker 的属性
     */
    showTime: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),
    /**
     * 每次选择是否重置时间（仅在 showTime 开启时有效）
     */
    resetTime: _propTypes2.default.bool,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _propTypes2.default.func,
    /**
     * 日期范围值改变时的回调 [ MomentObject|String, MomentObject|String ]
     * @param {Array<MomentObject|String>} value 日期值
     */
    onChange: _propTypes2.default.func,
    /**
     * 点击确认按钮时的回调 返回开始时间和结束时间`[ MomentObject|String, MomentObject|String ]`
     * @return {Array} 日期范围
     */
    onOk: _propTypes2.default.func,
    /**
     * 输入框内置标签
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['error', 'loading', 'success']),
    /**
     * 输入框尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 弹层显示状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层其他属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _propTypes2.default.object,
    /**
     * 自定义日期单元格渲染
     */
    dateCellRender: _propTypes2.default.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    /**
     * 开始日期输入框的 aria-label 属性
     */
    startDateInputAriaLabel: _propTypes2.default.string,
    /**
     * 开始时间输入框的 aria-label 属性
     */
    startTimeInputAriaLabel: _propTypes2.default.string,
    /**
     * 结束日期输入框的 aria-label 属性
     */
    endDateInputAriaLabel: _propTypes2.default.string,
    /**
     * 结束时间输入框的 aria-label 属性
     */
    endTimeInputAriaLabel: _propTypes2.default.string,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<MomentObject, MomentObject>} value 日期区间
     */
    renderPreview: _propTypes2.default.func,
    disableChangeMode: _propTypes2.default.bool,
    yearRange: _propTypes2.default.arrayOf(_propTypes2.default.number),
    ranges: _propTypes2.default.object, // 兼容0.x版本
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    popupComponent: _propTypes2.default.elementType,
    popupContent: _propTypes2.default.node,
    placeholder: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string])
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    type: 'date',
    size: 'medium',
    showTime: false,
    resetTime: false,
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    defaultVisible: false,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: _zhCn2.default.DatePicker,
    disableChangeMode: false,
    onChange: _util.func.noop,
    onOk: _util.func.noop,
    onVisibleChange: _util.func.noop
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.startDateInputRef = (0, _react.createRef)();
    this.endDateInputRef = (0, _react.createRef)();
    this.autoSwitchDateInput = false;

    this.onValueChange = function (values) {
        var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'onChange';

        var ret = void 0;
        if (!values.length || !_this3.state.inputAsString) {
            ret = values;
        } else {
            ret = [values[0] ? values[0].format(_this3.state.dateTimeFormat) : null, values[1] ? values[1].format(_this3.state.dateTimeFormat) : null];
        }
        _this3.props[handler](ret);
    };

    this.onSelectCalendarPanel = function (value, active) {
        var _props3 = _this3.props,
            showTime = _props3.showTime,
            resetTime = _props3.resetTime;
        var _state = _this3.state,
            prevActiveDateInput = _state.activeDateInput,
            prevStartValue = _state.startValue,
            prevEndValue = _state.endValue,
            timeFormat = _state.timeFormat;

        var newState = {
            activeDateInput: active || prevActiveDateInput,
            inputing: false
        };

        var newValue = value;

        switch (active || prevActiveDateInput) {
            case 'startValue':
                {
                    if (!prevEndValue || _this3.autoSwitchDateInput) {
                        newState.activeDateInput = 'endValue';
                    }

                    if (showTime) {
                        if (!prevStartValue) {
                            // 第一次选择，如果设置了时间默认值，则使用该默认时间
                            if (showTime.defaultValue) {
                                var defaultTimeValue = (0, _util2.formatDateValue)(Array.isArray(showTime.defaultValue) ? showTime.defaultValue[0] : showTime.defaultValue, timeFormat);
                                newValue = (0, _util2.resetValueTime)(value, defaultTimeValue);
                            }
                        } else if (!resetTime) {
                            // 非第一次选择，如果开启了 resetTime ，则记住之前选择的时间值
                            newValue = (0, _util2.resetValueTime)(value, prevStartValue);
                        }
                    }

                    newState.startValue = newValue;

                    // 如果起始日期大于结束日期
                    if (prevEndValue && newValue.valueOf() > prevEndValue.valueOf()) {
                        // 将结束日期设置为起始日期 如果需要的话保留时间
                        newState.endValue = resetTime ? newValue : (0, _util2.resetValueTime)(value, prevEndValue);

                        // 如果结束日期不大于起始日期则将结束日期设置为等于开始日期
                        if (newState.endValue.valueOf() < newState.startValue.valueOf()) {
                            newState.endValue = (0, _moment2.default)(newState.startValue);
                        }
                        newState.activeDateInput = 'endValue';
                    }
                    break;
                }

            case 'endValue':
                if (!prevStartValue || _this3.autoSwitchDateInput) {
                    newState.activeDateInput = 'startValue';
                }

                if (showTime) {
                    if (!prevEndValue) {
                        // 第一次选择，如果设置了时间默认值，则使用该默认时间
                        if (showTime.defaultValue) {
                            var _defaultTimeValue = (0, _util2.formatDateValue)(Array.isArray(showTime.defaultValue) ? showTime.defaultValue[1] || showTime.defaultValue[0] : showTime.defaultValue, timeFormat);
                            newValue = (0, _util2.resetValueTime)(value, _defaultTimeValue);
                        }
                    } else if (!resetTime) {
                        // 非第一次选择，如果开启了 resetTime ，则记住之前选择的时间值
                        newValue = (0, _util2.resetValueTime)(value, prevEndValue);
                    }
                }

                newState.endValue = newValue;

                // 选择了一个比开始日期更小的结束日期，此时表示用户重新选择了
                if (prevStartValue && newValue.valueOf() <= prevStartValue.valueOf()) {
                    newState.startValue = resetTime ? value : (0, _util2.resetValueTime)(value, prevStartValue);
                    newState.endValue = resetTime ? value : (0, _util2.resetValueTime)(value, prevEndValue);

                    // 如果结束日期不大于起始日期则将结束日期设置为等于开始日期
                    if (newState.endValue.valueOf() < newState.startValue.valueOf()) {
                        newState.endValue = (0, _moment2.default)(newState.startValue);
                    }
                }
                break;
        }

        var newStartValue = 'startValue' in newState ? newState.startValue : prevStartValue;
        var newEndValue = 'endValue' in newState ? newState.endValue : prevEndValue;

        // 每当 input 发生了自动切换，则关闭自动切换
        if (newState.activeDateInput !== prevActiveDateInput) {
            _this3.autoSwitchDateInput = false;
        }

        // 受控状态选择不更新值
        if ('value' in _this3.props) {
            delete newState.startValue;
            delete newState.endValue;
        }

        _this3.setState(newState);

        _this3.onValueChange([newStartValue, newEndValue]);
    };

    this.clearRange = function () {
        _this3.setState({
            startDateInputStr: '',
            endDateInputStr: '',
            startTimeInputStr: '',
            endTimeInputStr: ''
        });

        if (!('value' in _this3.props)) {
            _this3.setState({
                startValue: null,
                endValue: null
            });
        }

        _this3.onValueChange([]);
    };

    this.onDateInputChange = function (inputStr, e, eventType) {
        if (eventType === 'clear' || !inputStr) {
            e.stopPropagation();
            _this3.clearRange();
        } else {
            var _this3$setState;

            var stateName = mapInputStateName(_this3.state.activeDateInput);
            _this3.setState((_this3$setState = {}, _this3$setState[stateName] = inputStr, _this3$setState.inputing = _this3.state.activeDateInput, _this3$setState));
        }
    };

    this.onDateInputBlur = function () {
        var resetTime = _this3.props.resetTime;
        var activeDateInput = _this3.state.activeDateInput;

        var stateName = mapInputStateName(activeDateInput);
        var dateInputStr = _this3.state[stateName];

        if (dateInputStr) {
            var _this3$setState2;

            var _props4 = _this3.props,
                format = _props4.format,
                disabledDate = _props4.disabledDate;

            var parsed = (0, _moment2.default)(dateInputStr, format, true);

            _this3.setState((_this3$setState2 = {}, _this3$setState2[stateName] = '', _this3$setState2.inputing = false, _this3$setState2));

            if (parsed.isValid() && !disabledDate(parsed, 'date')) {
                var valueName = activeDateInput;
                var newValue = resetTime ? parsed : (0, _util2.resetValueTime)(parsed, _this3.state[activeDateInput]);

                _this3.handleChange(valueName, newValue);
            }
        }
    };

    this.onDateInputKeyDown = function (e) {
        var type = _this3.props.type;
        var _state2 = _this3.state,
            activeDateInput = _state2.activeDateInput,
            format = _state2.format;

        var stateName = mapInputStateName(activeDateInput);
        var dateInputStr = _this3.state[stateName];
        var dateStr = (0, _util2.onDateKeydown)(e, {
            format: format,
            value: _this3.state[activeDateInput],
            dateInputStr: dateInputStr
        }, type === 'date' ? 'day' : type);
        if (!dateStr) return;

        return _this3.onDateInputChange(dateStr);
    };

    this.onFocusDateInput = function (type) {
        if (type !== _this3.state.activeDateInput) {
            _this3.setState({
                activeDateInput: type
            });
        }
        if (_this3.state.panel !== _util2.PANEL.DATE) {
            _this3.setState({
                panel: _util2.PANEL.DATE
            });
        }
    };

    this.onFocusTimeInput = function (type) {
        if (type !== _this3.state.activeDateInput) {
            _this3.setState({
                activeDateInput: type
            });
        }

        if (_this3.state.panel !== _util2.PANEL.TIME) {
            _this3.setState({
                panel: _util2.PANEL.TIME
            });
        }
    };

    this.onSelectStartTime = function (value) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                startValue: value,
                inputing: false,
                activeDateInput: 'startTime'
            });
        }

        if (value.valueOf() !== _this3.state.startValue.valueOf()) {
            _this3.onValueChange([value, _this3.state.endValue]);
        }
    };

    this.onSelectEndTime = function (value) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                endValue: value,
                inputing: false,
                activeDateInput: 'endTime'
            });
        }
        if (value.valueOf() !== _this3.state.endValue.valueOf()) {
            _this3.onValueChange([_this3.state.startValue, value]);
        }
    };

    this.onTimeInputChange = function (inputStr) {
        var _this3$setState3;

        var stateName = mapInputStateName(_this3.state.activeDateInput);
        _this3.setState((_this3$setState3 = {}, _this3$setState3[stateName] = inputStr, _this3$setState3.inputing = _this3.state.activeDateInput, _this3$setState3));
    };

    this.onTimeInputBlur = function () {
        var _this3$setState4;

        var stateName = mapInputStateName(_this3.state.activeDateInput);
        var timeInputStr = _this3.state[stateName];

        var parsed = (0, _moment2.default)(timeInputStr, _this3.state.timeFormat, true);

        _this3.setState((_this3$setState4 = {}, _this3$setState4[stateName] = '', _this3$setState4.inputing = false, _this3$setState4));

        if (parsed.isValid()) {
            var hour = parsed.hour();
            var minute = parsed.minute();
            var second = parsed.second();
            var valueName = mapTimeToValue(_this3.state.activeDateInput);
            var newValue = _this3.state[valueName].clone().hour(hour).minute(minute).second(second);

            _this3.handleChange(valueName, newValue);
        }
    };

    this.onTimeInputKeyDown = function (e) {
        var showTime = _this3.props.showTime;
        var _state3 = _this3.state,
            activeDateInput = _state3.activeDateInput,
            timeFormat = _state3.timeFormat;

        var stateName = mapInputStateName(activeDateInput);
        var timeInputStr = _this3.state[stateName];

        var _ref3 = (typeof showTime === 'undefined' ? 'undefined' : (0, _typeof3.default)(showTime)) === 'object' ? showTime : {},
            disabledMinutes = _ref3.disabledMinutes,
            disabledSeconds = _ref3.disabledSeconds,
            _ref3$hourStep = _ref3.hourStep,
            hourStep = _ref3$hourStep === undefined ? 1 : _ref3$hourStep,
            _ref3$minuteStep = _ref3.minuteStep,
            minuteStep = _ref3$minuteStep === undefined ? 1 : _ref3$minuteStep,
            _ref3$secondStep = _ref3.secondStep,
            secondStep = _ref3$secondStep === undefined ? 1 : _ref3$secondStep;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = (0, _util2.onTimeKeydown)(e, {
            format: timeFormat,
            timeInputStr: timeInputStr,
            value: _this3.state[activeDateInput.indexOf('start') ? 'startValue' : 'endValue'],
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            }
        }, unit);

        if (!timeStr) return;

        _this3.onTimeInputChange(timeStr);
    };

    this.handleChange = function (valueName, newValue) {
        var values = ['startValue', 'endValue'].map(function (name) {
            return valueName === name ? newValue : _this3.state[name];
        });

        // 判断起始时间是否大于结束时间
        if (values[0] && values[1] && values[0].valueOf() > values[1].valueOf()) {
            return;
        }

        if (!('value' in _this3.props)) {
            var _this3$setState5;

            _this3.setState((_this3$setState5 = {}, _this3$setState5[valueName] = newValue, _this3$setState5));
        }

        _this3.onValueChange(values);
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this3.props)) {
            _this3.setState({
                visible: visible
            });
        }
        _this3.props.onVisibleChange(visible, type);
    };

    this.changePanel = function (panel) {
        var _state4 = _this3.state,
            startValue = _state4.startValue,
            endValue = _state4.endValue;

        _this3.setState({
            panel: panel,
            activeDateInput: panel === _util2.PANEL.DATE ? !!startValue && !endValue ? 'endValue' : 'startValue' : 'startTime'
        });
    };

    this.onOk = function (value) {
        _this3.onVisibleChange(false, 'okBtnClick');
        _this3.onValueChange(value || [_this3.state.startValue, _this3.state.endValue], 'onOk');
    };

    this.getDisabledTime = function (_ref4) {
        var startValue = _ref4.startValue,
            endValue = _ref4.endValue;

        var _ref5 = _this3.props.showTime || {},
            disabledHours = _ref5.disabledHours,
            disabledMinutes = _ref5.disabledMinutes,
            disabledSeconds = _ref5.disabledSeconds;

        var disabledTime = {};

        if (startValue && endValue) {
            var isSameDay = startValue.format('L') === endValue.format('L');
            var newDisabledHours = (0, _util2.isFunction)(disabledHours) ? disabledHours : function (index) {
                if (isSameDay && index < startValue.hour()) {
                    return true;
                }
            };

            var newDisabledMinutes = (0, _util2.isFunction)(disabledMinutes) ? disabledMinutes : function (index) {
                if (isSameDay && startValue.hour() === endValue.hour() && index < startValue.minute()) {
                    return true;
                }
            };

            var newDisabledSeconds = (0, _util2.isFunction)(disabledSeconds) ? disabledSeconds : function (index) {
                if (isSameDay && startValue.hour() === endValue.hour() && startValue.minute() === endValue.minute() && index < startValue.second()) {
                    return true;
                }
            };
            disabledTime = {
                disabledHours: newDisabledHours,
                disabledMinutes: newDisabledMinutes,
                disabledSeconds: newDisabledSeconds
            };
        }

        return disabledTime;
    };

    this.enableAutoSwitchDateInput = function () {
        _this3.autoSwitchDateInput = true;
    };

    this.afterOpen = function () {
        // autoFocus 逻辑手动处理
        switch (_this3.state.activeDateInput) {
            case 'startValue':
                {
                    if (_this3.startDateInputRef.current) {
                        _this3.startDateInputRef.current.getInstance().focus();
                    }
                    break;
                }
            case 'endValue':
                {
                    if (_this3.endDateInputRef.current) {
                        _this3.endDateInputRef.current.getInstance().focus();
                    }
                    break;
                }
        }
    };
}, _temp);
RangePicker.displayName = 'RangePicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(RangePicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames4 = __webpack_require__(7);

var _classnames5 = _interopRequireDefault(_classnames4);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _calendar = __webpack_require__(39);

var _calendar2 = _interopRequireDefault(_calendar);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

/**
 * DatePicker.MonthPicker
 */

var MonthPicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(MonthPicker, _Component);

    function MonthPicker(props, context) {
        (0, _classCallCheck3.default)(this, MonthPicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.onValueChange = function (newValue) {
            var ret = _this.state.inputAsString && newValue ? newValue.format(_this.props.format) : newValue;
            _this.props.onChange(ret);
        };

        _this.onSelectCalendarPanel = function (value) {
            // const { format } = this.props;
            var prevSelectedMonth = _this.state.value;
            var selectedMonth = value.clone().date(1).hour(0).minute(0).second(0);

            _this.handleChange(selectedMonth, prevSelectedMonth, { inputing: false }, function () {
                _this.onVisibleChange(false, 'calendarSelect');
            });
        };

        _this.clearValue = function () {
            _this.setState({
                dateInputStr: ''
            });

            _this.handleChange(null, _this.state.value);
        };

        _this.onDateInputChange = function (inputStr, e, eventType) {
            if (eventType === 'clear' || !inputStr) {
                e.stopPropagation();
                _this.clearValue();
            } else {
                _this.setState({
                    dateInputStr: inputStr,
                    inputing: true
                });
            }
        };

        _this.onDateInputBlur = function () {
            var dateInputStr = _this.state.dateInputStr;

            if (dateInputStr) {
                var _this$props = _this.props,
                    disabledDate = _this$props.disabledDate,
                    format = _this$props.format;

                var parsed = (0, _moment2.default)(dateInputStr, format, true);

                _this.setState({
                    dateInputStr: '',
                    inputing: false
                });

                if (parsed.isValid() && !disabledDate(parsed, 'month')) {
                    _this.handleChange(parsed, _this.state.value);
                }
            }
        };

        _this.onKeyDown = function (e) {
            var format = _this.props.format;
            var _this$state = _this.state,
                dateInputStr = _this$state.dateInputStr,
                value = _this$state.value;

            var dateStr = (0, _util2.onDateKeydown)(e, { format: format, dateInputStr: dateInputStr, value: value }, 'month');
            if (!dateStr) return;
            _this.onDateInputChange(dateStr);
        };

        _this.handleChange = function (newValue, prevValue) {
            var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var callback = arguments[3];

            if (!('value' in _this.props)) {
                _this.setState((0, _extends3.default)({
                    value: newValue
                }, others));
            } else {
                _this.setState((0, _extends3.default)({}, others));
            }

            var format = _this.props.format;

            var newValueOf = newValue ? newValue.format(format) : null;
            var preValueOf = prevValue ? prevValue.format(format) : null;

            if (newValueOf !== preValueOf) {
                _this.onValueChange(newValue);
                if (typeof callback === 'function') {
                    return callback();
                }
            }
        };

        _this.onVisibleChange = function (visible, type) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, type);
        };

        _this.state = {
            value: (0, _util2.formatDateValue)(props.defaultValue, props.format),
            dateInputStr: '',
            inputing: false,
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string'
        };
        return _this;
    }

    MonthPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var states = {};
        if ('value' in props) {
            states.value = (0, _util2.formatDateValue)(props.value, props.format);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return states;
    };

    MonthPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames5.default)(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    MonthPicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            defaultVisibleYear = _props2.defaultVisibleYear,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            isPreview = _props2.isPreview,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'defaultVisibleYear', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'monthCellRender', 'yearCellRender', 'dateInputAriaLabel', 'isPreview']);
        var _state = this.state,
            visible = _state.visible,
            value = _state.value,
            dateInputStr = _state.dateInputStr,
            inputing = _state.inputing;

        var monthPickerCls = (0, _classnames5.default)((_classnames = {}, _classnames[prefix + 'month-picker'] = true, _classnames), className);

        var triggerInputCls = (0, _classnames5.default)((_classnames2 = {}, _classnames2[prefix + 'month-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = (0, _classnames5.default)((_classnames3 = {}, _classnames3[prefix + 'month-picker-body'] = true, _classnames3));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, MonthPicker.PropTypes));
        }

        var panelInputCls = prefix + 'month-picker-panel-input';

        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            value: dateInputValue,
            'aria-label': dateInputAriaLabel,
            onFocus: this.onFoucsDateInput,
            placeholder: format,
            className: panelInputCls
        }));

        var datePanel = _react2.default.createElement(_calendar2.default, {
            shape: 'panel',
            modes: ['month', 'year'],
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            value: value,
            onSelect: this.onSelectCalendarPanel,
            defaultVisibleMonth: defaultVisibleYear,
            disabledDate: disabledDate
        });

        var panelBody = datePanel;
        var panelFooter = footerRender();

        var allowClear = value && hasClear;
        var trigger = _react2.default.createElement('div', { className: prefix + 'month-picker-trigger' }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            readOnly: true,
            value: triggerInputValue,
            placeholder: placeholder || locale.monthPlaceholder,
            hint: _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
            hasClear: allowClear,
            className: triggerInputCls
        })));

        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(MonthPicker.propTypes, others), { className: monthPickerCls }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            autoFocus: true,
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            role: 'combobox',
            'aria-expanded': visible,
            disabled: disabled,
            visible: visible,
            onVisibleChange: this.onVisibleChange,
            triggerType: popupTriggerType,
            container: popupContainer,
            style: popupStyle,
            className: popupClassName,
            trigger: trigger
        }), popupContent ? popupContent : _react2.default.createElement('div', { className: panelBodyClassName, dir: others.dir }, _react2.default.createElement('div', { className: prefix + 'month-picker-panel-header' }, dateInput), panelBody, panelFooter)));
    };

    return MonthPicker;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 输入框内置标签
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 默认展现的年
     * @return {MomentObject} 返回包含指定年份的 moment 对象实例
     */
    defaultVisibleYear: _propTypes2.default.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: _util2.checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: _util2.checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _propTypes2.default.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _propTypes2.default.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _propTypes2.default.func,
    /**
     * 输入框尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 弹层显示状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层其他属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _propTypes2.default.object,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _propTypes2.default.string,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 月份
     */
    renderPreview: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    popupComponent: _propTypes2.default.elementType,
    popupContent: _propTypes2.default.node
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY-MM',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: _zhCn2.default.DatePicker,
    onChange: _util.func.noop,
    onVisibleChange: _util.func.noop
}, _temp);
MonthPicker.displayName = 'MonthPicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(MonthPicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames4 = __webpack_require__(7);

var _classnames5 = _interopRequireDefault(_classnames4);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _calendar = __webpack_require__(39);

var _calendar2 = _interopRequireDefault(_calendar);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

/**
 * DatePicker.YearPicker
 */

var YearPicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(YearPicker, _Component);

    function YearPicker(props, context) {
        (0, _classCallCheck3.default)(this, YearPicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.onValueChange = function (newValue) {
            var ret = _this.state.inputAsString && newValue ? newValue.format(_this.props.format) : newValue;
            _this.props.onChange(ret);
        };

        _this.onSelectCalendarPanel = function (value) {
            // const { format } = this.props;
            var prevSelectedMonth = _this.state.value;
            var selectedMonth = value.clone().month(0).date(1).hour(0).minute(0).second(0);

            _this.handleChange(selectedMonth, prevSelectedMonth, { inputing: false }, function () {
                _this.onVisibleChange(false, 'calendarSelect');
            });
        };

        _this.clearValue = function () {
            _this.setState({
                dateInputStr: ''
            });

            _this.handleChange(null, _this.state.value);
        };

        _this.onDateInputChange = function (inputStr, e, eventType) {
            if (eventType === 'clear' || !inputStr) {
                e.stopPropagation();
                _this.clearValue();
            } else {
                _this.setState({
                    dateInputStr: inputStr,
                    inputing: true
                });
            }
        };

        _this.onDateInputBlur = function () {
            var dateInputStr = _this.state.dateInputStr;

            if (dateInputStr) {
                var _this$props = _this.props,
                    disabledDate = _this$props.disabledDate,
                    format = _this$props.format;

                var parsed = (0, _moment2.default)(dateInputStr, format, true);

                _this.setState({
                    dateInputStr: '',
                    inputing: false
                });

                if (parsed.isValid() && !disabledDate(parsed, 'year')) {
                    _this.handleChange(parsed, _this.state.value);
                }
            }
        };

        _this.onKeyDown = function (e) {
            var format = _this.props.format;
            var _this$state = _this.state,
                dateInputStr = _this$state.dateInputStr,
                value = _this$state.value;

            var dateStr = (0, _util2.onDateKeydown)(e, { format: format, dateInputStr: dateInputStr, value: value }, 'year');
            if (!dateStr) return;
            _this.onDateInputChange(dateStr);
        };

        _this.handleChange = function (newValue, prevValue) {
            var others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var callback = arguments[3];

            if (!('value' in _this.props)) {
                _this.setState((0, _extends3.default)({
                    value: newValue
                }, others));
            } else {
                _this.setState((0, _extends3.default)({}, others));
            }

            var format = _this.props.format;

            var newValueOf = newValue ? newValue.format(format) : null;
            var preValueOf = prevValue ? prevValue.format(format) : null;

            if (newValueOf !== preValueOf) {
                _this.onValueChange(newValue);
                if (typeof callback === 'function') {
                    return callback();
                }
            }
        };

        _this.onVisibleChange = function (visible, reason) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, reason);
        };

        _this.state = {
            value: (0, _util2.formatDateValue)(props.defaultValue, props.format),
            dateInputStr: '',
            inputing: false,
            visible: props.defaultVisible,
            inputAsString: typeof props.defaultValue === 'string' // 判断用户输入是否是字符串
        };
        return _this;
    }

    YearPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var states = {};
        if ('value' in props) {
            states.value = (0, _util2.formatDateValue)(props.value, props.format);
            states.inputAsString = typeof props.value === 'string';
        }

        if ('visible' in props) {
            states.visible = props.visible;
        }

        return states;
    };

    YearPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames5.default)(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    YearPicker.prototype.render = function render() {
        var _classnames, _classnames2, _classnames3;

        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            dateInputAriaLabel = _props2.dateInputAriaLabel,
            yearCellRender = _props2.yearCellRender,
            isPreview = _props2.isPreview,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'dateInputAriaLabel', 'yearCellRender', 'isPreview']);
        var _state = this.state,
            visible = _state.visible,
            value = _state.value,
            dateInputStr = _state.dateInputStr,
            inputing = _state.inputing;

        var yearPickerCls = (0, _classnames5.default)((_classnames = {}, _classnames[prefix + 'year-picker'] = true, _classnames), className);

        var triggerInputCls = (0, _classnames5.default)((_classnames2 = {}, _classnames2[prefix + 'year-picker-input'] = true, _classnames2[prefix + 'error'] = false, _classnames2));

        var panelBodyClassName = (0, _classnames5.default)((_classnames3 = {}, _classnames3[prefix + 'year-picker-body'] = true, _classnames3));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, YearPicker.PropTypes));
        }

        var panelInputCls = prefix + 'year-picker-panel-input';

        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onBlur: this.onDateInputBlur,
            onPressEnter: this.onDateInputBlur,
            onKeyDown: this.onKeyDown
        });

        var dateInputValue = inputing ? dateInputStr : value && value.format(format) || '';
        var triggerInputValue = dateInputValue;

        var dateInput = _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            'aria-label': dateInputAriaLabel,
            value: dateInputValue,
            placeholder: format,
            className: panelInputCls
        }));

        var datePanel = _react2.default.createElement(_calendar2.default, {
            shape: 'panel',
            modes: ['year'],
            value: value,
            yearCellRender: yearCellRender,
            onSelect: this.onSelectCalendarPanel,
            disabledDate: disabledDate
        });

        var panelBody = datePanel;
        var panelFooter = footerRender();

        var allowClear = value && hasClear;
        var trigger = _react2.default.createElement('div', { className: prefix + 'year-picker-trigger' }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            value: triggerInputValue,
            role: 'combobox',
            'aria-expanded': visible,
            readOnly: true,
            placeholder: placeholder || locale.yearPlaceholder,
            hint: _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
            hasClear: allowClear,
            className: triggerInputCls
        })));

        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(YearPicker.propTypes, others), { className: yearPickerCls }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            autoFocus: true,
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            disabled: disabled,
            visible: visible,
            onVisibleChange: this.onVisibleChange,
            triggerType: popupTriggerType,
            container: popupContainer,
            style: popupStyle,
            className: popupClassName,
            trigger: trigger
        }), popupContent ? popupContent : _react2.default.createElement('div', { dir: others.dir, className: panelBodyClassName }, _react2.default.createElement('div', { className: prefix + 'year-picker-panel-header' }, dateInput), panelBody, panelFooter)));
    };

    return YearPicker;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 输入框内置标签
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 日期值（受控）moment 对象
     */
    value: _util2.checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: _util2.checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _propTypes2.default.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _propTypes2.default.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _propTypes2.default.func,
    /**
     * 输入框尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 弹层显示状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} reason 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式, 具体含义见 OverLay文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层其他属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _propTypes2.default.object,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    /**
     * 日期输入框的 aria-label 属性
     */
    dateInputAriaLabel: _propTypes2.default.string,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 年份
     */
    renderPreview: _propTypes2.default.func,
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    popupComponent: _propTypes2.default.elementType,
    popupContent: _propTypes2.default.node
}, _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'YYYY',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: _zhCn2.default.DatePicker,
    onChange: _util.func.noop,
    onVisibleChange: _util.func.noop
}, _temp);
YearPicker.displayName = 'YearPicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(YearPicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _reactLifecyclesCompat = __webpack_require__(11);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _calendar = __webpack_require__(39);

var _calendar2 = _interopRequireDefault(_calendar);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(31);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

/**
 * DatePicker.WeekPicker
 */

var WeekPicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(WeekPicker, _Component);

    function WeekPicker(props, context) {
        (0, _classCallCheck3.default)(this, WeekPicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var value = (0, _util2.formatDateValue)(props.value || props.defaultValue, props.format);

        _this.state = {
            value: value,
            visible: props.visible || props.defaultVisible
        };
        return _this;
    }

    WeekPicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};
        if ('value' in props) {
            st.value = (0, _util2.formatDateValue)(props.value, props.format);
        }

        if ('visible' in props) {
            st.visible = props.visible;
        }

        return st;
    };

    WeekPicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames3.default)(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    WeekPicker.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            rtl = _props2.rtl,
            locale = _props2.locale,
            label = _props2.label,
            state = _props2.state,
            format = _props2.format,
            defaultVisibleMonth = _props2.defaultVisibleMonth,
            onVisibleMonthChange = _props2.onVisibleMonthChange,
            disabledDate = _props2.disabledDate,
            footerRender = _props2.footerRender,
            placeholder = _props2.placeholder,
            size = _props2.size,
            disabled = _props2.disabled,
            hasClear = _props2.hasClear,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            className = _props2.className,
            inputProps = _props2.inputProps,
            monthCellRender = _props2.monthCellRender,
            yearCellRender = _props2.yearCellRender,
            isPreview = _props2.isPreview,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'rtl', 'locale', 'label', 'state', 'format', 'defaultVisibleMonth', 'onVisibleMonthChange', 'disabledDate', 'footerRender', 'placeholder', 'size', 'disabled', 'hasClear', 'popupTriggerType', 'popupAlign', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'className', 'inputProps', 'monthCellRender', 'yearCellRender', 'isPreview']);
        var _state = this.state,
            visible = _state.visible,
            value = _state.value;

        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            onChange: this.onDateInputChange,
            onKeyDown: this.onKeyDown
        });

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, WeekPicker.PropTypes));
        }

        var trigger = _react2.default.createElement('div', { className: prefix + 'week-picker-trigger' }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            value: value ? value.format(format) : '',
            role: 'combobox',
            'aria-expanded': visible,
            readOnly: true,
            placeholder: placeholder || locale.weekPlaceholder,
            hint: _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker-symbol-calendar-icon' }),
            hasClear: value && hasClear,
            className: prefix + 'week-picker-input'
        })));

        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(WeekPicker.propTypes, others), {
            className: (0, _classnames3.default)(prefix + 'week-picker', className)
        }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            disabled: disabled,
            visible: visible,
            onVisibleChange: this.onVisibleChange,
            triggerType: popupTriggerType,
            container: popupContainer,
            style: popupStyle,
            className: popupClassName,
            trigger: trigger
        }), popupContent ? popupContent : _react2.default.createElement('div', { dir: others.dir, className: prefix + 'week-picker-body' }, _react2.default.createElement(_calendar2.default, {
            shape: 'panel',
            value: value,
            format: format,
            className: prefix + 'calendar-week',
            dateCellRender: this.dateRender,
            monthCellRender: monthCellRender,
            yearCellRender: yearCellRender,
            onSelect: this.onSelectCalendarPanel,
            defaultVisibleMonth: defaultVisibleMonth,
            onVisibleMonthChange: onVisibleMonthChange,
            disabledDate: disabledDate
        }), footerRender())));
    };

    return WeekPicker;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 输入框内置标签
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['success', 'loading', 'error']),
    /**
     * 输入提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 默认展现的月
     * @return {MomentObject} 返回包含指定月份的 moment 对象实例
     */
    defaultVisibleMonth: _propTypes2.default.func,
    onVisibleMonthChange: _propTypes2.default.func,
    /**
     * 日期值（受控）moment 对象
     */
    value: _util2.checkDateValue,
    /**
     * 初始日期值，moment 对象
     */
    defaultValue: _util2.checkDateValue,
    /**
     * 日期值的格式（用于限定用户输入和展示）
     */
    format: _propTypes2.default.string,
    /**
     * 禁用日期函数
     * @param {MomentObject} 日期值
     * @param {String} view 当前视图类型，year: 年， month: 月, date: 日
     * @return {Boolean} 是否禁用
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 自定义面板页脚
     * @return {Node} 自定义的面板页脚组件
     */
    footerRender: _propTypes2.default.func,
    /**
     * 日期值改变时的回调
     * @param {MomentObject|String} value 日期值
     */
    onChange: _propTypes2.default.func,
    /**
     * 输入框尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否显示清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 弹层显示状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否显示
     * @param {String} type 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层对齐方式,具体含义见 OverLay文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层容器
     * @param {Element} target 目标元素
     * @return {Element} 弹层的容器元素
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层其他属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 输入框其他属性
     */
    inputProps: _propTypes2.default.object,
    /**
     * 自定义日期渲染函数
     * @param {Object} value 日期值（moment对象）
     * @returns {ReactNode}
     */
    dateCellRender: _propTypes2.default.func,
    /**
     * 自定义月份渲染函数
     * @param {Object} calendarDate 对应 Calendar 返回的自定义日期对象
     * @returns {ReactNode}
     */
    monthCellRender: _propTypes2.default.func,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject} value 年份
     */
    renderPreview: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func, // 兼容 0.x yearCellRender
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    popupComponent: _propTypes2.default.elementType,
    popupContent: _propTypes2.default.node
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    format: 'GGGG-Wo',
    size: 'medium',
    disabledDate: function disabledDate() {
        return false;
    },
    footerRender: function footerRender() {
        return null;
    },
    hasClear: true,
    popupTriggerType: 'click',
    popupAlign: 'tl tl',
    locale: _zhCn2.default.DatePicker,
    defaultVisible: false,
    onChange: _util.func.noop,
    onVisibleChange: _util.func.noop
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.handleChange = function (newValue, prevValue) {
        if (!('value' in _this2.props)) {
            _this2.setState({
                value: newValue
            });
        }

        var newValueOf = newValue ? newValue.valueOf() : null;
        var preValueOf = prevValue ? prevValue.valueOf() : null;

        if (newValueOf !== preValueOf) {
            _this2.props.onChange(newValue);
        }
    };

    this.onDateInputChange = function (value, e, eventType) {
        if (eventType === 'clear' || !value) {
            e.stopPropagation();
            _this2.handleChange(null, _this2.state.value);
        }
    };

    this.onKeyDown = function (e) {
        if ([_util.KEYCODE.UP, _util.KEYCODE.DOWN, _util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1) {
            return;
        }

        if (e.altKey && [_util.KEYCODE.PAGE_UP, _util.KEYCODE.PAGE_DOWN].indexOf(e.keyCode) === -1 || e.controlKey || e.shiftKey) {
            return;
        }

        var date = _this2.state.value;

        if (date && date.isValid()) {
            var stepUnit = e.altKey ? 'year' : 'month';
            switch (e.keyCode) {
                case _util.KEYCODE.UP:
                    date.subtract(1, 'w');
                    break;
                case _util.KEYCODE.DOWN:
                    date.add(1, 'w');
                    break;
                case _util.KEYCODE.PAGE_UP:
                    date.subtract(1, stepUnit);
                    break;
                case _util.KEYCODE.PAGE_DOWN:
                    date.add(1, stepUnit);
                    break;
            }
        } else {
            date = (0, _moment2.default)();
        }

        e.preventDefault();

        _this2.handleChange(date, _this2.state.value);
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };

    this.onSelectCalendarPanel = function (value) {
        _this2.handleChange(value, _this2.state.value);
        _this2.onVisibleChange(false, 'calendarSelect');
    };

    this.dateRender = function (value) {
        var _props3 = _this2.props,
            prefix = _props3.prefix,
            dateCellRender = _props3.dateCellRender;

        var selectedValue = _this2.state.value;
        var content = dateCellRender && typeof dateCellRender === 'function' ? dateCellRender(value) : value.dates();
        if (selectedValue && selectedValue.years() === value.years() && selectedValue.weeks() === value.weeks()) {
            var _classnames;

            var firstDay = _moment2.default.localeData().firstDayOfWeek();
            var endDay = firstDay - 1 < 0 ? 6 : firstDay - 1;
            return _react2.default.createElement('div', {
                className: (0, _classnames3.default)(prefix + 'calendar-week-active-date', (_classnames = {}, _classnames[prefix + 'calendar-week-active-start'] = value.days() === _moment2.default.localeData().firstDayOfWeek(), _classnames[prefix + 'calendar-week-active-end'] = value.days() === endDay, _classnames))
            }, _react2.default.createElement('span', null, content));
        }

        return content;
    };
}, _temp);
WeekPicker.displayName = 'WeekPicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(WeekPicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var dialog_1 = tslib_1.__importDefault(__webpack_require__(166));
var dialog_v2_1 = tslib_1.__importDefault(__webpack_require__(167));
var inner_1 = tslib_1.__importDefault(__webpack_require__(93));
var show_1 = __webpack_require__(337);
function processProps(props, deprecated) {
    if ('closable' in props) {
        deprecated('closable', 'closeable', 'Dialog');
        var closable = props.closable,
            others = tslib_1.__rest(props, ["closable"]);
        props = tslib_1.__assign({ closeable: closable }, others);
    }
    if ('v2' in props) {
        var nProps = tslib_1.__assign({}, props);
        if ('align' in props) {
            delete nProps.align;
            deprecated('align', 'centered', '<Dialog v2 />');
        }
        if ('shouldUpdatePosition' in props) {
            delete nProps.shouldUpdatePosition;
            util_1.log.warning("Warning: [ shouldUpdatePosition ] is deprecated at [ <Dialog v2 /> ]");
        }
        if ('minMargin' in props) {
            // delete nProps.minMargin;
            deprecated('minMargin', 'top/bottom', '<Dialog v2 />');
        }
        if ('isFullScreen' in props) {
            props.overFlowScroll = !props.isFullScreen;
            delete nProps.isFullScreen;
            deprecated('isFullScreen', 'overFlowScroll', '<Dialog v2 />');
        }
        return nProps;
    }
    var overlayPropNames = ['target', 'offset', 'beforeOpen', 'onOpen', 'afterOpen', 'beforePosition', 'onPosition', 'cache', 'safeNode', 'wrapperClassName', 'container'];
    overlayPropNames.forEach(function (name) {
        var _a;
        if (name in props) {
            deprecated(name, "overlayProps.".concat(name), 'Dialog');
            var overlayProps = props.overlayProps,
                others = tslib_1.__rest(props, ["overlayProps"]);
            var newOverlayProps = tslib_1.__assign((_a = {}, _a[name] = props[name], _a), overlayProps || {});
            delete others[name];
            props = tslib_1.__assign({ overlayProps: newOverlayProps }, others);
        }
    });
    return props;
}
var Dialog = /** @class */function (_super) {
    tslib_1.__extends(Dialog, _super);
    function Dialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Dialog.prototype.render = function () {
        var _a = this.props,
            v2 = _a.v2,
            others = tslib_1.__rest(_a, ["v2"]);
        if (v2) {
            return react_1.default.createElement(dialog_v2_1.default, tslib_1.__assign({}, others));
        } else {
            return react_1.default.createElement(dialog_1.default, tslib_1.__assign({}, others));
        }
    };
    Dialog.Inner = inner_1.default;
    Dialog.withContext = show_1.withContext;
    Dialog.show = function (config) {
        var warning = config_provider_1.default.getContextProps(config, 'Dialog').warning;
        if (warning !== false) {
            config = processProps(config, util_1.log.deprecated);
        }
        return (0, show_1.show)(config);
    };
    Dialog.alert = function (config) {
        var warning = config_provider_1.default.getContextProps(config, 'Dialog').warning;
        if (warning !== false) {
            config = processProps(config, util_1.log.deprecated);
        }
        return (0, show_1.alert)(config);
    };
    Dialog.confirm = function (config) {
        var warning = config_provider_1.default.getContextProps(config, 'Dialog').warning;
        if (warning !== false) {
            config = processProps(config, util_1.log.deprecated);
        }
        return (0, show_1.confirm)(config);
    };
    Dialog.success = function (config) {
        return (0, show_1.success)(config);
    };
    Dialog.error = function (config) {
        return (0, show_1.error)(config);
    };
    Dialog.notice = function (config) {
        return (0, show_1.notice)(config);
    };
    Dialog.warning = function (config) {
        return (0, show_1.warning)(config);
    };
    Dialog.help = function (config) {
        return (0, show_1.help)(config);
    };
    return Dialog;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Dialog, {
    transform: function transform(props, deprecated) {
        return processProps(props, deprecated);
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.withContext = exports.confirm = exports.help = exports.warning = exports.notice = exports.error = exports.success = exports.alert = exports.show = exports.ModalInner = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var message_1 = tslib_1.__importDefault(__webpack_require__(94));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var dialog_1 = tslib_1.__importDefault(__webpack_require__(166));
var dialog_v2_1 = tslib_1.__importDefault(__webpack_require__(167));
var Dialog = config_provider_1.default.config(dialog_1.default);
var Dialog2 = config_provider_1.default.config((0, react_1.forwardRef)(function (props, ref) {
    (0, react_1.useImperativeHandle)(ref, function () {
        return undefined;
    });
    return react_1.default.createElement(dialog_v2_1.default, tslib_1.__assign({}, props));
}));
var noop = function noop() {};
var MESSAGE_TYPE = {
    alert: 'warning', // deprecated in 2.x
    confirm: 'help',
    success: 'success',
    error: 'error',
    warning: 'warning',
    notice: 'notice',
    help: 'help'
};
var ModalInner = function ModalInner(_a) {
    var type = _a.type,
        _b = _a.messageProps,
        messageProps = _b === void 0 ? {} : _b,
        title = _a.title,
        rtl = _a.rtl,
        _c = _a.prefix,
        prefix = _c === void 0 ? 'next-' : _c,
        content = _a.content;
    return react_1.default.createElement(message_1.default, tslib_1.__assign({ size: "large", shape: "addon", type: MESSAGE_TYPE[type] }, messageProps, { title: title, rtl: rtl, className: (0, classnames_1.default)("".concat(prefix, "dialog-message"), messageProps.className) }), content);
};
exports.ModalInner = ModalInner;
var Modal = /** @class */function (_super) {
    tslib_1.__extends(Modal, _super);
    function Modal() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.state = {
            visible: true,
            okLoading: false,
            cancelLoading: false
        };
        _this.close = function () {
            _this.setState({
                visible: false
            });
        };
        _this.okLoading = function (loading) {
            _this.setState({
                okLoading: loading
            });
        };
        _this.cancelLoading = function (loading) {
            _this.setState({
                cancelLoading: loading
            });
        };
        return _this;
    }
    Modal.prototype.wrapper = function (fn, callback, changeLoading) {
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var res = fn.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args), false));
            if (res && res.then) {
                changeLoading(true);
                res.then(function (result) {
                    changeLoading(false);
                    if (result !== false) {
                        return callback();
                    }
                }).catch(function (e) {
                    changeLoading(false);
                    throw e;
                });
            } else if (res !== false) {
                return callback();
            }
        };
    };
    Modal.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            type = _a.type,
            title = _a.title,
            content = _a.content,
            messageProps = _a.messageProps,
            footerActions = _a.footerActions,
            onOk = _a.onOk,
            onCancel = _a.onCancel,
            onClose = _a.onClose,
            okProps = _a.okProps,
            cancelProps = _a.cancelProps,
            needWrapper = _a.needWrapper,
            rtl = _a.rtl,
            className = _a.className,
            v2 = _a.v2,
            _b = _a.width,
            width = _b === void 0 ? 420 : _b,
            others = tslib_1.__rest(_a, ["prefix", "type", "title", "content", "messageProps", "footerActions", "onOk", "onCancel", "onClose", "okProps", "cancelProps", "needWrapper", "rtl", "className", "v2", "width"]);
        var newTitle = needWrapper && type ? null : title;
        var newContent = needWrapper && type ? react_1.default.createElement(exports.ModalInner, { type: type, messageProps: messageProps, title: title, rtl: rtl, prefix: prefix, content: content }) : content;
        var newFooterActions = footerActions || (type === 'confirm' ? ['ok', 'cancel'] : ['alert', 'success', 'error', 'notice', 'warning', 'help'].indexOf(type) > -1 ? ['ok'] : undefined);
        var newOnOk = this.wrapper(onOk, this.close, this.okLoading);
        var newOnCancel = this.wrapper(onCancel, this.close, this.cancelLoading);
        var newOnClose = this.wrapper(onClose, this.close, this.cancelLoading);
        var _c = this.state,
            visible = _c.visible,
            okLoading = _c.okLoading,
            cancelLoading = _c.cancelLoading;
        // 不能直接改，这里修改相当于改了全局 okProps
        // okProps.loading = loading;
        var newOkProps = tslib_1.__assign({}, okProps);
        if (!('loading' in okProps)) {
            newOkProps.loading = okLoading;
        }
        var newCancelProps = tslib_1.__assign({}, cancelProps);
        if (!('loading' in cancelProps)) {
            newCancelProps.loading = cancelLoading;
        }
        var classNames = (0, classnames_1.default)("".concat(prefix, "dialog-quick"), className);
        var Tag = v2 ? Dialog2 : Dialog;
        return react_1.default.createElement(Tag, tslib_1.__assign({ prefix: prefix, role: "alertdialog" }, others, { visible: visible, title: newTitle, rtl: rtl, footerActions: newFooterActions, onOk: this.state.loading ? noop : newOnOk, onCancel: newOnCancel, onClose: newOnClose, okProps: newOkProps, cancelProps: newCancelProps, className: classNames, width: v2 ? width : undefined }), newContent);
    };
    Modal.propTypes = {
        prefix: prop_types_1.default.string,
        pure: prop_types_1.default.bool,
        rtl: prop_types_1.default.bool,
        type: prop_types_1.default.oneOf(['alert', 'confirm', 'success', 'error', 'notice', 'warning', 'help']),
        title: prop_types_1.default.node,
        content: prop_types_1.default.node,
        messageProps: prop_types_1.default.object,
        footerActions: prop_types_1.default.array,
        onOk: prop_types_1.default.func,
        onCancel: prop_types_1.default.func,
        onClose: prop_types_1.default.func,
        okProps: prop_types_1.default.object,
        cancelProps: prop_types_1.default.object,
        locale: prop_types_1.default.object,
        needWrapper: prop_types_1.default.bool,
        className: prop_types_1.default.string
    };
    Modal.defaultProps = {
        prefix: 'next-',
        pure: false,
        messageProps: {},
        onOk: noop,
        onCancel: noop,
        onClose: noop,
        okProps: {},
        cancelProps: {},
        locale: zh_cn_1.default.Dialog,
        needWrapper: true
    };
    return Modal;
}(react_1.Component);
var ConfigModal = config_provider_1.default.config(Modal, { componentName: 'Dialog' });
/**
 * 创建对话框
 * @param config - 配置项
 * @returns 包含有 hide 方法，可用来关闭对话框
 */
var show = function show(config) {
    if (config === void 0) {
        config = {};
    }
    var container = document.createElement('div');
    var unmount = function unmount() {
        var _a;
        if (config.afterClose) {
            config.afterClose();
        }
        // eslint-disable-next-line react/no-deprecated
        react_dom_1.default.unmountComponentAtNode(container);
        (_a = container.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(container);
    };
    document.body.appendChild(container);
    var newContext = config.contextConfig;
    if (!newContext) newContext = config_provider_1.default.getContext();
    var instance, myRef;
    // eslint-disable-next-line react/no-deprecated
    react_dom_1.default.render(react_1.default.createElement(config_provider_1.default, tslib_1.__assign({}, newContext), react_1.default.createElement(ConfigModal, tslib_1.__assign({}, config, { afterClose: unmount, ref: function ref(_ref) {
            myRef = _ref;
        } }))), container, function () {
        instance = myRef;
    });
    return {
        hide: function hide() {
            var inc = instance && instance.getInstance();
            inc && inc.close();
        }
    };
};
exports.show = show;
var methodFactory = function methodFactory(type) {
    return function (config) {
        if (config === void 0) {
            config = {};
        }
        config.type = type;
        return (0, exports.show)(config);
    };
};
/**
 * 创建警示对话框
 * @param config - 配置项
 * @returns 包含有 hide 方法，可用来关闭对话框
 */
exports.alert = methodFactory('alert');
exports.success = methodFactory('success');
exports.error = methodFactory('error');
exports.notice = methodFactory('notice');
exports.warning = methodFactory('warning');
exports.help = methodFactory('help');
/**
 * 创建确认对话框
 * @param config - 配置项
 * @returns 包含有 hide 方法，可用来关闭对话框
 */
exports.confirm = methodFactory('confirm');
var withContext = function withContext(WrappedComponent) {
    var HOC = function HOC(props) {
        return react_1.default.createElement(config_provider_1.default.Consumer, null, function (contextConfig) {
            return react_1.default.createElement(WrappedComponent
            // why AnyProps? see: https://react-typescript-cheatsheet.netlify.app/docs/hoc/react_hoc_docs
            , tslib_1.__assign({}, props, { contextDialog: {
                    show: function show(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.show)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    alert: function alert(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.alert)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    confirm: function confirm(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.confirm)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    success: function success(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.success)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    error: function error(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.error)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    warning: function warning(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.warning)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    notice: function notice(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.notice)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    },
                    help: function help(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.help)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    }
                } }));
        });
    };
    return HOC;
};
exports.withContext = withContext;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.withContext = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

var _message = __webpack_require__(95);

var _message2 = _interopRequireDefault(_message);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var config = _configProvider2.default.config;

var instance = void 0;
var timeouts = {};

var Mask = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Mask, _React$Component);

    function Mask() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Mask);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            visible: true
        }, _this.handleClose = function () {
            var silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            _this.setState({
                visible: false
            });

            if (!silent) {
                _this.props.onClose && _this.props.onClose();
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Mask.prototype.componentWillUnmount = function componentWillUnmount() {
        var timeoutId = this.props.timeoutId;

        if (timeoutId in timeouts) {
            var timeout = timeouts[timeoutId];
            clearTimeout(timeout);
            delete timeouts[timeoutId];
        }
    };

    Mask.prototype.render = function render() {
        /* eslint-disable no-unused-vars */
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            title = _props.title,
            content = _props.content,
            align = _props.align,
            offset = _props.offset,
            hasMask = _props.hasMask,
            afterClose = _props.afterClose,
            animation = _props.animation,
            overlayProps = _props.overlayProps,
            timeoutId = _props.timeoutId,
            className = _props.className,
            style = _props.style,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'type', 'title', 'content', 'align', 'offset', 'hasMask', 'afterClose', 'animation', 'overlayProps', 'timeoutId', 'className', 'style']);
        /* eslint-enable */

        var visible = this.state.visible;

        return _react2.default.createElement(_overlay2.default, (0, _extends3.default)({}, overlayProps, {
            prefix: prefix,
            animation: animation,
            visible: visible,
            align: align,
            offset: offset,
            hasMask: hasMask,
            afterClose: afterClose
        }), _react2.default.createElement(_message2.default, (0, _extends3.default)({}, others, {
            prefix: prefix,
            visible: true,
            type: type,
            shape: 'toast',
            title: title,
            style: style,
            className: prefix + 'message-wrapper ' + className,
            onClose: this.handleClose
        }), content));
    };

    return Mask;
}(_react2.default.Component), _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _class.propTypes = {
    prefix: _propTypes2.default.string,
    type: _propTypes2.default.string,
    title: _propTypes2.default.node,
    content: _propTypes2.default.node,
    align: _propTypes2.default.string,
    offset: _propTypes2.default.array,
    hasMask: _propTypes2.default.bool,
    afterClose: _propTypes2.default.func,
    animation: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.bool]),
    overlayProps: _propTypes2.default.object,
    onClose: _propTypes2.default.func,
    timeoutId: _propTypes2.default.string,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    align: 'tc tc',
    offset: [0, 30],
    hasMask: false,
    animation: {
        in: 'pulse',
        out: 'zoomOut'
    },
    style: {},
    className: ''
}, _temp2);
Mask.displayName = 'Mask';

var NewMask = config(Mask);

var create = function create(props) {
    /* eslint-disable no-unused-vars */
    var duration = props.duration,
        afterClose = props.afterClose,
        contextConfig = props.contextConfig,
        others = (0, _objectWithoutProperties3.default)(props, ['duration', 'afterClose', 'contextConfig']);
    /* eslint-enable no-unused-vars */

    var div = document.createElement('div');
    document.body.appendChild(div);
    var closeChain = function closeChain() {
        _reactDom2.default.unmountComponentAtNode(div);
        document.body.removeChild(div);
        afterClose && afterClose();
    };

    var newContext = contextConfig;
    if (!newContext) newContext = _configProvider2.default.getContext();

    var mask = void 0,
        myRef = void 0,
        destroyed = false;
    var destroy = function destroy() {
        var inc = mask && mask.getInstance();
        inc && inc.handleClose(true);
        destroyed = true;
    };

    _reactDom2.default.render(_react2.default.createElement(_configProvider2.default, newContext, _react2.default.createElement(NewMask, (0, _extends3.default)({
        afterClose: closeChain
    }, others, {
        ref: function ref(_ref) {
            myRef = _ref;
        }
    }))), div, function () {
        mask = myRef;
        if (mask && destroyed) {
            destroy();
        }
    });

    return {
        component: mask,
        destroy: destroy
    };
};

function handleConfig(config, type) {
    var newConfig = {};

    if (typeof config === 'string' || _react2.default.isValidElement(config)) {
        newConfig.title = config;
    } else if (isObject(config)) {
        newConfig = (0, _extends3.default)({}, config);
    }
    if (typeof newConfig.duration !== 'number') {
        newConfig.duration = 3000;
    }
    if (type) {
        newConfig.type = type;
    }

    return newConfig;
}

function isObject(obj) {
    return {}.toString.call(obj) === '[object Object]';
}

function open(config, type) {
    close();
    config = handleConfig(config, type);
    var timeoutId = (0, _util.guid)();
    instance = create((0, _extends3.default)({}, config, { timeoutId: timeoutId }));

    if (config.duration > 0) {
        var timeout = setTimeout(close, config.duration);
        timeouts[timeoutId] = timeout;
    }
}

function close() {
    if (instance) {
        instance.destroy();
        instance = null;
    }
}

/**
 * 创建提示弹层
 * @exportName show
 * @param {Object} props 属性对象
 */
function _show(config) {
    open(config);
}

/**
 * 关闭提示弹层
 * @exportName hide
 */
function hide() {
    close();
}

/**
 * 创建成功提示弹层
 * @exportName success
 * @param {Object} props 属性对象
 */
function _success(config) {
    open(config, 'success');
}

/**
 * 创建警告提示弹层
 * @exportName warning
 * @param {Object} props 属性对象
 */
function _warning(config) {
    open(config, 'warning');
}

/**
 * 创建错误提示弹层
 * @exportName error
 * @param {Object} props 属性对象
 */
function _error(config) {
    open(config, 'error');
}

/**
 * 创建帮助提示弹层
 * @exportName help
 * @param {Object} props 属性对象
 */
function _help(config) {
    open(config, 'help');
}

/**
 * 创建加载中提示弹层
 * @exportName loading
 * @param {Object} props 属性对象
 */
function _loading(config) {
    open(config, 'loading');
}

/**
 * 创建通知提示弹层
 * @exportName notice
 * @param {Object} props 属性对象
 */
function _notice(config) {
    open(config, 'notice');
}

exports.default = {
    show: _show,
    hide: hide,
    success: _success,
    warning: _warning,
    error: _error,
    help: _help,
    loading: _loading,
    notice: _notice
};
var withContext = exports.withContext = function withContext(WrappedComponent) {
    var HOC = function HOC(props) {
        return _react2.default.createElement(_configProvider2.default.Consumer, null, function (contextConfig) {
            return _react2.default.createElement(WrappedComponent, (0, _extends3.default)({}, props, {
                contextMessage: {
                    show: function show() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _show((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    hide: hide,
                    success: function success() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _success((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    warning: function warning() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _warning((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    error: function error() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _error((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    help: function help() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _help((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    loading: function loading() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _loading((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    },
                    notice: function notice() {
                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                        return _notice((0, _extends3.default)({}, config, { contextConfig: contextConfig }));
                    }
                }
            }));
        });
    };
    return HOC;
};

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _message = __webpack_require__(95);

var _message2 = _interopRequireDefault(_message);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var _config = {
    top: 8,
    maxCount: 0,
    duration: 3000
};

var MessageWrapper = function MessageWrapper(props) {
    // eslint-disable-next-line
    var _props$prefix = props.prefix,
        prefix = _props$prefix === undefined ? 'next-' : _props$prefix,
        _props$dataSource = props.dataSource,
        dataSource = _props$dataSource === undefined ? [] : _props$dataSource;

    var _useState = (0, _react.useState)(),
        forceUpdate = _useState[1];

    dataSource.forEach(function (i) {
        if (!i.timer) {
            i.timer = setTimeout(function () {
                var idx = dataSource.indexOf(i);
                if (idx > -1) {
                    var item = dataSource[idx];
                    typeof item.onClose === 'function' && item.onClose();
                    dataSource.splice(idx, 1);
                    forceUpdate({});
                }
            }, i.duration);
        }
    });

    return _react2.default.createElement('div', { className: prefix + 'message-wrapper-v2', style: { top: _config.top } }, _react2.default.createElement(_animate2.default, {
        animationAppear: true,
        animation: {
            appear: 'pulse',
            enter: 'pulse',
            leave: prefix + 'message-fade-leave'
        },
        singleMode: false
    }, dataSource.map(function (i) {
        var key = i.key,
            className = i.className,
            type = i.type,
            title = i.title,
            content = i.content,
            style = i.style,
            others = (0, _objectWithoutProperties3.default)(i, ['key', 'className', 'type', 'title', 'content', 'style']);

        return _react2.default.createElement('div', { className: prefix + 'message-list', key: key }, _react2.default.createElement(_message2.default, (0, _extends3.default)({}, others, {
            className: className,
            prefix: prefix,
            visible: true,
            type: type,
            shape: 'toast',
            title: title,
            style: style
        }), content));
    })));
};

var ConfigedMessages = _configProvider2.default.config(MessageWrapper);

var messageRootNode = void 0;
var messageList = [];

var createMessage = function createMessage(props) {
    var _props$key = props.key,
        key = _props$key === undefined ? (0, _util.guid)('message-') : _props$key,
        others = (0, _objectWithoutProperties3.default)(props, ['key']);

    if (!messageRootNode) {
        messageRootNode = document.createElement('div');
        document.body.appendChild(messageRootNode);
    }

    var maxCount = _config.maxCount,
        duration = _config.duration;

    var item = (0, _extends3.default)({
        key: key,
        duration: duration
    }, others);

    messageList.push(item);

    if (maxCount && messageList.length > maxCount) {
        messageList.shift();
    }

    _reactDom2.default.render(_react2.default.createElement(_configProvider2.default, _configProvider2.default.getContext(), _react2.default.createElement(ConfigedMessages, { dataSource: messageList })), messageRootNode);

    return {
        key: key,
        close: function close() {
            if (item.timer) {
                clearTimeout(item.timer);
            }
            var idx = messageList.indexOf(item);
            if (idx > -1) {
                typeof item.onClose === 'function' && item.onClose();
                messageList.splice(idx, 1);

                _reactDom2.default.render(_react2.default.createElement(_configProvider2.default, _configProvider2.default.getContext(), _react2.default.createElement(ConfigedMessages, { dataSource: messageList })), messageRootNode);
            }
        }
    };
};

function close(key) {
    if (key) {
        var index = messageList.findIndex(function (item) {
            return item.key === key;
        });
        messageList.splice(index, 1);
    } else {
        messageList = [];
    }

    if (messageRootNode) {
        _reactDom2.default.render(_react2.default.createElement(_configProvider2.default, _configProvider2.default.getContext(), _react2.default.createElement(ConfigedMessages, { dataSource: messageList })), messageRootNode);
    }
}

function handleConfig(config, type) {
    var newConfig = {};

    if (typeof config === 'string' || _react2.default.isValidElement(config)) {
        newConfig.title = config;
    } else if (_util.obj.typeOf(config) === 'Object') {
        newConfig = (0, _extends3.default)({}, config);
    }

    if (type) {
        newConfig.type = type;
    }

    return newConfig;
}

function open(type) {
    return function (config) {
        config = handleConfig(config, type);
        return createMessage(config);
    };
}

function destory() {
    if (!messageRootNode) return;
    if (messageRootNode) {
        _reactDom2.default.unmountComponentAtNode(messageRootNode);
        messageRootNode.parentNode.removeChild(messageRootNode);
        messageRootNode = null;
    }
}

exports.default = {
    open: open(),
    success: open('success'),
    warning: open('warning'),
    error: open('error'),
    help: open('help'),
    loading: open('loading'),
    notice: open('notice'),
    close: close,
    destory: destory,
    config: function config() {
        if (!_react.useState) {
            _util.log.warning('need react version > 16.8.0');
            return;
        }

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _extends3.default.apply(undefined, [_config].concat(args));
    }
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var drawer_1 = tslib_1.__importDefault(__webpack_require__(341));
var drawer_v2_1 = tslib_1.__importDefault(__webpack_require__(169));
var inner_1 = tslib_1.__importDefault(__webpack_require__(96));
var show_1 = __webpack_require__(342);
var Drawer = /** @class */function (_super) {
    tslib_1.__extends(Drawer, _super);
    function Drawer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Drawer.prototype.render = function () {
        var _a = this.props,
            v2 = _a.v2,
            others = tslib_1.__rest(_a, ["v2"]);
        if (v2) {
            return react_1.default.createElement(drawer_v2_1.default, tslib_1.__assign({}, others));
        } else {
            return react_1.default.createElement(drawer_1.default, tslib_1.__assign({}, others));
        }
    };
    return Drawer;
}(react_1.default.Component);
Drawer.Inner = inner_1.default;
Drawer.show = show_1.show;
Drawer.withContext = show_1.withContext;
exports.default = config_provider_1.default.config(Drawer);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(16));
var inner_1 = tslib_1.__importDefault(__webpack_require__(96));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var util_1 = __webpack_require__(4);
var noop = function noop() {};
var Popup = overlay_1.default.Popup;
var pickOthers = util_1.obj.pickOthers;
/**
 * Drawer
 * 继承 Overlay.Popup 的 API，除非特别说明
 * */
var Drawer = /** @class */function (_super) {
    tslib_1.__extends(Drawer, _super);
    function Drawer() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.overlay = null;
        _this.getAlign = function (placement) {
            var align;
            switch (placement) {
                case 'top':
                    align = 'tl tl';
                    break;
                case 'bottom':
                    align = 'bl bl';
                    break;
                case 'left':
                    align = 'tl tl';
                    break;
                case 'right':
                default:
                    align = 'tr tr';
                    break;
            }
            return align;
        };
        _this.getAnimation = function (placement) {
            if ('animation' in _this.props) {
                return _this.props.animation;
            }
            var animation;
            switch (placement) {
                case 'top':
                    animation = {
                        in: 'slideInDown',
                        out: 'slideOutUp'
                    };
                    break;
                case 'bottom':
                    animation = {
                        in: 'slideInUp',
                        out: 'slideOutDown'
                    };
                    break;
                case 'left':
                    animation = {
                        in: 'slideInLeft',
                        out: 'slideOutLeft'
                    };
                    break;
                case 'right':
                default:
                    animation = {
                        in: 'slideInRight',
                        out: 'slideOutRight'
                    };
                    break;
            }
            return animation;
        };
        _this.getOverlayRef = function (ref) {
            _this.overlay = ref;
        };
        _this.mapcloseableToConfig = function (closeable) {
            return ['esc', 'close', 'mask'].reduce(function (ret, option) {
                var key = option.charAt(0).toUpperCase() + option.substr(1);
                var value = typeof closeable === 'boolean' ? closeable : closeable.split(',').indexOf(option) > -1;
                if (option === 'esc' || option === 'mask') {
                    ret["canCloseBy".concat(key)] = value;
                } else {
                    ret["canCloseBy".concat(key, "Click")] = value;
                }
                return ret;
            }, {});
        };
        _this.handleVisibleChange = function (visible, reason, e) {
            var _a = _this.props,
                onClose = _a.onClose,
                onVisibleChange = _a.onVisibleChange;
            if (visible === false) {
                onClose && onClose(reason, e);
            }
            onVisibleChange && onVisibleChange(visible, reason, e);
        };
        return _this;
    }
    Drawer.prototype.renderInner = function (closeable) {
        var _a = this.props,
            prefix = _a.prefix,
            className = _a.className,
            children = _a.children,
            title = _a.title,
            onClose = _a.onClose,
            locale = _a.locale,
            headerStyle = _a.headerStyle,
            bodyStyle = _a.bodyStyle,
            placement = _a.placement,
            rtl = _a.rtl;
        var others = pickOthers(Drawer.propTypes, this.props);
        return react_1.default.createElement(inner_1.default, tslib_1.__assign({ prefix: prefix, title: title, className: className, locale: locale, closeable: closeable, rtl: rtl, headerStyle: headerStyle, bodyStyle: bodyStyle, placement: placement, onClose: onClose.bind(this, 'closeClick') }, others), children);
    };
    Drawer.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            style = _a.style,
            width = _a.width,
            height = _a.height,
            trigger = _a.trigger,
            triggerType = _a.triggerType,
            animation = _a.animation,
            hasMask = _a.hasMask,
            visible = _a.visible,
            placement = _a.placement,
            onClose = _a.onClose,
            onVisibleChange = _a.onVisibleChange,
            closeable = _a.closeable,
            closeMode = _a.closeMode,
            rtl = _a.rtl,
            popupContainer = _a.popupContainer,
            content = _a.content,
            title = _a.title,
            others = tslib_1.__rest(_a, ["prefix", "style", "width", "height", "trigger", "triggerType", "animation", "hasMask", "visible", "placement", "onClose", "onVisibleChange", "closeable", "closeMode", "rtl", "popupContainer", "content", "title"]);
        var newStyle = tslib_1.__assign({ width: width, height: height }, style);
        var newCloseable = 'closeMode' in this.props ? Array.isArray(closeMode) ? closeMode.join(',') : closeMode : closeable;
        var _b = this.mapcloseableToConfig(newCloseable),
            canCloseByCloseClick = _b.canCloseByCloseClick,
            closeConfig = tslib_1.__rest(_b, ["canCloseByCloseClick"]);
        var newPopupProps = tslib_1.__assign(tslib_1.__assign({ prefix: prefix, visible: visible, trigger: trigger, triggerType: triggerType, onVisibleChange: this.handleVisibleChange, animation: this.getAnimation(placement), hasMask: hasMask, align: this.getAlign(placement) }, closeConfig), { canCloseByOutSideClick: false, disableScroll: true, ref: this.getOverlayRef, rtl: rtl, target: 'viewport', style: newStyle, needAdjust: false, container: popupContainer });
        var inner = this.renderInner(canCloseByCloseClick);
        return react_1.default.createElement(Popup, tslib_1.__assign({}, newPopupProps, others), inner);
    };
    Drawer.displayName = 'Drawer';
    Drawer.propTypes = tslib_1.__assign(tslib_1.__assign({}, Popup.propTypes || {}), { prefix: prop_types_1.default.string, pure: prop_types_1.default.bool, rtl: prop_types_1.default.bool, trigger: prop_types_1.default.element, triggerType: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.array]), width: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]), height: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]), closeable: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.bool]), cache: prop_types_1.default.bool, closeMode: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.oneOf(['close', 'mask', 'esc'])), prop_types_1.default.oneOf(['close', 'mask', 'esc'])]), onClose: prop_types_1.default.func, afterOpen: prop_types_1.default.func, placement: prop_types_1.default.oneOf(['top', 'right', 'bottom', 'left']), title: prop_types_1.default.node, headerStyle: prop_types_1.default.object, bodyStyle: prop_types_1.default.object, visible: prop_types_1.default.bool, hasMask: prop_types_1.default.bool, onVisibleChange: prop_types_1.default.func, animation: prop_types_1.default.oneOfType([prop_types_1.default.object, prop_types_1.default.bool]), locale: prop_types_1.default.object, popupContainer: prop_types_1.default.any, v2: prop_types_1.default.bool, afterClose: prop_types_1.default.func });
    Drawer.defaultProps = {
        prefix: 'next-',
        triggerType: 'click',
        trigger: null,
        closeable: true,
        onClose: noop,
        hasMask: true,
        placement: 'right',
        locale: zh_cn_1.default.Drawer
    };
    return Drawer;
}(react_1.Component);
exports.default = Drawer;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.withContext = exports.show = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var drawer_v2_1 = tslib_1.__importDefault(__webpack_require__(169));
var Modal = /** @class */function (_super) {
    tslib_1.__extends(Modal, _super);
    function Modal() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.state = {
            visible: true,
            loading: false
        };
        _this.close = function () {
            _this.setState({
                visible: false
            });
        };
        return _this;
    }
    Modal.prototype.render = function () {
        var _a = this.props,
            visible = _a.visible,
            content = _a.content,
            others = tslib_1.__rest(_a, ["visible", "content"]);
        return react_1.default.createElement(drawer_v2_1.default, tslib_1.__assign({}, others, { visible: this.state.visible }), content);
    };
    return Modal;
}(react_1.default.Component);
var ConfigModal = config_provider_1.default.config(Modal, { componentName: 'Drawer' });
/**
 * 创建对话框。
 *
 * @remarks
 * 该函数导出的名字是 `show`。
 *
 * @param config - 配置项。
 * @returns 返回一个对象，该对象包含有 `hide` 方法，可用来关闭对话框。
 */
var show = function show(config) {
    if (config === void 0) {
        config = {};
    }
    var container = document.createElement('div');
    var unmount = function unmount() {
        var _a;
        if (config.afterClose) {
            config.afterClose();
        }
        // eslint-disable-next-line react/no-deprecated
        react_dom_1.default.unmountComponentAtNode(container);
        (_a = container.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(container);
    };
    document.body.appendChild(container);
    var newContext = config.contextConfig;
    if (!newContext) newContext = config_provider_1.default.getContext();
    var instance, myRef;
    var handleClose = function handleClose() {
        var inc = instance && instance.getInstance();
        inc && inc.close();
        if (config.onClose) {
            config.onClose();
        }
    };
    // eslint-disable-next-line react/no-deprecated
    react_dom_1.default.render(react_1.default.createElement(config_provider_1.default, tslib_1.__assign({}, newContext), react_1.default.createElement(ConfigModal, tslib_1.__assign({}, config, { onClose: handleClose, afterClose: unmount, ref: function ref(_ref) {
            myRef = _ref;
        } }))), container, function () {
        instance = myRef;
    });
    return {
        hide: handleClose
    };
};
exports.show = show;
var withContext = function withContext(WrappedComponent) {
    var HOC = function HOC(props) {
        return react_1.default.createElement(config_provider_1.default.Consumer, null, function (contextConfig) {
            return react_1.default.createElement(WrappedComponent
            // why AnyProps? see: https://react-typescript-cheatsheet.netlify.app/docs/hoc/react_hoc_docs
            , tslib_1.__assign({}, props, { contextDialog: {
                    show: function show(config) {
                        if (config === void 0) {
                            config = {};
                        }
                        return (0, exports.show)(tslib_1.__assign(tslib_1.__assign({}, config), { contextConfig: contextConfig }));
                    }
                } }));
        });
    };
    return HOC;
};
exports.withContext = withContext;

/***/ }),
/* 343 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export splitNameToPath */
/* harmony export (immutable) */ __webpack_exports__["g"] = hasIn;
/* harmony export (immutable) */ __webpack_exports__["d"] = getIn;
/* harmony export (immutable) */ __webpack_exports__["j"] = setIn;
/* harmony export (immutable) */ __webpack_exports__["b"] = deleteIn;
/* harmony export (immutable) */ __webpack_exports__["c"] = getErrorStrs;
/* harmony export (immutable) */ __webpack_exports__["e"] = getParams;
/* harmony export (immutable) */ __webpack_exports__["h"] = isOverwritten;
/* harmony export (immutable) */ __webpack_exports__["f"] = getValueFromEvent;
/* harmony export (immutable) */ __webpack_exports__["i"] = mapValidateRules;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return warning; });
/* harmony export (immutable) */ __webpack_exports__["a"] = cloneToRuleArr;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(9);

function splitNameToPath(name) {
    return typeof name === 'string' && name ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '';
}
function hasIn(state, name) {
    if (!state) {
        return false;
    }
    var path = splitNameToPath(name);
    var length = path.length;
    if (!length) {
        return false;
    }
    var result = state;
    for (var i = 0; i < length; ++i) {
        // parent is not object
        if (typeof result !== 'object' || result === null) {
            return false;
        }
        // has no property
        var thisName = path[i];
        if (!(thisName in result)) {
            return false;
        }
        // pass on
        result = result[thisName];
    }
    return true;
}
function getIn(state, name) {
    if (!state) {
        return state;
    }
    var path = splitNameToPath(name);
    var length = path.length;
    if (!length) {
        return undefined;
    }
    var result = state;
    for (var i = 0; i < length; ++i) {
        // parent is not object
        if (typeof result !== 'object' || result === null) {
            return undefined;
        }
        result = result[path[i]];
    }
    return result;
}
function setInWithPath(state, value, path, pathIndex) {
    var _a;
    if (pathIndex >= path.length) {
        return value;
    }
    var first = path[pathIndex];
    var next = setInWithPath(state && state[first], value, path, pathIndex + 1);
    if (!state) {
        var initialized = isNaN(first) ? {} : [];
        initialized[first] = next;
        return initialized;
    }
    if (Array.isArray(state)) {
        var copy = Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__spreadArray"])([], Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__read"])(state), false);
        copy[first] = next;
        return copy;
    }
    return Object.assign({}, state, (_a = {},
        _a[first] = next,
        _a));
}
function setIn(state, name, value) {
    return setInWithPath(state, value, typeof name === 'string' ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '', 0);
}
function deleteIn(state, name) {
    if (!state) {
        return;
    }
    var path = typeof name === 'string' ? name.replace(/\[/, '.').replace(/\]/, '').split('.') : '';
    var length = path.length;
    if (!length) {
        return state;
    }
    var result = state;
    for (var i = 0; i < length && !!result; ++i) {
        if (i === length - 1) {
            delete result[path[i]];
        }
        else {
            result = result[path[i]];
        }
    }
    return state;
}
function getErrorStrs(errors, processErrorMessage) {
    if (errors) {
        return errors.map(function (e) {
            var message = typeof e.message !== 'undefined' ? e.message : e;
            if (typeof processErrorMessage === 'function') {
                return processErrorMessage(message);
            }
            return message;
        });
    }
    return errors;
}
function getParams(ns, cb) {
    var names = typeof ns === 'string' ? [ns] : ns;
    var callback = cb;
    if (cb === undefined && typeof names === 'function') {
        callback = names;
        names = undefined;
    }
    return {
        names: names,
        callback: callback,
    };
}
/**
 * name 是否被覆写
 * e.g. \{ a: \{ b: 1 \} \} and 'a.b', should return true
 * e.g. \{ a: \{ b: 1 \} \} and 'a.b.c', should return true
 * e.g. \{ a: \{ b: 1 \} \} and 'a.b2', should return false
 * e.g. \{ a: \{ b: 1 \} \} and 'a2', should return false
 * e.g. \{ a: \{ b: [0, 1] \} \} and 'a.b[0]' return true
 * e.g. \{ a: \{ b: [0, 1] \} \} and 'a.b[5]' return true (miss index means overwritten in array)
 * @param values - 写入对象
 * @param name - 字段 key
 */
function isOverwritten(values, name) {
    var e_1, _a;
    if (!values || typeof values !== 'object' || !name || typeof name !== 'string') {
        return false;
    }
    var paths = splitNameToPath(name);
    var obj = values;
    try {
        for (var paths_1 = Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__values"])(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {
            var path = paths_1_1.value;
            if (path in obj) {
                var pathValue = obj[path];
                // 任意一层 path 值不是对象了，则代表被覆盖
                if (!pathValue || typeof pathValue !== 'object') {
                    return true;
                }
                else {
                    obj = pathValue;
                }
            }
            else {
                // 数组的 index 已经移除，则代表被覆写
                if (Array.isArray(obj)) {
                    return true;
                }
                return false;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    // 代表 name in values，则返回 true
    return true;
}
/**
 * 从组件事件中获取数据
 * @param e - Event 或者 value
 * @returns 数据值
 */
function getValueFromEvent(e) {
    // support custom element
    if (!e || !e.target || !e.preventDefault) {
        return e;
    }
    var target = e.target;
    if (target.type === 'checkbox') {
        return target.checked;
    }
    else if (target.type === 'radio') {
        //兼容原生 radioGroup
        if (target.value) {
            return target.value;
        }
        else {
            return target.checked;
        }
    }
    return target.value;
}
function validateMap(rulesMap, rule, defaultTrigger) {
    var nrule = Object.assign({}, rule);
    if (!nrule.trigger) {
        nrule.trigger = [defaultTrigger];
    }
    if (typeof nrule.trigger === 'string') {
        nrule.trigger = [nrule.trigger];
    }
    for (var i = 0; i < nrule.trigger.length; i++) {
        var trigger = nrule.trigger[i];
        if (trigger in rulesMap) {
            rulesMap[trigger].push(nrule);
        }
        else {
            rulesMap[trigger] = [nrule];
        }
    }
    delete nrule.trigger;
}
/**
 * 提取rule里面的trigger并且做映射
 * @param rules - 规则
 * @param defaultTrigger - 默认触发器
 */
function mapValidateRules(rules, defaultTrigger) {
    var rulesMap = {};
    rules.forEach(function (rule) {
        validateMap(rulesMap, rule, defaultTrigger);
    });
    return rulesMap;
}
var warn = function () { };
if (typeof process !== 'undefined' &&
    process.env &&
    "production" !== 'production' &&
    typeof window !== 'undefined' &&
    typeof document !== 'undefined') {
    warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        /* eslint-disable no-console */
        if (typeof console !== 'undefined' && console.error) {
            console.error.apply(console, Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__spreadArray"])([], Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__read"])(args), false));
        }
        /* eslint-enable no-console */
    };
}
var warning = warn;
function cloneToRuleArr(rules) {
    if (!rules) {
        return [];
    }
    var rulesArr = Array.isArray(rules) ? rules : [rules];
    // 后续会修改 rule 对象，这里做浅复制以避免对传入对象的修改
    return rulesArr.map(function (rule) { return (Object(__WEBPACK_IMPORTED_MODULE_0_tslib__["__assign"])({}, rule)); });
}

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(344)))

/***/ }),
/* 344 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.scrollToFirstError = exports.cloneAndAddKey = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = __webpack_require__(0);
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
function cloneAndAddKey(element) {
    if (element && (0, react_1.isValidElement)(element)) {
        var key = element.key || 'error';
        return (0, react_1.cloneElement)(element, { key: key });
    }
    return element;
}
exports.cloneAndAddKey = cloneAndAddKey;
function scrollToFirstError(_a) {
    var errorsGroup = _a.errorsGroup,
        options = _a.options,
        instance = _a.instance;
    if (errorsGroup && options.scrollToFirstError) {
        var firstNode = void 0;
        var firstTop = void 0;
        for (var i in errorsGroup) {
            if (errorsGroup.hasOwnProperty(i)) {
                var node = react_dom_1.default.findDOMNode(instance[i]);
                if (!node) {
                    return;
                }
                var top_1 = node.offsetTop;
                if (firstTop === undefined || firstTop > top_1) {
                    firstTop = top_1;
                    firstNode = node;
                }
            }
        }
        if (firstNode) {
            if (typeof options.scrollToFirstError === 'number' && window && typeof window.scrollTo === 'function') {
                var offsetLeft = document && document.body && document.body.offsetLeft ? document.body.offsetLeft : 0;
                window.scrollTo(offsetLeft, firstTop + options.scrollToFirstError);
            } else if ('scrollIntoViewIfNeeded' in firstNode && typeof firstNode.scrollIntoViewIfNeeded === 'function') {
                firstNode.scrollIntoViewIfNeeded(true);
            } else {
                firstNode.scrollIntoView({ block: 'center' });
            }
        }
    }
}
exports.scrollToFirstError = scrollToFirstError;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
tslib_1.__exportStar(__webpack_require__(171), exports);

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _form = __webpack_require__(348);

var _form2 = _interopRequireDefault(_form);

var _item = __webpack_require__(351);

var _item2 = _interopRequireDefault(_item);

var _submit = __webpack_require__(355);

var _submit2 = _interopRequireDefault(_submit);

var _reset = __webpack_require__(356);

var _reset2 = _interopRequireDefault(_reset);

var _error = __webpack_require__(175);

var _error2 = _interopRequireDefault(_error);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_form2.default.Item = _configProvider2.default.config(_item2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('validateStatus' in props) {
            deprecated('validateStatus', 'validateState', 'Form.Item');

            var _props = props,
                validateStatus = _props.validateStatus,
                others = (0, _objectWithoutProperties3.default)(_props, ['validateStatus']);

            props = (0, _extends3.default)({ validateState: validateStatus }, others);
        }

        return props;
    }
});
_form2.default.Submit = _submit2.default;
_form2.default.Reset = _reset2.default;
_form2.default.Error = _error2.default;

exports.default = _configProvider2.default.config(_form2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('direction' in props) {
            deprecated('direction', 'inline', 'Form');
            var _props2 = props,
                direction = _props2.direction,
                others = (0, _objectWithoutProperties3.default)(_props2, ['direction']);

            if (direction === 'hoz') {
                props = (0, _extends3.default)({ inline: true }, others);
            }
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

var _field = __webpack_require__(170);

var _field2 = _interopRequireDefault(_field);

var _responsiveGrid = __webpack_require__(97);

var _responsiveGrid2 = _interopRequireDefault(_responsiveGrid);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function pickerDefined(obj) {
    var newObj = {};
    Object.keys(obj).forEach(function (i) {
        if (typeof obj[i] !== 'undefined') {
            newObj[i] = obj[i];
        }
    });
    return newObj;
}

function preventDefault(e) {
    e.preventDefault();
}
var getNewChildren = function getNewChildren(children, props) {
    var size = props.size,
        device = props.device,
        labelAlign = props.labelAlign,
        labelTextAlign = props.labelTextAlign,
        labelCol = props.labelCol,
        wrapperCol = props.wrapperCol,
        responsive = props.responsive,
        colon = props.colon;

    return _react2.default.Children.map(children, function (child) {
        if (_util.obj.isReactFragment(child)) {
            return getNewChildren(child.props.children, props);
        }

        if (child && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && child.type._typeMark === 'form_item') {
            var childrenProps = {
                labelCol: child.props.labelCol ? child.props.labelCol : labelCol,
                wrapperCol: child.props.wrapperCol ? child.props.wrapperCol : wrapperCol,
                labelAlign: child.props.labelAlign ? child.props.labelAlign : device === 'phone' ? 'top' : labelAlign,
                labelTextAlign: child.props.labelTextAlign ? child.props.labelTextAlign : labelTextAlign,
                colon: 'colon' in child.props ? child.props.colon : colon,
                size: child.props.size ? child.props.size : size,
                responsive: responsive
            };
            return _react2.default.cloneElement(child, pickerDefined(childrenProps));
        }
        return child;
    });
};

/** Form */
var Form = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Form, _React$Component);

    function Form(props) {
        (0, _classCallCheck3.default)(this, Form);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.onChange = function (name, value) {
            _this.props.onChange(_this._formField.getValues(), {
                name: name,
                value: value,
                field: _this._formField
            });
        };

        _this._formField = null;
        if (props.field !== false) {
            var options = (0, _extends3.default)({}, props.fieldOptions, {
                onChange: _this.onChange
            });

            if (props.field) {
                _this._formField = props.field;
                var onChange = _this._formField.options.onChange;
                options.onChange = _util.func.makeChain(onChange, _this.onChange);
                _this._formField.setOptions && _this._formField.setOptions(options);
            } else {
                if ('value' in props) {
                    options.values = props.value;
                }

                _this._formField = new _field2.default(_this, options);
            }

            if (props.locale && props.locale.Validate) {
                _this._formField.setOptions({ messages: props.locale.Validate });
            }

            props.saveField(_this._formField);
        }
        return _this;
    }

    Form.prototype.getChildContext = function getChildContext() {
        return {
            _formField: this.props.field ? this.props.field : this._formField,
            _formSize: this.props.size,
            _formDisabled: this.props.disabled,
            _formPreview: this.props.isPreview,
            _formFullWidth: this.props.fullWidth,
            _formLabelForErrorMessage: this.props.useLabelForErrorMessage,
            _formMarginToDisplayHelp: this.props.preferMarginToDisplayHelp
        };
    };

    Form.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var props = this.props;

        if (this._formField) {
            if ('value' in props && props.value !== prevProps.value) {
                this._formField.setValues(props.value);
            }
            if ('error' in props && props.error !== prevProps.error) {
                this._formField.setValues(props.error);
            }
        }
    };

    Form.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            className = _props.className,
            inline = _props.inline,
            size = _props.size,
            device = _props.device,
            labelAlign = _props.labelAlign,
            labelTextAlign = _props.labelTextAlign,
            onSubmit = _props.onSubmit,
            children = _props.children,
            labelCol = _props.labelCol,
            wrapperCol = _props.wrapperCol,
            style = _props.style,
            prefix = _props.prefix,
            rtl = _props.rtl,
            isPreview = _props.isPreview,
            Tag = _props.component,
            responsive = _props.responsive,
            gap = _props.gap,
            colon = _props.colon;

        var formClassName = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'form'] = true, _classNames[prefix + 'inline'] = inline, _classNames['' + prefix + size] = size, _classNames[prefix + 'form-responsive-grid'] = responsive, _classNames[prefix + 'form-preview'] = isPreview, _classNames[className] = !!className, _classNames));

        var newChildren = getNewChildren(children, this.props);

        return _react2.default.createElement(Tag, (0, _extends3.default)({
            role: 'grid'
        }, _util.obj.pickOthers(Form.propTypes, this.props), {
            className: formClassName,
            style: style,
            dir: rtl ? 'rtl' : undefined,
            onSubmit: onSubmit
        }), responsive ? _react2.default.createElement(_responsiveGrid2.default, { gap: gap, device: device }, newChildren) : newChildren);
    };

    return Form;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 内联表单
     */
    inline: _propTypes2.default.bool,
    /**
     * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。
     * @enumdesc 大, 中, 小
     */
    size: _propTypes2.default.oneOf(['large', 'medium', 'small']),
    /**
     * 单个 Item 中表单类组件宽度是否是100%
     */
    fullWidth: _propTypes2.default.bool,
    /**
     * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上
     * @enumdesc 上, 左, 内
     */
    labelAlign: _propTypes2.default.oneOf(['top', 'left', 'inset']),
    /**
     * 标签的左右对齐方式
     * @enumdesc 左, 右
     */
    labelTextAlign: _propTypes2.default.oneOf(['left', 'right']),
    /**
     * field 实例, 传 false 会禁用 field
     */
    field: _propTypes2.default.any,
    /**
     * 保存 Form 自动生成的 field 对象
     */
    saveField: _propTypes2.default.func,
    /**
     * 控制第一级 Item 的 labelCol
     */
    labelCol: _propTypes2.default.object,
    /**
     * 控制第一级 Item 的 wrapperCol
     */
    wrapperCol: _propTypes2.default.object,
    /**
     * form内有 `htmlType="submit"` 的元素的时候会触发
     */
    onSubmit: _propTypes2.default.func,
    /**
     * 子元素
     */
    children: _propTypes2.default.any,
    /**
     * 扩展class
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * 表单数值
     */
    value: _propTypes2.default.object,
    /**
     * 表单变化回调
     * @param {Object} values 表单数据
     * @param {Object} item 详细
     * @param {String} item.name 变化的组件名
     * @param {String} item.value 变化的数据
     * @param {Object} item.field field 实例
     */
    onChange: _propTypes2.default.func,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    fieldOptions: _propTypes2.default.object,
    rtl: _propTypes2.default.bool,
    /**
     * 预设屏幕宽度
     */
    device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 是否开启内置的响应式布局 （使用ResponsiveGrid）
     * @version 1.19
     */
    responsive: _propTypes2.default.bool,
    /**
     * 是否开启预览态
     * @version 1.19
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 是否使用 label 替换校验信息的 name 字段
     * @version 1.20
     */
    useLabelForErrorMessage: _propTypes2.default.bool,
    /**
     * 倾向使用 item 的 margin 空间来展示 help
     * @default false
     * @version 1.26.37
     */
    preferMarginToDisplayHelp: _propTypes2.default.bool,
    /**
     * 表示是否显示 label 后面的冒号
     * @version 1.22
     */
    colon: _propTypes2.default.bool,
    /**
     * 是否禁用表单
     */
    disabled: _propTypes2.default.bool,
    // 在 responsive模式下，透传给 ResponsiveGrid的， 表示 每个 cell 之间的间距， [bottom&top, right&left]
    gap: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number])
}, _class.defaultProps = {
    prefix: 'next-',
    onSubmit: preventDefault,
    size: 'medium',
    labelAlign: 'left',
    onChange: _util.func.noop,
    component: 'form',
    saveField: _util.func.noop,
    device: 'desktop',
    colon: false,
    disabled: false,
    preferMarginToDisplayHelp: false
}, _class.childContextTypes = {
    _formField: _propTypes2.default.object,
    _formSize: _propTypes2.default.string,
    _formDisabled: _propTypes2.default.bool,
    _formPreview: _propTypes2.default.bool,
    _formFullWidth: _propTypes2.default.bool,
    _formLabelForErrorMessage: _propTypes2.default.bool,
    _formMarginToDisplayHelp: _propTypes2.default.bool
}, _temp);
Form.displayName = 'Form';
exports.default = Form;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.filterUndefinedValue = filterUndefinedValue;
exports.stripObject = stripObject;

var _util = __webpack_require__(4);

var isPlainObject = _util.obj.isPlainObject;

/**
 * 过滤 undefined 类型的值
 * @param  {*}  obj
 * @return {Object}
 */

function filterUndefinedValue(object) {
    if (!isPlainObject(object)) {
        return object;
    }

    var obj = {};

    Object.keys(object).forEach(function (key) {
        var value = object[key];

        if (value !== undefined) {
            obj[key] = value;
        }
    });

    return obj;
}

/**
 * 从 obj 中去除 subObj
 * @param  {*}  obj
 * @param  {*}  subObj
 * @return {Object}
 */
function stripObject(obj, subObj) {
    var newObject = {};

    Object.keys(obj).forEach(function (key) {
        if (!(key in subObj)) {
            newObject[key] = obj[key];
        }
    });
    return newObject;
}

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var pickOthers = _util.obj.pickOthers;
/**
 * ResponsiveGrid.Cell
 */

var Cell = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Cell, _Component);

    function Cell() {
        (0, _classCallCheck3.default)(this, Cell);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Cell.prototype.render = function render() {
        var _props = this.props,
            View = _props.component,
            children = _props.children;

        var others = pickOthers(Object.keys(Cell.propTypes), this.props);

        return _react2.default.createElement(View, others, children);
    };

    return Cell;
}(_react.Component), _class._typeMark = 'responsive_grid_cell', _class.propTypes = {
    device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 横向，占据几列
     */
    colSpan: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.object]),
    /**
     * 纵向，占据几行
     */
    rowSpan: _propTypes2.default.number,
    /**
     * 设置标签类型
     */
    component: _propTypes2.default.elementType
}, _class.defaultProps = {
    component: 'div',
    device: 'desktop'
}, _temp);
Cell.displayName = 'Cell';
exports.default = _configProvider2.default.config(Cell);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _grid = __webpack_require__(174);

var _grid2 = _interopRequireDefault(_grid);

var _responsiveGrid = __webpack_require__(97);

var _responsiveGrid2 = _interopRequireDefault(_responsiveGrid);

var _util = __webpack_require__(4);

var _error = __webpack_require__(175);

var _error2 = _interopRequireDefault(_error);

var _enhance = __webpack_require__(354);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Row = _grid2.default.Row,
    Col = _grid2.default.Col;
var Cell = _responsiveGrid2.default.Cell;
var isNil = _util.obj.isNil;

/** Form.Item
 *  @description 手动传递了 wrapCol labelCol 会使用 Grid 辅助布局; labelAlign='top' 会强制禁用 Grid
 *  @order 1
 */

var Item = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Item, _React$Component);

    function Item() {
        (0, _classCallCheck3.default)(this, Item);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    /**
     * 从子元素里面提取表单组件. TODO: 2.x 中改为只获取一个元素
     */
    Item.prototype.getNames = function getNames(children) {
        var name = this.props.name;

        var childrenList = _react2.default.Children.toArray(children);
        var nameList = childrenList.filter(function (c) {
            return c.props && ('name' in c.props || 'data-meta' in c.props);
        }).map(function (c) {
            return c.props.name || c.props.id;
        });

        if (nameList.length) {
            return nameList;
        } else if (name) {
            return [name];
        }

        return [];
    };

    Item.prototype.getHelper = function getHelper(children) {
        var _props = this.props,
            help = _props.help,
            preferMarginToDisplayHelp = _props.preferMarginToDisplayHelp;
        var _context = this.context,
            _formField = _context._formField,
            _formMarginToDisplayHelp = _context._formMarginToDisplayHelp;

        var useMargin = typeof preferMarginToDisplayHelp !== 'undefined' ? preferMarginToDisplayHelp : _formMarginToDisplayHelp;

        return _react2.default.createElement(_error2.default, {
            name: help === undefined ? this.getNames(children) : undefined,
            field: _formField,
            preferMarginToDisplayHelp: useMargin
        }, help);
    };

    Item.prototype.getState = function getState(children) {
        var validateState = this.props.validateState;

        if (validateState) {
            return validateState;
        }

        if (this.context._formField) {
            var getState = this.context._formField.getState;

            var names = this.getNames(children);
            if (!names.length) {
                return '';
            }

            // get first name
            return getState(names[0]);
        }

        return undefined;
    };

    Item.prototype.getSize = function getSize() {
        return this.props.size || this.context._formSize;
    };

    Item.prototype.getDisabled = function getDisabled() {
        return 'disabled' in this.props ? this.props.disabled : this.context._formDisabled;
    };

    Item.prototype.getIsPreview = function getIsPreview() {
        return 'isPreview' in this.props ? this.props.isPreview : this.context._formPreview;
    };

    Item.prototype.getFullWidth = function getFullWidth() {
        return isNil(this.props.fullWidth) ? !!this.context._formFullWidth : this.props.fullWidth;
    };

    Item.prototype.getLabelForErrorMessage = function getLabelForErrorMessage() {
        var _props2 = this.props,
            errorMessageName = _props2.errorMessageName,
            label = _props2.label,
            useLabelForErrorMessage = _props2.useLabelForErrorMessage;

        if (errorMessageName) {
            return errorMessageName;
        }

        if (!label || typeof label !== 'string') {
            return null;
        }

        var newLabel = label.replace(':', '').replace('：', '');

        var labelForErrorMessage = useLabelForErrorMessage !== undefined ? useLabelForErrorMessage : this.context._formLabelForErrorMessage;
        if (labelForErrorMessage && newLabel) {
            return newLabel;
        }

        return null;
    };

    Item.prototype.getItemLabel = function getItemLabel(children) {
        var _classNames;

        var _props3 = this.props,
            id = _props3.id,
            required = _props3.required,
            _props3$asterisk = _props3.asterisk,
            asterisk = _props3$asterisk === undefined ? required : _props3$asterisk,
            label = _props3.label,
            labelCol = _props3.labelCol,
            wrapperCol = _props3.wrapperCol,
            prefix = _props3.prefix,
            responsive = _props3.responsive,
            labelWidth = _props3.labelWidth,
            labelTextAlign = _props3.labelTextAlign,
            colon = _props3.colon;

        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        if (!label) {
            return null;
        }

        var ele = _react2.default.createElement('label', { htmlFor: id || this.getNames(children)[0], required: asterisk, key: 'label' }, label);

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'form-item-label'] = true, _classNames['has-colon'] = colon, _classNames[prefix + 'left'] = labelTextAlign === 'left', _classNames));

        if (responsive && labelWidth && labelAlign !== 'top') {
            return _react2.default.createElement('div', { className: cls, style: { width: labelWidth } }, ele);
        }

        if ((wrapperCol || labelCol) && labelAlign !== 'top') {
            return _react2.default.createElement(Col, (0, _extends3.default)({}, labelCol, { className: cls }), ele);
        }

        return _react2.default.createElement('div', { className: cls }, ele);
    };

    Item.prototype.getItemWrapper = function getItemWrapper(children) {
        var _this2 = this;

        var _props4 = this.props,
            hasFeedback = _props4.hasFeedback,
            labelCol = _props4.labelCol,
            wrapperCol = _props4.wrapperCol,
            extra = _props4.extra,
            prefix = _props4.prefix,
            renderPreview = _props4.renderPreview,
            name = _props4.name;

        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        var state = this.getState(children);

        var isPreview = this.getIsPreview();
        var childrenProps = {
            size: this.getSize()
        };

        if (isPreview) {
            childrenProps.isPreview = true;
        }

        if ('renderPreview' in this.props && typeof renderPreview === 'function') {
            childrenProps.renderPreview = renderPreview;
        }

        if (state && (state === 'error' || hasFeedback)) {
            childrenProps.state = state;
        }

        if (labelAlign === 'inset') {
            childrenProps.label = this.getItemLabel(children);
        }

        if (this.getDisabled()) {
            childrenProps.disabled = true;
        }

        var labelForErrorMessage = this.getLabelForErrorMessage();

        var ele = _react2.default.Children.map(children, function (child, idx) {
            if (child && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && child.type._typeMark !== 'form_item' && child.type._typeMark !== 'form_error') {
                var extraProps = childrenProps;
                // 自己直接使用 field.init 会在 props 上面留下 data-meta
                // name 挪到 FormItem 上面，默认把第一个元素当做 Form 组件
                if (_this2.context._formField && !('data-meta' in child.props) && ('name' in child.props || name && idx === 0) //TODO：1.x 为了不BR, 2.x 中把优先级调换下，优先取 FormItem 的 name
                ) {
                        var initName = 'name' in child.props && child.props.name ? child.props.name : name;
                        extraProps = _this2.context._formField.init(initName, (0, _extends3.default)({}, (0, _enhance.getFieldInitCfg)(_this2.props, child.type.displayName, labelForErrorMessage), {
                            props: (0, _extends3.default)({}, child.props, { ref: child.ref })
                        }), childrenProps);
                    } else {
                    extraProps = (0, _extends3.default)({}, child.props, extraProps);
                }

                return _react2.default.cloneElement(child, extraProps);
            }

            return child;
        });

        var help = this.getHelper(children);

        if ((wrapperCol || labelCol) && labelAlign !== 'top') {
            return _react2.default.createElement(Col, (0, _extends3.default)({}, wrapperCol, { className: prefix + 'form-item-control', key: 'item' }), ele, ' ', help, ' ', extra);
        }

        return _react2.default.createElement('div', { className: prefix + 'form-item-control' }, ele, ' ', help, ' ', extra);
    };

    Item.prototype.getLabelAlign = function getLabelAlign(labelAlign, device) {
        if (device === 'phone') {
            return 'top';
        }

        return labelAlign;
    };

    Item.prototype.render = function render() {
        var _classNames2;

        var _props5 = this.props,
            className = _props5.className,
            style = _props5.style,
            prefix = _props5.prefix,
            wrapperCol = _props5.wrapperCol,
            labelCol = _props5.labelCol,
            responsive = _props5.responsive,
            children = _props5.children;

        var labelAlign = this.getLabelAlign(this.props.labelAlign, this.props.device);

        var childrenNode = children;
        if (typeof children === 'function' && this.context._formField) {
            childrenNode = children(this.context._formField.getValues());
        }

        var state = this.getState(childrenNode);
        var size = this.getSize();
        var fullWidth = this.getFullWidth();
        var isPreview = this.getIsPreview();

        var itemClassName = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'form-item'] = true, _classNames2['' + prefix + labelAlign] = labelAlign, _classNames2['has-' + state] = !!state, _classNames2['' + prefix + size] = !!size, _classNames2[prefix + 'form-item-fullwidth'] = fullWidth, _classNames2['' + className] = !!className, _classNames2[prefix + 'form-preview'] = isPreview, _classNames2));

        // 垂直模式并且左对齐才用到
        var Tag = responsive ? Cell : (wrapperCol || labelCol) && labelAlign !== 'top' ? Row : 'div';
        var label = labelAlign === 'inset' ? null : this.getItemLabel(childrenNode);

        return _react2.default.createElement(Tag, (0, _extends3.default)({}, _util.obj.pickOthers(Item.propTypes, this.props), { className: itemClassName, style: style }), label, this.getItemWrapper(childrenNode));
    };

    return Item;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * label 标签的文本
     */
    label: _propTypes2.default.node,
    /**
     * label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效
     */
    labelCol: _propTypes2.default.object,
    /**
     * 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol
     */
    wrapperCol: _propTypes2.default.object,
    /**
     * 自定义提示信息，如不设置，则会根据校验规则自动生成.
     */
    help: _propTypes2.default.node,
    /**
     * 字段名，默认赋值给第一个子元素
     */
    name: _propTypes2.default.string,
    /**
     * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面
     */
    extra: _propTypes2.default.node,
    /**
     * 校验状态，如不设置，则会根据校验规则自动生成
     * @enumdesc 失败, 成功, 校验中, 警告
     */
    validateState: _propTypes2.default.oneOf(['error', 'success', 'loading', 'warning']),
    /**
     * 配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持
     */
    hasFeedback: _propTypes2.default.bool, //TODO: hasFeedback => validateStatus=[error,success,loading]
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    id: _propTypes2.default.string,
    /**
     * node 或者 function(values)
     */
    children: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),
    /**
     * 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。
     */
    size: _propTypes2.default.oneOf(['large', 'small', 'medium']),
    /**
     * 单个 Item 中表单类组件宽度是否是100%
     */
    fullWidth: _propTypes2.default.bool,
    /**
     * 标签的位置, 如果不设置 labelCol 和 wrapperCol 那么默认是标签在上
     * @enumdesc 上, 左, 内
     */
    labelAlign: _propTypes2.default.oneOf(['top', 'left', 'inset']),
    /**
     * 标签的左右对齐方式
     * @enumdesc 左, 右
     */
    labelTextAlign: _propTypes2.default.oneOf(['left', 'right']),
    /**
     * 扩展class
     */
    className: _propTypes2.default.string,
    /**
     * [表单校验] 不能为空
     */
    required: _propTypes2.default.bool,
    /**
     * required 的星号是否显示
     */
    asterisk: _propTypes2.default.bool,
    /**
     * required 自定义错误信息
     */
    requiredMessage: _propTypes2.default.string,
    /**
     * required 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    requiredTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * [表单校验] 最小值
     */
    min: _propTypes2.default.number,
    /**
     * [表单校验] 最大值
     */
    max: _propTypes2.default.number,
    /**
     * min/max 自定义错误信息
     */
    minmaxMessage: _propTypes2.default.string,
    /**
     * min/max 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    minmaxTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * [表单校验] 字符串最小长度 / 数组最小个数
     */
    minLength: _propTypes2.default.number,
    /**
     * [表单校验] 字符串最大长度 / 数组最大个数
     */
    maxLength: _propTypes2.default.number,
    /**
     * minLength/maxLength 自定义错误信息
     */
    minmaxLengthMessage: _propTypes2.default.string,
    /**
     * minLength/maxLength 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    minmaxLengthTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * [表单校验] 字符串精确长度 / 数组精确个数
     */
    length: _propTypes2.default.number,
    /**
     * length 自定义错误信息
     */
    lengthMessage: _propTypes2.default.string,
    /**
     * length 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    lengthTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 正则校验
     */
    pattern: _propTypes2.default.any,
    /**
     * pattern 自定义错误信息
     */
    patternMessage: _propTypes2.default.string,
    /**
     * pattern 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    patternTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * [表单校验] 四种常用的 pattern
     */
    format: _propTypes2.default.oneOf(['number', 'email', 'url', 'tel']),
    /**
     * format 自定义错误信息
     */
    formatMessage: _propTypes2.default.string,
    /**
     * format 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    formatTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * [表单校验] 自定义校验函数
     */
    validator: _propTypes2.default.func,
    /**
     * validator 校验何时触发，默认值 onChange, 原生事件均可使用 onChange/onBlur/onFocus/...
     */
    validatorTrigger: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
    /**
     * 是否修改数据时自动触发校验
     */
    autoValidate: _propTypes2.default.bool,
    /**
     * 预设屏幕宽度
     */
    device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
    responsive: _propTypes2.default.bool,
    /**
     * 在响应式布局模式下，表单项占多少列
     */
    colSpan: _propTypes2.default.number,
    /**
     * 在响应式布局下，且label在左边时，label的宽度是多少
     */
    labelWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    /**
     * 是否开启预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {any} value 根据包裹的组件的 value 类型而决定
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 替代校验信息的 name 字段，useLabelForErrorMessage 开启的情况下比 label 优先级高
     */
    errorMessageName: _propTypes2.default.string,
    /**
     * 是否使用 label 替换校验信息的 name 字段
     */
    useLabelForErrorMessage: _propTypes2.default.bool,
    /**
     * 倾向使用 item 的 margin 空间来展示 help
     * @default false
     * @version 1.26.37
     */
    preferMarginToDisplayHelp: _propTypes2.default.bool,
    /**
     * 表示是否显示 label 后面的冒号
     */
    colon: _propTypes2.default.bool,
    /**
     * 是否禁用表单
     */
    disabled: _propTypes2.default.bool,
    /**
     * 子元素的 value 名称
     */
    valueName: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    hasFeedback: false,
    labelWidth: 100
}, _class.contextTypes = {
    _formField: _propTypes2.default.object,
    _formSize: _propTypes2.default.oneOf(['large', 'small', 'medium']),
    _formDisabled: _propTypes2.default.bool,
    _formPreview: _propTypes2.default.bool,
    _formFullWidth: _propTypes2.default.bool,
    _formLabelForErrorMessage: _propTypes2.default.bool,
    _formMarginToDisplayHelp: _propTypes2.default.bool
}, _class._typeMark = 'form_item', _temp);
Item.displayName = 'Item';
exports.default = Item;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
/**
 * Grid.Row
 * @order 1
 */
var Row = /** @class */function (_super) {
    tslib_1.__extends(Row, _super);
    function Row() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Row.prototype.render = function () {
        var _a, _b, _c, _d;
        /* eslint-disable no-unused-vars */
        var _e = this.props,
            prefix = _e.prefix,
            pure = _e.pure,
            wrap = _e.wrap,
            fixed = _e.fixed,
            gutter = _e.gutter,
            fixedWidth = _e.fixedWidth,
            align = _e.align,
            justify = _e.justify,
            hidden = _e.hidden,
            className = _e.className,
            style = _e.style,
            component = _e.component,
            children = _e.children,
            rtl = _e.rtl,
            others = tslib_1.__rest(_e, ["prefix", "pure", "wrap", "fixed", "gutter", "fixedWidth", "align", "justify", "hidden", "className", "style", "component", "children", "rtl"]);
        var domOtherProps = util_1.obj.pickOthers(Row.propTypes, others);
        var Tag = component;
        var hiddenClassObj = {};
        if (hidden === true) {
            hiddenClassObj = (_a = {}, _a["".concat(prefix, "row-hidden")] = true, _a);
        } else if (typeof hidden === 'string') {
            hiddenClassObj = (_b = {}, _b["".concat(prefix, "row-").concat(hidden, "-hidden")] = !!hidden, _b);
        } else if (Array.isArray(hidden)) {
            hiddenClassObj = hidden.reduce(function (ret, point) {
                ret["".concat(prefix, "row-").concat(point, "-hidden")] = !!point;
                return ret;
            }, {});
        }
        var newClassName = (0, classnames_1.default)(tslib_1.__assign(tslib_1.__assign((_c = {}, _c["".concat(prefix, "row")] = true, _c["".concat(prefix, "row-wrap")] = wrap, _c["".concat(prefix, "row-fixed")] = fixed, _c["".concat(prefix, "row-fixed-").concat(fixedWidth)] = !!fixedWidth, _c["".concat(prefix, "row-justify-").concat(justify)] = !!justify, _c["".concat(prefix, "row-align-").concat(align)] = !!align, _c), hiddenClassObj), (_d = {}, _d[className] = !!className, _d)));
        var newChildren = children;
        var newStyle = style;
        var gutterNumber = parseInt(gutter.toString(), 10);
        if (gutterNumber !== 0) {
            var halfGutterString_1 = "".concat(gutterNumber / 2, "px");
            newStyle = tslib_1.__assign({ marginLeft: "-".concat(halfGutterString_1), marginRight: "-".concat(halfGutterString_1) }, newStyle);
            newChildren = react_1.Children.map(children, function (child) {
                if (child && child.type && typeof child.type === 'function' && child.type.isNextCol) {
                    var newChild = (0, react_1.cloneElement)(child, {
                        style: tslib_1.__assign({ paddingLeft: halfGutterString_1, paddingRight: halfGutterString_1 }, child.style || {})
                    });
                    return newChild;
                }
                return child;
            });
        }
        return react_1.default.createElement(Tag, tslib_1.__assign({ dir: rtl ? 'rtl' : 'ltr', role: "row", className: newClassName, style: newStyle }, domOtherProps), newChildren);
    };
    Row.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, pure: prop_types_1.default.bool, rtl: prop_types_1.default.bool, className: prop_types_1.default.string, style: prop_types_1.default.object,
        /**
         * 行内容
         */
        children: prop_types_1.default.node,
        /**
         * 列间隔
         */
        gutter: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        /**
         * 列在行中宽度溢出后是否换行
         */
        wrap: prop_types_1.default.bool,
        /**
         * 行在某一断点下宽度是否保持不变（默认行宽度随视口变化而变化）
         */
        fixed: prop_types_1.default.bool, fixedWidth: prop_types_1.default.oneOf(['xxs', 'xs', 's', 'm', 'l', 'xl']), align: prop_types_1.default.oneOf(['top', 'center', 'bottom', 'baseline', 'stretch']), justify: prop_types_1.default.oneOf(['start', 'center', 'end', 'space-between', 'space-around']), hidden: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.string, prop_types_1.default.array]), component: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func]) });
    Row.defaultProps = {
        prefix: 'next-',
        pure: false,
        fixed: false,
        gutter: 0,
        wrap: false,
        component: 'div'
    };
    return Row;
}(react_1.Component);
exports.default = Row;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var breakPoints = ['xxs', 'xs', 's', 'm', 'l', 'xl'];
/**
 * Grid.Col
 * @order 2
 */
var Col = /** @class */function (_super) {
    tslib_1.__extends(Col, _super);
    function Col() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Col.prototype.render = function () {
        var _a, _b, _c, _d;
        var _this = this;
        var _e = this.props,
            prefix = _e.prefix,
            pure = _e.pure,
            span = _e.span,
            offset = _e.offset,
            fixedSpan = _e.fixedSpan,
            fixedOffset = _e.fixedOffset,
            hidden = _e.hidden,
            align = _e.align,
            xxs = _e.xxs,
            xs = _e.xs,
            s = _e.s,
            m = _e.m,
            l = _e.l,
            xl = _e.xl,
            component = _e.component,
            className = _e.className,
            children = _e.children,
            rtl = _e.rtl,
            others = tslib_1.__rest(_e, ["prefix", "pure", "span", "offset", "fixedSpan", "fixedOffset", "hidden", "align", "xxs", "xs", "s", "m", "l", "xl", "component", "className", "children", "rtl"]);
        var domOtherProps = util_1.obj.pickOthers(Col.propTypes, others);
        var Tag = component;
        var pointClassObj = breakPoints.reduce(function (ret, point) {
            var pointProps = {};
            var pointValue = _this.props[point];
            if ((typeof pointValue === "undefined" ? "undefined" : (0, _typeof3.default)(pointValue)) === 'object' && pointValue !== null) {
                pointProps = pointValue;
            } else {
                pointProps.span = pointValue;
            }
            ret["".concat(prefix, "col-").concat(point, "-").concat(pointProps.span)] = !!pointProps.span;
            ret["".concat(prefix, "col-").concat(point, "-offset-").concat(pointProps.offset)] = !!pointProps.offset;
            return ret;
        }, {});
        var hiddenClassObj = {};
        if (hidden === true) {
            hiddenClassObj = (_a = {}, _a["".concat(prefix, "col-hidden")] = true, _a);
        } else if (typeof hidden === 'string') {
            hiddenClassObj = (_b = {}, _b["".concat(prefix, "col-").concat(hidden, "-hidden")] = !!hidden, _b);
        } else if (Array.isArray(hidden)) {
            hiddenClassObj = hidden.reduce(function (ret, point) {
                ret["".concat(prefix, "col-").concat(point, "-hidden")] = !!point;
                return ret;
            }, {});
        }
        var classes = (0, classnames_1.default)(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign((_c = {}, _c["".concat(prefix, "col")] = true, _c["".concat(prefix, "col-").concat(span)] = !!span, _c["".concat(prefix, "col-fixed-").concat(fixedSpan)] = !!fixedSpan, _c["".concat(prefix, "col-offset-").concat(offset)] = !!offset, _c["".concat(prefix, "col-offset-fixed-").concat(fixedOffset)] = !!fixedOffset, _c["".concat(prefix, "col-").concat(align)] = !!align, _c), pointClassObj), hiddenClassObj), (_d = {}, _d[className] = !!className, _d)));
        return react_1.default.createElement(Tag, tslib_1.__assign({ dir: rtl ? 'rtl' : 'ltr', role: "gridcell", className: classes }, domOtherProps), children);
    };
    Col.isNextCol = true;
    Col.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, pure: prop_types_1.default.bool, rtl: prop_types_1.default.bool, className: prop_types_1.default.string,
        /**
         * 列内容
         */
        children: prop_types_1.default.node,
        /**
         * 列宽度<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24
         */
        span: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        /**
         * 固定列宽度，宽度值为20 * 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30
         */
        fixedSpan: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        /**
         * （不支持IE9浏览器）列偏移<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24
         */
        offset: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        /**
         * （不支持IE9浏览器）固定列偏移，宽度值为20 * 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30
         */
        fixedOffset: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        /**
         * （不支持IE9浏览器）多列垂直方向对齐方式，可覆盖Row的align属性
         */
        align: prop_types_1.default.oneOf(['top', 'center', 'bottom', 'baseline', 'stretch']),
        /**
         * 列在不同断点下的显示与隐藏<br><br>**可选值**:<br>true(在所有断点下隐藏)<br>false(在所有断点下显示)<br>'xs'(在 xs 断点下隐藏）<br>['xxs', 'xs', 's', 'm', 'l', 'xl'](在 xxs, xs, s, m, l, xl 断点下隐藏）
         */
        hidden: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.string, prop_types_1.default.array]), xxs: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), xs: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), s: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), m: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), l: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), xl: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number, prop_types_1.default.object]), component: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.func]) });
    Col.defaultProps = {
        prefix: 'next-',
        pure: false,
        component: 'div'
    };
    return Col;
}(react_1.Component);
exports.default = Col;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRules = getRules;
exports.getFieldInitCfg = getFieldInitCfg;
function getCfgFromProps(props, type) {
    if (type in props) {
        return props[type];
    }

    return undefined;
}

function getRule(ruleName, props) {
    var _ref;

    return _ref = {}, _ref[ruleName] = props[ruleName], _ref.message = getCfgFromProps(props, ruleName + 'Message'), _ref.trigger = getCfgFromProps(props, ruleName + 'Trigger'), _ref;
}

function getValueName(props, displayName) {
    if (props.valueName) {
        return props.valueName;
    }

    if (typeof displayName === 'string') {
        // Next Components are all wrappered by configProvider
        var componentName = displayName.replace(/Config\(/g, '').replace(/\)/g, '');
        if (['Switch', 'Checkbox', 'Radio'].indexOf(componentName) !== -1) {
            return 'checked';
        }
    }

    return 'value';
}

function getRules(props, labelForErrorMessage) {
    var result = [];

    // required
    if (props.required) {
        result.push(getRule('required', props));
    }

    var maxLength = Number(props.maxLength);
    var minLength = Number(props.minLength);
    if (minLength || maxLength) {
        result.push({
            minLength: minLength,
            maxLength: maxLength,
            // minLengthMessage maxLengthMessage had been deprected, please use minmaxLength. TODO: removed in 2.0
            message: getCfgFromProps(props, 'minmaxLengthMessage') || getCfgFromProps(props, 'minLengthMessage') || getCfgFromProps(props, 'maxLengthMessage'),
            trigger: getCfgFromProps(props, 'minmaxLengthTrigger') || getCfgFromProps(props, 'minLengthTrigger') || getCfgFromProps(props, 'maxLengthTrigger')
        });
    }

    // length
    if (props.length) {
        result.push(getRule('length', props));
    }

    // pattern
    if (props.pattern) {
        result.push(getRule('pattern', props));
    }

    // format
    if (['number', 'tel', 'url', 'email'].indexOf(props.format) > -1) {
        result.push(getRule('format', props));
    }

    var max = Number(props.max);
    var min = Number(props.min);
    // max min
    if (max || min) {
        result.push({
            min: min,
            max: max,
            // minMessage maxMessage had been deprected, please use minmaxLength. TODO: removed in 2.0
            message: getCfgFromProps(props, 'minmaxMessage') || getCfgFromProps(props, 'minMessage') || getCfgFromProps(props, 'maxMessage'),
            trigger: getCfgFromProps(props, 'minmaxTrigger') || getCfgFromProps(props, 'minTrigger') || getCfgFromProps(props, 'maxTrigger')
        });
    }

    if (props.validator && typeof props.validator === 'function') {
        result.push({
            validator: props.validator,
            trigger: getCfgFromProps(props, 'validatorTrigger')
        });
    }

    if (labelForErrorMessage) {
        result.forEach(function (r) {
            r.aliasName = labelForErrorMessage;
        });
    }

    return result;
}

function getFieldInitCfg(props, displayName, labelForErrorMessage) {
    return {
        valueName: getValueName(props, displayName),
        trigger: props.trigger ? props.trigger : 'onChange',
        autoValidate: props.autoValidate,
        rules: getRules(props, labelForErrorMessage)
    };
}

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Form.Submit
 * @description 继承 Button API
 * @order 2
 */
var Submit = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Submit, _React$Component);

    function Submit() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Submit);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                onClick = _this$props.onClick,
                validate = _this$props.validate;

            var field = _this.context._formField || _this.props.field;

            if (!field) {
                onClick();
                return;
            }

            if (validate === true) {
                field.validate(function (errors) {
                    onClick(field.getValues(), errors, field);
                });
            } else if (Array.isArray(validate)) {
                field.validate(validate, function (errors) {
                    onClick(field.getValues(), errors, field);
                });
            } else {
                onClick(field.getValues(), null, field);
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Submit.prototype.render = function render() {
        var children = this.props.children;

        return _react2.default.createElement(_button2.default, (0, _extends3.default)({}, _util.obj.pickOthers(Submit.propTypes, this.props), { onClick: this.handleClick }), children);
    };

    return Submit;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 点击提交后触发
     * @param {Object} value 数据
     * @param {Object} errors 错误数据
     * @param {class} field 实例
     */
    onClick: _propTypes2.default.func,
    /**
     * 是否校验/需要校验的 name 数组
     */
    validate: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.array]),
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _propTypes2.default.object,
    children: _propTypes2.default.node
}, _class.defaultProps = {
    onClick: _util.func.noop
}, _class.contextTypes = {
    _formField: _propTypes2.default.object
}, _temp2);
Submit.displayName = 'Submit';
exports.default = Submit;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Form.Reset
 * @description 继承 Button API
 * @order 3
 */
var Reset = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Reset, _React$Component);

    function Reset() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Reset);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function () {
            var _this$props = _this.props,
                names = _this$props.names,
                toDefault = _this$props.toDefault,
                onClick = _this$props.onClick;

            var field = _this.context._formField || _this.props.field;

            if (!field) {
                onClick();
                return;
            }

            if (toDefault) {
                field.resetToDefault(names);
            } else {
                field.reset(names);
            }

            onClick();
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Reset.prototype.render = function render() {
        var children = this.props.children;

        return _react2.default.createElement(_button2.default, (0, _extends3.default)({}, _util.obj.pickOthers(Reset.propTypes, this.props), { onClick: this.handleClick }), children);
    };

    return Reset;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 自定义重置的字段
     */
    names: _propTypes2.default.array,
    /**
     * 点击提交后触发
     */
    onClick: _propTypes2.default.func,
    /**
     * 返回默认值
     */
    toDefault: _propTypes2.default.bool,
    /**
     * 自定义 field (在 Form 内不需要设置)
     */
    field: _propTypes2.default.object,
    children: _propTypes2.default.node
}, _class.defaultProps = {
    onClick: _util.func.noop
}, _class.contextTypes = {
    _formField: _propTypes2.default.object
}, _temp2);
Reset.displayName = 'Reset';
exports.default = Reset;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;

/**
 * MenuButton
 */

var MenuButton = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(MenuButton, _React$Component);

    function MenuButton(props, context) {
        (0, _classCallCheck3.default)(this, MenuButton);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

        _this.clickMenuItem = function (key) {
            var _this$props;

            for (var _len = arguments.length, others = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                others[_key - 1] = arguments[_key];
            }

            var selectMode = _this.props.selectMode;

            (_this$props = _this.props).onItemClick.apply(_this$props, [key].concat(others));

            if (selectMode === 'multiple') {
                return;
            }

            _this.onPopupVisibleChange(false, 'menuSelect');
        };

        _this.selectMenu = function (keys) {
            var _this$props2;

            for (var _len2 = arguments.length, others = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                others[_key2 - 1] = arguments[_key2];
            }

            if (!('selectedKeys' in _this.props)) {
                _this.setState({
                    selectedKeys: keys
                });
            }
            (_this$props2 = _this.props).onSelect.apply(_this$props2, [keys].concat(others));
        };

        _this.onPopupOpen = function () {
            var button = (0, _reactDom.findDOMNode)(_this);
            if (_this.props.autoWidth && button && _this.menu) {
                _this.menu.style.width = button.offsetWidth + 'px';
            }
        };

        _this.onPopupVisibleChange = function (visible, type) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, type);
        };

        _this._menuRefHandler = function (ref) {
            _this.menu = (0, _reactDom.findDOMNode)(ref);

            var refFn = _this.props.menuProps.ref;
            if (typeof refFn === 'function') {
                refFn(ref);
            }
        };

        _this.state = {
            selectedKeys: props.defaultSelectedKeys,
            visible: props.defaultVisible
        };
        return _this;
    }

    MenuButton.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var st = {};

        if ('visible' in props) {
            st.visible = props.visible;
        }

        if ('selectedKeys' in props) {
            st.selectedKeys = props.selectedKeys;
        }

        return st;
    };

    MenuButton.prototype.render = function render() {
        var _classnames, _classnames2;

        var _props = this.props,
            prefix = _props.prefix,
            style = _props.style,
            className = _props.className,
            label = _props.label,
            popupTriggerType = _props.popupTriggerType,
            popupContainer = _props.popupContainer,
            popupStyle = _props.popupStyle,
            popupClassName = _props.popupClassName,
            popupProps = _props.popupProps,
            followTrigger = _props.followTrigger,
            selectMode = _props.selectMode,
            menuProps = _props.menuProps,
            children = _props.children,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'style', 'className', 'label', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'followTrigger', 'selectMode', 'menuProps', 'children']);

        var state = this.state;

        var classNames = (0, _classnames4.default)((_classnames = {}, _classnames[prefix + 'menu-btn'] = true, _classnames[prefix + 'expand'] = state.visible, _classnames.opened = state.visible, _classnames), className);

        var popupClassNames = (0, _classnames4.default)((_classnames2 = {}, _classnames2[prefix + 'menu-btn-popup'] = true, _classnames2), popupClassName);

        var trigger = _react2.default.createElement(_button2.default, (0, _extends3.default)({ style: style, className: classNames }, _util.obj.pickOthers(MenuButton.propTypes, others)), label, ' ', _react2.default.createElement(_icon2.default, { type: 'arrow-down', className: prefix + 'menu-btn-arrow' }));

        return _react2.default.createElement(Popup, (0, _extends3.default)({}, popupProps, {
            followTrigger: followTrigger,
            visible: state.visible,
            onVisibleChange: this.onPopupVisibleChange,
            trigger: trigger,
            triggerType: popupTriggerType,
            container: popupContainer,
            onOpen: this.onPopupOpen,
            style: popupStyle,
            className: popupClassNames
        }), _react2.default.createElement('div', { className: prefix + 'menu-btn-spacing-tb' }, _react2.default.createElement(_menu2.default, (0, _extends3.default)({}, menuProps, {
            ref: this._menuRefHandler,
            selectedKeys: state.selectedKeys,
            selectMode: selectMode,
            onSelect: this.selectMenu,
            onItemClick: this.clickMenuItem
        }), children)));
    };

    return MenuButton;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 按钮上的文本内容
     */
    label: _propTypes2.default.node,
    /**
     * 弹层是否与按钮宽度相同
     */
    autoWidth: _propTypes2.default.bool,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层容器
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层展开状态
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否展开
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层在显示和隐藏触发的事件
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层属性透传
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 默认激活的菜单项（用法同 Menu 非受控）
     */
    defaultSelectedKeys: _propTypes2.default.array,
    /**
     * 激活的菜单项（用法同 Menu 受控）
     */
    selectedKeys: _propTypes2.default.array,
    /**
     * 菜单的选择模式，同 Menu
     */
    selectMode: _propTypes2.default.oneOf(['single', 'multiple']),
    /**
     * 点击菜单项后的回调，同 Menu
     */
    onItemClick: _propTypes2.default.func,
    /**
     * 选择菜单后的回调，同 Menu
     */
    onSelect: _propTypes2.default.func,
    /**
     * 菜单属性透传
     */
    menuProps: _propTypes2.default.object,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string,
    children: _propTypes2.default.any
}, _class.defaultProps = {
    prefix: 'next-',
    autoWidth: true,
    popupTriggerType: 'click',
    onVisibleChange: _util.func.noop,
    onItemClick: _util.func.noop,
    onSelect: _util.func.noop,
    defaultSelectedKeys: [],
    menuProps: {}
}, _temp);
MenuButton.displayName = 'MenuButton';

MenuButton.Item = _menu2.default.Item;
MenuButton.Group = _menu2.default.Group;
MenuButton.Divider = _menu2.default.Divider;

exports.default = _configProvider2.default.config((0, _reactLifecyclesCompat.polyfill)(MenuButton), {
    componentName: 'MenuButton'
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var component_1 = __webpack_require__(22);
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var item_1 = tslib_1.__importDefault(__webpack_require__(359));
var group_1 = tslib_1.__importDefault(__webpack_require__(360));
var sub_nav_1 = tslib_1.__importDefault(__webpack_require__(361));
var popup_item_1 = tslib_1.__importDefault(__webpack_require__(362));
var nav_1 = tslib_1.__importDefault(__webpack_require__(363));
var Divider = menu_1.default.Divider;
var NavWithSubComponent = (0, component_1.assignSubComponent)(nav_1.default, { Item: item_1.default, Group: group_1.default, SubNav: sub_nav_1.default, PopupItem: popup_item_1.default, Divider: Divider });
exports.default = NavWithSubComponent;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var balloon_1 = tslib_1.__importDefault(__webpack_require__(58));
var Tooltip = balloon_1.default.Tooltip;
/**
 * Nav.Item
 * @remarks 继承自 `Menu.Item` 的能力请查看 `Menu.Item` 文档
 */
var Item = /** @class */function (_super) {
    tslib_1.__extends(Item, _super);
    function Item() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Item.prototype.render = function () {
        var _a;
        var _b = this.context,
            prefix = _b.prefix,
            iconOnly = _b.iconOnly,
            iconOnlyWidth = _b.iconOnlyWidth,
            hasTooltip = _b.hasTooltip,
            iconTextOnly = _b.iconTextOnly;
        var _c = this.props,
            icon = _c.icon,
            children = _c.children,
            className = _c.className,
            others = tslib_1.__rest(_c, ["icon", "children", "className"]);
        var iconEl = typeof icon === 'string' ? react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "nav-icon"), type: icon }) : icon;
        var title;
        if (typeof children === 'string') {
            title = children;
        }
        var showChildren = !iconOnly || iconOnly && !iconOnlyWidth || iconTextOnly;
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "nav-with-title")] = iconOnly && iconTextOnly, _a[className] = !!className, _a));
        var newChildren = showChildren ? iconTextOnly ? react_1.default.createElement("span", { className: "".concat(prefix, "nav-text") }, children) : children : null;
        var item = react_1.default.createElement(menu_1.default.Item, tslib_1.__assign({ title: title, className: cls }, others), iconEl, newChildren);
        if (iconOnly && hasTooltip && others.parentMode !== 'popup') {
            return react_1.default.createElement(Tooltip, { align: "r", trigger: item }, children);
        }
        return item;
    };
    Item.menuChildType = 'item';
    Item.propTypes = {
        /**
         * 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type="icon type" />`
         */
        icon: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.node]),
        /**
         * 导航内容
         */
        children: prop_types_1.default.node,
        parentMode: prop_types_1.default.oneOf(['inline', 'popup'])
    };
    Item.contextTypes = {
        prefix: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool,
        iconOnlyWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        iconTextOnly: prop_types_1.default.bool,
        hasTooltip: prop_types_1.default.bool
    };
    return Item;
}(react_1.Component);
exports.default = Item;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
/**
 * Nav.Group
 * @remarks 继承自 `Menu.Group` 的能力请查看 `Menu.Group` 文档
 */
var Group = /** @class */function (_super) {
    tslib_1.__extends(Group, _super);
    function Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Group.prototype.render = function () {
        var _a;
        var _b = this.context,
            prefix = _b.prefix,
            iconOnly = _b.iconOnly;
        var _c = this.props,
            className = _c.className,
            children = _c.children,
            label = _c.label,
            others = tslib_1.__rest(_c, ["className", "children", "label"]);
        var newLabel = label;
        if (iconOnly) {
            // TODO: add a group icon ?
            newLabel = [react_1.default.createElement("span", { key: "label" }, label)];
        }
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "nav-group-label")] = true, _a[className] = !!className, _a));
        return react_1.default.createElement(menu_1.default.Group, tslib_1.__assign({ className: cls, label: newLabel }, others), children);
    };
    Group.menuChildType = 'group';
    Group.propTypes = {
        /**
         * 自定义类名
         */
        className: prop_types_1.default.string,
        /**
         * 标签内容
         */
        label: prop_types_1.default.node,
        /**
         * 导航项和子导航
         */
        children: prop_types_1.default.node
    };
    Group.contextTypes = {
        prefix: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool
    };
    return Group;
}(react_1.Component);
exports.default = Group;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
/**
 * Nav.SubNav
 * @remarks 继承自 `Menu.SubMenu` 的能力请查看 `Menu.SubMenu` 文档
 */
var SubNav = /** @class */function (_super) {
    tslib_1.__extends(SubNav, _super);
    function SubNav() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SubNav.prototype.render = function () {
        var _a;
        var _b = this.context,
            prefix = _b.prefix,
            iconOnly = _b.iconOnly,
            iconOnlyWidth = _b.iconOnlyWidth,
            hasArrow = _b.hasArrow,
            noIcon = _b.noIcon,
            mode = _b.mode;
        var _c = this.props,
            className = _c.className,
            icon = _c.icon,
            label = _c.label,
            children = _c.children,
            level = _c.level,
            others = tslib_1.__rest(_c, ["className", "icon", "label", "children", "level"]);
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "nav-sub-nav-item")] = true, _a["".concat(prefix, "nav-popup")] = mode === 'popup', _a[className] = !!className, _a));
        var iconEl = typeof icon === 'string' ? react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "nav-icon"), type: icon }) : icon;
        // 这里是为 iconOnly 模式下，添加默认的展开按钮
        // 只有在 inline 模式下 或 popup模式的第一层级，才需要添加默认的按钮
        if (iconOnly && hasArrow && (mode === 'inline' || level === 1 && mode === 'popup')) {
            iconEl = react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "nav-icon-only-arrow"), type: mode === 'popup' ? 'arrow-right' : 'arrow-down' });
        }
        var newLabel = [iconEl ? (0, react_1.cloneElement)(iconEl, { key: 'icon' }) : null];
        var showLabel = !iconOnly || iconOnly && !iconOnlyWidth;
        if (showLabel) {
            newLabel.push(react_1.default.createElement("span", { key: "label" }, label));
        }
        var title;
        if (typeof label === 'string') {
            title = label;
        }
        return react_1.default.createElement(menu_1.default.SubMenu, tslib_1.__assign({ className: cls, label: newLabel, level: level, title: title, noIcon: noIcon }, others), children);
    };
    SubNav.menuChildType = 'submenu';
    SubNav.propTypes = {
        className: prop_types_1.default.string,
        icon: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.node]),
        label: prop_types_1.default.node,
        selectable: prop_types_1.default.bool,
        children: prop_types_1.default.node,
        noIcon: prop_types_1.default.bool
    };
    SubNav.defaultProps = {
        selectable: false
    };
    SubNav.contextTypes = {
        prefix: prop_types_1.default.string,
        mode: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool,
        iconOnlyWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        hasArrow: prop_types_1.default.bool
    };
    return SubNav;
}(react_1.Component);
exports.default = SubNav;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
/**
 * Nav.PopupItem
 * @remarks 继承自 `Menu.PopupItem` 的能力请查看 `Menu.PopupItem` 文档
 */
var PopupItem = /** @class */function (_super) {
    tslib_1.__extends(PopupItem, _super);
    function PopupItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupItem.prototype.render = function () {
        var _a;
        var _b = this.context,
            prefix = _b.prefix,
            iconOnly = _b.iconOnly,
            iconOnlyWidth = _b.iconOnlyWidth,
            hasArrow = _b.hasArrow;
        var _c = this.props,
            className = _c.className,
            icon = _c.icon,
            label = _c.label,
            children = _c.children,
            others = tslib_1.__rest(_c, ["className", "icon", "label", "children"]);
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "nav-popup-item")] = true, _a[className] = !!className, _a));
        var iconEl = typeof icon === 'string' ? react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "nav-icon"), type: icon }) : icon;
        if (iconOnly) {
            if (hasArrow) {
                iconEl = react_1.default.createElement(icon_1.default, { className: "".concat(prefix, "nav-icon-only-arrow"), type: "arrow-right" });
            }
        }
        var newLabel = [iconEl ? (0, react_1.cloneElement)(iconEl, { key: 'icon' }) : null];
        var showLabel = !iconOnly || iconOnly && !iconOnlyWidth;
        if (showLabel) {
            newLabel.push(react_1.default.createElement("span", { key: "label" }, label));
        }
        return react_1.default.createElement(menu_1.default.PopupItem, tslib_1.__assign({ className: cls, label: newLabel }, others), children);
    };
    PopupItem.menuChildType = 'submenu';
    PopupItem.propTypes = {
        className: prop_types_1.default.string,
        icon: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.node]),
        label: prop_types_1.default.node,
        children: prop_types_1.default.node
    };
    PopupItem.contextTypes = {
        prefix: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool,
        iconOnlyWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        hasArrow: prop_types_1.default.bool
    };
    return PopupItem;
}(react_1.Component);
exports.default = PopupItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
/**
 * Nav
 * @remarks 继承自 `Menu` 的能力请查看 `Menu` 文档
 */
var Nav = /** @class */function (_super) {
    tslib_1.__extends(Nav, _super);
    function Nav() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.getMenuRef = function (ref) {
            _this.menu = ref;
        };
        return _this;
    }
    Nav.prototype.getChildContext = function () {
        var _a = this.props,
            prefix = _a.prefix,
            direction = _a.direction,
            mode = _a.mode,
            iconOnly = _a.iconOnly,
            iconOnlyWidth = _a.iconOnlyWidth,
            iconTextOnly = _a.iconTextOnly,
            hasTooltip = _a.hasTooltip,
            hasArrow = _a.hasArrow;
        var isCollapse = this.context.isCollapse;
        return {
            prefix: prefix,
            mode: direction === 'hoz' ? 'popup' : mode,
            iconOnly: 'iconOnly' in this.props ? iconOnly : isCollapse,
            iconOnlyWidth: 'iconOnlyWidth' in this.props ? iconOnlyWidth : undefined,
            iconTextOnly: iconTextOnly,
            hasTooltip: hasTooltip,
            hasArrow: hasArrow
        };
    };
    Nav.prototype.render = function () {
        var _a, _b;
        var _c = this.props,
            prefix = _c.prefix,
            className = _c.className,
            style = _c.style,
            children = _c.children,
            type = _c.type,
            direction = _c.direction,
            activeDirection = _c.activeDirection,
            mode = _c.mode,
            triggerType = _c.triggerType,
            inlineIndent = _c.inlineIndent,
            openMode = _c.openMode,
            popupAlign = _c.popupAlign,
            popupClassName = _c.popupClassName,
            iconOnly = _c.iconOnly,
            iconOnlyWidth = _c.iconOnlyWidth,
            iconTextOnly = _c.iconTextOnly,
            hasArrow = _c.hasArrow,
            hasTooltip = _c.hasTooltip,
            embeddable = _c.embeddable,
            _popupProps = _c.popupProps,
            rtl = _c.rtl,
            others = tslib_1.__rest(_c, ["prefix", "className", "style", "children", "type", "direction", "activeDirection", "mode", "triggerType", "inlineIndent", "openMode", "popupAlign", "popupClassName", "iconOnly", "iconOnlyWidth", "iconTextOnly", "hasArrow", "hasTooltip", "embeddable", "popupProps", "rtl"]);
        var isCollapse = this.context.isCollapse;
        var newIconOnly = 'iconOnly' in this.props ? iconOnly : isCollapse;
        var realActiveDirection = activeDirection;
        if (realActiveDirection && (direction === 'hoz' && (realActiveDirection === 'left' || realActiveDirection === 'right') || direction === 'ver' && (realActiveDirection === 'top' || realActiveDirection === 'bottom'))) {
            realActiveDirection = null;
        }
        if (!newIconOnly && realActiveDirection === undefined) {
            realActiveDirection = direction === 'hoz' ? 'bottom' : type === 'line' ? 'right' : 'left';
        }
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "nav")] = true, _a["".concat(prefix).concat(type)] = type, _a["".concat(prefix, "active")] = realActiveDirection, _a["".concat(prefix).concat(realActiveDirection)] = realActiveDirection, _a["".concat(prefix, "icon-only")] = newIconOnly, _a["".concat(prefix, "icon-only-text")] = newIconOnly && iconTextOnly, _a["".concat(prefix, "custom-icon-only-width")] = newIconOnly && 'iconOnlyWidth' in this.props, _a["".concat(prefix, "no-arrow")] = !hasArrow, _a["".concat(prefix, "nav-embeddable")] = embeddable, _a[className] = !!className, _a));
        var newStyle = newIconOnly ? tslib_1.__assign(tslib_1.__assign({}, style), { width: iconOnlyWidth || 58 }) : style;
        var props = {
            prefix: prefix,
            direction: direction,
            openMode: openMode,
            triggerType: triggerType,
            mode: direction === 'hoz' ? 'popup' : mode,
            popupAlign: direction === 'hoz' ? 'follow' : popupAlign,
            inlineIndent: newIconOnly ? 0 : inlineIndent,
            hasSelectedIcon: false,
            popupAutoWidth: true,
            selectMode: 'single',
            itemClassName: "".concat(prefix, "nav-item"),
            popupClassName: (0, classnames_1.default)((_b = {}, _b[cls.replace("".concat(prefix, "icon-only"), '').replace("".concat(prefix, "nav-embeddable"), '')] = mode === 'popup', _b["".concat(prefix, "icon-only")] = newIconOnly && mode === 'inline', _b[popupClassName] = !!popupClassName, _b)),
            popupProps: function popupProps() {
                return tslib_1.__assign({}, _popupProps);
            }
        };
        return react_1.default.createElement(menu_1.default, tslib_1.__assign({ className: cls, style: newStyle }, props, others, { ref: this.getMenuRef }), children);
    };
    Nav.propTypes = {
        prefix: prop_types_1.default.string,
        pure: prop_types_1.default.bool,
        rtl: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        style: prop_types_1.default.object,
        children: prop_types_1.default.node,
        type: prop_types_1.default.oneOf(['normal', 'primary', 'secondary', 'line']),
        direction: prop_types_1.default.oneOf(['hoz', 'ver']),
        hozAlign: prop_types_1.default.oneOf(['left', 'right']),
        activeDirection: prop_types_1.default.oneOf([null, 'top', 'bottom', 'left', 'right']),
        mode: prop_types_1.default.oneOf(['inline', 'popup']),
        triggerType: prop_types_1.default.oneOf(['click', 'hover']),
        inlineIndent: prop_types_1.default.number,
        defaultOpenAll: prop_types_1.default.bool,
        openMode: prop_types_1.default.oneOf(['single', 'multiple']),
        selectedKeys: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.array]),
        defaultSelectedKeys: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.array]),
        onSelect: prop_types_1.default.func,
        popupAlign: prop_types_1.default.oneOf(['follow', 'outside']),
        popupClassName: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool,
        iconOnlyWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        iconTextOnly: prop_types_1.default.bool,
        hasArrow: prop_types_1.default.bool,
        hasTooltip: prop_types_1.default.bool,
        header: prop_types_1.default.node,
        footer: prop_types_1.default.node,
        embeddable: prop_types_1.default.bool,
        popupProps: prop_types_1.default.object
    };
    Nav.defaultProps = {
        prefix: 'next-',
        pure: false,
        type: 'normal',
        direction: 'ver',
        hozAlign: 'left',
        mode: 'inline',
        triggerType: 'click',
        inlineIndent: 20,
        defaultOpenAll: false,
        openMode: 'multiple',
        defaultSelectedKeys: [],
        popupAlign: 'follow',
        hasTooltip: false,
        embeddable: false,
        hasArrow: true,
        popupProps: {}
    };
    Nav.childContextTypes = {
        prefix: prop_types_1.default.string,
        mode: prop_types_1.default.string,
        iconOnly: prop_types_1.default.bool,
        iconOnlyWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        iconTextOnly: prop_types_1.default.bool,
        hasTooltip: prop_types_1.default.bool,
        hasArrow: prop_types_1.default.bool
    };
    Nav.contextTypes = {
        isCollapse: prop_types_1.default.bool
    };
    return Nav;
}(react_1.Component);
exports.default = config_provider_1.default.config(Nav);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _numberPicker = __webpack_require__(365);

var _numberPicker2 = _interopRequireDefault(_numberPicker);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_numberPicker2.default, {
    transform: /* istanbul ignore next */function transform(props) {
        if ('onDisabled' in props && typeof props.onDisabled === 'function') {
            _util.log.warning('[NumberPicker]: onDisabled is deleted!');
        }

        if ('state' in props && props.state === 'success') {
            delete props.state;
        }

        return props;
    },
    exportNames: ['getInputNode']
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _big = __webpack_require__(366);

var _big2 = _interopRequireDefault(_big);

var _reactLifecyclesCompat = __webpack_require__(11);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
var MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -Math.pow(2, 53) + 1;

var isNil = _util.obj.isNil;
/** NumberPicker */

var NumberPicker = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(NumberPicker, _React$Component);

    function NumberPicker(props) {
        (0, _classCallCheck3.default)(this, NumberPicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        var defaultValue = props.defaultValue,
            stringMode = props.stringMode;

        var value = void 0;
        if ('value' in props) {
            value = props.value;
        } else {
            value = defaultValue;
        }
        value = value === undefined || value === null ? '' : stringMode ? '' + value : value;
        _this.state = {
            value: value,
            hasFocused: false,
            onlyDisplay: false,
            displayValue: value,
            max: stringMode ? Infinity : MAX_SAFE_INTEGER,
            min: stringMode ? -Infinity : MIN_SAFE_INTEGER
        };
        return _this;
    }

    NumberPicker.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        // 用户键入非法值后render逻辑，未触发onChange，业务组件无感知，不强制受控value
        if (prevState.onlyDisplay) {
            return {
                value: prevState.value,
                displayValue: prevState.displayValue,
                onlyDisplay: false
            };
        }

        var state = {};
        var value = nextProps.value,
            stringMode = nextProps.stringMode;
        // 一般受控render逻辑

        if ('value' in nextProps && '' + nextProps.value !== '' + prevState.value) {
            var newValue = value === undefined || value === null ? '' : stringMode ? '' + value : value;
            state.value = newValue;
            // 因为 Number('') === 0，所以会导致value=0赋值不生效
            if (prevState.displayValue === '' || Number(prevState.displayValue) !== nextProps.value) {
                state.displayValue = newValue;
            }
        }

        // 如果是undefined或null，应该不限制最大最小值
        var min = nextProps.min,
            max = nextProps.max;

        if ('min' in nextProps && min !== prevState.min) {
            state.min = !isNil(min) ? min : stringMode ? -Infinity : MIN_SAFE_INTEGER;
        }

        if ('max' in nextProps && max !== prevState.max) {
            state.max = !isNil(max) ? max : stringMode ? Infinity : MAX_SAFE_INTEGER;
        }

        if (Object.keys(state).length) {
            return state;
        }

        return null;
    };

    NumberPicker.prototype.isGreaterThan = function isGreaterThan(v1, v2) {
        var stringMode = this.props.stringMode;

        if (stringMode) {
            try {
                return (0, _big2.default)(v1).gt(v2);
            } catch (e) {
                // big.js 遇到 Infinity 和 NaN 异常回退到 Number
                return Number(v1) > Number(v2);
            }
        }
        return Number(v1) > Number(v2);
    };

    NumberPicker.prototype.correctBoundary = function correctBoundary(value) {
        var _state = this.state,
            max = _state.max,
            min = _state.min;

        return this.isGreaterThan(min, value) ? min : this.isGreaterThan(value, max) ? max : value;
    };

    NumberPicker.prototype.setFocus = function setFocus(status) {
        var format = this.props.format;
        // Only trigger `setState` if `format` is settled to avoid unnecessary rendering

        if (typeof format === 'function') {
            this.setState({
                hasFocused: status
            });
        }
    };

    NumberPicker.prototype.onFocus = function onFocus(e) {
        var onFocus = this.props.onFocus;

        this.setFocus(true);

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
        }

        onFocus && onFocus.apply(undefined, [e].concat(args));
    };

    NumberPicker.prototype.onBlur = function onBlur(e) {
        var _props = this.props,
            editable = _props.editable,
            stringMode = _props.stringMode;

        var displayValue = '' + this.state.displayValue;
        // 展示值合法但超出边界时，额外在Blur时触发onChange
        // 展示值非法时，回退前一个有效值
        if (editable === true && !isNaN(displayValue) && !this.withinMinMax(displayValue)) {
            var valueCorrected = this.correctValue(displayValue);
            valueCorrected = stringMode ? (0, _big2.default)(valueCorrected).toFixed(this.getPrecision()) : valueCorrected;
            if (this.state.value !== valueCorrected) {
                this.setValue({ value: valueCorrected, e: e });
            }
            this.setDisplayValue({ displayValue: valueCorrected });
        } else {
            this.setDisplayValue({ displayValue: this.state.value });
        }

        this.setFocus(false);
        var onBlur = this.props.onBlur;

        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
        }

        onBlur && onBlur.apply(undefined, [e].concat(args));
    };

    NumberPicker.prototype.withinMinMax = function withinMinMax(value) {
        var _state2 = this.state,
            max = _state2.max,
            min = _state2.min;

        if (isNaN(value) || this.isGreaterThan(value, max) || this.isGreaterThan(min, value)) return false;
        return true;
    };

    NumberPicker.prototype.withinMin = function withinMin(value) {
        var min = this.state.min;

        if (isNaN(value) || this.isGreaterThan(min, value)) return false;
        return true;
    };

    NumberPicker.prototype.setDisplayValue = function setDisplayValue(_ref) {
        var displayValue = _ref.displayValue,
            _ref$onlyDisplay = _ref.onlyDisplay,
            onlyDisplay = _ref$onlyDisplay === undefined ? false : _ref$onlyDisplay;

        this.setState({ displayValue: displayValue, onlyDisplay: onlyDisplay });
    };

    NumberPicker.prototype.getDisplayValue = function getDisplayValue() {
        var _state3 = this.state,
            displayValue = _state3.displayValue,
            hasFocused = _state3.hasFocused;
        var format = this.props.format;

        return typeof format === 'function' && !hasFocused ? format(displayValue) : // 避免原生input将number类型的-0，渲染为0
        typeof displayValue === 'number' && 1 / displayValue === -Infinity ? '-0' : displayValue;
    };

    /**
     * 输入时判断是否要触发onChange
     * 正常触发: 合法数字 (eg: -0 -0. 0.1)；超出最大值
     * 不触发: 1. 非数字（eg: - ）, 2. 小于最小值(输入需要过程由小变大)
     */

    NumberPicker.prototype.shouldFireOnChange = function shouldFireOnChange(value) {
        if (isNaN(value) || !this.withinMin(value)) {
            return false;
        }
        return true;
    };

    NumberPicker.prototype.onChange = function onChange(value, e) {
        // ignore space & Compatible Chinese Input Method
        value = value.replace('。', '.').trim();
        // 过滤非数字
        value = value.replace(/[^-.\d]/g, '');

        var onlyDisplay = false;
        if (this.props.editable === true && this.shouldFireOnChange(value)) {
            var valueCorrected = this.correctValue(value);
            if (this.state.value !== valueCorrected) {
                this.setValue({ value: valueCorrected, e: e });
            }
            if (typeof this.props.max !== 'undefined' && this.isGreaterThan(value, this.state.max)) {
                value = String(valueCorrected);
            }
        } else {
            onlyDisplay = true;
        }

        // 【不应支持】如果输入为满足精度要求的纯数字，底层input.value设置为数字类型而非string
        // if (`${valueCorrected}` === value) value = valueCorrected;

        this.setDisplayValue({ displayValue: value, onlyDisplay: onlyDisplay });
    };

    NumberPicker.prototype.correctValue = function correctValue(value) {
        var val = value;

        // take care of isNaN('')=false
        if (val !== '') {
            // 精度订正：直接cut，不四舍五入
            var precisionSet = this.getPrecision();
            var precisionCurrent = value.length - value.indexOf('.') - 1;
            var dotIndex = value.indexOf('.');
            // precision === 0 should cut '.' for stringMode
            var cutPosition = precisionSet !== 0 ? dotIndex + 1 + precisionSet : dotIndex + precisionSet;
            if (dotIndex > -1 && precisionCurrent > precisionSet) val = val.substr(0, cutPosition);

            // 边界订正：
            val = this.correctBoundary(val);
            val = this.props.stringMode ? (0, _big2.default)(val).toFixed() : Number(val);
        }

        if (isNaN(val)) val = this.state.value;

        if ('' + val !== '' + value) {
            // .0* 到 .x0* 不该触发onCorrect
            if (!/\.[0-9]*0+$/g.test(value)) {
                this.props.onCorrect({
                    currentValue: val,
                    oldValue: value
                });
            }
        }

        return val;
    };

    NumberPicker.prototype.setValue = function setValue(_ref2) {
        var value = _ref2.value,
            e = _ref2.e,
            triggerType = _ref2.triggerType;

        if (!('value' in this.props) || value === this.props.value) {
            this.setState({
                value: value
            });
        }

        this.props.onChange(isNaN(value) || value === '' ? undefined : value, (0, _extends3.default)({}, e, {
            triggerType: triggerType
        }));
    };

    NumberPicker.prototype.getPrecision = function getPrecision() {
        var stepString = this.props.step.toString();
        if (stepString.indexOf('e-') >= 0) {
            return parseInt(stepString.slice(stepString.indexOf('e-')), 10);
        }
        var precision = 0;
        if (stepString.indexOf('.') >= 0) {
            precision = stepString.length - stepString.indexOf('.') - 1;
        }

        return Math.max(precision, this.props.precision);
    };

    NumberPicker.prototype.getPrecisionFactor = function getPrecisionFactor() {
        var precision = this.getPrecision();
        return Math.pow(10, precision);
    };

    NumberPicker.prototype.onKeyDown = function onKeyDown(e) {
        var _props2;

        if (e.keyCode === 38) {
            this.up(false, e);
        } else if (e.keyCode === 40) {
            this.down(false, e);
        }

        for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
            args[_key3 - 1] = arguments[_key3];
        }

        (_props2 = this.props).onKeyDown.apply(_props2, [e].concat(args));
    };

    NumberPicker.prototype.up = function up(disabled, e) {
        this.step('up', disabled, e);
    };

    NumberPicker.prototype.down = function down(disabled, e) {
        this.step('down', disabled, e);
    };

    NumberPicker.prototype.step = function step(type, disabled, e) {
        if (e) {
            e.preventDefault();
        }

        var onDisabled = this.props.onDisabled;

        if (disabled) {
            return onDisabled(e);
        }

        var value = this.state.value;
        // 受控下，可能强制回填非法值
        if (isNaN(value)) {
            return;
        }

        if (value === '' && !this.props.stringMode) {
            value = 0;
        }

        var val = this[type + 'Step'](value);
        val = this.correctBoundary(val);
        // 受控下，显示的值应为受控value
        if (!('value' in this.props)) {
            this.setDisplayValue({ displayValue: val });
        }

        this.setValue({ value: val, e: e, triggerType: type });
    };

    NumberPicker.prototype.upStep = function upStep(val) {
        var _props3 = this.props,
            step = _props3.step,
            stringMode = _props3.stringMode;

        var precisionFactor = this.getPrecisionFactor();
        if (typeof val === 'number' && !stringMode) {
            var result = (precisionFactor * val + precisionFactor * step) / precisionFactor;
            return this.hackChrome(result);
        }
        return (0, _big2.default)(val || '0').plus(step).toFixed(this.getPrecision());
    };

    NumberPicker.prototype.downStep = function downStep(val) {
        var _props4 = this.props,
            step = _props4.step,
            stringMode = _props4.stringMode;

        var precisionFactor = this.getPrecisionFactor();
        if (typeof val === 'number' && !stringMode) {
            var result = (precisionFactor * val - precisionFactor * step) / precisionFactor;
            return this.hackChrome(result);
        }
        return (0, _big2.default)(val || '0').minus(step).toFixed(this.getPrecision());
    };

    /**
     * fix bug in chrome browser
     * 0.28 + 0.01 = 0.29000000000000004
     * 0.29 - 0.01 = 0.27999999999999997
     * @param {Number} value value
     */

    NumberPicker.prototype.hackChrome = function hackChrome(value) {
        var precision = this.getPrecision();
        if (precision > 0) {
            return Number(Number(value).toFixed(precision));
        }
        return value;
    };

    NumberPicker.prototype.focus = function focus() {
        this.inputRef.getInstance().focus();
    };

    NumberPicker.prototype.saveInputRef = function saveInputRef(ref) {
        this.inputRef = ref;
    };

    NumberPicker.prototype.getInputNode = function getInputNode() {
        return this.inputRef;
    };

    NumberPicker.prototype.handleMouseDown = function handleMouseDown(e) {
        e.preventDefault();
    };

    NumberPicker.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props5 = this.props,
            device = _props5.device,
            prefix = _props5.prefix,
            rtl = _props5.rtl,
            disabled = _props5.disabled,
            style = _props5.style,
            className = _props5.className,
            size = _props5.size,
            autoFocus = _props5.autoFocus,
            editable = _props5.editable,
            state = _props5.state,
            label = _props5.label,
            _props5$upBtnProps = _props5.upBtnProps,
            upBtnProps = _props5$upBtnProps === undefined ? {} : _props5$upBtnProps,
            _props5$downBtnProps = _props5.downBtnProps,
            downBtnProps = _props5$downBtnProps === undefined ? {} : _props5$downBtnProps,
            innerAfter = _props5.innerAfter,
            isPreview = _props5.isPreview,
            renderPreview = _props5.renderPreview,
            hasTrigger = _props5.hasTrigger,
            alwaysShowTrigger = _props5.alwaysShowTrigger;
        var _state4 = this.state,
            max = _state4.max,
            min = _state4.min;

        var type = device === 'phone' || this.props.type === 'inline' ? 'inline' : 'normal';

        var prefixCls = prefix + 'number-picker';

        var cls = (0, _classnames2.default)((_classNames = {}, _classNames[prefixCls] = true, _classNames[prefixCls + '-' + type] = type, _classNames['' + prefix + size] = true, _classNames[prefixCls + '-show-trigger'] = alwaysShowTrigger, _classNames[prefixCls + '-no-trigger'] = !hasTrigger, _classNames[prefix + 'disabled'] = disabled, _classNames[className] = className, _classNames));

        var upDisabled = false;
        var downDisabled = false;
        var value = this.state.value;
        if (!isNaN(value)) {
            if (!this.isGreaterThan(max, value)) {
                upDisabled = true;
            }
            if (this.isGreaterThan(min, value) || min === value) {
                downDisabled = true;
            }
        }

        var extra = null,
            innerAfterClassName = null,
            addonBefore = null,
            addonAfter = null;
        if (type === 'normal') {
            extra = _react2.default.createElement('span', { className: prefixCls + '-handler' }, _react2.default.createElement(_button2.default, (0, _extends3.default)({}, upBtnProps, {
                onMouseDown: this.handleMouseDown,
                disabled: disabled,
                className: (upBtnProps.className || '') + ' ' + (upDisabled ? 'disabled' : ''),
                onClick: this.up.bind(this, upDisabled),
                tabIndex: -1
            }), _react2.default.createElement(_icon2.default, { type: 'arrow-up', className: prefixCls + '-up-icon' })), _react2.default.createElement(_button2.default, (0, _extends3.default)({}, downBtnProps, {
                onMouseDown: this.handleMouseDown,
                disabled: disabled,
                className: (downBtnProps.className || '') + ' ' + (downDisabled ? 'disabled' : ''),
                onClick: this.down.bind(this, downDisabled),
                tabIndex: -1
            }), _react2.default.createElement(_icon2.default, { type: 'arrow-down', className: prefixCls + '-down-icon' })));
        } else {
            addonBefore = _react2.default.createElement(_button2.default, (0, _extends3.default)({}, downBtnProps, {
                size: size,
                disabled: disabled,
                className: (downBtnProps.className || '') + ' ' + (downDisabled ? 'disabled' : ''),
                onClick: this.down.bind(this, downDisabled),
                tabIndex: -1
            }), _react2.default.createElement(_icon2.default, { type: 'minus', className: prefixCls + '-minus-icon' }));
            addonAfter = _react2.default.createElement(_button2.default, (0, _extends3.default)({}, upBtnProps, {
                size: size,
                disabled: disabled,
                className: (upBtnProps.className || '') + ' ' + (upDisabled ? 'disabled' : ''),
                onClick: this.up.bind(this, upDisabled),
                tabIndex: -1
            }), _react2.default.createElement(_icon2.default, { type: 'add', className: prefixCls + '-add-icon' }));
        }

        var others = _util.obj.pickOthers(NumberPicker.propTypes, this.props);
        var dataAttrs = _util.obj.pickAttrsWith(this.props, 'data-');

        var previewCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                return _react2.default.createElement('div', (0, _extends3.default)({}, others, { style: style, className: previewCls }), renderPreview(this.getDisplayValue(), this.props));
            }
            return _react2.default.createElement('p', (0, _extends3.default)({}, others, { style: { style: style }, className: previewCls }), this.getDisplayValue(), '\xA0', innerAfter);
        }

        return _react2.default.createElement('span', (0, _extends3.default)({ className: cls, style: style, dir: rtl ? 'rtl' : undefined }, dataAttrs), _react2.default.createElement(_input2.default, (0, _extends3.default)({}, others, {
            hasClear: false,
            'aria-valuemax': max,
            'aria-valuemin': min,
            state: state === 'error' ? 'error' : null,
            onBlur: this.onBlur.bind(this),
            onFocus: this.onFocus.bind(this),
            onKeyDown: this.onKeyDown.bind(this),
            autoFocus: autoFocus,
            readOnly: !editable,
            value: this.getDisplayValue(),
            disabled: disabled,
            size: size,
            onChange: this.onChange.bind(this),
            ref: this.saveInputRef.bind(this),
            label: label,
            innerAfter: innerAfter,
            extra: hasTrigger ? extra : null,
            addonBefore: addonBefore,
            addonAfter: addonAfter,
            composition: true
        })));
    };

    return NumberPicker;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 设置类型(当 device 为 phone 时，NumberPicker 的类型强制为 normal，不可通过 type 修改)
     * @enumdesc 普通, 内联
     */
    type: _propTypes2.default.oneOf(['normal', 'inline']),
    /**
     * 大小
     */
    size: _propTypes2.default.oneOf(['large', 'medium', 'small']),
    /**
     * 当前值
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 默认值
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 步长
     */
    step: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 保留小数点后位数
     */
    precision: _propTypes2.default.number,
    /**
     * 用户是否可以输入
     */
    editable: _propTypes2.default.bool,
    /**
     * 自动焦点
     */
    autoFocus: _propTypes2.default.bool,
    /**
     * 数值被改变的事件
     * @param {Number|String} value 数据
     * @param {Event} e DOM事件对象
     */
    onChange: _propTypes2.default.func,
    /**
     * 键盘按下
     * @param {Event} e DOM事件对象
     */
    onKeyDown: _propTypes2.default.func,
    /**
     * 焦点获得
     * @param {Event} e DOM事件对象
     */
    onFocus: _propTypes2.default.func,
    /**
     * 焦点失去
     * @param {Event} e DOM事件对象
     */
    onBlur: _propTypes2.default.func,
    /**
     * 数值订正后的回调
     * @param {Object} obj {currentValue,oldValue:String}
     */
    onCorrect: _propTypes2.default.func,
    onDisabled: _propTypes2.default.func, // 兼容0.x onDisabled
    /**
     * 最大值
     */
    max: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 最小值
     */
    min: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 自定义class
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    state: _propTypes2.default.oneOf(['error']),
    /**
     * 格式化当前值
     * @param {Number} value
     * @return {String|Number}
     */
    format: _propTypes2.default.func,
    /**
     * 增加按钮的props
     */
    upBtnProps: _propTypes2.default.object,
    /**
     * 减少按钮的props
     */
    downBtnProps: _propTypes2.default.object,
    /**
     * 内联 左侧label
     */
    label: _propTypes2.default.node,
    /**
     * 内联 右侧附加内容
     */
    innerAfter: _propTypes2.default.node,
    rtl: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Number|String} value 当前值
     * @param {Object} props 传入的组件参数
     * @returns {reactNode} Element 渲染内容
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 预设屏幕宽度
     */
    device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
    /**
     * 是否展示点击按钮
     */
    hasTrigger: _propTypes2.default.bool,
    /**
     * 是否一直显示点击按钮(无须hover)
     */
    alwaysShowTrigger: _propTypes2.default.bool,
    /**
     * 开启大数支持，输入输出均为string类型
     * @version 1.24
     */
    stringMode: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    // max: MAX_SAFE_INTEGER,
    // min: MIN_SAFE_INTEGER,
    type: 'normal',
    size: 'medium',
    step: 1,
    style: {},
    precision: 0,
    editable: true,
    onChange: _util.func.noop,
    onKeyDown: _util.func.noop,
    onBlur: _util.func.noop,
    onCorrect: _util.func.noop,
    onDisabled: _util.func.noop,
    hasTrigger: true,
    alwaysShowTrigger: false,
    stringMode: false
}, _temp);
NumberPicker.displayName = 'NumberPicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(NumberPicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 *  big.js v6.2.1
 *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.
 *  Copyright (c) 2022 Michael Mclaughlin
 *  https://github.com/MikeMcl/big.js/LICENCE.md
 */
;(function (GLOBAL) {
  'use strict';
  var Big,


/************************************** EDITABLE DEFAULTS *****************************************/


    // The default values below must be integers within the stated ranges.

    /*
     * The maximum number of decimal places (DP) of the results of operations involving division:
     * div and sqrt, and pow with negative exponents.
     */
    DP = 20,            // 0 to MAX_DP

    /*
     * The rounding mode (RM) used when rounding to the above decimal places.
     *
     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)
     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)
     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)
     *  3  Away from zero.                                  (ROUND_UP)
     */
    RM = 1,             // 0, 1, 2 or 3

    // The maximum value of DP and Big.DP.
    MAX_DP = 1E6,       // 0 to 1000000

    // The maximum magnitude of the exponent argument to the pow method.
    MAX_POWER = 1E6,    // 1 to 1000000

    /*
     * The negative exponent (NE) at and beneath which toString returns exponential notation.
     * (JavaScript numbers: -7)
     * -1000000 is the minimum recommended exponent value of a Big.
     */
    NE = -7,            // 0 to -1000000

    /*
     * The positive exponent (PE) at and above which toString returns exponential notation.
     * (JavaScript numbers: 21)
     * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.
     */
    PE = 21,            // 0 to 1000000

    /*
     * When true, an error will be thrown if a primitive number is passed to the Big constructor,
     * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a
     * primitive number without a loss of precision.
     */
    STRICT = false,     // true or false


/**************************************************************************************************/


    // Error messages.
    NAME = '[big.js] ',
    INVALID = NAME + 'Invalid ',
    INVALID_DP = INVALID + 'decimal places',
    INVALID_RM = INVALID + 'rounding mode',
    DIV_BY_ZERO = NAME + 'Division by zero',

    // The shared prototype object.
    P = {},
    UNDEFINED = void 0,
    NUMERIC = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;


  /*
   * Create and return a Big constructor.
   */
  function _Big_() {

    /*
     * The Big constructor and exported function.
     * Create and return a new instance of a Big number object.
     *
     * n {number|string|Big} A numeric value.
     */
    function Big(n) {
      var x = this;

      // Enable constructor usage without new.
      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);

      // Duplicate.
      if (n instanceof Big) {
        x.s = n.s;
        x.e = n.e;
        x.c = n.c.slice();
      } else {
        if (typeof n !== 'string') {
          if (Big.strict === true && typeof n !== 'bigint') {
            throw TypeError(INVALID + 'value');
          }

          // Minus zero?
          n = n === 0 && 1 / n < 0 ? '-0' : String(n);
        }

        parse(x, n);
      }

      // Retain a reference to this Big constructor.
      // Shadow Big.prototype.constructor which points to Object.
      x.constructor = Big;
    }

    Big.prototype = P;
    Big.DP = DP;
    Big.RM = RM;
    Big.NE = NE;
    Big.PE = PE;
    Big.strict = STRICT;
    Big.roundDown = 0;
    Big.roundHalfUp = 1;
    Big.roundHalfEven = 2;
    Big.roundUp = 3;

    return Big;
  }


  /*
   * Parse the number or string value passed to a Big constructor.
   *
   * x {Big} A Big number instance.
   * n {number|string} A numeric value.
   */
  function parse(x, n) {
    var e, i, nl;

    if (!NUMERIC.test(n)) {
      throw Error(INVALID + 'number');
    }

    // Determine sign.
    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;

    // Decimal point?
    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');

    // Exponential form?
    if ((i = n.search(/e/i)) > 0) {

      // Determine exponent.
      if (e < 0) e = i;
      e += +n.slice(i + 1);
      n = n.substring(0, i);
    } else if (e < 0) {

      // Integer.
      e = n.length;
    }

    nl = n.length;

    // Determine leading zeros.
    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;

    if (i == nl) {

      // Zero.
      x.c = [x.e = 0];
    } else {

      // Determine trailing zeros.
      for (; nl > 0 && n.charAt(--nl) == '0';);
      x.e = e - i - 1;
      x.c = [];

      // Convert string to array of digits without leading/trailing zeros.
      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);
    }

    return x;
  }


  /*
   * Round Big x to a maximum of sd significant digits using rounding mode rm.
   *
   * x {Big} The Big to round.
   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.
   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   * [more] {boolean} Whether the result of division was truncated.
   */
  function round(x, sd, rm, more) {
    var xc = x.c;

    if (rm === UNDEFINED) rm = x.constructor.RM;
    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {
      throw Error(INVALID_RM);
    }

    if (sd < 1) {
      more =
        rm === 3 && (more || !!xc[0]) || sd === 0 && (
        rm === 1 && xc[0] >= 5 ||
        rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))
      );

      xc.length = 1;

      if (more) {

        // 1, 0.1, 0.01, 0.001, 0.0001 etc.
        x.e = x.e - sd + 1;
        xc[0] = 1;
      } else {

        // Zero.
        xc[0] = x.e = 0;
      }
    } else if (sd < xc.length) {

      // xc[sd] is the digit after the digit that may be rounded up.
      more =
        rm === 1 && xc[sd] >= 5 ||
        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&
          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||
        rm === 3 && (more || !!xc[0]);

      // Remove any digits after the required precision.
      xc.length = sd;

      // Round up?
      if (more) {

        // Rounding up may mean the previous digit has to be rounded up.
        for (; ++xc[--sd] > 9;) {
          xc[sd] = 0;
          if (sd === 0) {
            ++x.e;
            xc.unshift(1);
            break;
          }
        }
      }

      // Remove trailing zeros.
      for (sd = xc.length; !xc[--sd];) xc.pop();
    }

    return x;
  }


  /*
   * Return a string representing the value of Big x in normal or exponential notation.
   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.
   */
  function stringify(x, doExponential, isNonzero) {
    var e = x.e,
      s = x.c.join(''),
      n = s.length;

    // Exponential notation?
    if (doExponential) {
      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;

    // Normal notation.
    } else if (e < 0) {
      for (; ++e;) s = '0' + s;
      s = '0.' + s;
    } else if (e > 0) {
      if (++e > n) {
        for (e -= n; e--;) s += '0';
      } else if (e < n) {
        s = s.slice(0, e) + '.' + s.slice(e);
      }
    } else if (n > 1) {
      s = s.charAt(0) + '.' + s.slice(1);
    }

    return x.s < 0 && isNonzero ? '-' + s : s;
  }


  // Prototype/instance methods


  /*
   * Return a new Big whose value is the absolute value of this Big.
   */
  P.abs = function () {
    var x = new this.constructor(this);
    x.s = 1;
    return x;
  };


  /*
   * Return 1 if the value of this Big is greater than the value of Big y,
   *       -1 if the value of this Big is less than the value of Big y, or
   *        0 if they have the same value.
   */
  P.cmp = function (y) {
    var isneg,
      x = this,
      xc = x.c,
      yc = (y = new x.constructor(y)).c,
      i = x.s,
      j = y.s,
      k = x.e,
      l = y.e;

    // Either zero?
    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;

    // Signs differ?
    if (i != j) return i;

    isneg = i < 0;

    // Compare exponents.
    if (k != l) return k > l ^ isneg ? 1 : -1;

    j = (k = xc.length) < (l = yc.length) ? k : l;

    // Compare digit by digit.
    for (i = -1; ++i < j;) {
      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;
    }

    // Compare lengths.
    return k == l ? 0 : k > l ^ isneg ? 1 : -1;
  };


  /*
   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,
   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.
   */
  P.div = function (y) {
    var x = this,
      Big = x.constructor,
      a = x.c,                  // dividend
      b = (y = new Big(y)).c,   // divisor
      k = x.s == y.s ? 1 : -1,
      dp = Big.DP;

    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }

    // Divisor is zero?
    if (!b[0]) {
      throw Error(DIV_BY_ZERO);
    }

    // Dividend is 0? Return +-0.
    if (!a[0]) {
      y.s = k;
      y.c = [y.e = 0];
      return y;
    }

    var bl, bt, n, cmp, ri,
      bz = b.slice(),
      ai = bl = b.length,
      al = a.length,
      r = a.slice(0, bl),   // remainder
      rl = r.length,
      q = y,                // quotient
      qc = q.c = [],
      qi = 0,
      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result

    q.s = k;
    k = p < 0 ? 0 : p;

    // Create version of divisor with leading zero.
    bz.unshift(0);

    // Add zeros to make remainder as long as divisor.
    for (; rl++ < bl;) r.push(0);

    do {

      // n is how many times the divisor goes into current remainder.
      for (n = 0; n < 10; n++) {

        // Compare divisor and remainder.
        if (bl != (rl = r.length)) {
          cmp = bl > rl ? 1 : -1;
        } else {
          for (ri = -1, cmp = 0; ++ri < bl;) {
            if (b[ri] != r[ri]) {
              cmp = b[ri] > r[ri] ? 1 : -1;
              break;
            }
          }
        }

        // If divisor < remainder, subtract divisor from remainder.
        if (cmp < 0) {

          // Remainder can't be more than 1 digit longer than divisor.
          // Equalise lengths using divisor with extra leading zero?
          for (bt = rl == bl ? b : bz; rl;) {
            if (r[--rl] < bt[rl]) {
              ri = rl;
              for (; ri && !r[--ri];) r[ri] = 9;
              --r[ri];
              r[rl] += 10;
            }
            r[rl] -= bt[rl];
          }

          for (; !r[0];) r.shift();
        } else {
          break;
        }
      }

      // Add the digit n to the result array.
      qc[qi++] = cmp ? n : ++n;

      // Update the remainder.
      if (r[0] && cmp) r[rl] = a[ai] || 0;
      else r = [a[ai]];

    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);

    // Leading zero? Do not remove if result is simply zero (qi == 1).
    if (!qc[0] && qi != 1) {

      // There can't be more than one zero.
      qc.shift();
      q.e--;
      p--;
    }

    // Round?
    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);

    return q;
  };


  /*
   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.
   */
  P.eq = function (y) {
    return this.cmp(y) === 0;
  };


  /*
   * Return true if the value of this Big is greater than the value of Big y, otherwise return
   * false.
   */
  P.gt = function (y) {
    return this.cmp(y) > 0;
  };


  /*
   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise
   * return false.
   */
  P.gte = function (y) {
    return this.cmp(y) > -1;
  };


  /*
   * Return true if the value of this Big is less than the value of Big y, otherwise return false.
   */
  P.lt = function (y) {
    return this.cmp(y) < 0;
  };


  /*
   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise
   * return false.
   */
  P.lte = function (y) {
    return this.cmp(y) < 1;
  };


  /*
   * Return a new Big whose value is the value of this Big minus the value of Big y.
   */
  P.minus = P.sub = function (y) {
    var i, j, t, xlty,
      x = this,
      Big = x.constructor,
      a = x.s,
      b = (y = new Big(y)).s;

    // Signs differ?
    if (a != b) {
      y.s = -b;
      return x.plus(y);
    }

    var xc = x.c.slice(),
      xe = x.e,
      yc = y.c,
      ye = y.e;

    // Either zero?
    if (!xc[0] || !yc[0]) {
      if (yc[0]) {
        y.s = -b;
      } else if (xc[0]) {
        y = new Big(x);
      } else {
        y.s = 1;
      }
      return y;
    }

    // Determine which is the bigger number. Prepend zeros to equalise exponents.
    if (a = xe - ye) {

      if (xlty = a < 0) {
        a = -a;
        t = xc;
      } else {
        ye = xe;
        t = yc;
      }

      t.reverse();
      for (b = a; b--;) t.push(0);
      t.reverse();
    } else {

      // Exponents equal. Check digit by digit.
      j = ((xlty = xc.length < yc.length) ? xc : yc).length;

      for (a = b = 0; b < j; b++) {
        if (xc[b] != yc[b]) {
          xlty = xc[b] < yc[b];
          break;
        }
      }
    }

    // x < y? Point xc to the array of the bigger number.
    if (xlty) {
      t = xc;
      xc = yc;
      yc = t;
      y.s = -y.s;
    }

    /*
     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only
     * needs to start at yc.length.
     */
    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;

    // Subtract yc from xc.
    for (b = i; j > a;) {
      if (xc[--j] < yc[j]) {
        for (i = j; i && !xc[--i];) xc[i] = 9;
        --xc[i];
        xc[j] += 10;
      }

      xc[j] -= yc[j];
    }

    // Remove trailing zeros.
    for (; xc[--b] === 0;) xc.pop();

    // Remove leading zeros and adjust exponent accordingly.
    for (; xc[0] === 0;) {
      xc.shift();
      --ye;
    }

    if (!xc[0]) {

      // n - n = +0
      y.s = 1;

      // Result must be zero.
      xc = [ye = 0];
    }

    y.c = xc;
    y.e = ye;

    return y;
  };


  /*
   * Return a new Big whose value is the value of this Big modulo the value of Big y.
   */
  P.mod = function (y) {
    var ygtx,
      x = this,
      Big = x.constructor,
      a = x.s,
      b = (y = new Big(y)).s;

    if (!y.c[0]) {
      throw Error(DIV_BY_ZERO);
    }

    x.s = y.s = 1;
    ygtx = y.cmp(x) == 1;
    x.s = a;
    y.s = b;

    if (ygtx) return new Big(x);

    a = Big.DP;
    b = Big.RM;
    Big.DP = Big.RM = 0;
    x = x.div(y);
    Big.DP = a;
    Big.RM = b;

    return this.minus(x.times(y));
  };
  
  
  /*
   * Return a new Big whose value is the value of this Big negated.
   */
  P.neg = function () {
    var x = new this.constructor(this);
    x.s = -x.s;
    return x;
  };


  /*
   * Return a new Big whose value is the value of this Big plus the value of Big y.
   */
  P.plus = P.add = function (y) {
    var e, k, t,
      x = this,
      Big = x.constructor;

    y = new Big(y);

    // Signs differ?
    if (x.s != y.s) {
      y.s = -y.s;
      return x.minus(y);
    }

    var xe = x.e,
      xc = x.c,
      ye = y.e,
      yc = y.c;

    // Either zero?
    if (!xc[0] || !yc[0]) {
      if (!yc[0]) {
        if (xc[0]) {
          y = new Big(x);
        } else {
          y.s = x.s;
        }
      }
      return y;
    }

    xc = xc.slice();

    // Prepend zeros to equalise exponents.
    // Note: reverse faster than unshifts.
    if (e = xe - ye) {
      if (e > 0) {
        ye = xe;
        t = yc;
      } else {
        e = -e;
        t = xc;
      }

      t.reverse();
      for (; e--;) t.push(0);
      t.reverse();
    }

    // Point xc to the longer array.
    if (xc.length - yc.length < 0) {
      t = yc;
      yc = xc;
      xc = t;
    }

    e = yc.length;

    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.
    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;

    // No need to check for zero, as +x + +y != 0 && -x + -y != 0

    if (k) {
      xc.unshift(k);
      ++ye;
    }

    // Remove trailing zeros.
    for (e = xc.length; xc[--e] === 0;) xc.pop();

    y.c = xc;
    y.e = ye;

    return y;
  };


  /*
   * Return a Big whose value is the value of this Big raised to the power n.
   * If n is negative, round to a maximum of Big.DP decimal places using rounding
   * mode Big.RM.
   *
   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.
   */
  P.pow = function (n) {
    var x = this,
      one = new x.constructor('1'),
      y = one,
      isneg = n < 0;

    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {
      throw Error(INVALID + 'exponent');
    }

    if (isneg) n = -n;

    for (;;) {
      if (n & 1) y = y.times(x);
      n >>= 1;
      if (!n) break;
      x = x.times(x);
    }

    return isneg ? one.div(y) : y;
  };


  /*
   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd
   * significant digits using rounding mode rm, or Big.RM if rm is not specified.
   *
   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.
   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   */
  P.prec = function (sd, rm) {
    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
      throw Error(INVALID + 'precision');
    }
    return round(new this.constructor(this), sd, rm);
  };


  /*
   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places
   * using rounding mode rm, or Big.RM if rm is not specified.
   * If dp is negative, round to an integer which is a multiple of 10**-dp.
   * If dp is not specified, round to 0 decimal places.
   *
   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.
   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   */
  P.round = function (dp, rm) {
    if (dp === UNDEFINED) dp = 0;
    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    return round(new this.constructor(this), dp + this.e + 1, rm);
  };


  /*
   * Return a new Big whose value is the square root of the value of this Big, rounded, if
   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.
   */
  P.sqrt = function () {
    var r, c, t,
      x = this,
      Big = x.constructor,
      s = x.s,
      e = x.e,
      half = new Big('0.5');

    // Zero?
    if (!x.c[0]) return new Big(x);

    // Negative?
    if (s < 0) {
      throw Error(NAME + 'No square root');
    }

    // Estimate.
    s = Math.sqrt(x + '');

    // Math.sqrt underflow/overflow?
    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.
    if (s === 0 || s === 1 / 0) {
      c = x.c.join('');
      if (!(c.length + e & 1)) c += '0';
      s = Math.sqrt(c);
      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);
      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);
    } else {
      r = new Big(s + '');
    }

    e = r.e + (Big.DP += 4);

    // Newton-Raphson iteration.
    do {
      t = r;
      r = half.times(t.plus(x.div(t)));
    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));

    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);
  };


  /*
   * Return a new Big whose value is the value of this Big times the value of Big y.
   */
  P.times = P.mul = function (y) {
    var c,
      x = this,
      Big = x.constructor,
      xc = x.c,
      yc = (y = new Big(y)).c,
      a = xc.length,
      b = yc.length,
      i = x.e,
      j = y.e;

    // Determine sign of result.
    y.s = x.s == y.s ? 1 : -1;

    // Return signed 0 if either 0.
    if (!xc[0] || !yc[0]) {
      y.c = [y.e = 0];
      return y;
    }

    // Initialise exponent of result as x.e + y.e.
    y.e = i + j;

    // If array xc has fewer digits than yc, swap xc and yc, and lengths.
    if (a < b) {
      c = xc;
      xc = yc;
      yc = c;
      j = a;
      a = b;
      b = j;
    }

    // Initialise coefficient array of result with zeros.
    for (c = new Array(j = a + b); j--;) c[j] = 0;

    // Multiply.

    // i is initially xc.length.
    for (i = b; i--;) {
      b = 0;

      // a is yc.length.
      for (j = a + i; j > i;) {

        // Current sum of products at this digit position, plus carry.
        b = c[j] + yc[i] * xc[j - i - 1] + b;
        c[j--] = b % 10;

        // carry
        b = b / 10 | 0;
      }

      c[j] = b;
    }

    // Increment result exponent if there is a final carry, otherwise remove leading zero.
    if (b) ++y.e;
    else c.shift();

    // Remove trailing zeros.
    for (i = c.length; !c[--i];) c.pop();
    y.c = c;

    return y;
  };


  /*
   * Return a string representing the value of this Big in exponential notation rounded to dp fixed
   * decimal places using rounding mode rm, or Big.RM if rm is not specified.
   *
   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.
   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   */
  P.toExponential = function (dp, rm) {
    var x = this,
      n = x.c[0];

    if (dp !== UNDEFINED) {
      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
        throw Error(INVALID_DP);
      }
      x = round(new x.constructor(x), ++dp, rm);
      for (; x.c.length < dp;) x.c.push(0);
    }

    return stringify(x, true, !!n);
  };


  /*
   * Return a string representing the value of this Big in normal notation rounded to dp fixed
   * decimal places using rounding mode rm, or Big.RM if rm is not specified.
   *
   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.
   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   *
   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.
   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
   */
  P.toFixed = function (dp, rm) {
    var x = this,
      n = x.c[0];

    if (dp !== UNDEFINED) {
      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
        throw Error(INVALID_DP);
      }
      x = round(new x.constructor(x), dp + x.e + 1, rm);

      // x.e may have changed if the value is rounded up.
      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);
    }

    return stringify(x, false, !!n);
  };


  /*
   * Return a string representing the value of this Big.
   * Return exponential notation if this Big has a positive exponent equal to or greater than
   * Big.PE, or a negative exponent equal to or less than Big.NE.
   * Omit the sign for negative zero.
   */
  P.toJSON = P.toString = function () {
    var x = this,
      Big = x.constructor;
    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);
  };


  /*
   * Return the value of this Big as a primitve number.
   */
  P.toNumber = function () {
    var n = Number(stringify(this, true, true));
    if (this.constructor.strict === true && !this.eq(n.toString())) {
      throw Error(NAME + 'Imprecise conversion');
    }
    return n;
  };


  /*
   * Return a string representing the value of this Big rounded to sd significant digits using
   * rounding mode rm, or Big.RM if rm is not specified.
   * Use exponential notation if sd is less than the number of digits necessary to represent
   * the integer part of the value in normal notation.
   *
   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.
   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).
   */
  P.toPrecision = function (sd, rm) {
    var x = this,
      Big = x.constructor,
      n = x.c[0];

    if (sd !== UNDEFINED) {
      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
        throw Error(INVALID + 'precision');
      }
      x = round(new Big(x), sd, rm);
      for (; x.c.length < sd;) x.c.push(0);
    }

    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);
  };


  /*
   * Return a string representing the value of this Big.
   * Return exponential notation if this Big has a positive exponent equal to or greater than
   * Big.PE, or a negative exponent equal to or less than Big.NE.
   * Include the sign for negative zero.
   */
  P.valueOf = function () {
    var x = this,
      Big = x.constructor;
    if (Big.strict === true) {
      throw Error(NAME + 'valueOf disallowed');
    }
    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);
  };


  // Export


  Big = _Big_();

  Big['default'] = Big.Big = Big;

  //AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return Big; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Node and other CommonJS-like environments that support module.exports.
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = Big;

  //Browser.
  } else {
    GLOBAL.Big = Big;
  }
})(this);


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _pagination = __webpack_require__(368);

var _pagination2 = _interopRequireDefault(_pagination);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _pagination2.default;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _select = __webpack_require__(30);

var _select2 = _interopRequireDefault(_select);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Option = _select2.default.Option;

var noop = function noop() {};

function correctCurrent(currentPage, total, currentPageSize) {
    var totalPage = getTotalPage(total, currentPageSize);
    return currentPage > totalPage ? totalPage : currentPage;
}

function getTotalPage(total, currentPageSize) {
    var totalPage = Math.ceil(total / currentPageSize);
    return totalPage <= 0 ? 1 : totalPage;
}

/**
 * Pagination
 */
var Pagination = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Pagination, _Component);

    function Pagination(props, context) {
        (0, _classCallCheck3.default)(this, Pagination);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.handleJump = function (e) {
            var total = _this.props.total;
            var _this$state = _this.state,
                current = _this$state.current,
                currentPageSize = _this$state.currentPageSize,
                inputValue = _this$state.inputValue;

            var totalPage = getTotalPage(total, currentPageSize);
            var value = parseInt(inputValue, 10);

            if (isNaN(value)) {
                value = '';
            } else if (value < 1) {
                value = 1;
            } else if (value > totalPage) {
                value = totalPage;
            }

            if (value && value !== current) {
                _this.onPageItemClick(value, e);
            }

            _this.setState({
                inputValue: ''
            });
        };

        _this.state = {
            current: props.defaultCurrent || 1,
            currentPageSize: 0,
            inputValue: ''
        };
        return _this;
    }

    Pagination.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var current = props.current,
            total = props.total,
            pageSize = props.pageSize;

        var st = {};
        var newCurrent = correctCurrent(current || state.current, total, pageSize);
        if (state.current !== newCurrent) {
            st.current = newCurrent;
        }
        if (state.currentPageSize !== pageSize) {
            st.currentPageSize = pageSize;
        }

        return st;
    };

    Pagination.prototype.onPageItemClick = function onPageItemClick(page, e) {
        if (!('current' in this.props)) {
            this.setState({
                current: page
            });
        }
        this.props.onChange(page, e);
    };

    Pagination.prototype.onInputChange = function onInputChange(value) {
        this.setState({
            inputValue: value
        });
    };

    Pagination.prototype.onSelectSize = function onSelectSize(pageSize) {
        var newState = {
            currentPageSize: pageSize
        };

        var totalPage = getTotalPage(this.props.total, pageSize);
        if (this.state.current > totalPage) {
            newState.current = totalPage;
        }

        this.setState(newState);
        this.props.onPageSizeChange(pageSize);
    };

    Pagination.prototype.renderPageTotal = function renderPageTotal() {
        var _props = this.props,
            prefix = _props.prefix,
            total = _props.total,
            totalRender = _props.totalRender;
        var _state = this.state,
            currentPageSize = _state.currentPageSize,
            current = _state.current;

        var range = [(current - 1) * currentPageSize + 1, current * currentPageSize];

        return _react2.default.createElement('div', { className: prefix + 'pagination-total' }, totalRender(total, range));
    };

    Pagination.prototype.renderPageItem = function renderPageItem(index) {
        var _cx;

        var _props2 = this.props,
            prefix = _props2.prefix,
            size = _props2.size,
            link = _props2.link,
            pageNumberRender = _props2.pageNumberRender,
            total = _props2.total,
            pageSize = _props2.pageSize,
            locale = _props2.locale;
        var current = this.state.current;

        var totalPage = getTotalPage(total, pageSize);
        var isCurrent = parseInt(index, 10) === current;
        var props = {
            size: size,
            className: (0, _classnames2.default)((_cx = {}, _cx[prefix + 'pagination-item'] = true, _cx[prefix + 'current'] = isCurrent, _cx)),
            onClick: isCurrent ? noop : this.onPageItemClick.bind(this, index)
        };
        if (link) {
            props.component = 'a';
            props.href = link.replace('{page}', index);
        }

        return _react2.default.createElement(_button2.default, (0, _extends3.default)({
            'aria-label': _util.str.template(locale.total, {
                current: index,
                total: totalPage
            })
        }, props, {
            key: index
        }), pageNumberRender(index));
    };

    Pagination.prototype.renderPageFirst = function renderPageFirst(current) {
        var _cx2;

        var _props3 = this.props,
            prefix = _props3.prefix,
            size = _props3.size,
            shape = _props3.shape,
            locale = _props3.locale;

        var isFirst = current <= 1;
        var props = {
            disabled: isFirst,
            size: size,
            className: (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'pagination-item'] = true, _cx2[prefix + 'prev'] = true, _cx2)),
            onClick: this.onPageItemClick.bind(this, current - 1)
        };

        var icon = _react2.default.createElement(_icon2.default, { type: 'arrow-left', className: prefix + 'pagination-icon-prev' });

        return _react2.default.createElement(_button2.default, (0, _extends3.default)({}, props, { 'aria-label': _util.str.template(locale.labelPrev, { current: current }) }), icon, shape === 'arrow-only' || shape === 'arrow-prev-only' || shape === 'no-border' ? '' : locale.prev);
    };

    Pagination.prototype.renderPageLast = function renderPageLast(current, totalPage) {
        var _cx3;

        var _props4 = this.props,
            prefix = _props4.prefix,
            size = _props4.size,
            shape = _props4.shape,
            locale = _props4.locale;

        var isLast = current >= totalPage;
        var props = {
            disabled: isLast,
            size: size,
            className: (0, _classnames2.default)((_cx3 = {}, _cx3[prefix + 'pagination-item'] = true, _cx3[prefix + 'next'] = true, _cx3)),
            onClick: this.onPageItemClick.bind(this, current + 1)
        };

        var icon = _react2.default.createElement(_icon2.default, { type: 'arrow-right', className: prefix + 'pagination-icon-next' });

        return _react2.default.createElement(_button2.default, (0, _extends3.default)({}, props, { 'aria-label': _util.str.template(locale.labelNext, { current: current }) }), shape === 'arrow-only' || shape === 'no-border' ? '' : locale.next, icon);
    };

    Pagination.prototype.renderPageEllipsis = function renderPageEllipsis(idx) {
        var prefix = this.props.prefix;

        return _react2.default.createElement(_icon2.default, {
            className: prefix + 'pagination-ellipsis ' + prefix + 'pagination-icon-ellipsis',
            type: 'ellipsis',
            key: 'ellipsis-' + idx
        });
    };

    Pagination.prototype.renderPageJump = function renderPageJump() {
        var _this2 = this;

        var _props5 = this.props,
            prefix = _props5.prefix,
            size = _props5.size,
            locale = _props5.locale;
        var inputValue = this.state.inputValue;

        /* eslint-disable react/jsx-key */

        return [_react2.default.createElement('span', { className: prefix + 'pagination-jump-text' }, locale.goTo), _react2.default.createElement(_input2.default, {
            className: prefix + 'pagination-jump-input',
            type: 'text',
            'aria-label': locale.inputAriaLabel,
            size: size,
            value: inputValue,
            onChange: this.onInputChange.bind(this),
            onKeyDown: function onKeyDown(e) {
                if (e.keyCode === _util.KEYCODE.ENTER) {
                    _this2.handleJump(e);
                }
            }
        }), _react2.default.createElement('span', { className: prefix + 'pagination-jump-text' }, locale.page), _react2.default.createElement(_button2.default, { className: prefix + 'pagination-jump-go', size: size, onClick: this.handleJump }, locale.go)];
        /* eslint-enable react/jsx-key */
    };

    Pagination.prototype.renderPageDisplay = function renderPageDisplay(current, totalPage) {
        var _props6 = this.props,
            prefix = _props6.prefix,
            pageNumberRender = _props6.pageNumberRender;

        return _react2.default.createElement('span', { className: prefix + 'pagination-display' }, _react2.default.createElement('em', null, pageNumberRender(current)), '/', pageNumberRender(totalPage));
    };

    Pagination.prototype.renderPageList = function renderPageList(current, totalPage) {
        var _props7 = this.props,
            prefix = _props7.prefix,
            pageShowCount = _props7.pageShowCount;

        var pages = [];

        if (totalPage <= pageShowCount) {
            for (var i = 1; i <= totalPage; i++) {
                pages.push(this.renderPageItem(i));
            }
        } else {
            // 除去第一页，最后一页以及当前页，剩下的页数
            var othersCount = pageShowCount - 3;
            var halfCount = parseInt(othersCount / 2, 10);
            var start = void 0,
                end = void 0;

            pages.push(this.renderPageItem(1));

            start = current - halfCount;
            end = current + halfCount;
            if (start <= 1) {
                start = 2;
                end = start + othersCount;
            }
            if (start > 2) {
                pages.push(this.renderPageEllipsis(1));
            }
            if (end >= totalPage - 1) {
                end = totalPage - 1;
                start = totalPage - 1 - othersCount;
            }
            for (var j = start; j <= end; j++) {
                pages.push(this.renderPageItem(j));
            }
            if (end < totalPage - 1) {
                pages.push(this.renderPageEllipsis(2));
            }

            pages.push(this.renderPageItem(totalPage));
        }

        return _react2.default.createElement('div', { className: prefix + 'pagination-list' }, pages);
    };

    Pagination.prototype.renderPageSizeSelector = function renderPageSizeSelector() {
        var _props8 = this.props,
            prefix = _props8.prefix,
            pageSizeSelector = _props8.pageSizeSelector,
            locale = _props8.locale;

        var pageSizeSpan = _react2.default.createElement('span', { className: prefix + 'pagination-size-selector-title' }, locale.pageSize);

        switch (pageSizeSelector) {
            case 'filter':
                return _react2.default.createElement('div', { className: prefix + 'pagination-size-selector' }, pageSizeSpan, this.renderPageSizeFilter());
            case 'dropdown':
                return _react2.default.createElement('div', { className: prefix + 'pagination-size-selector' }, pageSizeSpan, this.renderPageSizeDropdown());
            default:
                return null;
        }
    };

    Pagination.prototype.renderPageSizeFilter = function renderPageSizeFilter() {
        var _this3 = this;

        var _props9 = this.props,
            prefix = _props9.prefix,
            size = _props9.size,
            pageSizeList = _props9.pageSizeList;
        var currentPageSize = this.state.currentPageSize;

        return _react2.default.createElement('div', { className: prefix + 'pagination-size-selector-filter' }, pageSizeList.map(function (item, index) {
            var _cx4;

            var label = void 0;
            var pageSize = void 0;
            if (item.value) {
                // {label: '', value: 5}
                label = item.label;
                pageSize = item.value;
            } else {
                // number
                label = pageSize = item;
            }
            var classes = (0, _classnames2.default)((_cx4 = {}, _cx4[prefix + 'pagination-size-selector-btn'] = true, _cx4[prefix + 'current'] = pageSize === currentPageSize, _cx4));

            return _react2.default.createElement(_button2.default, {
                key: index,
                text: true,
                size: size,
                className: classes,
                onClick: pageSize !== currentPageSize ? _this3.onSelectSize.bind(_this3, pageSize) : null
            }, label);
        }));
    };

    Pagination.prototype.renderPageSizeDropdown = function renderPageSizeDropdown() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            size = _props10.size,
            pageSizeList = _props10.pageSizeList,
            locale = _props10.locale,
            popupProps = _props10.popupProps,
            selectProps = _props10.selectProps;
        var currentPageSize = this.state.currentPageSize;

        return _react2.default.createElement(_select2.default, (0, _extends3.default)({
            className: prefix + 'pagination-size-selector-dropdown',
            popupClassName: prefix + 'pagination-size-selector-popup',
            popupProps: popupProps,
            'aria-label': locale.selectAriaLabel,
            autoWidth: false,
            size: size,
            value: currentPageSize,
            onChange: this.onSelectSize.bind(this)
        }, selectProps), pageSizeList.map(function (item, index) {
            var label = void 0;
            var pageSize = void 0;
            if (item.value) {
                // {label: '', value: 5}
                label = item.label;
                pageSize = item.value;
            } else {
                // number
                label = pageSize = item;
            }
            return _react2.default.createElement(Option, { key: index, value: pageSize }, label);
        }));
    };

    Pagination.prototype.render = function render() {
        var _cx5,
            _this4 = this;

        /* eslint-disable no-unused-vars */
        var _props11 = this.props,
            prefix = _props11.prefix,
            pure = _props11.pure,
            rtl = _props11.rtl,
            device = _props11.device,
            paginationType = _props11.type,
            size = _props11.size,
            shape = _props11.shape,
            className = _props11.className,
            total = _props11.total,
            totalRender = _props11.totalRender,
            pageSize = _props11.pageSize,
            pageSizeSelector = _props11.pageSizeSelector,
            pageSizeList = _props11.pageSizeList,
            pageSizePosition = _props11.pageSizePosition,
            useFloatLayout = _props11.useFloatLayout,
            onPageSizeChange = _props11.onPageSizeChange,
            hideOnlyOnePage = _props11.hideOnlyOnePage,
            showJump = _props11.showJump,
            locale = _props11.locale,
            current = _props11.current,
            defaultCurrent = _props11.defaultCurrent,
            pageShowCount = _props11.pageShowCount,
            pageNumberRender = _props11.pageNumberRender,
            link = _props11.link,
            onChange = _props11.onChange,
            popupProps = _props11.popupProps,
            selectProps = _props11.selectProps,
            others = (0, _objectWithoutProperties3.default)(_props11, ['prefix', 'pure', 'rtl', 'device', 'type', 'size', 'shape', 'className', 'total', 'totalRender', 'pageSize', 'pageSizeSelector', 'pageSizeList', 'pageSizePosition', 'useFloatLayout', 'onPageSizeChange', 'hideOnlyOnePage', 'showJump', 'locale', 'current', 'defaultCurrent', 'pageShowCount', 'pageNumberRender', 'link', 'onChange', 'popupProps', 'selectProps']);
        /* eslint-enable */

        var _state2 = this.state,
            currentPage = _state2.current,
            currentPageSize = _state2.currentPageSize;

        var totalPage = getTotalPage(total, currentPageSize);
        var pageFirst = this.renderPageFirst(currentPage);
        var pageLast = this.renderPageLast(currentPage, totalPage);
        var sizeSelector = this.renderPageSizeSelector();
        var isStart = pageSizePosition === 'start';

        var type = paginationType;

        if (device === 'phone' && type === 'normal') {
            type = 'simple';
        }

        var classes = (0, _classnames2.default)((_cx5 = {}, _cx5[prefix + 'pagination'] = true, _cx5['' + prefix + size] = size, _cx5['' + prefix + type] = type, _cx5['' + prefix + shape] = shape, _cx5[prefix + 'start'] = !!pageSizeSelector && isStart && useFloatLayout, _cx5[prefix + 'end'] = !!pageSizeSelector && !isStart && useFloatLayout, _cx5[prefix + 'hide'] = totalPage <= 1 && hideOnlyOnePage, _cx5[className] = !!className, _cx5));

        if (rtl) {
            others.dir = 'rtl';
        }

        var buildComponent = function buildComponent() {
            for (var _len = arguments.length, coms = Array(_len), _key = 0; _key < _len; _key++) {
                coms[_key] = arguments[_key];
            }

            return _react2.default.createElement('div', (0, _extends3.default)({ className: classes }, _util.obj.pickOthers(Object.keys(Pagination.propTypes), others)), isStart && sizeSelector, totalRender ? _this4.renderPageTotal() : null, _react2.default.createElement('div', { className: prefix + 'pagination-pages' }, coms.map(function (com, index) {
                return com && _react2.default.cloneElement(com, { key: index });
            })), !isStart && sizeSelector);
        };

        switch (type) {
            case 'mini':
                return buildComponent(pageFirst, pageLast);
            case 'simple':
                {
                    var pageDisplay = this.renderPageDisplay(currentPage, totalPage);
                    return buildComponent(pageFirst, pageDisplay, pageLast);
                }
            case 'normal':
                {
                    var pageList = this.renderPageList(currentPage, totalPage);
                    var _pageDisplay = showJump && total > pageSize * pageShowCount ? this.renderPageDisplay(currentPage, totalPage) : null;
                    var pageJump = showJump && total > pageSize * pageShowCount ? this.renderPageJump(currentPage, totalPage) : [];
                    return buildComponent.apply(undefined, [pageFirst, pageList, pageLast, _pageDisplay].concat(pageJump));
                }
            default:
                return null;
        }
    };

    return Pagination;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    device: _propTypes2.default.oneOf(['desktop', 'tablet', 'phone']),
    className: _propTypes2.default.string,
    /**
     * 自定义国际化文案对象
     */
    locale: _propTypes2.default.object,
    /**
     * 分页组件类型
     */
    type: _propTypes2.default.oneOf(['normal', 'simple', 'mini']),
    /**
     * 前进后退按钮样式
     */
    shape: _propTypes2.default.oneOf(['normal', 'arrow-only', 'arrow-prev-only', 'no-border']),
    /**
     * 分页组件大小
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * （受控）当前页码
     */
    current: _propTypes2.default.number,
    /**
     * （非受控）初始页码
     */
    defaultCurrent: _propTypes2.default.number,
    /**
     * 页码发生改变时的回调函数
     * @param {Number} current 改变后的页码数
     * @param {Object} e 点击事件对象
     */
    onChange: _propTypes2.default.func,
    /**
     * 总记录数
     */
    total: _propTypes2.default.number,
    /**
     * 总数的渲染函数
     * @param {Number} total 总数
     * @param {Array} range 当前数据在总数中的区间
     */
    totalRender: _propTypes2.default.func,
    /**
     * 页码显示的数量，更多的使用...代替
     */
    pageShowCount: _propTypes2.default.number,
    /**
     * 一页中的记录数
     */
    pageSize: _propTypes2.default.number,
    /**
     * 每页显示选择器类型
     */
    pageSizeSelector: _propTypes2.default.oneOf([false, 'filter', 'dropdown']),
    /**
     * 每页显示选择器可选值
     */
    pageSizeList: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.arrayOf(_propTypes2.default.shape({
        label: _propTypes2.default.string,
        value: _propTypes2.default.number
    }))]),
    /**
     * 自定义页码渲染函数，函数作用于页码button以及当前页/总页数的数字渲染
     * @param {Number} index 分页的页码，从1开始
     * @return {ReactNode} 返回渲染结果
     */
    pageNumberRender: _propTypes2.default.func,
    /**
     * 每页显示选择器在组件中的位置
     */
    pageSizePosition: _propTypes2.default.oneOf(['start', 'end']),
    /**
     * 存在每页显示选择器时是否使用浮动布局
     */
    useFloatLayout: _propTypes2.default.bool,
    /**
     * 每页显示记录数量改变时的回调函数
     * @param {Number} pageSize 改变后的每页显示记录数
     */
    onPageSizeChange: _propTypes2.default.func,
    /**
     * 当分页数为1时，是否隐藏分页器
     */
    hideOnlyOnePage: _propTypes2.default.bool,
    /**
     * type 设置为 normal 时，在页码数超过5页后，会显示跳转输入框与按钮，当设置 showJump 为 false 时，不再显示该跳转区域
     */
    showJump: _propTypes2.default.bool,
    /**
     * 设置页码按钮的跳转链接，它的值为一个包含 {page} 的模版字符串，如：https://www.taobao.com/{page}
     */
    link: _propTypes2.default.string,
    /**
     * 弹层组件属性，透传给Popup
     */
    popupProps: _propTypes2.default.object,
    selectProps: _propTypes2.default.object
}), _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    rtl: false,
    locale: _zhCn2.default.Pagination,
    type: 'normal',
    shape: 'normal',
    size: 'medium',
    defaultCurrent: 1,
    onChange: noop,
    pageSize: 10,
    pageSizeSelector: false,
    pageSizeList: [5, 10, 20],
    pageSizePosition: 'start',
    onPageSizeChange: noop,
    useFloatLayout: false,
    total: 100,
    pageShowCount: 5,
    hideOnlyOnePage: false,
    showJump: true,
    pageNumberRender: function pageNumberRender(index) {
        return index;
    }
}, _temp);
Pagination.displayName = 'Pagination';
exports.default = _configProvider2.default.config((0, _reactLifecyclesCompat.polyfill)(Pagination));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
/** Paragraph */
var Paragraph = /** @class */function (_super) {
    tslib_1.__extends(Paragraph, _super);
    function Paragraph(props) {
        var _this = _super.call(this, props) || this;
        util_1.log.warning('[Paragraph] is deprecated, please use Typography.Paragraph instead!');
        return _this;
    }
    Paragraph.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            className = _a.className,
            type = _a.type,
            size = _a.size,
            rtl = _a.rtl,
            others = tslib_1.__rest(_a, ["prefix", "className", "type", "size", "rtl"]);
        var cls = (0, classnames_1.default)("".concat(prefix, "paragraph"), type === 'short' ? "".concat(prefix, "paragraph-short") : "".concat(prefix, "paragraph-long"), size === 'small' ? "".concat(prefix, "paragraph-small") : "".concat(prefix, "paragraph-medium"), className);
        if (rtl) {
            others.dir = 'rtl';
        }
        return react_1.default.createElement("div", tslib_1.__assign({}, others, { className: cls }), this.props.children);
    };
    Paragraph.propTypes = {
        prefix: prop_types_1.default.string,
        /**
         * 额外的样式名 会附加到 root dom 上
         */
        className: prop_types_1.default.string,
        /**
         * 什么方式展示段落
         * - 'long' :  展示所有文本
         * - 'short' : 展示三行以内（非强制）
         */
        type: prop_types_1.default.oneOf(['long', 'short']),
        /**
         * 组件大小。
         * - 'medium' : 中号
         * - 'short' : 小号
         */
        size: prop_types_1.default.oneOf(['medium', 'small']),
        rtl: prop_types_1.default.bool
    };
    Paragraph.defaultProps = {
        prefix: 'next-',
        type: 'long',
        size: 'medium'
    };
    return Paragraph;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Paragraph);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _progressLine = __webpack_require__(371);

var _progressLine2 = _interopRequireDefault(_progressLine);

var _progressCircle = __webpack_require__(372);

var _progressCircle2 = _interopRequireDefault(_progressCircle);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Progress
 */
var Progress = (_temp = _class = function (_Component) {
  (0, _inherits3.default)(Progress, _Component);

  function Progress() {
    (0, _classCallCheck3.default)(this, Progress);
    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
  }

  Progress.prototype.render = function render() {
    var _props = this.props,
        shape = _props.shape,
        hasBorder = _props.hasBorder,
        others = (0, _objectWithoutProperties3.default)(_props, ['shape', 'hasBorder']);

    return shape === 'circle' ? _react2.default.createElement(_progressCircle2.default, others) : _react2.default.createElement(_progressLine2.default, (0, _extends3.default)({}, others, { hasBorder: hasBorder }));
  };

  return Progress;
}(_react.Component), _class.propTypes = {
  prefix: _propTypes2.default.string,
  /**
   * 形态
   */
  shape: _propTypes2.default.oneOf(['circle', 'line']),
  /**
   * 尺寸
   */
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  /**
   * 所占百分比
   */
  percent: _propTypes2.default.number,
  /**
   * 进度状态, 显示优先级: color > progressive > state
   */
  state: _propTypes2.default.oneOf(['normal', 'success', 'error']),
  /**
   * 是否为色彩阶段变化模式, 显示优先级: color > progressive > state
   */
  progressive: _propTypes2.default.bool,
  /**
   * 是否添加 Border（只适用于 Line Progress)
   */
  hasBorder: _propTypes2.default.bool,
  /**
   * 文本渲染函数
   * @param {Number} percent 当前的进度信息
   * @param {Object} option 额外的参数
   * @property {Boolean} option.rtl 是否在rtl 模式下渲染
   * @return {ReactNode} 返回文本节点
   */
  textRender: _propTypes2.default.func,
  /**
   * 进度条颜色, 显示优先级: color > progressive > state
   */
  color: _propTypes2.default.string,
  /**
   * 背景色
   */
  backgroundColor: _propTypes2.default.string,
  rtl: _propTypes2.default.bool
}, _class.defaultProps = {
  prefix: 'next-',
  shape: 'line',
  state: 'normal',
  size: 'medium',
  percent: 0,
  progressive: false,
  hasBorder: false,
  textRender: function textRender(percent) {
    return Math.floor(percent) + '%';
  }
}, _class.contextTypes = {
  prefix: _propTypes2.default.string
}, _temp);
Progress.displayName = 'Progress';
exports.default = Progress;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Line = (_temp = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(Line, _React$PureComponent);

    function Line() {
        (0, _classCallCheck3.default)(this, Line);
        return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));
    }

    Line.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            size = _props.size,
            state = _props.state,
            color = _props.color,
            percent = _props.percent,
            progressive = _props.progressive,
            hasBorder = _props.hasBorder,
            textRender = _props.textRender,
            className = _props.className,
            rtl = _props.rtl,
            backgroundColor = _props.backgroundColor,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'size', 'state', 'color', 'percent', 'progressive', 'hasBorder', 'textRender', 'className', 'rtl', 'backgroundColor']);

        var suffixText = textRender(percent, { rtl: rtl });

        var wrapCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'progress-line'] = true, _classNames[prefix + 'progress-line-show-info'] = suffixText, _classNames[prefix + 'progress-line-show-border'] = hasBorder, _classNames['' + (prefix + size)] = size, _classNames[className] = className, _classNames));
        var lineCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'progress-line-overlay'] = true, _classNames2[prefix + 'progress-line-overlay-' + state] = !color && !progressive && state, _classNames2[prefix + 'progress-line-overlay-started'] = !color && progressive && percent <= 30, _classNames2[prefix + 'progress-line-overlay-middle'] = !color && progressive && percent > 30 && percent < 80, _classNames2[prefix + 'progress-line-overlay-finishing'] = !color && progressive && percent >= 80, _classNames2));

        var lineStyle = {
            width: (percent > 100 ? 100 : percent < 0 ? 0 : percent) + '%',
            backgroundColor: color
        };
        var underlayStyle = { backgroundColor: backgroundColor };

        return _react2.default.createElement('div', (0, _extends3.default)({
            dir: rtl ? 'rtl' : undefined,
            role: 'progressbar',
            'aria-valuenow': percent,
            'aria-valuemin': '0',
            'aria-valuemax': '100',
            className: wrapCls
        }, others), _react2.default.createElement('div', { className: prefix + 'progress-line-container' }, _react2.default.createElement('div', { className: prefix + 'progress-line-underlay', style: underlayStyle }, _react2.default.createElement('div', { className: lineCls, style: lineStyle }))), suffixText ? _react2.default.createElement('div', { className: prefix + 'progress-line-text' }, suffixText) : null);
    };

    return Line;
}(_react2.default.PureComponent), _class.propTypes = {
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    percent: _propTypes2.default.number,
    state: _propTypes2.default.oneOf(['normal', 'success', 'error']),
    progressive: _propTypes2.default.bool,
    hasBorder: _propTypes2.default.bool,
    textRender: _propTypes2.default.func,
    color: _propTypes2.default.string,
    backgroundColor: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
}, _temp);
exports.default = Line;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var VIEWBOX_WIDTH = 100; // width of viewBox
var HALF_VIEWBOX_WIDTH = VIEWBOX_WIDTH / 2;
var DEFAULT_STROKE_WIDTH = 8;

var viewBox = '0 0 ' + VIEWBOX_WIDTH + ' ' + VIEWBOX_WIDTH;

var Circle = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Circle, _Component);

    function Circle(props) {
        (0, _classCallCheck3.default)(this, Circle);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this._underlayRefHandler = function (ref) {
            _this.underlay = ref;
        };

        _this._overlayRefHandler = function (ref) {
            _this.overlay = ref;
        };

        _this.state = {
            underlayStrokeWidth: DEFAULT_STROKE_WIDTH,
            overlayStrokeWidth: DEFAULT_STROKE_WIDTH
        };
        return _this;
    }

    Circle.prototype.componentDidMount = function componentDidMount() {
        if (this.underlay && this.overlay) {
            // eslint-disable-next-line
            this.setState({
                underlayStrokeWidth: this._getCssValue(this.underlay, 'stroke-width') || DEFAULT_STROKE_WIDTH,
                overlayStrokeWidth: this._getCssValue(this.overlay, 'stroke-width') || DEFAULT_STROKE_WIDTH
            });
        }
    };

    Circle.prototype._getCssValue = function _getCssValue(dom, name) {
        var css = window.getComputedStyle(dom).getPropertyValue(name);
        var regExp = /(\d*)px/g;
        var result = regExp.exec(css);

        return Array.isArray(result) ? Number(result[1]) : 0;
    };

    Circle.prototype._computeOverlayStrokeDashOffset = function _computeOverlayStrokeDashOffset() {
        var _state = this.state,
            underlayStrokeWidth = _state.underlayStrokeWidth,
            overlayStrokeWidth = _state.overlayStrokeWidth;

        var overlayRadius = HALF_VIEWBOX_WIDTH - overlayStrokeWidth / 2 - (underlayStrokeWidth - overlayStrokeWidth) / 2;
        var overlayLen = Math.PI * 2 * overlayRadius;
        return (VIEWBOX_WIDTH - this.props.percent) / VIEWBOX_WIDTH * overlayLen;
    };

    Circle.prototype._getPath = function _getPath(radius) {
        return 'M ' + HALF_VIEWBOX_WIDTH + ',' + HALF_VIEWBOX_WIDTH + ' m 0,-' + radius + ' a ' + radius + ',' + radius + ' 0 1 1 0,' + 2 * radius + ' a ' + radius + ',' + radius + ' 0 1 1 0,-' + 2 * radius;
    };

    Circle.prototype.render = function render() {
        var _classNames, _classNames2;

        var _props = this.props,
            prefix = _props.prefix,
            size = _props.size,
            state = _props.state,
            percent = _props.percent,
            className = _props.className,
            textRender = _props.textRender,
            progressive = _props.progressive,
            color = _props.color,
            backgroundColor = _props.backgroundColor,
            rtl = _props.rtl,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'size', 'state', 'percent', 'className', 'textRender', 'progressive', 'color', 'backgroundColor', 'rtl']);
        var _state2 = this.state,
            underlayStrokeWidth = _state2.underlayStrokeWidth,
            overlayStrokeWidth = _state2.overlayStrokeWidth;

        // underlay path

        var underlayRadius = HALF_VIEWBOX_WIDTH - underlayStrokeWidth / 2;
        var underlayPath = this._getPath(underlayRadius);

        // overlay path (为居中，减去相对于underlay的宽度)
        var overlayRadius = HALF_VIEWBOX_WIDTH - overlayStrokeWidth / 2 - (underlayStrokeWidth - overlayStrokeWidth) / 2;
        var overlayPath = this._getPath(overlayRadius);
        var overlayLen = Math.PI * 2 * overlayRadius;
        var overlayStrokeDasharray = overlayLen + 'px ' + overlayLen + 'px';
        var overlayStrokeDashoffset = this._computeOverlayStrokeDashOffset() + 'px';

        var suffixText = textRender(percent, { rtl: rtl });

        var wrapCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'progress-circle'] = true, _classNames[prefix + 'progress-circle-show-info'] = suffixText, _classNames['' + (prefix + size)] = size, _classNames[className] = className, _classNames));

        var pathCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'progress-circle-overlay'] = true, _classNames2[prefix + 'progress-circle-overlay-' + state] = !color && !progressive && state, _classNames2[prefix + 'progress-circle-overlay-started'] = !color && progressive && percent <= 30, _classNames2[prefix + 'progress-circle-overlay-middle'] = !color && progressive && percent > 30 && percent < 80, _classNames2[prefix + 'progress-circle-overlay-finishing'] = !color && progressive && percent >= 80, _classNames2));

        var underlayStyle = { stroke: backgroundColor };

        return _react2.default.createElement('div', (0, _extends3.default)({
            className: wrapCls,
            dir: rtl ? 'rtl' : undefined,
            role: 'progressbar',
            'aria-valuenow': percent,
            'aria-valuemin': '0',
            'aria-valuemax': '100'
        }, others), _react2.default.createElement('svg', { className: prefix + 'progress-circle-container', viewBox: viewBox }, _react2.default.createElement('path', {
            className: prefix + 'progress-circle-underlay',
            d: underlayPath,
            fillOpacity: '0',
            ref: this._underlayRefHandler,
            style: underlayStyle
        }), _react2.default.createElement('path', {
            className: pathCls,
            d: overlayPath,
            fillOpacity: '0',
            strokeDasharray: overlayStrokeDasharray,
            strokeDashoffset: overlayStrokeDashoffset,
            ref: this._overlayRefHandler,
            stroke: color
        })), suffixText ? _react2.default.createElement('div', { className: prefix + 'progress-circle-text' }, suffixText) : null);
    };

    return Circle;
}(_react.Component), _class.propTypes = {
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    percent: _propTypes2.default.number,
    state: _propTypes2.default.oneOf(['normal', 'success', 'error']),
    progressive: _propTypes2.default.bool,
    textRender: _propTypes2.default.func,
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.string,
    color: _propTypes2.default.string,
    backgroundColor: _propTypes2.default.string,
    rtl: _propTypes2.default.bool
}, _temp);
Circle.displayName = 'Circle';
exports.default = Circle;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _range = __webpack_require__(374);

var _range2 = _interopRequireDefault(_range);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_range2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('hasTips' in props) {
            deprecated('hasTips', 'hasTip', 'Range');

            var _props = props,
                hasTips = _props.hasTips,
                others = (0, _objectWithoutProperties3.default)(_props, ['hasTips']);

            props = (0, _extends3.default)({ hasTip: hasTips }, others);
        }

        if ('tipFormatter' in props) {
            deprecated('tipFormatter', 'tipRender', 'Range');

            var _props2 = props,
                tipFormatter = _props2.tipFormatter,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['tipFormatter']);

            props = (0, _extends3.default)({ tipRender: tipFormatter }, _others);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _class, _temp;

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _balloon = __webpack_require__(58);

var _balloon2 = _interopRequireDefault(_balloon);

var _utils = __webpack_require__(40);

var _scale = __webpack_require__(375);

var _scale2 = _interopRequireDefault(_scale);

var _track = __webpack_require__(376);

var _track2 = _interopRequireDefault(_track);

var _selected = __webpack_require__(377);

var _selected2 = _interopRequireDefault(_selected);

var _mark = __webpack_require__(378);

var _mark2 = _interopRequireDefault(_mark);

var _slider = __webpack_require__(379);

var _slider2 = _interopRequireDefault(_slider);

var _fixedSlider = __webpack_require__(380);

var _fixedSlider2 = _interopRequireDefault(_fixedSlider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Tooltip = _balloon2.default.Tooltip;
var noop = _util.func.noop,
    bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;

function _isMultiple(slider, isFixedWidth) {
    return isFixedWidth || slider === 'double';
}

function LowerSlider(props) {
    var hasTip = props.hasTip,
        value = props.value,
        tipRender = props.tipRender,
        slider = props.slider,
        tooltipVisible = props.tooltipVisible,
        onTooltipVisibleChange = props.onTooltipVisibleChange,
        tooltipAnimation = props.tooltipAnimation;

    if (_isMultiple(slider)) {
        return hasTip ? _react2.default.createElement(Tooltip, {
            popupContainer: function popupContainer(target) {
                return target.parentNode;
            },
            popupProps: {
                visible: tooltipVisible,
                onVisibleChange: onTooltipVisibleChange,
                animation: tooltipAnimation,
                needAdjust: false
            },
            trigger: (0, _slider2.default)((0, _extends3.default)({}, props, { value: value[0] })),
            align: 't'
        }, tipRender('' + value[0])) : (0, _slider2.default)((0, _extends3.default)({}, props, { value: value[0] }));
    }
    return null;
}

LowerSlider.propTypes = {
    hasTip: _propTypes2.default.bool,
    tooltipVisible: _propTypes2.default.bool,
    onTooltipVisibleChange: _propTypes2.default.func,
    tooltipAnimation: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.object]),
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    tipRender: _propTypes2.default.func,
    slider: _propTypes2.default.oneOf(['single', 'double'])
};

function UpperSlider(props) {
    var newprop = (0, _extends3.default)({}, props);
    var hasTip = newprop.hasTip,
        value = newprop.value,
        tipRender = newprop.tipRender,
        slider = newprop.slider,
        tooltipVisible = newprop.tooltipVisible,
        onTooltipVisibleChange = newprop.onTooltipVisibleChange,
        tooltipAnimation = newprop.tooltipAnimation;

    if (_isMultiple(slider)) {
        delete newprop.onKeyDown;
        return hasTip ? _react2.default.createElement(Tooltip, {
            popupContainer: function popupContainer(target) {
                return target.parentNode;
            },
            popupProps: {
                visible: tooltipVisible,
                onVisibleChange: onTooltipVisibleChange,
                animation: tooltipAnimation,
                needAdjust: false
            },
            trigger: (0, _slider2.default)((0, _extends3.default)({}, newprop, { value: value[1] })),
            align: 't'
        }, tipRender(value[1])) : (0, _slider2.default)((0, _extends3.default)({}, newprop, { value: value[1] }));
    }
    return hasTip ? _react2.default.createElement(Tooltip, {
        popupContainer: function popupContainer(target) {
            return target.parentNode;
        },
        popupProps: {
            visible: tooltipVisible,
            onVisibleChange: onTooltipVisibleChange,
            animation: tooltipAnimation,
            needAdjust: false
        },
        animation: {
            in: 'fadeInUp',
            out: 'fadeOutDown'
        },
        trigger: (0, _slider2.default)(newprop),
        align: 't'
    }, tipRender(value)) : (0, _slider2.default)(newprop);
}

UpperSlider.propTypes = {
    hasTip: _propTypes2.default.bool,
    tooltipVisible: _propTypes2.default.bool,
    onTooltipVisibleChange: _propTypes2.default.func,
    tooltipAnimation: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.object]),
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    tipRender: _propTypes2.default.func,
    slider: _propTypes2.default.oneOf(['single', 'double'])
};

function pauseEvent(e) {
    e.stopPropagation();
    e.preventDefault();
}

/** Range */
var Range = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Range, _React$Component);

    function Range(props) {
        (0, _classCallCheck3.default)(this, Range);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        var min = props.min;

        var initialValue = _isMultiple(props.slider) ? [min, min] : min;
        var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
        var value = props.value !== undefined ? props.value : defaultValue;

        _this.state = {
            value: value,
            tempValue: value,
            hasMovingClass: false,
            lowerTooltipVisible: false,
            upperTooltipVisible: false,
            tooltipAnimation: true
        };

        bindCtx(_this, ['handleLowerTooltipVisibleChange', 'handleUpperTooltipVisibleChange', 'onKeyDown']);
        return _this;
    }

    Range.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if ('value' in props) {
            var min = props.min,
                slider = props.slider,
                value = props.value;
            var hasMovingClass = state.hasMovingClass;

            var newState = {
                value: value
            };

            if (value === undefined) {
                newState.value = _isMultiple(slider) ? [min, min] : min;
            }

            if (!hasMovingClass) {
                newState.tempValue = newState.value;
            }

            return newState;
        }
        return null;
    };

    Range.prototype._marksToScales = function _marksToScales(marks) {
        var result = [];
        if (Object.prototype.toString.call(marks) === '[object Object]') {
            for (var key in marks) {
                if (Object.hasOwnProperty.call(marks, key)) {
                    result.push(parseInt(key));
                }
            }
        } else {
            result = marks;
        }
        return result;
    };

    Range.prototype._calcScales = function _calcScales() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            marks = _props.marks;

        var scales = this._marksToScales(marks);

        if (scales !== false) {
            if (Array.isArray(scales)) {
                return scales;
            } else {
                var pace = (max - min) / scales;
                var result = [];

                result.push(min);
                for (var i = 1; i < scales; i++) {
                    result.push(min + i * pace);
                }
                result.push(max);
                return result;
            }
        } else {
            return [];
        }
    };

    Range.prototype._calcMarks = function _calcMarks() {
        var _props2 = this.props,
            min = _props2.min,
            max = _props2.max,
            marks = _props2.marks;

        var result = {};

        if (Array.isArray(marks)) {
            marks.forEach(function (m) {
                result[m] = m.toString();
            });
        } else if (typeof marks === 'number') {
            var pace = (max - min) / marks;

            result[min] = min;
            for (var i = 1; i < marks; i++) {
                var mark = min + i * pace;
                var precision = (0, _utils.getPrecision)(mark);
                if (precision > 2) {
                    precision = 2;
                }
                mark = mark.toFixed(precision);
                result[mark] = mark;
            }
            result[max] = max;
        } else {
            result = marks;
        }
        return result;
    };

    Range.prototype._onMouseDown = function _onMouseDown(e) {
        if (e.button === 0) {
            this._start(e.pageX);
            this._addDocumentMouseEvents();
            pauseEvent(e);
        }
    };

    Range.prototype._onTouchStart = function _onTouchStart(e) {
        this._start(e.targetTouches[0].pageX);
        this._addDocumentTouchEvents();
        e.stopPropagation(); // preventDefault() will be ignored: https://www.chromestatus.com/features/5093566007214080
    };

    Range.prototype.onKeyDown = function onKeyDown(e) {
        if (this.props.disabled) return;

        if (e.keyCode === _util.KEYCODE.LEFT_ARROW || e.keyCode === _util.KEYCODE.RIGHT_ARROW) {
            e.stopPropagation();
            e.preventDefault();
            var newValue = void 0;
            if (e.keyCode === _util.KEYCODE.LEFT_ARROW) {
                newValue = this.state.value - this.props.step;
            } else {
                newValue = this.state.value + this.props.step;
            }
            if (newValue > this.props.max) {
                newValue = this.props.max;
            }
            if (newValue < this.props.min) {
                newValue = this.props.min;
            }
            if (newValue !== this.state.value) {
                this.setState({
                    value: newValue
                });
                this.props.onChange(newValue);
            }
        }
    };

    Range.prototype._start = function _start(position) {
        this.setState({
            hasMovingClass: true
        });

        var tempValue = this.state.tempValue;

        var range = this.dom;
        var start = _util.dom.getOffset(range).left;
        // used in unit test
        var width = range.clientWidth;
        if (!width) {
            if (range.style.width) {
                var index = range.style.width.indexOf('px');
                if (index !== -1) {
                    width = Number(range.style.width.slice(0, index));
                }
            }
        }

        this._moving = {
            start: start,
            end: start + width,
            startValue: tempValue
        };

        // change on start
        this._onProcess(position, true);
    };

    Range.prototype._end = function _end() {
        var startValue = this._moving.startValue;
        var _state = this.state,
            tempValue = _state.tempValue,
            value = _state.value;

        this._moving = null;
        this._removeDocumentEvents();
        this.setState({
            hasMovingClass: false,
            lowerTooltipVisible: false,
            upperTooltipVisible: false,
            tooltipAnimation: true
        });

        if (!(0, _utils.isEqual)(tempValue, startValue)) {
            // Not Controlled
            if (!('value' in this.props)) {
                this.setState({
                    value: tempValue
                });
            } else {
                this.setState({
                    // tooltipVisible: false,
                    tempValue: value,
                    value: value
                });
            }
            this.props.onChange(tempValue);
        }
    };

    Range.prototype._move = function _move(e) {
        var position = e.type === 'mousemove' ? e.pageX : e.targetTouches[0].pageX;
        this._onProcess(position);
    };

    Range.prototype._onProcess = function _onProcess(position, start) {
        var tempValue = this.state.tempValue;

        var current = this._positionToCurrent(position); //current 为当前click的value

        if (this.isFixedWidth) {
            if (start) {
                this.lastPosition = current;
            }
        } else if (start) {
            this.lastPosition = current;
            if (_isMultiple(this.props.slider)) {
                this._moving.dragging = (0, _utils.getDragging)(current, tempValue);
            } else {
                this._moving.dragging = 'upper';
            }

            this.setState({
                lowerTooltipVisible: this._moving.dragging === 'lower',
                upperTooltipVisible: this._moving.dragging === 'upper',
                tooltipAnimation: false
            });
        } else if (this.oldDragging === 'lower' && this._moving.dragging === 'upper') {
            this.setState({
                upperTooltipVisible: true,
                lowerTooltipVisible: false
            });
        } else if (this.oldDragging === 'upper' && this._moving.dragging === 'lower') {
            this.setState({
                upperTooltipVisible: false,
                lowerTooltipVisible: true
            });
        }

        this.oldDragging = this._moving.dragging;

        var nextValue = this._currentToValue(current, tempValue, this.lastPosition, this.isFixedWidth); //计算range的新value,可能是数组,可能是单个值
        this.lastPosition = current;

        if (!(0, _utils.isEqual)(nextValue, tempValue)) {
            this.setState({
                tempValue: nextValue
            });
            this.props.onProcess(nextValue);
        }
    };

    Range.prototype._addDocumentMouseEvents = function _addDocumentMouseEvents() {
        this._onMouseMoveListener = _util.events.on(document, 'mousemove', this._move.bind(this));
        this._onMouseUpListener = _util.events.on(document, 'mouseup', this._end.bind(this));
    };

    Range.prototype._addDocumentTouchEvents = function _addDocumentTouchEvents() {
        this._onTouchMoveListener = _util.events.on(document, 'touchmove', this._move.bind(this));
        this._onTouchEndListener = _util.events.on(document, 'touchend', this._end.bind(this));
    };

    Range.prototype._removeDocumentEvents = function _removeDocumentEvents() {
        if (this._onMouseMoveListener) {
            this._onMouseMoveListener.off();
            this._onMouseMoveListener = null;
        }

        if (this._onMouseUpListener) {
            this._onMouseUpListener.off();
            this._onMouseUpListener = null;
        }

        if (this._onTouchMoveListener) {
            this._onTouchMoveListener.off();
            this._onTouchMoveListener = null;
        }

        if (this._onTouchEndListener) {
            this._onTouchEndListener.off();
            this._onTouchEndListener = null;
        }
    };

    // position => current (value type)


    Range.prototype._positionToCurrent = function _positionToCurrent(position) {
        var _moving = this._moving,
            start = _moving.start,
            end = _moving.end;
        var _props3 = this.props,
            step = _props3.step,
            min = _props3.min,
            max = _props3.max,
            rtl = _props3.rtl;

        if (position < start) {
            position = start;
        } else if (position > end) {
            position = end;
        }
        var percent = (0, _utils.getPercent)(start, end, position);
        percent = rtl ? 100 - percent : percent;
        // reset by step
        var newValue = parseFloat((Math.round(percent / 100 * (max - min) / step) * step).toFixed((0, _utils.getPrecision)(step)));
        var currentValue = (min + newValue).toFixed((0, _utils.getPrecision)(step));

        return Number(currentValue);
    };

    Range.prototype._currentToValue = function _currentToValue(current, preValue, lastPosition, isFixedWidth) {
        var dragging = this._moving.dragging;
        var _props4 = this.props,
            min = _props4.min,
            max = _props4.max;

        if (!_isMultiple(this.props.slider, isFixedWidth)) {
            return current;
        } else {
            var result = void 0;

            var precision = (0, _utils.getPrecision)(this.props.step);
            var diff = current - lastPosition;
            var newLeft = +(+preValue[0] + diff).toFixed(precision);
            var newRight = +(+preValue[1] + diff).toFixed(precision);

            var newMaxLeft = +(max - preValue[1] + preValue[0]).toFixed(precision);
            var newMinRight = +(min + preValue[1] - preValue[0]).toFixed(precision);

            if (isFixedWidth) {
                if (newLeft < min) {
                    result = [min, newMinRight];
                } else if (newRight > max) {
                    result = [newMaxLeft, max];
                } else {
                    result = [newLeft, newRight];
                }
            } else if (dragging === 'lower') {
                if (current > preValue[1]) {
                    result = [preValue[1], current];
                    this._moving.dragging = 'upper';
                } else {
                    result = [current, preValue[1]];
                }
            } else if (dragging === 'upper') {
                if (current < preValue[0]) {
                    result = [current, preValue[0]];
                    this._moving.dragging = 'lower';
                } else {
                    result = [preValue[0], current];
                }
            }

            return result;
        }
    };

    Range.prototype.handleLowerTooltipVisibleChange = function handleLowerTooltipVisibleChange(visible) {
        if (this.state.hasMovingClass) {
            return;
        }
        this.setState({
            lowerTooltipVisible: visible
        });
    };

    Range.prototype.handleUpperTooltipVisibleChange = function handleUpperTooltipVisibleChange(visible) {
        if (this.state.hasMovingClass) {
            return;
        }
        this.setState({
            upperTooltipVisible: visible
        });
    };

    Range.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var value = this._moving ? this.state.tempValue : this.state.value;

        var _props5 = this.props,
            prefix = _props5.prefix,
            min = _props5.min,
            max = _props5.max,
            disabled = _props5.disabled,
            style = _props5.style,
            id = _props5.id,
            slider = _props5.slider,
            reverse = _props5.reverse,
            className = _props5.className,
            marks = _props5.marks,
            marksPosition = _props5.marksPosition,
            hasTip = _props5.hasTip,
            tipRender = _props5.tipRender,
            fixedWidth = _props5.fixedWidth,
            defaultValue = _props5.defaultValue,
            tooltipVisible = _props5.tooltipVisible,
            rtl = _props5.rtl,
            isPreview = _props5.isPreview,
            renderPreview = _props5.renderPreview;

        var others = pickOthers(Object.keys(Range.propTypes), this.props);

        var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range'] = true, _classNames.disabled = disabled, _classNames[className] = className, _classNames));

        if (Array.isArray(value)) {
            value.forEach(function (item, index) {
                if (item > max) {
                    value[index] = max;
                }
            });
        } else if (value > max) {
            value = max;
        }

        var commonProps = {
            prefix: prefix,
            min: min,
            max: max,
            value: value,
            reverse: reverse,
            slider: slider,
            hasTip: hasTip,
            tipRender: tipRender,
            marksPosition: marksPosition,
            tooltipVisible: tooltipVisible,
            hasMovingClass: this.state.hasMovingClass,
            disabled: disabled,
            rtl: rtl
        };

        this.isFixedWidth = fixedWidth && (value ? Array.isArray(value) : defaultValue ? Array.isArray(defaultValue) : false);

        if (isPreview) {
            var previewCls = (0, _classnames2.default)(className, prefix + 'form-preview');

            if ('renderPreview' in this.props) {
                return _react2.default.createElement('div', (0, _extends3.default)({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }), renderPreview(value, this.props));
            }

            return _react2.default.createElement('p', (0, _extends3.default)({ id: id, dir: rtl ? 'rtl' : 'ltr' }, others, { className: previewCls }), Array.isArray(value) ? value.join('~') : value);
        }

        return _react2.default.createElement('div', (0, _extends3.default)({
            ref: function ref(dom) {
                _this2.dom = dom;
            }
        }, others, {
            style: style,
            className: classes,
            id: id,
            dir: rtl ? 'rtl' : 'ltr',
            onMouseDown: disabled ? noop : this._onMouseDown.bind(this),
            onTouchStart: disabled ? noop : this._onTouchStart.bind(this)
        }), marks !== false && marksPosition === 'above' ? _react2.default.createElement(_mark2.default, (0, _extends3.default)({}, commonProps, { marks: this._calcMarks() })) : null, _react2.default.createElement('div', { className: prefix + 'range-inner' }, _react2.default.createElement(_scale2.default, (0, _extends3.default)({}, commonProps, { scales: this._calcScales() })), _react2.default.createElement(_track2.default, commonProps), this.isFixedWidth ? _react2.default.createElement(_fixedSlider2.default, commonProps) : _react2.default.createElement('div', null, _react2.default.createElement(_selected2.default, commonProps), _react2.default.createElement(LowerSlider, (0, _extends3.default)({}, commonProps, {
            hasMovingClass: this.state.hasMovingClass && this._moving && this._moving.dragging === 'lower',
            tooltipVisible: tooltipVisible || this.state.lowerTooltipVisible,
            onTooltipVisibleChange: this.handleLowerTooltipVisibleChange,
            tooltipAnimation: this.state.tooltipAnimation ? {
                in: 'expandInUp',
                out: 'expandOutDown'
            } : false
        })), _react2.default.createElement(UpperSlider, (0, _extends3.default)({}, commonProps, {
            onKeyDown: this.onKeyDown,
            hasMovingClass: this.state.hasMovingClass && this._moving && this._moving.dragging === 'upper',
            tooltipVisible: tooltipVisible || this.state.upperTooltipVisible,
            onTooltipVisibleChange: this.handleUpperTooltipVisibleChange,
            tooltipAnimation: this.state.tooltipAnimation ? {
                in: 'expandInUp',
                out: 'expandOutDown'
            } : false
        })))), marks !== false && marksPosition === 'below' ? _react2.default.createElement(_mark2.default, (0, _extends3.default)({}, commonProps, { marks: this._calcMarks() })) : null);
    };

    return Range;
}(_react2.default.Component), _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _class.propTypes = {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _propTypes2.default.string,
    /**
     * 自定义类名
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内敛样式
     */
    style: _propTypes2.default.object,
    /**
     * 滑块个数
     * @enumdesc 单个, 两个
     */
    slider: _propTypes2.default.oneOf(['single', 'double']),
    /**
     * 最小值
     */
    min: _propTypes2.default.number,
    /**
     * 最大值
     */
    max: _propTypes2.default.number,
    /**
     * 步长，取值必须大于 0，并且可被 (max - min) 整除。
     */
    step: _propTypes2.default.number,
    /**
     * 设置当前取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    tempValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    /**
     * 设置初始取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    /**
     * 刻度数值显示逻辑（false 代表不显示，array 枚举显示的值，number 代表按 number 平分，object 表示按 key 划分，value 值显示）
     */
    marks: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.object]),
    /**
     * marks显示在上方('above')or下方('below')
     */
    marksPosition: _propTypes2.default.oneOf(['above', 'below']),
    /**
     * 值为 `true` 时，滑块为禁用状态
     */
    disabled: _propTypes2.default.bool,
    /**
     * 当 Range 的值发生改变后，会触发 onChange 事件，并把改变后的值作为参数传入, 如果设置了value, 要配合此函数做受控使用
     * @param {String/number} value
     */
    onChange: _propTypes2.default.func,
    /**
     * 滑块拖动的时候触发的事件,不建议在这里setState, 一般情况下不需要用, 滑动时有特殊需求时使用
     * @param {String/number} value
     */
    onProcess: _propTypes2.default.func,
    /**
     * 是否显示 tip
     */
    hasTip: _propTypes2.default.bool,
    /**
     * 自定义 tip 显示内容
     * @param {Number|String} value 值
     * @return {ReactNode} 显示内容
     */
    tipRender: _propTypes2.default.func,
    id: _propTypes2.default.string,
    /**
     * 选中态反转
     */
    reverse: _propTypes2.default.bool,
    /**
     * 是否pure render
     */
    pure: _propTypes2.default.bool,
    /**
     * 是否为拖动线段类型,默认slider为double, defaultValue必传且指定区间
     */
    fixedWidth: _propTypes2.default.bool,
    /**
     * tooltip是否默认展示
     */
    tooltipVisible: _propTypes2.default.bool,
    /**
     * 是否已rtl模式展示
     */
    rtl: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {number} value 评分值
     */
    renderPreview: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    slider: 'single',
    min: 0,
    max: 100,
    step: 1,
    marks: false,
    disabled: false,
    fixedWidth: false,
    tooltipVisible: false,
    hasTip: true,
    onChange: noop,
    onProcess: noop,
    tipRender: function tipRender(value) {
        return value;
    },
    reverse: false,
    pure: false,
    marksPosition: 'above',
    rtl: false,
    isPreview: false
}, _temp);
Range.displayName = 'Range';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Range);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(40);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Scale = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Scale, _React$Component);

    function Scale() {
        (0, _classCallCheck3.default)(this, Scale);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Scale.prototype._renderItems = function _renderItems() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            value = _props.value,
            prefix = _props.prefix,
            scales = _props.scales,
            rtl = _props.rtl;

        var items = [];

        scales.forEach(function (scale, i) {
            var _classNames;

            var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range-scale-item'] = true, _classNames.activated = (0, _utils.inRange)(scale, value, min), _classNames));
            var style = void 0;
            if (rtl) {
                style = {
                    right: (0, _utils.getPercent)(min, max, scale) + '%',
                    left: 'auto'
                };
            } else {
                style = {
                    left: (0, _utils.getPercent)(min, max, scale) + '%',
                    right: 'auto'
                };
            }

            items.push(
            // "key" is for https://fb.me/react-warning-keys
            _react2.default.createElement('span', { className: classes, style: style, key: i }));
        });

        return items;
    };

    Scale.prototype.render = function render() {
        var _classNames2;

        var prefix = this.props.prefix;

        var classes = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'range-scale'] = true, _classNames2));
        var items = this._renderItems();

        return _react2.default.createElement('div', { className: classes }, items);
    };

    return Scale;
}(_react2.default.Component), _class.propTypes = {
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    prefix: _propTypes2.default.string,
    scales: _propTypes2.default.arrayOf(_propTypes2.default.number),
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    rtl: false
}, _temp);
Scale.displayName = 'Scale';
exports.default = Scale;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Track = function Track(_ref) {
    var _classNames;

    var prefix = _ref.prefix;

    var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range-track'] = true, _classNames));
    return _react2.default.createElement('div', { className: classes });
};

Track.propTypes = {
    prefix: _propTypes2.default.string
};

Track.defaultProps = {
    prefix: 'next-'
};

exports.default = Track;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(40);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Selected = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Selected, _React$Component);

    function Selected() {
        (0, _classCallCheck3.default)(this, Selected);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Selected.prototype._getStyle = function _getStyle() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            reverse = _props.reverse,
            rtl = _props.rtl;
        var value = this.props.value;

        if (!Array.isArray(value)) {
            value = [min, value];
        }
        var width = (value[1] - value[0]) * 100 / (max - min);

        var style = void 0;

        if (!rtl && !reverse) {
            // normal select
            style = {
                width: width + '%',
                left: (0, _utils.getPercent)(min, max, value[0]) + '%'
            };
        } else if (rtl && !reverse) {
            // select in rtl mode
            style = {
                width: width + '%',
                left: (0, _utils.getPercent)(min, max, max + min - value[1]) + '%'
            };
        } else if (!rtl && reverse) {
            // select in reverse mode
            style = {
                width: 100 - width + '%',
                left: (0, _utils.getPercent)(min, max, value[0]) + width + '%'
            };
        } else {
            // select in rtl & reverse mode
            style = {
                width: 100 - width + '%',
                left: (0, _utils.getPercent)(min, max, value[0]) + '%'
            };
        }

        return style;
    };

    Selected.prototype._getStyleLeft = function _getStyleLeft() {
        var _props2 = this.props,
            min = _props2.min,
            max = _props2.max,
            rtl = _props2.rtl;
        var value = this.props.value;

        if (!Array.isArray(value)) {
            value = [min, value];
        }

        var style = {
            width: (0, _utils.getPercent)(min, max, value[0]) + '%',
            left: 0
        };
        if (rtl) {
            style.width = 100 - (0, _utils.getPercent)(min, max, value[1]) + '%';
        }
        return style;
    };

    Selected.prototype._getStyleRight = function _getStyleRight() {
        var _props3 = this.props,
            min = _props3.min,
            max = _props3.max,
            rtl = _props3.rtl;
        var value = this.props.value;

        if (!Array.isArray(value)) {
            value = [min, value];
        }
        var width = (value[1] - value[0]) * 100 / (max - min);

        var style = {
            width: 100 - (0, _utils.getPercent)(min, max, value[0]) - width + '%',
            left: (0, _utils.getPercent)(min, max, value[0]) + width + '%'
        };

        if (rtl) {
            style = {
                width: (0, _utils.getPercent)(min, max, value[0]) + '%',
                left: 100 - (0, _utils.getPercent)(min, max, value[0]) + '%'
            };
        }
        return style;
    };

    Selected.prototype.render = function render() {
        var _classNames;

        var _props4 = this.props,
            prefix = _props4.prefix,
            slider = _props4.slider,
            reverse = _props4.reverse,
            rtl = _props4.rtl;

        var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range-selected'] = true, _classNames));
        var SeletedComps = _react2.default.createElement('div', { className: classes, style: this._getStyle() });

        if (slider === 'double' && reverse) {
            SeletedComps = _react2.default.createElement('div', null, _react2.default.createElement('div', { className: classes, style: this._getStyleLeft() }), _react2.default.createElement('div', { className: classes, style: this._getStyleRight() }));
        }

        return SeletedComps;
    };

    return Selected;
}(_react2.default.Component), _class.propTypes = {
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    slider: _propTypes2.default.string,
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    prefix: _propTypes2.default.string,
    reverse: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    slider: 'single',
    min: 0,
    max: 100,
    value: 0,
    reverse: false,
    rtl: false
}, _temp);
Selected.displayName = 'Selected';
exports.default = Selected;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(40);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Mark = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Mark, _React$Component);

    function Mark() {
        (0, _classCallCheck3.default)(this, Mark);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Mark.prototype._renderItems = function _renderItems() {
        var _props = this.props,
            min = _props.min,
            max = _props.max,
            value = _props.value,
            prefix = _props.prefix,
            marks = _props.marks,
            rtl = _props.rtl;

        var items = [];

        Object.keys(marks).forEach(function (mark, i) {
            var _classNames;

            var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range-mark-text'] = true, _classNames.activated = (0, _utils.inRange)(mark, value, min), _classNames));
            var style = void 0;
            if (rtl) {
                style = {
                    right: (0, _utils.getPercent)(min, max, mark) + '%',
                    left: 'auto'
                };
            } else {
                style = {
                    left: (0, _utils.getPercent)(min, max, mark) + '%',
                    right: 'auto'
                };
            }

            items.push(
            // "key" is for https://fb.me/react-warning-keys
            _react2.default.createElement('span', { className: classes, style: style, key: i }, marks[mark]));
        });

        return items;
    };

    Mark.prototype.render = function render() {
        var _classNames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            marksPosition = _props2.marksPosition;

        var className = marksPosition === 'above' ? prefix + 'range-mark-above' : prefix + 'range-mark-below';
        var classes = (0, _classnames2.default)(className, (_classNames2 = {}, _classNames2[prefix + 'range-mark'] = true, _classNames2));
        var items = this._renderItems();

        return _react2.default.createElement('div', { className: classes }, items);
    };

    return Mark;
}(_react2.default.Component), _class.propTypes = {
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    prefix: _propTypes2.default.string,
    marks: _propTypes2.default.object,
    marksPosition: _propTypes2.default.string,
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    marksPosition: '',
    rtl: false
}, _temp);
Mark.displayName = 'Mark';
exports.default = Mark;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utils = __webpack_require__(40);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _getProps(min, max, value, rtl) {
    return {
        style: {
            left: rtl ? 100 - (0, _utils.getPercent)(min, max, value) + '%' : (0, _utils.getPercent)(min, max, value) + '%',
            zIndex: 100
        },
        'aria-valuenow': value,
        'aria-valuetext': value,
        'aria-valuemin': min,
        'aria-valuemax': max
    };
}

function Slider(_ref) {
    var _classNames;

    var prefix = _ref.prefix,
        hasMovingClass = _ref.hasMovingClass,
        min = _ref.min,
        max = _ref.max,
        value = _ref.value,
        onKeyDown = _ref.onKeyDown,
        rtl = _ref.rtl;

    var classes = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'range-slider'] = true, _classNames[prefix + 'range-slider-moving'] = hasMovingClass, _classNames));
    return _react2.default.createElement('div', (0, _extends3.default)({ className: classes, onKeyDown: onKeyDown, role: 'slider', tabIndex: 0 }, _getProps(min, max, value, rtl)), _react2.default.createElement('div', { className: prefix + 'range-slider-inner' }));
}

Slider.propTypes = {
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    value: _propTypes2.default.number,
    prefix: _propTypes2.default.string,
    hasMovingClass: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool
};

Slider.defaultProps = {
    prefix: 'next-',
    min: 0,
    max: 100,
    value: 0,
    hasMovingClass: false,
    rtl: false
};

exports.default = Slider;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _balloon = __webpack_require__(58);

var _balloon2 = _interopRequireDefault(_balloon);

var _utils = __webpack_require__(40);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Tooltip = _balloon2.default.Tooltip;
var noop = _util.func.noop;

function _getStyle(min, max, value, rtl) {
    if (rtl) {
        return {
            left: (0, _utils.getPercent)(min, max, max + min - value[1]) + '%',
            right: (0, _utils.getPercent)(min, max, value[0]) + '%'
        };
    }
    return {
        left: (0, _utils.getPercent)(min, max, value[0]) + '%',
        right: 100 - (0, _utils.getPercent)(min, max, value[1]) + '%'
    };
}

function sliderFrag(props) {
    var prefix = props.prefix,
        min = props.min,
        max = props.max,
        value = props.value,
        disabled = props.disabled,
        onMouseEnter = props.onMouseEnter,
        onMouseLeave = props.onMouseLeave,
        onMouseDown = props.onMouseDown,
        rtl = props.rtl;

    var activeClass = !disabled && props.hasMovingClass ? prefix + 'range-active' : '';

    return _react2.default.createElement('div', {
        className: prefix + 'range-frag ' + activeClass,
        style: _getStyle(min, max, value, rtl),
        onMouseEnter: onMouseEnter,
        onMouseLeave: onMouseLeave,
        onMouseDown: onMouseDown
    }, _react2.default.createElement('div', { className: prefix + 'range-selected' }), _react2.default.createElement('div', { className: prefix + 'range-slider' }, _react2.default.createElement('div', { className: prefix + 'range-slider-inner' })), _react2.default.createElement('div', { className: prefix + 'range-slider' }, _react2.default.createElement('div', { className: prefix + 'range-slider-inner' })));
}

sliderFrag.propTypes = {
    prefix: _propTypes2.default.string,
    min: _propTypes2.default.number,
    max: _propTypes2.default.number,
    hasMovingClass: _propTypes2.default.bool,
    onMouseEnter: _propTypes2.default.func,
    onMouseLeave: _propTypes2.default.func,
    onMouseDown: _propTypes2.default.func,
    value: _propTypes2.default.arrayOf(_propTypes2.default.number),
    disabled: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool
};

var FixedSlider = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(FixedSlider, _React$Component);

    function FixedSlider(props) {
        (0, _classCallCheck3.default)(this, FixedSlider);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.state = {
            hasMovingClass: false,
            onTooltipVisibleChange: false,
            tooltipAnimation: true
        };
        return _this;
    }

    FixedSlider.prototype._onMouseEnter = function _onMouseEnter() {
        if (!(this.keyState === 'down')) {
            this.keyState = 'enter';
        }
        this.setState({
            hasMovingClass: true
        });
    };

    FixedSlider.prototype._onMouseLeave = function _onMouseLeave() {
        if (this.keyState === 'enter') {
            this.setState({
                hasMovingClass: false
            });
        }
    };

    FixedSlider.prototype._onMouseDown = function _onMouseDown() {
        this.keyState = 'down';
        this.setState({
            hasMovingClass: true
        });
        this._addDocumentEvents();
    };

    FixedSlider.prototype._onMouseUp = function _onMouseUp() {
        if (this.keyState === 'down') {
            this.keyState = '';
            this._removeDocumentEvents();
            this.setState({
                hasMovingClass: false
            });
        }
    };

    FixedSlider.prototype._addDocumentEvents = function _addDocumentEvents() {
        this._onMouseUpListener = _util.events.on(document, 'mouseup', this._onMouseUp.bind(this));
    };

    FixedSlider.prototype._removeDocumentEvents = function _removeDocumentEvents() {
        if (this._onMouseUpListener) {
            this._onMouseUpListener.off();
            this._onMouseUpListener = null;
        }
    };

    FixedSlider.prototype.render = function render() {
        var _props = this.props,
            hasTip = _props.hasTip,
            value = _props.value,
            tipRender = _props.tipRender,
            tooltipVisible = _props.tooltipVisible,
            hasMovingClass = _props.hasMovingClass;

        var addedProps = {
            hasMovingClass: hasMovingClass || this.state.hasMovingClass,
            onMouseEnter: this._onMouseEnter.bind(this),
            onMouseLeave: this._onMouseLeave.bind(this),
            onMouseDown: this._onMouseDown.bind(this)
        };

        return hasTip ? _react2.default.createElement(Tooltip, {
            popupContainer: function popupContainer(target) {
                return target.parentNode;
            },
            popupProps: {
                visible: tooltipVisible || hasMovingClass,
                animation: this.state.tooltipAnimation ? { in: 'expandInUp', out: 'expandOutDown' } : false
            },
            trigger: sliderFrag((0, _extends3.default)({}, this.props, addedProps)),
            align: 't'
        }, tipRender(value[0] + '-' + value[1])) : sliderFrag((0, _extends3.default)({}, this.props, addedProps));
    };

    return FixedSlider;
}(_react2.default.Component), _class.propTypes = {
    hasTip: _propTypes2.default.bool,
    tooltipVisible: _propTypes2.default.bool,
    onTooltipVisibleChange: _propTypes2.default.func,
    tooltipAnimation: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.object]),
    value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),
    tipRender: _propTypes2.default.func,
    disabled: _propTypes2.default.bool,
    hasMovingClass: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool
}, _class.defaultProps = {
    disabled: false,
    hasTip: true,
    onChange: noop,
    onProcess: noop,
    tipRender: function tipRender(value) {
        return value;
    },
    reverse: false,
    rtl: false
}, _temp);
FixedSlider.displayName = 'FixedSlider';
exports.default = FixedSlider;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var rating_1 = tslib_1.__importDefault(__webpack_require__(382));
exports.default = config_provider_1.default.config(rating_1.default, {
    transform: function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'showGrade', 'Rating');
            var type = props.type,
                others = tslib_1.__rest(props, ["type"]);
            props = tslib_1.__assign({ showGrade: type === 'grade' }, others);
        }
        var disabled = props.disabled,
            readOnly = props.readOnly;
        props.disabled = disabled || readOnly;
        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var noop = util_1.func.noop,
    bindCtx = util_1.func.bindCtx;
var ENTER = util_1.KEYCODE.ENTER,
    LEFT = util_1.KEYCODE.LEFT,
    UP = util_1.KEYCODE.UP,
    RIGHT = util_1.KEYCODE.RIGHT,
    DOWN = util_1.KEYCODE.DOWN;
var supportKeys = [ENTER, LEFT, UP, RIGHT, DOWN];
// 评分组件的大小与 icon 的大小映射关系
var ICON_SIZE_MAP = {
    small: 'xs',
    medium: 'small',
    large: 'medium'
};
var Rating = /** @class */function (_super) {
    tslib_1.__extends(Rating, _super);
    function Rating(props) {
        var _this = _super.call(this, props) || this;
        _this.underlayNode = null;
        _this.saveRef = function (ref, i) {
            _this["refs-rating-icon-".concat(i)] = ref;
        };
        _this.state = {
            // @ts-expect-error FIXME 这里没有像 getDerivedStateFromProps 内那样处理 props.value 为 undefined 时的情况，先标记
            value: 'value' in props ? props.value : props.defaultValue,
            hoverValue: 0,
            cleanedValue: null,
            iconSpace: 0,
            iconSize: 0,
            clicked: false // 标记组件是否被点击过
        };
        _this.timer = null;
        bindCtx(_this, ['handleClick', 'handleHover', 'handleLeave', 'onKeyDown']);
        return _this;
    }
    Rating.currentValue = function (min, max, hoverValue, stateValue) {
        var value = hoverValue ? hoverValue : stateValue;
        value = value >= max ? max : value;
        value = value <= min ? min : value;
        return value || 0;
    };
    Rating.getDerivedStateFromProps = function (nextProps) {
        var state = {};
        if ('value' in nextProps) {
            state.value = nextProps.value || 0;
        }
        if ('disabled' in nextProps || 'readOnly' in nextProps || 'isPreview' in nextProps || 'renderPreview' in nextProps) {
            state.disabled = nextProps.disabled || nextProps.readOnly || nextProps.isPreview && !('renderPreview' in nextProps);
        }
        return state;
    };
    Rating.prototype.componentDidMount = function () {
        this.getRenderResult();
    };
    Rating.prototype.componentWillUnmount = function () {
        this.clearTimer();
    };
    // 清除延时
    Rating.prototype.clearTimer = function () {
        if (this.timer) {
            clearTimeout(this.timer);
            this.timer = null;
        }
    };
    Rating.prototype.getRenderResult = function () {
        var count = this.props.count;
        var _a = this.state,
            iconSpace = _a.iconSpace,
            iconSize = _a.iconSize;
        var icon = this['refs-rating-icon-0'];
        if (icon && this.underlayNode) {
            var newIconSize = icon.offsetWidth;
            var newIconSpace = (this.underlayNode.offsetWidth - count * newIconSize) / (count + 1);
            if (newIconSize !== iconSize || newIconSpace !== iconSpace) {
                this.setState({
                    iconSpace: newIconSpace,
                    iconSize: newIconSize
                });
            }
        }
    };
    Rating.prototype.getValue = function (e) {
        // 如定位不准，优先纠正定位
        this.getRenderResult();
        var _a = this.props,
            allowHalf = _a.allowHalf,
            count = _a.count,
            rtl = _a.rtl;
        var _b = this.state,
            iconSpace = _b.iconSpace,
            iconSize = _b.iconSize;
        var pos = e.pageX - this.underlayNode.getBoundingClientRect().left;
        var fullNum = Math.floor(pos / (iconSpace + iconSize));
        var surplusNum = (pos - fullNum * (iconSpace + iconSize) - iconSpace) / iconSize;
        var value = Number(fullNum) + Number(surplusNum.toFixed(1));
        if (value >= count) {
            value = count;
        } else if (allowHalf) {
            var floorValue = Math.floor(value);
            if (rtl) {
                value = value - 0.5 >= floorValue ? floorValue + 1.5 : floorValue + 1;
            } else {
                value = value - 0.5 >= floorValue ? floorValue + 1 : floorValue + 0.5;
            }
        } else {
            value = Math.floor(value) + 1;
        }
        return rtl ? count - value + 1 : value;
    };
    Rating.prototype.handleHover = function (e) {
        var _this = this;
        if (this.state.disabled) {
            return;
        }
        var value = this.getValue(e);
        var onHoverChange = this.props.onHoverChange;
        var cleanedValue = this.state.cleanedValue;
        if (cleanedValue !== value) {
            this.clearTimer();
            this.timer = setTimeout(function () {
                _this.setState({ hoverValue: value, cleanedValue: null }, function () {
                    onHoverChange(value);
                });
            }, 0);
        }
    };
    Rating.prototype.handleLeave = function () {
        var onHoverChange = this.props.onHoverChange;
        if (this.state.disabled) {
            return;
        }
        this.clearTimer();
        this.setState({
            hoverValue: 0,
            cleanedValue: null
        });
        onHoverChange(undefined);
    };
    Rating.prototype.onKeyDown = function (e) {
        if (this.state.disabled) {
            return;
        }
        var _a = this.props,
            onKeyDown = _a.onKeyDown,
            count = _a.count;
        var disabled = this.state.disabled;
        if (disabled || supportKeys.indexOf(e.keyCode) < 0) {
            return !onKeyDown || onKeyDown(e);
        }
        var _b = this.state,
            hoverValue = _b.hoverValue,
            value = _b.value;
        var changingValue = hoverValue;
        if (changingValue === 0) {
            changingValue = value;
        }
        switch (e.keyCode) {
            case DOWN:
            case RIGHT:
                if (changingValue < count) {
                    changingValue += 1;
                } else {
                    changingValue = 1;
                }
                this.handleChecked(changingValue);
                break;
            case UP:
            case LEFT:
                if (changingValue > 1) {
                    changingValue -= 1;
                } else {
                    changingValue = count;
                }
                this.handleChecked(changingValue);
                break;
            case ENTER:
                this.props.onChange(changingValue);
                this.setState({
                    value: changingValue,
                    hoverValue: changingValue
                });
                break;
        }
        return !onKeyDown || onKeyDown(e);
    };
    Rating.prototype.handleChecked = function (index) {
        if (this.state.disabled) {
            return;
        }
        this.setState({ hoverValue: index });
    };
    Rating.prototype.handleClick = function (e) {
        var _this = this;
        if (this.state.disabled) {
            return;
        }
        var allowClear = this.props.allowClear;
        var value = this.state.value;
        var newValue = this.getValue(e);
        var isReset = false;
        if (allowClear) {
            isReset = newValue === value;
        }
        this.handleLeave();
        if (newValue < 0) {
            return;
        }
        if (!('value' in this.props)) {
            this.setState({ value: isReset ? 0 : newValue, clicked: true });
        }
        if (newValue !== value || isReset) {
            this.props.onChange(isReset ? 0 : newValue);
        }
        setTimeout(function () {
            _this.setState({ clicked: false });
        }, 100);
        this.setState({
            cleanedValue: isReset ? newValue : null
        });
    };
    Rating.prototype.getOverlayWidth = function () {
        var _a = this.state,
            hoverValue = _a.hoverValue,
            iconSpace = _a.iconSpace,
            iconSize = _a.iconSize;
        if (!iconSpace || !iconSize) {
            return 'auto';
        }
        var value = Rating.currentValue(0, this.props.count, hoverValue, this.state.value);
        var floorValue = Math.floor(value);
        return iconSize * value + (floorValue + 1) * iconSpace;
    };
    Rating.prototype.getInfoLeft = function () {
        var _a = this.state,
            value = _a.value,
            hoverValue = _a.hoverValue,
            iconSpace = _a.iconSpace,
            iconSize = _a.iconSize;
        var infoValue = hoverValue || value;
        var ceilValue = Math.ceil(infoValue);
        return iconSize * (ceilValue - 1) + ceilValue * iconSpace;
    };
    Rating.prototype.render = function () {
        var _a, _b, _c;
        var _this = this;
        var _d = this.props,
            id = _d.id,
            prefix = _d.prefix,
            className = _d.className,
            showGrade = _d.showGrade,
            count = _d.count,
            size = _d.size,
            iconType = _d.iconType,
            strokeMode = _d.strokeMode,
            readAs = _d.readAs,
            rtl = _d.rtl,
            isPreview = _d.isPreview,
            renderPreview = _d.renderPreview,
            locale = _d.locale;
        var disabled = this.state.disabled;
        var others = util_1.obj.pickOthers(Rating.propTypes, this.props);
        var _e = this.state,
            hoverValue = _e.hoverValue,
            clicked = _e.clicked;
        var underlay = [],
            overlay = [];
        var enableA11y = !!id;
        // 获得 Value
        var value = Rating.currentValue(0, count, hoverValue, this.state.value);
        // icon 的 sizeMap
        var sizeMap = ICON_SIZE_MAP[size];
        var _loop_1 = function _loop_1(i) {
            var _f;
            var isCurrent = Math.ceil(value - 1) === i;
            var iconCls = (0, classnames_1.default)((_f = {
                hover: hoverValue > 0 && isCurrent,
                clicked: clicked && isCurrent
            }, _f["".concat(prefix, "rating-symbol-icon")] = !iconType, _f));
            var iconNode = iconType ? react_1.default.createElement(icon_1.default, { type: iconType, size: sizeMap, className: iconCls }) : react_1.default.createElement(icon_1.default, { type: "favorites-filling", size: sizeMap, className: iconCls });
            var saveRefs = function saveRefs(ref) {
                _this.saveRef(ref, i);
            };
            underlay.push(react_1.default.createElement("span", { ref: saveRefs, key: "underlay-".concat(i), className: "".concat(prefix, "rating-icon") }, iconNode));
            if (enableA11y) {
                overlay.push(react_1.default.createElement("input", { id: "".concat(id, "-").concat(prefix, "star").concat(i + 1), key: "input-".concat(i), className: "".concat(prefix, "sr-only"), "aria-checked": i + 1 === parseInt(hoverValue),
                    // @ts-expect-error FIXME parseInt require number arg
                    checked: i + 1 === parseInt(hoverValue), onChange: this_1.handleChecked.bind(this_1, i + 1), type: "radio", name: "rating" }));
            }
            overlay.push(react_1.default.createElement("label", { key: "overlay-".concat(i), htmlFor: enableA11y ? "".concat(id, "-").concat(prefix, "star").concat(i + 1) : undefined, className: "".concat(prefix, "rating-icon") }, iconNode, enableA11y ? react_1.default.createElement("span", { className: "".concat(prefix, "sr-only") }, readAs(i + 1)) : null));
        };
        var this_1 = this;
        for (var i = 0; i < count; i++) {
            _loop_1(i);
        }
        var ratingCls = (0, classnames_1.default)(["".concat(prefix, "rating"), "".concat(prefix, "rating-").concat(size)], (_a = {}, _a["".concat(prefix, "rating-grade-low")] = value <= count * 0.4, _a["".concat(prefix, "rating-grade-high")] = value > count * 0.4, _a["".concat(prefix, "rating-stroke-mode")] = strokeMode, _a.hover = hoverValue > 0, _a), className);
        var baseCls = (0, classnames_1.default)("".concat(prefix, "rating-base"), (_b = {}, _b["".concat(prefix, "rating-base-disabled")] = disabled, _b));
        var previewCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "form-preview")] = true, _c), className);
        var overlayStyle = {
            width: this.getOverlayWidth()
        };
        var infoStyle = {
            left: this.getInfoLeft(),
            display: hoverValue ? 'block' : 'none'
        };
        var finalProps = disabled ? {} : {
            onClick: this.handleClick,
            onMouseOver: this.handleHover,
            onMouseMove: this.handleHover,
            onMouseLeave: this.handleLeave
        };
        if (rtl) {
            others.dir = 'rtl';
        }
        if (isPreview && typeof renderPreview === 'function') {
            return react_1.default.createElement("div", tslib_1.__assign({ id: id }, others, { className: previewCls }), renderPreview(value, this.props));
        }
        return react_1.default.createElement("div", tslib_1.__assign({ id: id }, others, { className: ratingCls, onKeyDown: this.onKeyDown, tabIndex: 0, role: "group", "aria-label": locale.description }), react_1.default.createElement("div", tslib_1.__assign({ className: baseCls }, finalProps), react_1.default.createElement("div", { className: "".concat(prefix, "rating-underlay"), ref: function ref(n) {
                return _this.underlayNode = n;
            }, "aria-hidden": true }, underlay), react_1.default.createElement("div", { className: "".concat(prefix, "rating-overlay"), style: overlayStyle, onClick: function onClick(e) {
                return e.preventDefault();
            } }, overlay)), showGrade ? react_1.default.createElement("div", { className: "".concat(prefix, "rating-info"), style: infoStyle }, readAs(value)) : null);
    };
    Rating.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, defaultValue: prop_types_1.default.number, value: prop_types_1.default.number, count: prop_types_1.default.number, showGrade: prop_types_1.default.bool, size: prop_types_1.default.oneOf(['small', 'medium', 'large']), allowHalf: prop_types_1.default.bool, allowClear: prop_types_1.default.bool, onChange: prop_types_1.default.func, onHoverChange: prop_types_1.default.func, disabled: prop_types_1.default.bool, readAs: prop_types_1.default.func, iconType: prop_types_1.default.string, strokeMode: prop_types_1.default.bool, className: prop_types_1.default.string, id: prop_types_1.default.string, rtl: prop_types_1.default.bool, locale: prop_types_1.default.object, isPreview: prop_types_1.default.bool, renderPreview: prop_types_1.default.func, readOnly: prop_types_1.default.bool });
    Rating.defaultProps = {
        prefix: 'next-',
        size: 'medium',
        disabled: false,
        readOnly: false,
        isPreview: false,
        count: 5,
        showGrade: false,
        defaultValue: 0,
        readAs: function readAs(val) {
            return val;
        },
        allowHalf: false,
        allowClear: false,
        onChange: noop,
        onHoverChange: noop,
        locale: zh_cn_1.default.Rating
    };
    return Rating;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Rating);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var input_1 = tslib_1.__importDefault(__webpack_require__(19));
var select_1 = tslib_1.__importDefault(__webpack_require__(30));
var button_1 = tslib_1.__importDefault(__webpack_require__(18));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var util_1 = __webpack_require__(4);
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var Group = input_1.default.Group;
var AutoComplete = select_1.default.AutoComplete;
var noop = util_1.func.noop;
/**
 * Search
 *  输入框部分继承 Select.AutoComplete 的能力，可以直接用AutoComplete 的 api
 */
var Search = /** @class */function (_super) {
    tslib_1.__extends(Search, _super);
    function Search(props) {
        var _this = _super.call(this, props) || this;
        _this.inputRef = null;
        _this.onChange = function (value, type) {
            var _a;
            var args = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                args[_i - 2] = arguments[_i];
            }
            if (_this.props.disabled) {
                return;
            }
            if (!('value' in _this.props)) {
                _this.setState({ value: value });
            }
            (_a = _this.props).onChange.apply(_a, tslib_1.__spreadArray([value, type], tslib_1.__read(args), false));
            if (type === 'enter') {
                // 先记录，保留原先的执行顺序
                var highlightKey = _this.highlightKey;
                // 重置
                _this.highlightKey = '';
                // 若有匹配项，执行onSearch
                if (highlightKey) {
                    _this.props.onSearch(value, _this.state.filterValue);
                }
            }
        };
        _this.onPressEnter = function () {
            // 有匹配项情况，enter会触发 onChange，由那里执行onSearch
            if (_this.highlightKey) {
                return;
            }
            _this.onSearch();
        };
        _this.onSearch = function () {
            if (_this.props.disabled) {
                return;
            }
            _this.props.onSearch(_this.state.value, _this.state.filterValue);
        };
        _this.onFilterChange = function (filterValue) {
            if (!('filterValue' in _this.props)) {
                _this.setState({ filterValue: filterValue });
            }
            _this.props.onFilterChange(filterValue);
        };
        _this.onToggleHighlightItem = function (highlightKey) {
            var _a;
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            _this.highlightKey = highlightKey;
            (_a = _this.props).onToggleHighlightItem.apply(_a, tslib_1.__spreadArray([highlightKey], tslib_1.__read(args), false));
        };
        _this.onKeyDown = function (e) {
            if (_this.props.disabled) {
                return;
            }
            if (e.keyCode !== util_1.KEYCODE.ENTER) {
                return;
            }
            _this.onSearch();
        };
        _this.saveInputRef = function (ref) {
            // @ts-expect-error wait for AutoComplete types complete
            if (ref && ref.getInstance()) {
                // @ts-expect-error wait for AutoComplete types complete
                _this.inputRef = ref.getInstance();
            }
        };
        _this.focus = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = _this.inputRef).focus.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args), false));
        };
        var value = 'value' in props ? props.value : props.defaultValue;
        var filterValue = 'filterValue' in props ? props.filterValue : props.defaultFilterValue;
        _this.state = {
            value: typeof value === 'undefined' ? '' : value,
            filterValue: filterValue,
            ifFocus: false
        };
        _this.highlightKey = null;
        _this.handleBlur = _this.handleBlur.bind(_this);
        _this.handleFocus = _this.handleFocus.bind(_this);
        return _this;
    }
    Search.getDerivedStateFromProps = function (nextProps, prevState) {
        var nextState = {};
        if ('value' in nextProps && nextProps.value !== prevState.value) {
            var value = nextProps.value;
            nextState.value = value === undefined || value === null ? '' : nextProps.value;
        }
        if ('filterValue' in nextProps && nextProps.filterValue !== prevState.filterValue) {
            var filterValue = nextProps.filterValue;
            nextState.filterValue = filterValue === undefined ? '' : filterValue;
        }
        if (Object.keys(nextState).length > 0) {
            return nextState;
        }
        return null;
    };
    Search.prototype.handleFocus = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.setState({
            ifFocus: true
        });
        this.props.onFocus && (_a = this.props).onFocus.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args), false));
    };
    Search.prototype.handleBlur = function () {
        var _a;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.setState({
            ifFocus: false
        });
        this.props.onBlur && (_a = this.props).onBlur.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args), false));
    };
    Search.prototype.render = function () {
        var _a, _b, _c;
        var _d = this.props,
            shape = _d.shape,
            filter = _d.filter,
            hasIcon = _d.hasIcon,
            disabled = _d.disabled,
            placeholder = _d.placeholder,
            type = _d.type,
            className = _d.className,
            style = _d.style,
            size = _d.size,
            prefix = _d.prefix,
            searchText = _d.searchText,
            dataSource = _d.dataSource,
            filterProps = _d.filterProps,
            buttonProps = _d.buttonProps,
            fillProps = _d.fillProps,
            popupContent = _d.popupContent,
            followTrigger = _d.followTrigger,
            hasClear = _d.hasClear,
            visible = _d.visible,
            locale = _d.locale,
            rtl = _d.rtl,
            icons = _d.icons,
            autoHighlightFirstItem = _d.autoHighlightFirstItem,
            others = tslib_1.__rest(_d, ["shape", "filter", "hasIcon", "disabled", "placeholder", "type", "className", "style", "size", "prefix", "searchText", "dataSource", "filterProps", "buttonProps", "fillProps", "popupContent", "followTrigger", "hasClear", "visible", "locale", "rtl", "icons", "autoHighlightFirstItem"]);
        var ifFocus = this.state.ifFocus;
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "search")] = true, _a["".concat(prefix, "search-").concat(shape)] = true, _a["".concat(prefix).concat(type)] = type, _a["".concat(prefix).concat(size)] = size, _a["".concat(prefix, "disabled")] = !!disabled, _a["".concat(prefix, "search-focus")] = ifFocus, _a[className] = !!className, _a));
        var searchIcon = null,
            filterSelect = null,
            searchBtn = null,
            iconsSearch = icons.search;
        if (!(0, react_1.isValidElement)(iconsSearch) && iconsSearch) {
            iconsSearch = react_1.default.createElement("span", null, iconsSearch);
        }
        if (shape === 'simple') {
            var cls_1 = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "search-icon")] = true, _b[buttonProps.className] = !!buttonProps.className, _b["".concat(prefix, "search-symbol-icon")] = !iconsSearch, _b));
            hasIcon && (searchIcon = react_1.default.cloneElement(iconsSearch || react_1.default.createElement(icon_1.default, { type: "search" }), tslib_1.__assign(tslib_1.__assign({ role: 'button', 'aria-disabled': disabled, 'aria-label': locale.buttonText }, buttonProps), { className: cls_1, onClick: this.onSearch, onKeyDown: this.onKeyDown })));
        } else {
            var cls_2 = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "search-btn")] = true, _c[buttonProps.className] = !!buttonProps.className, _c));
            searchBtn = react_1.default.createElement(button_1.default, tslib_1.__assign({ tabIndex: 0, "aria-disabled": disabled, "aria-label": locale.buttonText, className: cls_2, disabled: disabled }, buttonProps, { onClick: this.onSearch, onKeyDown: this.onKeyDown }), hasIcon ? iconsSearch || react_1.default.createElement(icon_1.default, { type: "search", className: "".concat(prefix, "search-symbol-icon") }) : null, searchText ? react_1.default.createElement("span", { className: "".concat(prefix, "search-btn-text") }, searchText) : null);
        }
        if (filter.length > 0) {
            filterSelect = react_1.default.createElement(select_1.default, tslib_1.__assign({}, filterProps, { followTrigger: followTrigger, hasBorder: false, dataSource: filter, size: size, disabled: disabled, value: this.state.filterValue, onChange: this.onFilterChange }));
        }
        var _othersAttributes = util_1.obj.pickOthers(Search.propTypes, others);
        var othersAttributes = _othersAttributes;
        if (visible !== undefined) {
            // 受控属性 visible 不能直接写在组件上
            othersAttributes.visible = Boolean(visible);
        }
        var dataAttr = util_1.obj.pickAttrsWith(others, 'data-');
        var left = react_1.default.createElement(Group, { addonBefore: filterSelect, className: "".concat(prefix, "search-left"), addonBeforeClassName: "".concat(prefix, "search-left-addon") }, react_1.default.createElement(AutoComplete, tslib_1.__assign({ "aria-label": locale.buttonText }, othersAttributes, { followTrigger: followTrigger, role: "searchbox", hasClear: hasClear, className: "".concat(prefix, "search-input"), size: size, fillProps: fillProps, placeholder: placeholder, dataSource: dataSource, innerAfter: searchIcon, onPressEnter: this.onPressEnter, value: this.state.value, onChange: this.onChange, onToggleHighlightItem: this.onToggleHighlightItem, autoHighlightFirstItem: autoHighlightFirstItem, popupContent: popupContent, disabled: disabled, ref: this.saveInputRef, onFocus: this.handleFocus, onBlur: this.handleBlur })));
        return react_1.default.createElement("span", tslib_1.__assign({ className: cls, style: style }, dataAttr, { dir: rtl ? 'rtl' : undefined }), searchBtn ? react_1.default.createElement(Group, { addonAfter: searchBtn }, left) : left);
    };
    Search.propTypes = {
        prefix: prop_types_1.default.string,
        shape: prop_types_1.default.oneOf(['normal', 'simple']),
        type: prop_types_1.default.oneOf(['primary', 'secondary', 'normal', 'dark']),
        size: prop_types_1.default.oneOf(['large', 'medium']),
        defaultValue: prop_types_1.default.string,
        value: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]),
        onChange: prop_types_1.default.func,
        onSearch: prop_types_1.default.func,
        defaultFilterValue: prop_types_1.default.string,
        fillProps: prop_types_1.default.string,
        filter: prop_types_1.default.array,
        filterValue: prop_types_1.default.string,
        onFilterChange: prop_types_1.default.func,
        dataSource: prop_types_1.default.array,
        placeholder: prop_types_1.default.string,
        searchText: prop_types_1.default.node,
        style: prop_types_1.default.object,
        className: prop_types_1.default.string,
        filterProps: prop_types_1.default.object,
        buttonProps: prop_types_1.default.object,
        popupContent: prop_types_1.default.node,
        followTrigger: prop_types_1.default.bool,
        visible: prop_types_1.default.bool,
        hasClear: prop_types_1.default.bool,
        hasIcon: prop_types_1.default.bool,
        disabled: prop_types_1.default.bool,
        locale: prop_types_1.default.object,
        rtl: prop_types_1.default.bool,
        icons: prop_types_1.default.object,
        autoHighlightFirstItem: prop_types_1.default.bool,
        onToggleHighlightItem: prop_types_1.default.func
    };
    Search.defaultProps = {
        prefix: 'next-',
        shape: 'normal',
        type: 'normal',
        size: 'medium',
        hasIcon: true,
        filter: [],
        locale: zh_cn_1.default.Search,
        buttonProps: {},
        onChange: noop,
        onSearch: noop,
        onFilterChange: noop,
        onToggleHighlightItem: noop,
        hasClear: false,
        disabled: false,
        icons: {},
        autoHighlightFirstItem: true
    };
    return Search;
}(react_1.default.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Search);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _shell = __webpack_require__(385);

var _shell2 = _interopRequireDefault(_shell);

var _base = __webpack_require__(387);

var _base2 = _interopRequireDefault(_base);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Shell = (0, _shell2.default)({
    componentName: 'Shell'
});

['Branding', 'Navigation', 'Action', 'MultiTask', 'LocalNavigation', 'AppBar', 'Content', 'Footer', 'Ancillary', 'ToolDock', 'ToolDockItem'].forEach(function (key) {
    Shell[key] = (0, _base2.default)({
        componentName: key
    });
});

Shell.Page = _configProvider2.default.config((0, _shell2.default)({
    componentName: 'Page'
}));

exports.default = _configProvider2.default.config(Shell, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('Component' in props) {
            deprecated('Component', 'component', 'Shell');
            var _props = props,
                Component = _props.Component,
                component = _props.component,
                others = (0, _objectWithoutProperties3.default)(_props, ['Component', 'component']);

            if ('component' in props) {
                props = (0, _extends3.default)({ component: component }, others);
            } else {
                props = (0, _extends3.default)({ component: Component }, others);
            }
        }
        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends3 = __webpack_require__(2);

var _extends4 = _interopRequireDefault(_extends3);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = ShellBase;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames12 = __webpack_require__(7);

var _classnames13 = _interopRequireDefault(_classnames12);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _affix = __webpack_require__(68);

var _affix2 = _interopRequireDefault(_affix);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(386);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Shell
 */
function ShellBase(props) {
    var _class, _temp, _initialiseProps;

    var componentName = props.componentName;
    var Shell = (_temp = _class = function (_Component) {
        (0, _inherits3.default)(Shell, _Component);

        function Shell(props) {
            (0, _classCallCheck3.default)(this, Shell);

            var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

            _initialiseProps.call(_this);

            var deviceMap = (0, _util2.getCollapseMap)(props.device);
            _this.layout = {};

            _this.state = {
                controll: false,
                collapseMap: deviceMap,
                device: props.device
            };
            return _this;
        }

        Shell.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
            var device = prevState.device;

            if (nextProps.device !== device) {
                var deviceMap = (0, _util2.getCollapseMap)(nextProps.device);
                return {
                    controll: false,
                    collapseMap: deviceMap,
                    device: nextProps.device
                };
            }

            return {};
        };

        Shell.prototype.componentDidMount = function componentDidMount() {
            this.checkAsideFixed();
        };

        Shell.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
            var _this2 = this;

            if (prevProps.device !== this.props.device) {
                var deviceMapBefore = (0, _util2.getCollapseMap)(prevProps.device);
                var deviceMapAfter = (0, _util2.getCollapseMap)(this.props.device);

                Object.keys(deviceMapAfter).forEach(function (block) {
                    var _ref = _this2.layout[block] || {},
                        props = _ref.props;

                    if (deviceMapBefore[block] !== deviceMapAfter[block]) {
                        if (props && typeof props.onCollapseChange === 'function') {
                            props.onCollapseChange(deviceMapAfter[block]);
                        }
                    }
                });
            }

            setTimeout(function () {
                // 如果左侧边栏固定
                _this2.checkAsideFixed();
            }, 201);
        };

        Shell.prototype.render = function render() {
            return this.renderShell(this.props);
        };

        return Shell;
    }(_react.Component), _class.displayName = componentName, _class._typeMark = componentName, _class.propTypes = (0, _extends4.default)({}, _configProvider2.default.propTypes, {
        prefix: _propTypes2.default.string,
        /**
         * 设备类型
         * @enumdesc 手机, 平板, PC电脑
         */
        device: _propTypes2.default.oneOf(['phone', 'tablet', 'desktop']),
        /**
         * 设备类型
         * @enumdesc 浅色, 深色, 主题色
         */
        type: _propTypes2.default.oneOf(['light', 'dark', 'brand']),
        /**
         * 是否固定 header, 用sticky实现，IE下降级为Affix
         */
        fixedHeader: _propTypes2.default.bool
    }), _class.defaultProps = {
        prefix: 'next-',
        device: 'desktop',
        type: 'light',
        fixedHeader: false
    }, _initialiseProps = function _initialiseProps() {
        var _this3 = this;

        this.checkAsideFixed = function () {
            var fixedHeader = _this3.props.fixedHeader;

            if (!fixedHeader) {
                return;
            }

            var headerHeight = void 0;
            if (_this3.headerRef && (_this3.navigationFixed || _this3.toolDockFixed)) {
                headerHeight = _util.dom.getStyle(_this3.headerRef, 'height');
            }

            if (_this3.navigationFixed) {
                var style = {};
                style.marginLeft = _util.dom.getStyle(_this3.navRef, 'width');
                _util.dom.addClass(_this3.navRef, 'fixed');
                headerHeight && _util.dom.setStyle(_this3.navRef, { top: headerHeight });
                _util.dom.setStyle(_this3.localNavRef || _this3.submainRef, style);
            }

            if (_this3.toolDockFixed) {
                var _style = {};
                _style.marginRight = _util.dom.getStyle(_this3.toolDockRef, 'width');
                _util.dom.addClass(_this3.toolDockRef, 'fixed');
                headerHeight && _util.dom.setStyle(_this3.toolDockRef, { top: headerHeight });
                _util.dom.setStyle(_this3.localNavRef || _this3.submainRef, _style);
            }
        };

        this.setChildCollapse = function (child, mark) {
            var _state = _this3.state,
                device = _state.device,
                collapseMap = _state.collapseMap,
                controll = _state.controll;
            var collapse = child.props.collapse;

            var deviceMap = (0, _util2.getCollapseMap)(device);
            var props = {};

            // 非受控模式
            if ((0, _util2.isBoolean)(collapse) === false) {
                props.collapse = controll ? collapseMap[mark] : deviceMap[mark];
                // props.collapse = collapseMap[mark];
            }

            if (device !== 'phone' && mark === 'Navigation') {
                props.miniable = true;
            }

            return _react2.default.cloneElement(child, props);
        };

        this.toggleAside = function (mark, props, e) {
            var _extends2;

            var _state2 = _this3.state,
                device = _state2.device,
                collapseMap = _state2.collapseMap;

            var deviceMap = (0, _util2.getCollapseMap)(device);
            var current = props.collapse;

            var newCollapseMap = (0, _extends4.default)({}, deviceMap, collapseMap, (_extends2 = {}, _extends2[mark] = !current, _extends2));
            _this3.setState({
                controll: true,
                collapseMap: newCollapseMap
            });

            if (props && typeof props.onCollapseChange === 'function') {
                props.onCollapseChange(newCollapseMap[mark]);
            }

            var children = _this3.props.children;

            var com = void 0;
            if (mark === 'Navigation') {
                com = children.filter(function (child) {
                    return child && child.type._typeMark.replace('Shell_', '') === mark && child.props.direction !== 'hoz';
                }).pop();
            } else {
                com = children.filter(function (child) {
                    return child && child.type._typeMark.replace('Shell_', '') === mark;
                }).pop();
            }

            var _com$props$triggerPro = com.props.triggerProps,
                triggerProps = _com$props$triggerPro === undefined ? {} : _com$props$triggerPro;

            if (typeof triggerProps.onClick === 'function') {
                triggerProps.onClick(e, _this3.state.collapseMap[mark]);
            }
        };

        this.toggleNavigation = function (e) {
            var mark = 'Navigation';
            var props = _this3.layout[mark].props;

            if ('keyCode' in e && e.keyCode !== _util.KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleLocalNavigation = function (e) {
            var mark = 'LocalNavigation';
            var props = _this3.layout[mark].props;

            if ('keyCode' in e && e.keyCode !== _util.KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleAncillary = function (e) {
            var mark = 'Ancillary';
            var props = _this3.layout[mark].props;

            if ('keyCode' in e && e.keyCode !== _util.KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.toggleToolDock = function (e) {
            var mark = 'ToolDock';
            var props = _this3.layout[mark].props;

            if ('keyCode' in e && e.keyCode !== _util.KEYCODE.ENTER) {
                return;
            }

            _this3.toggleAside(mark, props, e);
        };

        this.saveHeaderRef = function (ref) {
            _this3.headerRef = ref;
        };

        this.saveLocalNavRef = function (ref) {
            _this3.localNavRef = ref;
        };

        this.saveNavRef = function (ref) {
            _this3.navRef = ref;
        };

        this.saveSubmainRef = function (ref) {
            _this3.submainRef = ref;
        };

        this.saveToolDockRef = function (ref) {
            _this3.toolDockRef = ref;
        };

        this.renderShell = function (props) {
            var _classnames, _classnames2, _classnames3, _classnames4, _classnames5, _classnames6, _classnames7, _classnames11;

            var prefix = props.prefix,
                children = props.children,
                className = props.className,
                type = props.type,
                fixedHeader = props.fixedHeader,
                others = (0, _objectWithoutProperties3.default)(props, ['prefix', 'children', 'className', 'type', 'fixedHeader']);
            var device = _this3.state.device;

            var layout = {};
            layout.header = {};
            var hasToolDock = false,
                needNavigationTrigger = false,
                needDockTrigger = false;

            _react2.default.Children.map(children, function (child) {
                if (child && typeof child.type === 'function') {
                    var mark = child.type._typeMark.replace('Shell_', '');
                    switch (mark) {
                        case 'Branding':
                        case 'Action':
                            layout.header[mark] = child;
                            break;
                        case 'MultiTask':
                            layout.taskHeader = child;
                            break;
                        case 'LocalNavigation':
                            if (!layout[mark]) {
                                layout[mark] = [];
                            }
                            layout[mark] = _this3.setChildCollapse(child, mark);
                            break;
                        case 'Ancillary':
                            if (!layout[mark]) {
                                layout[mark] = [];
                            }

                            layout[mark] = _this3.setChildCollapse(child, mark);
                            break;
                        case 'ToolDock':
                            hasToolDock = true;

                            if (!layout[mark]) {
                                layout[mark] = [];
                            }

                            _this3.toolDockFixed = child.props.fixed;
                            var childT = _this3.setChildCollapse(child, mark);
                            layout[mark] = childT;

                            break;
                        case 'AppBar':
                        case 'Content':
                        case 'Footer':
                            layout.content || (layout.content = []);
                            layout.content.push(child);
                            break;
                        case 'Page':
                            layout.page || (layout.page = []);
                            layout.page = child;
                            break;
                        case 'Navigation':
                            if (child.props.direction === 'hoz') {
                                layout.header[mark] = child;
                            } else {
                                if (!layout[mark]) {
                                    layout[mark] = [];
                                }

                                needNavigationTrigger = true;
                                _this3.navigationFixed = child.props.fixed;
                                var childN = _this3.setChildCollapse(child, mark);
                                layout[mark] = childN;
                            }
                            break;
                        default:
                            break;
                    }
                }
            });

            var headerCls = (0, _classnames13.default)((_classnames = {}, _classnames[prefix + 'shell-header'] = true, _classnames[prefix + 'shell-fixed-header'] = fixedHeader, _classnames));

            var mainCls = (0, _classnames13.default)((_classnames2 = {}, _classnames2[prefix + 'shell-main'] = true, _classnames2));

            var pageCls = (0, _classnames13.default)((_classnames3 = {}, _classnames3[prefix + 'shell-page'] = true, _classnames3));

            var submainCls = (0, _classnames13.default)((_classnames4 = {}, _classnames4[prefix + 'shell-sub-main'] = true, _classnames4));

            var asideCls = (0, _classnames13.default)((_classnames5 = {}, _classnames5[prefix + 'shell-aside'] = true, _classnames5));

            var toolDockCls = (0, _classnames13.default)((_classnames6 = {}, _classnames6[prefix + 'aside-tooldock'] = true, _classnames6));

            var navigationCls = (0, _classnames13.default)((_classnames7 = {}, _classnames7[prefix + 'aside-navigation'] = true, _classnames7[prefix + 'shell-collapse'] = layout.Navigation && layout.Navigation.props.collapse, _classnames7));

            if (hasToolDock) {
                if (device === 'phone') {
                    needDockTrigger = true;
                }
            }

            // 如果存在垂直模式的 Navigation, 则需要在 Branding 上出现 trigger
            if (needNavigationTrigger) {
                var branding = layout.header.Branding;
                var _layout$Navigation$pr = layout.Navigation.props,
                    trigger = _layout$Navigation$pr.trigger,
                    collapse = _layout$Navigation$pr.collapse;

                if ('trigger' in layout.Navigation.props) {
                    trigger = trigger && _react2.default.cloneElement(trigger, {
                        onClick: _this3.toggleNavigation,
                        'aria-expanded': !collapse
                    }) || trigger;
                } else {
                    trigger = _react2.default.createElement('div', {
                        key: 'nav-trigger',
                        role: 'button',
                        tabIndex: 0,
                        'aria-expanded': !collapse,
                        'aria-label': 'toggle',
                        className: 'nav-trigger',
                        onClick: _this3.toggleNavigation,
                        onKeyDown: _this3.toggleNavigation
                    }, collapse ? _react2.default.createElement(_icon2.default, { size: 'small', type: 'toggle-right' }) : _react2.default.createElement(_icon2.default, { size: 'small', type: 'toggle-left' }));
                }

                if (!branding) {
                    trigger && (layout.header.Branding = trigger);
                } else {
                    layout.header.Branding = _react2.default.cloneElement(branding, {}, [trigger, branding.props.children]);
                }
            }

            // 如果存在 toolDock, 则需要在 Action 上出现 trigger
            if (needDockTrigger) {
                var action = layout.header.Action;
                var _layout$ToolDock$prop = layout.ToolDock.props,
                    _trigger = _layout$ToolDock$prop.trigger,
                    _collapse = _layout$ToolDock$prop.collapse;

                if ('trigger' in layout.ToolDock.props) {
                    _trigger = _trigger && _react2.default.cloneElement(_trigger, {
                        onClick: _this3.toggleToolDock,
                        'aria-expanded': !_collapse
                    }) || _trigger;
                } else {
                    _trigger = _react2.default.createElement('div', {
                        key: 'dock-trigger',
                        tabIndex: 0,
                        role: 'button',
                        'aria-expanded': !_collapse,
                        'aria-label': 'toggle',
                        className: 'dock-trigger',
                        onClick: _this3.toggleToolDock,
                        onKeyDown: _this3.toggleToolDock
                    }, _react2.default.createElement(_icon2.default, { size: 'small', type: 'add' }));
                }

                if (!action) {
                    layout.header.Action = _trigger;
                } else {
                    layout.header.Action = _react2.default.cloneElement(action, {}, [action.props.children, _trigger]);
                }
            }

            var headerDom = [],
                contentArr = [],
                innerArr = [],
                taskHeaderDom = null;

            if (layout.taskHeader) {
                var _classnames8;

                var taskHeaderCls = (0, _classnames13.default)((_classnames8 = {}, _classnames8[prefix + 'shell-task-header'] = true, _classnames8));

                taskHeaderDom = _react2.default.createElement('section', { key: 'task-header', className: taskHeaderCls }, layout.taskHeader);
            }

            // 按照dom结构，innerArr 包括 LocalNavigation content Ancillary
            if (layout.LocalNavigation) {
                var _classnames9;

                var _layout$LocalNavigati = layout.LocalNavigation.props,
                    _trigger2 = _layout$LocalNavigati.trigger,
                    _collapse2 = _layout$LocalNavigati.collapse;

                if ('trigger' in layout.LocalNavigation.props) {
                    _trigger2 = _trigger2 && _react2.default.cloneElement(_trigger2, {
                        onClick: _this3.toggleLocalNavigation,
                        'aria-expanded': !_collapse2
                    }) || _trigger2;
                } else {
                    _trigger2 = _react2.default.createElement('div', {
                        key: 'local-nav-trigger',
                        role: 'button',
                        tabIndex: 0,
                        'aria-expanded': !_collapse2,
                        'aria-label': 'toggle',
                        className: 'local-nav-trigger aside-trigger',
                        onClick: _this3.toggleLocalNavigation,
                        onKeyDown: _this3.toggleLocalNavigation
                    }, _collapse2 ? _react2.default.createElement(_icon2.default, { size: 'small', type: 'arrow-right' }) : _react2.default.createElement(_icon2.default, { size: 'small', type: 'arrow-left' }));
                }

                var localNavCls = (0, _classnames13.default)(asideCls, (_classnames9 = {}, _classnames9[prefix + 'aside-localnavigation'] = true, _classnames9));

                innerArr.push(_react2.default.createElement('aside', { key: 'localnavigation', className: localNavCls, ref: _this3.saveLocalNavRef }, _react2.default.cloneElement(layout.LocalNavigation, {}, [_react2.default.createElement('div', { key: 'wrapper', className: prefix + 'shell-content-wrapper' }, layout.LocalNavigation.props.children), _trigger2])));
            }

            if (layout.content) {
                innerArr.push(_react2.default.createElement('section', { key: 'submain', className: submainCls, ref: _this3.saveSubmainRef }, layout.content));
            }

            if (layout.Ancillary) {
                var _classnames10;

                var _layout$Ancillary$pro = layout.Ancillary.props,
                    _trigger3 = _layout$Ancillary$pro.trigger,
                    _collapse3 = _layout$Ancillary$pro.collapse;

                if ('trigger' in layout.Ancillary.props) {
                    _trigger3 = _trigger3 && _react2.default.cloneElement(_trigger3, {
                        onClick: _this3.toggleAncillary,
                        'aria-expanded': !_collapse3
                    }) || _trigger3;
                } else {
                    _trigger3 = _react2.default.createElement('div', {
                        key: 'ancillary-trigger',
                        role: 'button',
                        tabIndex: 0,
                        'aria-expanded': !_collapse3,
                        'aria-label': 'toggle',
                        className: 'ancillary-trigger aside-trigger',
                        onClick: _this3.toggleAncillary,
                        onKeyDown: _this3.toggleAncillary
                    }, _collapse3 ? _react2.default.createElement(_icon2.default, { size: 'small', type: 'arrow-left' }) : _react2.default.createElement(_icon2.default, { size: 'small', type: 'arrow-right' }));
                }

                var ancillaryCls = (0, _classnames13.default)(asideCls, (_classnames10 = {}, _classnames10[prefix + 'aside-ancillary'] = true, _classnames10));

                innerArr.push(_react2.default.createElement('aside', { key: 'ancillary', className: ancillaryCls }, _react2.default.cloneElement(layout.Ancillary, {}, [_react2.default.createElement('div', { key: 'wrapper', className: prefix + 'shell-content-wrapper' }, layout.Ancillary.props.children), _trigger3])));
            }

            // 按照dom结构, arr 包括 header Navigation ToolDock 和 innerArr
            if (Object.keys(layout.header).length > 0) {
                var _dom = _react2.default.createElement('header', { key: 'header', className: headerCls, ref: _this3.saveHeaderRef }, layout.header.Branding, layout.header.Navigation, layout.header.Action);
                if (fixedHeader && _util.env.ieVersion) {
                    headerDom = _react2.default.createElement(_affix2.default, { style: { zIndex: 9 } }, _dom);
                } else {
                    headerDom = _dom;
                }
            }

            layout.Navigation && contentArr.push(_react2.default.createElement('aside', { key: 'navigation', className: navigationCls, ref: _this3.saveNavRef }, _react2.default.cloneElement(layout.Navigation, {
                className: (0, _classnames13.default)(asideCls, layout.Navigation.props.className)
            })));

            // const contentArea = innerArr.length > 0
            //     ? <section key="main" className={mainCls}>{innerArr}</section>
            //     : layout.page;

            // contentArr.push(contentArea);
            contentArr = contentArr.concat(innerArr.length > 0 ? innerArr : [_react2.default.createElement('section', { key: 'page', ref: _this3.saveSubmainRef, className: submainCls }, layout.page)]);

            layout.ToolDock && contentArr.push(_react2.default.createElement('aside', { key: 'tooldock', className: toolDockCls, ref: _this3.saveToolDockRef }, _react2.default.cloneElement(layout.ToolDock, {
                className: (0, _classnames13.default)(asideCls, layout.ToolDock.props.className),
                key: 'tooldock'
            })));

            var cls = (0, _classnames13.default)((_classnames11 = {}, _classnames11[prefix + 'shell'] = true, _classnames11[prefix + 'shell-' + device] = true, _classnames11[prefix + 'shell-' + type] = true, _classnames11[className] = !!className, _classnames11));

            if (componentName === 'Page') {
                return _react2.default.createElement('section', { className: pageCls }, children);
            }

            _this3.layout = layout;

            return _react2.default.createElement('section', (0, _extends4.default)({ className: cls }, others), headerDom, taskHeaderDom, _react2.default.createElement('section', { className: mainCls }, contentArr));
        };
    }, _temp);
    Shell.displayName = 'Shell';

    return (0, _reactLifecyclesCompat.polyfill)(Shell);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isBoolean = isBoolean;
exports.getCollapseMap = getCollapseMap;
/**
 * 判断是否为布尔类型
 * @param  {any} val 例：'str' / undefined / null / true / false / 0
 * @return {bool}     例： false / false / false / true / false / false
 */
function isBoolean(val) {
    return typeof val === 'boolean';
}

function getCollapseMap(device) {
    // by default all of them are collapsed
    var origin = {
        Navigation: true,
        LocalNavigation: true,
        Ancillary: true,
        ToolDock: true
    };

    var map = [];

    switch (device) {
        case 'phone':
            break;
        case 'pad':
        case 'tablet':
            map = ['ToolDock'];
            break;
        case 'desktop':
            map = ['Navigation', 'LocalNavigation', 'Ancillary', 'ToolDock'];
            break;
        default:
            break;
    }

    Object.keys(origin).forEach(function (key) {
        if (map.indexOf(key) > -1) {
            origin[key] = false;
        }
    });

    return origin;
}

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = Base;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function Base(props) {
    var _class, _temp;

    var componentName = props.componentName;
    var Shell = (_temp = _class = function (_Component) {
        (0, _inherits3.default)(Shell, _Component);

        function Shell() {
            (0, _classCallCheck3.default)(this, Shell);
            return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
        }

        Shell.prototype.getChildContext = function getChildContext() {
            var collapse = this.props.collapse;

            return {
                isCollapse: collapse
            };
        };

        Shell.prototype.render = function render() {
            var _classnames;

            var _props = this.props,
                prefix = _props.prefix,
                className = _props.className,
                miniable = _props.miniable,
                device = _props.device,
                direction = _props.direction,
                children = _props.children,
                collapse = _props.collapse,
                triggerProps = _props.triggerProps,
                onCollapseChange = _props.onCollapseChange,
                component = _props.component,
                align = _props.align,
                fixed = _props.fixed,
                others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'miniable', 'device', 'direction', 'children', 'collapse', 'triggerProps', 'onCollapseChange', 'component', 'align', 'fixed']);

            var Tag = component;

            var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'shell-' + componentName.toLowerCase()] = true, _classnames[prefix + 'shell-collapse'] = !!collapse, _classnames[prefix + 'shell-mini'] = miniable, _classnames[prefix + 'shell-nav-' + align] = componentName === 'Navigation' && direction === 'hoz' && align, _classnames[className] = !!className, _classnames));

            var newChildren = children;
            if (componentName === 'Content') {
                newChildren = _react2.default.createElement('div', { className: prefix + 'shell-content-inner' }, children);
            }

            if (componentName === 'Page') {
                return children;
            }

            return _react2.default.createElement(Tag, (0, _extends3.default)({ className: cls }, others), newChildren);
        };

        return Shell;
    }(_react.Component), _class.displayName = componentName, _class._typeMark = 'Shell_' + componentName, _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
        prefix: _propTypes2.default.string,
        collapse: _propTypes2.default.bool,
        miniable: _propTypes2.default.bool,
        component: _propTypes2.default.string,
        trigger: _propTypes2.default.node,
        triggerProps: _propTypes2.default.object,
        direction: _propTypes2.default.oneOf(['hoz', 'ver']),
        align: _propTypes2.default.oneOf(['left', 'right', 'center']),
        /**
         * 弹层显示或隐藏时触发的回调函数
         * @param {Boolean} collapse 弹层是否显示
         */
        onCollapseChange: _propTypes2.default.func,
        /**
         * 是否固定，仅对 Shell.Navigation Shell.ToolDock 生效，且需要在在 Shell fixedHeader时生效
         */
        fixed: _propTypes2.default.bool
    }), _class.defaultProps = {
        prefix: 'next-',
        component: 'div',
        onCollapseChange: function onCollapseChange() {},
        fixed: false
    }, _class.childContextTypes = {
        isCollapse: _propTypes2.default.bool
    }, _temp);
    Shell.displayName = 'Shell';

    return _configProvider2.default.config(Shell);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _slider = __webpack_require__(389);

var _slider2 = _interopRequireDefault(_slider);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_slider2.default, {
    exportNames: ['resize'],
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('fade' in props) {
            deprecated('fade', 'animation', 'Slider');

            var _props = props,
                fade = _props.fade,
                others = (0, _objectWithoutProperties3.default)(_props, ['fade']);

            if (fade) {
                props = (0, _extends3.default)({ animation: 'fade' }, others);
            } else {
                props = others;
            }
        }
        if ('arrowPos' in props) {
            if (props.arrowPos === 'inline') {
                deprecated('arrowPos=inline', 'arrowPosition=inner', 'Slider');

                props.arrowPos = 'inner';
            } else {
                deprecated('arrowPos', 'arrowPosition', 'Slider');
            }

            var _props2 = props,
                arrowPos = _props2.arrowPos,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['arrowPos']);

            props = (0, _extends3.default)({ arrowPosition: arrowPos }, _others);
        }
        ['arrowDirection', 'dotsDirection', 'slideDirection'].forEach(function (propName) {
            if (props[propName] === 'horizontal') {
                deprecated(propName + '=horizontal', propName + '=hoz', 'Slider');

                props[propName] = 'hoz';
            } else if (props[propName] === 'vertical') {
                deprecated(propName + '=vertical', propName + '=ver', 'Slider');

                props[propName] = 'ver';
            }
        });
        if ('initialSlide' in props) {
            deprecated('initialSlide', 'defaultActiveIndex', 'Slider');

            var _props3 = props,
                initialSlide = _props3.initialSlide,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['initialSlide']);

            props = (0, _extends3.default)({ defaultActiveIndex: initialSlide }, _others2);
        }
        if ('slickGoTo' in props) {
            deprecated('slickGoTo', 'activeIndex', 'Slider');

            var _props4 = props,
                slickGoTo = _props4.slickGoTo,
                _others3 = (0, _objectWithoutProperties3.default)(_props4, ['slickGoTo']);

            props = (0, _extends3.default)({ activeIndex: slickGoTo }, _others3);
        }
        if ('afterChange' in props) {
            deprecated('afterChange', 'onChange', 'Slider');

            var _props5 = props,
                afterChange = _props5.afterChange,
                _others4 = (0, _objectWithoutProperties3.default)(_props5, ['afterChange']);

            props = (0, _extends3.default)({ onChange: afterChange }, _others4);
        }

        if ('beforeChange' in props) {
            deprecated('beforeChange', 'onBeforeChange', 'Slider');

            var _props6 = props,
                beforeChange = _props6.beforeChange,
                _others5 = (0, _objectWithoutProperties3.default)(_props6, ['beforeChange']);

            props = (0, _extends3.default)({ onBeforeChange: beforeChange }, _others5);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _innerSlider = __webpack_require__(390);

var _innerSlider2 = _interopRequireDefault(_innerSlider);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Slider
 */
var Slider = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(Slider, _Component);

  function Slider() {
    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Slider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.resize = function () {
      // export api
      _this.innerSlider.onWindowResized();
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  Slider.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        prefix = _props.prefix,
        arrowPosition = _props.arrowPosition,
        slideDirection = _props.slideDirection,
        style = _props.style,
        className = _props.className,
        children = _props.children;

    var globalProps = {};
    Object.keys(_configProvider2.default.propTypes).forEach(function (key) {
      globalProps[key] = _this2.props[key];
    });

    var sliderProps = _util.obj.pickOthers(['className', 'style', 'slideDirection'], this.props);
    var slideCount = _react2.default.Children.count(children);

    if (slideCount === 0) {
      // 没有 item 时不显示 slider
      return null;
    } else if (slideCount === 1) {
      // 单个 item 时不显示箭头和控制器
      sliderProps.arrows = false;
      sliderProps.autoplay = false;
      sliderProps.draggable = false;
    }

    var clazz = (0, _classnames2.default)([prefix + 'slick', prefix + 'slick-' + arrowPosition, prefix + 'slick-' + slideDirection], className);

    if (slideDirection === 'ver') {
      // 向下传递时使用 vertical 属性
      sliderProps.vertical = true;
      sliderProps.verticalSwiping = true;
    }

    return _react2.default.createElement(_configProvider2.default, (0, _extends3.default)({}, globalProps, { rtl: false }), _react2.default.createElement('div', (0, _extends3.default)({
      dir: 'ltr',
      className: clazz,
      style: style
    }, _util.obj.pickOthers((0, _extends3.default)({}, Slider.propTypes, _innerSlider2.default.propTypes), sliderProps)), _react2.default.createElement(_innerSlider2.default, (0, _extends3.default)({ ref: function ref(InnerSlider) {
        return _this2.innerSlider = InnerSlider;
      } }, sliderProps))));
  };

  return Slider;
}(_react.Component), _class.propTypes = {
  prefix: _propTypes2.default.string,
  rtl: _propTypes2.default.bool,
  /**
   * 自定义传入的样式
   */
  className: _propTypes2.default.any,
  /**
   * 是否使用自适应高度
   */
  adaptiveHeight: _propTypes2.default.bool,
  /**
   * 动效类型，默认是'slide'
   */
  animation: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
  /**
   * 是否显示箭头
   */
  arrows: _propTypes2.default.bool,
  /**
   * 导航箭头大小 可选值: 'medium', 'large'
   */
  arrowSize: _propTypes2.default.oneOf(['medium', 'large']),
  /**
   * 导航箭头位置 可选值: 'inner', 'outer'
   */
  arrowPosition: _propTypes2.default.oneOf(['inner', 'outer']),
  /**
   * 导航箭头的方向 可选值: 'hoz', 'ver'
   */
  arrowDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
  /**
   * 是否自动播放
   */
  autoplay: _propTypes2.default.bool,
  /**
   * 自动播放的速度
   */
  autoplaySpeed: _propTypes2.default.number,
  /**
   * 向后箭头
   */
  nextArrow: _propTypes2.default.element,
  /**
   * 向前箭头
   */
  prevArrow: _propTypes2.default.element,
  /**
   * 是否启用居中模式
   */
  centerMode: _propTypes2.default.bool,
  /**
   * 是否显示导航锚点
   */
  dots: _propTypes2.default.bool,
  /**
   * 导航锚点位置
   */
  dotsDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
  dotsClass: _propTypes2.default.string,
  /**
   * 自定义导航锚点
   */
  dotsRender: _propTypes2.default.func,
  /**
   * 是否可拖拽
   */
  draggable: _propTypes2.default.bool,
  /**
   * 是否使用无穷循环模式
   */
  infinite: _propTypes2.default.bool,
  /**
   * 初始被激活的轮播图
   */
  defaultActiveIndex: _propTypes2.default.number,
  /**
   * 是否启用懒加载
   */
  lazyLoad: _propTypes2.default.bool,
  slide: _propTypes2.default.string,
  /**
   * 轮播方向
   */
  slideDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
  /**
   * 同时展示的图片数量
   */
  slidesToShow: _propTypes2.default.number,
  /**
   * 同时滑动的图片数量
   */
  slidesToScroll: _propTypes2.default.number,
  /**
   * 轮播速度
   */
  speed: _propTypes2.default.number,
  /**
   * 跳转到指定的轮播图（受控）
   */
  activeIndex: _propTypes2.default.number,
  /**
   * 锚点导航触发方式
   */
  triggerType: _propTypes2.default.oneOf(['click', 'hover']),
  /**
   * 轮播切换的回调函数
   * @param {Number} index 幻灯片的索引
   */
  onChange: _propTypes2.default.func,
  onBeforeChange: _propTypes2.default.func, // 兼容 0.x onBeforeChange
  children: _propTypes2.default.any,
  /**
   * 自定义传入的class
   */
  style: _propTypes2.default.object,
  /**
   * Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览
   */
  centerPadding: _propTypes2.default.string,
  /**
   * CSS3 Animation Easing,默认‘ease’
   */
  cssEase: _propTypes2.default.string, // used
  edgeFriction: _propTypes2.default.number, // 非无限轮播滑动到边缘时的阻力
  /**
   * 多图轮播时，点击选中后自动居中
   */
  focusOnSelect: _propTypes2.default.bool,
  pauseOnHover: _propTypes2.default.bool, // 鼠标经过时停止播放
  swipe: _propTypes2.default.bool,
  swipeToSlide: _propTypes2.default.bool,
  touchMove: _propTypes2.default.bool,
  touchThreshold: _propTypes2.default.number,
  useCSS: _propTypes2.default.bool,
  variableWidth: _propTypes2.default.bool, // used
  waitForAnimate: _propTypes2.default.bool,
  edgeEvent: _propTypes2.default.any,
  swipeEvent: _propTypes2.default.any
}, _class.defaultProps = {
  prefix: 'next-',
  animation: 'slide',
  arrowSize: 'medium',
  arrowPosition: 'inner',
  vertical: false,
  verticalSwiping: false,
  dots: true,
  dotsDirection: 'hoz',
  arrows: true,
  arrowDirection: 'hoz',
  infinite: true,
  autoplay: false,
  autoplaySpeed: 3000,
  speed: 600,
  adaptiveHeight: false,
  centerMode: false,
  centerPadding: '50px', // Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览
  cssEase: 'ease',
  draggable: true,
  edgeFriction: 0.35,
  focusOnSelect: false,
  defaultActiveIndex: 0,
  lazyLoad: false,
  pauseOnHover: false,
  rtl: false,
  slide: 'div',
  slideDirection: 'hoz',
  slidesToShow: 1,
  slidesToScroll: 1,
  swipe: true,
  swipeToSlide: false, // Allow users to drag or swipe directly to a slide irrespective of slidesToScroll
  touchMove: true, // 移动端touch
  touchThreshold: 5,
  useCSS: true,
  variableWidth: false,
  waitForAnimate: true,
  onChange: function onChange() {},
  onBeforeChange: function onBeforeChange() {},
  edgeEvent: null,
  swipeEvent: null,
  nextArrow: null, // nextArrow, prevArrow are react components
  prevArrow: null,
  style: null,
  dotsRender: null,
  triggerType: 'click'
}, _temp2);
Slider.displayName = 'Slider';
exports.default = Slider;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _eventHandlers = __webpack_require__(391);

var _eventHandlers2 = _interopRequireDefault(_eventHandlers);

var _helpers = __webpack_require__(392);

var _helpers2 = _interopRequireDefault(_helpers);

var _arrow = __webpack_require__(393);

var _arrow2 = _interopRequireDefault(_arrow);

var _track = __webpack_require__(394);

var _track2 = _interopRequireDefault(_track);

var _dots = __webpack_require__(395);

var _dots2 = _interopRequireDefault(_dots);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Slider inner
 */

var noop = _util.func.noop;
var InnerSlider = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(InnerSlider, _React$Component);

    function InnerSlider(props) {
        (0, _classCallCheck3.default)(this, InnerSlider);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.state = {
            animating: false,
            dragging: false,
            autoPlayTimer: null,
            currentDirection: 0,
            currentLeft: null,
            currentSlide: 'activeIndex' in props ? props.activeIndex : props.defaultActiveIndex,
            direction: 1,
            listWidth: null,
            listHeight: null,
            slideCount: null,
            slideWidth: null,
            slideHeight: null,
            slideHeightList: [],
            swipeLeft: null,
            touchObject: {
                startX: 0,
                startY: 0,
                curX: 0,
                curY: 0
            },

            lazyLoadedList: [],

            // added for react
            initialized: false,
            edgeDragged: false,
            swiped: false, // used by swipeEvent. differentites between touch and swipe.
            trackStyle: {},
            trackWidth: 0
        };

        // this.filterProps = Object.assign({}, sliderPropTypes, InnerSlider.propTypes);

        _util.func.bindCtx(_this, ['onWindowResized', 'selectHandler', 'changeSlide', 'onInnerSliderEnter', 'onInnerSliderLeave', 'swipeStart', 'swipeMove', 'swipeEnd']);
        return _this;
    }

    InnerSlider.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var state = {};

        var lazyLoad = nextProps.lazyLoad,
            children = nextProps.children,
            slidesToShow = nextProps.slidesToShow,
            activeIndex = nextProps.activeIndex;
        var currentSlide = prevState.currentSlide;

        var lazyLoadedList = [];

        if (children !== prevState.children) {
            state.children = children;
            state.slideCount = _react2.default.Children.count(children);
        }

        if (lazyLoad) {
            for (var i = 0, j = _react2.default.Children.count(children); i < j; i++) {
                if (i >= currentSlide && i < currentSlide + slidesToShow) {
                    lazyLoadedList.push(i);

                    var pre = i - 1 < 0 ? j - 1 : i - 1;
                    var next = i + 1 >= j ? 0 : i + 1;

                    lazyLoadedList.push(pre);
                    lazyLoadedList.push(next);
                }
            }

            if (prevState.lazyLoadedList.length === 0) {
                state.lazyLoadedList = lazyLoadedList;
            }
        }

        return state;
    };

    InnerSlider.prototype.componentDidMount = function componentDidMount() {
        this.hasMounted = true;

        // TODO Hack for autoplay -- Inspect Later
        this.initialize(this.props);
        this.adaptHeight();

        if (this.props.activeIndex) {
            this.slickGoTo(this.props.activeIndex);
        }

        /* istanbul ignore if  */
        if (window) {
            // To support server-side rendering
            _util.events.on(window, 'resize', this.onWindowResized);
        }
    };

    InnerSlider.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        var _this2 = this;

        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.slickGoTo(this.props.activeIndex);
        } else if (prevState.currentSlide >= this.props.children.length) {
            this.update(this.props);
            this.changeSlide({
                message: 'index',
                index: this.props.children.length - this.props.slidesToShow,
                currentSlide: this.state.currentSlide
            });
        } else {
            var diffKeys = [];
            Object.keys(prevProps).forEach(function (key) {
                if (key in _this2.props && prevProps[key] !== _this2.props[key]) {
                    diffKeys.push(key);
                }
            });
            // children 每次都会不同，所以不需要检测
            if (diffKeys.every(function (key) {
                return key === 'children' || typeof _this2.props[key] === 'function';
            })) {
                // do nothing;
            } else {
                var update = !_util.obj.shallowEqual(prevProps, this.props);
                if (update) {
                    this.update(this.props);
                }
            }
        }

        this.adaptHeight();
    };

    InnerSlider.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.animationEndCallback) {
            clearTimeout(this.animationEndCallback);
        }

        _util.events.off(window, 'resize', this.onWindowResized);

        if (this.state.autoPlayTimer) {
            clearInterval(this.state.autoPlayTimer);
        }
    };

    InnerSlider.prototype.onWindowResized = function onWindowResized() {
        this.update(this.props);
        // animating state should be cleared while resizing, otherwise autoplay stops working
        this.setState({ animating: false });
        clearTimeout(this.animationEndCallback);
        delete this.animationEndCallback;
    };

    InnerSlider.prototype.slickGoTo = function slickGoTo(slide) {
        typeof slide === 'number' && this.changeSlide({
            message: 'index',
            index: slide,
            currentSlide: this.state.currentSlide
        });
    };

    InnerSlider.prototype.onEnterArrow = function onEnterArrow(msg) {
        this.arrowHoverHandler(msg);
    };

    InnerSlider.prototype.onLeaveArrow = function onLeaveArrow() {
        this.arrowHoverHandler();
    };

    InnerSlider.prototype._instanceRefHandler = function _instanceRefHandler(attr, ref) {
        this[attr] = ref;
    };

    InnerSlider.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            animation = _props.animation,
            arrows = _props.arrows,
            arrowSize = _props.arrowSize,
            arrowPosition = _props.arrowPosition,
            arrowDirection = _props.arrowDirection,
            dots = _props.dots,
            dotsClass = _props.dotsClass,
            cssEase = _props.cssEase,
            speed = _props.speed,
            infinite = _props.infinite,
            centerMode = _props.centerMode,
            centerPadding = _props.centerPadding,
            lazyLoad = _props.lazyLoad,
            dotsDirection = _props.dotsDirection,
            rtl = _props.rtl,
            slidesToShow = _props.slidesToShow,
            slidesToScroll = _props.slidesToScroll,
            variableWidth = _props.variableWidth,
            vertical = _props.vertical,
            verticalSwiping = _props.verticalSwiping,
            focusOnSelect = _props.focusOnSelect,
            children = _props.children,
            dotsRender = _props.dotsRender,
            triggerType = _props.triggerType;
        var _state = this.state,
            currentSlide = _state.currentSlide,
            lazyLoadedList = _state.lazyLoadedList,
            slideCount = _state.slideCount,
            slideWidth = _state.slideWidth,
            slideHeight = _state.slideHeight,
            trackStyle = _state.trackStyle,
            listHeight = _state.listHeight,
            dragging = _state.dragging;

        // TODO 需要精简一下

        var trackProps = {
            prefix: prefix,
            animation: animation,
            cssEase: cssEase,
            speed: speed,
            infinite: infinite,
            centerMode: centerMode,
            focusOnSelect: focusOnSelect ? this.selectHandler : null,
            currentSlide: currentSlide,
            lazyLoad: lazyLoad,
            lazyLoadedList: lazyLoadedList,
            rtl: rtl,
            slideWidth: slideWidth,
            slideHeight: slideHeight,
            slidesToShow: slidesToShow,
            slidesToScroll: slidesToScroll,
            slideCount: slideCount,
            trackStyle: trackStyle,
            variableWidth: variableWidth,
            vertical: vertical,
            verticalSwiping: verticalSwiping,
            triggerType: triggerType
            // clickHandler: this.changeSlide, unused
        };

        var dotsEle = void 0;

        if (dots === true && slideCount > slidesToShow) {
            var dotProps = {
                prefix: prefix,
                rtl: rtl,
                dotsClass: dotsClass,
                slideCount: slideCount,
                slidesToShow: slidesToShow,
                currentSlide: currentSlide,
                slidesToScroll: slidesToScroll,
                dotsDirection: dotsDirection,
                changeSlide: this.changeSlide,
                dotsRender: dotsRender,
                triggerType: triggerType
            };

            dotsEle = _react2.default.createElement(_dots2.default, dotProps);
        }

        var prevArrow = void 0,
            nextArrow = void 0;

        var arrowProps = {
            prefix: prefix,
            rtl: rtl,
            arrowSize: arrowSize,
            arrowPosition: arrowPosition,
            arrowDirection: arrowDirection,
            infinite: infinite,
            centerMode: centerMode,
            currentSlide: currentSlide,
            slideCount: slideCount,
            slidesToShow: slidesToShow,
            clickHandler: this.changeSlide
        };

        if (arrows) {
            prevArrow = _react2.default.createElement(_arrow2.default, (0, _extends3.default)({}, arrowProps, {
                type: 'prev',
                'aria-label': 'Previous',
                ref: this._instanceRefHandler.bind(this, 'pArrow'),
                onMouseEnter: animation ? this.onEnterArrow.bind(this, 'prev') : noop,
                onMouseLeave: animation ? this.onLeaveArrow.bind(this, 'prev') : noop
            }), this.props.prevArrow);

            nextArrow = _react2.default.createElement(_arrow2.default, (0, _extends3.default)({}, arrowProps, {
                type: 'next',
                'aria-label': 'Next',
                ref: this._instanceRefHandler.bind(this, 'nArrow'),
                onMouseEnter: animation ? this.onEnterArrow.bind(this, 'next') : noop,
                onMouseLeave: animation ? this.onLeaveArrow.bind(this, 'next') : noop
            }), this.props.nextArrow);
        }

        var verticalHeightStyle = vertical ? {
            height: listHeight
        } : null;

        var centerPaddingStyle = void 0;
        if (centerMode) {
            centerPaddingStyle = vertical ? { padding: centerPadding + ' 0px' } : { padding: '0px ' + centerPadding };
        }

        return _react2.default.createElement('div', {
            className: prefix + 'slick-container ' + prefix + 'slick-initialized',
            onMouseEnter: this.onInnerSliderEnter,
            onMouseLeave: this.onInnerSliderLeave
        }, _react2.default.createElement('div', {
            ref: this._instanceRefHandler.bind(this, 'list'),
            className: prefix + 'slick-list',
            style: (0, _extends3.default)({}, verticalHeightStyle, centerPaddingStyle),
            onMouseDown: this.swipeStart,
            onMouseUp: this.swipeEnd,
            onTouchStart: this.swipeStart,
            onTouchEnd: this.swipeEnd,
            onMouseMove: dragging ? this.swipeMove : null,
            onMouseLeave: dragging ? this.swipeEnd : null,
            onTouchMove: dragging ? this.swipeMove : null,
            onTouchCancel: dragging ? this.swipeEnd : null
        }, _react2.default.createElement(_track2.default, (0, _extends3.default)({ ref: this._instanceRefHandler.bind(this, 'track') }, trackProps), children)), prevArrow, nextArrow, dotsEle);
    };

    return InnerSlider;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    animation: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
    arrows: _propTypes2.default.bool,
    arrowSize: _propTypes2.default.oneOf(['medium', 'large']),
    arrowPosition: _propTypes2.default.oneOf(['inner', 'outer']),
    arrowDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
    centerPadding: _propTypes2.default.any,
    children: _propTypes2.default.any,
    centerMode: _propTypes2.default.bool,
    dots: _propTypes2.default.bool,
    dotsDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
    dotsClass: _propTypes2.default.string,
    focusOnSelect: _propTypes2.default.bool,
    cssEase: _propTypes2.default.string,
    speed: _propTypes2.default.number,
    infinite: _propTypes2.default.bool,
    defaultActiveIndex: _propTypes2.default.number,
    rtl: _propTypes2.default.bool,
    slidesToShow: _propTypes2.default.number,
    lazyLoad: _propTypes2.default.bool,
    activeIndex: _propTypes2.default.number,
    slidesToScroll: _propTypes2.default.number,
    variableWidth: _propTypes2.default.bool,
    vertical: _propTypes2.default.bool,
    verticalSwiping: _propTypes2.default.bool,
    prevArrow: _propTypes2.default.element,
    nextArrow: _propTypes2.default.element,
    dotsRender: _propTypes2.default.func,
    triggerType: _propTypes2.default.string
}, _class.defaultProps = {
    prefix: 'next-',
    arrowDirection: 'hoz',
    triggerType: 'click'
}, _temp);

// extend prototype

InnerSlider.displayName = 'InnerSlider';
(0, _extends3.default)(InnerSlider.prototype, _helpers2.default);
(0, _extends3.default)(InnerSlider.prototype, _eventHandlers2.default);

exports.default = (0, _reactLifecyclesCompat.polyfill)(InnerSlider);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _reactDom = __webpack_require__(13);

var _trackHelper = __webpack_require__(177);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* istanbul ignore next */
var EventHandlers = {
    // Event handler for previous and next
    changeSlide: function changeSlide(options) {
        var slideOffset = void 0,
            targetSlide = void 0;
        var unevenOffset = this.state.slideCount % this.props.slidesToScroll !== 0;
        var indexOffset = unevenOffset ? 0 : (this.state.slideCount - this.state.currentSlide) % this.props.slidesToScroll;

        if (options.message === 'previous') {
            slideOffset = indexOffset === 0 ? this.props.slidesToScroll : this.props.slidesToShow - indexOffset;
            targetSlide = this.state.currentSlide - slideOffset;
        } else if (options.message === 'next') {
            slideOffset = indexOffset === 0 ? this.props.slidesToScroll : indexOffset;
            targetSlide = this.state.currentSlide + slideOffset;
        } else if (options.message === 'dots' || options.message === 'children') {
            // Click on dots
            targetSlide = options.index * options.slidesToScroll;
            if (targetSlide === options.currentSlide) {
                return;
            }
        } else if (options.message === 'index') {
            targetSlide = options.index;
            if (targetSlide === options.currentSlide) {
                return;
            }
        }
        this.slideHandler(targetSlide);
    },

    // Accessiblity handler for previous and next
    keyHandler: function keyHandler(e) {
        //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if (!e.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (e.keyCode === 37 && this.props.accessibility === true) {
                this.changeSlide({
                    message: this.props.rtl === true ? 'next' : 'previous'
                });
            } else if (e.keyCode === 39 && this.props.accessibility === true) {
                this.changeSlide({
                    message: this.props.rtl === true ? 'previous' : 'next'
                });
            }
        }
    },

    // Focus on selecting a slide (click handler on track)
    selectHandler: function selectHandler(options) {
        this.changeSlide(options);
    },
    swipeStart: function swipeStart(e) {
        if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {
            return;
        } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {
            return;
        }
        var posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;
        var posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;
        this.setState({
            dragging: true,
            touchObject: {
                startX: posX,
                startY: posY,
                curX: posX,
                curY: posY
            }
        });
    },
    swipeMove: function swipeMove(e) {
        if (!this.state.dragging) {
            return;
        }
        if (this.state.animating) {
            return;
        }
        var touchObject = this.state.touchObject;

        var curLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
            slideIndex: this.state.currentSlide,
            trackRef: this.refs.track
        }, this.props, this.state));

        touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
        touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
        touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));

        var positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);

        if (this.props.verticalSwiping === true) {
            touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
            positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
        }

        var currentSlide = this.state.currentSlide;
        var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);
        var swipeDirection = this.swipeDirection(this.state.touchObject);
        var touchSwipeLength = touchObject.swipeLength;

        if (this.props.infinite === false) {
            if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {
                touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;

                if (this.state.edgeDragged === false && this.props.edgeEvent) {
                    this.props.edgeEvent(swipeDirection);
                    this.setState({ edgeDragged: true });
                }
            }
        }

        if (this.state.swiped === false && this.props.swipeEvent) {
            this.props.swipeEvent(swipeDirection);
            this.setState({ swiped: true });
        }

        var swipeLeft = curLeft + touchSwipeLength * positionOffset;
        this.setState({
            touchObject: touchObject,
            swipeLeft: swipeLeft,
            trackStyle: (0, _trackHelper.getTrackCSS)((0, _extends3.default)({
                left: swipeLeft
            }, this.props, this.state))
        });

        if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
            return;
        }
        if (touchObject.swipeLength > 4) {
            e.preventDefault();
        }
    },
    getNavigableIndexes: function getNavigableIndexes() {
        var max = void 0;
        var breakPoint = 0;
        var counter = 0;
        var indexes = [];

        if (!this.props.infinite) {
            max = this.state.slideCount;
        } else {
            breakPoint = this.props.slidesToShow * -1;
            counter = this.props.slidesToShow * -1;
            max = this.state.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + this.props.slidesToScroll;

            counter += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;
        }

        return indexes;
    },
    checkNavigable: function checkNavigable(index) {
        var navigables = this.getNavigableIndexes();
        var prevNavigable = 0;

        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }

                prevNavigable = navigables[n];
            }
        }

        return index;
    },
    getSlideCount: function getSlideCount() {
        var _this = this;

        var centerOffset = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;
        if (this.props.swipeToSlide) {
            var swipedSlide = void 0;
            var slickList = (0, _reactDom.findDOMNode)(this.list);

            var slides = slickList.querySelectorAll(this.props.prefix + 'slick-slide');

            Array.from(slides).every(function (slide) {
                if (!_this.props.vertical) {
                    if (slide.offsetLeft - centerOffset + (_this.getWidth(slide) || 0) / 2 > _this.state.swipeLeft * -1) {
                        swipedSlide = slide;
                        return false;
                    }
                } else if (slide.offsetTop + (_this.getHeight(slide) || 0) / 2 > _this.state.swipeLeft * -1) {
                    swipedSlide = slide;
                    return false;
                }

                return true;
            });
            var slidesTraversed = Math.abs(swipedSlide.dataset.index - this.state.currentSlide) || 1;
            return slidesTraversed;
        } else {
            return this.props.slidesToScroll;
        }
    },
    swipeEnd: function swipeEnd(e) {
        if (!this.state.dragging) {
            if (this.props.swipe) {
                e.preventDefault();
            }
            return;
        }
        var touchObject = this.state.touchObject;
        var minSwipe = this.state.listWidth / this.props.touchThreshold;
        var swipeDirection = this.swipeDirection(touchObject);

        if (this.props.verticalSwiping) {
            minSwipe = this.state.listHeight / this.props.touchThreshold;
        }

        // reset the state of touch related state variables.
        this.setState({
            dragging: false,
            edgeDragged: false,
            swiped: false,
            swipeLeft: null,
            touchObject: {}
        });

        if (!touchObject.swipeLength) {
            return;
        }

        if (touchObject.swipeLength > minSwipe) {
            e.preventDefault();

            var slideCount = void 0;
            var newSlide = void 0;

            switch (swipeDirection) {
                case 'left':
                case 'down':
                    newSlide = this.state.currentSlide + this.getSlideCount();
                    slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
                    this.setState({ currentDirection: 0 });
                    break;
                case 'right':
                case 'up':
                    newSlide = this.state.currentSlide - this.getSlideCount();
                    slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
                    this.setState({ currentDirection: 1 });
                    break;
                default:
                    slideCount = this.state.currentSlide;
            }
            this.slideHandler(slideCount);
        } else {
            // Adjust the track back to it's original position.
            var currentLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
                slideIndex: this.state.currentSlide,
                trackRef: this.track
            }, this.props, this.state));

            this.setState({
                trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _extends3.default)({
                    left: currentLeft
                }, this.props, this.state))
            });
        }
    },
    onInnerSliderEnter: function onInnerSliderEnter() {
        if (this.props.autoplay && this.props.pauseOnHover) {
            this.pause();
        }
    },
    onInnerSliderLeave: function onInnerSliderLeave() {
        if (this.props.autoplay && this.props.pauseOnHover) {
            this.autoPlay();
        }
    }
};

exports.default = EventHandlers;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _trackHelper = __webpack_require__(177);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var helpers = {
    initialize: function initialize(props) {
        var _this = this;

        var slickList = _reactDom2.default.findDOMNode(this.list);
        var slideCount = _react2.default.Children.count(props.children);
        var listWidth = this.getWidth(slickList) || 0;
        var trackWidth = this.getWidth(_reactDom2.default.findDOMNode(this.track)) || 0;
        var slideWidth = void 0;

        if (!props.vertical) {
            var centerPaddingAdj = props.centerMode && parseInt(props.centerPadding) * 2;
            slideWidth = (listWidth - centerPaddingAdj) / props.slidesToShow;
        } else {
            slideWidth = listWidth;
        }

        var slideHeight = this.getHeight(slickList.querySelector('[data-index="0"]')) || 0;
        var listHeight = slideHeight * props.slidesToShow;
        var slideHeightList = [];
        var newSlickList = Array.from(slickList.querySelectorAll('.' + props.prefix + 'slick-slide') || []);
        for (var _iterator = newSlickList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
            } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
            }

            var item = _ref;

            var height = this.getHeight(item);
            slideHeightList.push(height);
        }
        var slidesToShow = props.slidesToShow || 1;

        var activeIndex = 'activeIndex' in props ? props.activeIndex : props.defaultActiveIndex;
        var currentSlide = props.rtl ? slideCount - 1 - (slidesToShow - 1) - activeIndex : activeIndex;

        this.setState({
            slideCount: slideCount,
            slideWidth: slideWidth,
            listWidth: listWidth,
            trackWidth: trackWidth,
            currentSlide: currentSlide,
            slideHeight: slideHeight,
            listHeight: listHeight,
            slideHeightList: slideHeightList
        }, function () {
            var targetLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
                slideIndex: _this.state.currentSlide,
                trackRef: _this.track
            }, props, _this.state));
            // getCSS function needs previously set state
            var trackStyle = (0, _trackHelper.getTrackCSS)((0, _extends3.default)({
                left: targetLeft
            }, props, _this.state));

            _this.setState({ trackStyle: trackStyle });

            _this.autoPlay(); // once we're set up, trigger the initial autoplay.
        });
    },
    update: function update(props) {
        this.initialize(props);
    },
    getWidth: function getWidth(elem) {
        if ('clientWidth' in elem) {
            return elem.clientWidth;
        }
        return elem && elem.getBoundingClientRect().width;
    },
    getHeight: function getHeight(elem) {
        if ('clientHeight' in elem) {
            return elem.clientHeight;
        }
        return elem && elem.getBoundingClientRect().height;
    },
    adaptHeight: function adaptHeight() {
        if (this.props.adaptiveHeight) {
            var selector = '[data-index="' + this.state.currentSlide + '"]';
            if (this.list) {
                var slickList = _reactDom2.default.findDOMNode(this.list);
                var listHeight = slickList.querySelector(selector).offsetHeight;
                slickList.style.height = listHeight + 'px';
            }
        }
    },
    canGoNext: function canGoNext(opts) {
        var canGo = true;
        if (!opts.infinite) {
            if (opts.centerMode) {
                if (opts.currentSlide >= opts.slideCount - 1) {
                    canGo = false;
                }
            } else if (opts.slideCount <= opts.slidesToShow || opts.currentSlide >= opts.slideCount - opts.slidesToShow) {
                // check if all slides are shown in slider
                canGo = false;
            }
        }
        return canGo;
    },
    slideHandler: function slideHandler(index) {
        var _this2 = this;

        var rtl = this.props.rtl;

        // Functionality of animateSlide and postSlide is merged into this function

        var targetSlide = void 0,
            currentSlide = void 0;
        var callback = void 0;

        if (this.props.waitForAnimate && this.state.animating) {
            return;
        }

        if (this.props.animation === 'fade') {
            currentSlide = this.state.currentSlide;

            // don't change slide if it's not infinite and current slide is the first or last slide'
            if (this.props.infinite === false && (index < 0 || index >= this.state.slideCount)) {
                return;
            }

            //  Shifting targetSlide back into the range
            if (index < 0) {
                targetSlide = index + this.state.slideCount;
            } else if (index >= this.state.slideCount) {
                targetSlide = index - this.state.slideCount;
            } else {
                targetSlide = index;
            }

            if (this.props.lazyLoad && this.state.lazyLoadedList.indexOf(targetSlide) < 0) {
                this.setState({
                    lazyLoadedList: this.state.lazyLoadedList.concat(targetSlide)
                });
            }

            callback = function callback() {
                _this2.setState({
                    animating: false
                });
                _this2.props.onChange(targetSlide);
                delete _this2.animationEndCallback;
            };

            this.props.onBeforeChange(this.state.currentSlide, targetSlide);

            this.setState({
                animating: true,
                currentSlide: targetSlide
            }, function () {
                this.animationEndCallback = setTimeout(callback, this.props.speed + 20);
            });

            this.autoPlay();
            return;
        }

        targetSlide = index;

        if (rtl) {
            if (targetSlide < 0) {
                if (this.props.infinite === false) {
                    currentSlide = 0;
                } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                    if (targetSlide + this.props.slidesToScroll <= 0) {
                        currentSlide = this.state.slideCount + targetSlide;
                        targetSlide = this.state.slideCount - this.props.slidesToScroll;
                    } else {
                        currentSlide = targetSlide = 0;
                    }
                } else {
                    // this.state.slideCount % this.props.slidesToScroll
                    currentSlide = this.state.slideCount + targetSlide;
                }
            } else if (targetSlide >= this.state.slideCount) {
                if (this.props.infinite === false) {
                    currentSlide = this.state.slideCount - this.props.slidesToShow;
                } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                    currentSlide = 0;
                } else {
                    currentSlide = targetSlide - this.state.slideCount;
                }
            } else {
                currentSlide = targetSlide;
            }
        } else if (targetSlide < 0) {
            if (this.props.infinite === false) {
                currentSlide = 0;
            } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                currentSlide = this.state.slideCount - this.state.slideCount % this.props.slidesToScroll;
            } else {
                currentSlide = this.state.slideCount + targetSlide;
            }
        } else if (targetSlide >= this.state.slideCount) {
            if (this.props.infinite === false) {
                currentSlide = this.state.slideCount - this.props.slidesToShow;
            } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
                currentSlide = 0;
            } else {
                currentSlide = targetSlide - this.state.slideCount;
            }
        } else {
            currentSlide = targetSlide;
        }

        var targetLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
            slideIndex: targetSlide,
            trackRef: this.track
        }, this.props, this.state));

        var currentLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
            slideIndex: currentSlide,
            trackRef: this.track
        }, this.props, this.state));

        if (this.props.infinite === false) {
            targetLeft = currentLeft;
        }

        if (this.props.lazyLoad) {
            var loaded = true;
            var slidesToLoad = [];
            var slidesLen = this.state.slideCount;

            var sliderIndex = targetSlide < 0 ? slidesLen + targetSlide : currentSlide;

            for (var i = sliderIndex; i < sliderIndex + this.props.slidesToShow; i++) {
                var k = i;
                if (rtl) {
                    k = i >= slidesLen ? slidesLen * 2 - i - 1 : slidesLen - i - 1;
                }

                var pre = k - 1 < 0 ? slidesLen - 1 : k - 1;
                var next = k + 1 >= slidesLen ? 0 : k + 1;

                this.state.lazyLoadedList.indexOf(k) < 0 && slidesToLoad.push(k);
                this.state.lazyLoadedList.indexOf(pre) < 0 && slidesToLoad.push(pre);
                this.state.lazyLoadedList.indexOf(next) < 0 && slidesToLoad.push(next);
            }

            slidesToLoad.forEach(function (i) {
                if (_this2.state.lazyLoadedList.indexOf(i) < 0) {
                    loaded = false;
                }
            });

            if (!loaded) {
                this.setState({
                    lazyLoadedList: this.state.lazyLoadedList.concat(slidesToLoad)
                });
            }
        }

        this.props.onBeforeChange(this.state.currentSlide, currentSlide);

        // Slide Transition happens here.
        // animated transition happens to target Slide and
        // non - animated transition happens to current Slide
        // If CSS transitions are false, directly go the current slide.
        /* istanbul ignore if */
        if (this.props.useCSS === false) {
            this.setState({
                currentSlide: currentSlide,
                trackStyle: (0, _trackHelper.getTrackCSS)((0, _extends3.default)({
                    left: currentLeft
                }, this.props, this.state))
            }, function () {
                _this2.props.onChange(currentSlide);
            });
        } else {
            var nextStateChanges = {
                animating: false,
                currentSlide: currentSlide,
                trackStyle: (0, _trackHelper.getTrackCSS)((0, _extends3.default)({
                    left: currentLeft
                }, this.props, this.state)),
                swipeLeft: null
            };

            callback = function callback() {
                _this2.setState(nextStateChanges);
                _this2.props.onChange(currentSlide);
                delete _this2.animationEndCallback;
            };

            this.setState({
                animating: true,
                currentSlide: currentSlide,
                trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _extends3.default)({
                    left: targetLeft
                }, this.props, this.state))
            }, function () {
                this.animationEndCallback = setTimeout(callback, this.props.speed + 20);
            });
        }

        this.autoPlay();
    },

    // 鼠标悬浮在 arrow 上时作出动画反馈
    arrowHoverHandler: function arrowHoverHandler(msg) {
        var offset = 30; // slide 的位置偏移量
        var targetLeft = (0, _trackHelper.getTrackLeft)((0, _extends3.default)({
            slideIndex: this.state.currentSlide,
            trackRef: this.track
        }, this.props, this.state));

        var left = void 0;
        /* istanbul ignore next */
        if (msg === 'next') {
            left = targetLeft - offset;
        } else if (msg === 'prev') {
            left = targetLeft + offset;
        } else {
            left = targetLeft;
        }

        this.setState({
            trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _extends3.default)({
                left: left
            }, this.props, this.state))
        });
    },
    swipeDirection: function swipeDirection(touchObject) {
        /* istanbul ignore next */
        var swipeAngle = void 0;
        /* istanbul ignore next */
        var xDist = touchObject.startX - touchObject.curX;
        /* istanbul ignore next */
        var yDist = touchObject.startY - touchObject.curY;
        /* istanbul ignore next */
        var r = Math.atan2(yDist, xDist);
        /* istanbul ignore next */
        swipeAngle = Math.round(r * 180 / Math.PI);
        /* istanbul ignore next */
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }
        /* istanbul ignore next */
        if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
            return this.props.rtl === false ? 'left' : 'right';
        }
        /* istanbul ignore next */
        if (swipeAngle >= 135 && swipeAngle <= 225) {
            return this.props.rtl === false ? 'right' : 'left';
        }
        /* istanbul ignore next */
        if (this.props.verticalSwiping === true) {
            if (swipeAngle >= 35 && swipeAngle <= 135) {
                return 'down';
            } else {
                return 'up';
            }
        }

        /* istanbul ignore next */
        return 'vertical';
    },
    play: function play() {
        var nextIndex = void 0;
        if (!this.hasMounted) {
            /* istanbul ignore next */
            return false;
        }
        if (this.props.rtl) {
            nextIndex = this.state.currentSlide - this.props.slidesToScroll;
        } else if (this.canGoNext((0, _extends3.default)({}, this.props, this.state))) {
            nextIndex = this.state.currentSlide + this.props.slidesToScroll;
        } else {
            return false;
        }
        this.slideHandler(nextIndex);
    },
    autoPlay: function autoPlay() {
        if (this.state.autoPlayTimer) {
            clearTimeout(this.state.autoPlayTimer);
        }
        if (this.props.autoplay) {
            this.setState({
                autoPlayTimer: setTimeout(this.play.bind(this), this.props.autoplaySpeed)
            });
        }
    },
    pause: function pause() {
        /* istanbul ignore next */
        if (this.state.autoPlayTimer) {
            clearTimeout(this.state.autoPlayTimer);
            this.setState({
                autoPlayTimer: null
            });
        }
    }
};

exports.default = helpers;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * slider arrow
 * 左右控制箭头
 */

var noop = _util.func.noop;
var Arrow = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Arrow, _Component);

    function Arrow() {
        (0, _classCallCheck3.default)(this, Arrow);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Arrow.isDisabled = function isDisabled(props) {
        var infinite = props.infinite,
            type = props.type,
            centerMode = props.centerMode,
            currentSlide = props.currentSlide,
            slideCount = props.slideCount,
            slidesToShow = props.slidesToShow;

        if (infinite) {
            return false;
        }

        // 下一个 index 大于总数？？
        // if (slideCount <= slidesToShow) {
        //     return true;
        // }

        // 向前箭头：当前是第 0 个
        if (type === 'prev') {
            return currentSlide <= 0;
        }

        if (centerMode && currentSlide >= slideCount - 1) {
            // 向后箭头：居中模式，当前 index 大于最大 index
            return true;
        } else if (currentSlide >= slideCount - slidesToShow) {
            // 向后箭头：普通模式，当前 index 大于 总数 - 下一个 index ？？？
            return true;
        }

        return false;
    };

    Arrow.prototype.handleClick = function handleClick(options, e) {
        e && e.preventDefault();

        // TODO hack
        if (options.message === 'prev') {
            options.message = 'previous';
        }

        this.props.clickHandler(options, e);
    };

    Arrow.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            type = _props.type,
            arrowSize = _props.arrowSize,
            arrowPosition = _props.arrowPosition,
            arrowDirection = _props.arrowDirection,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            children = _props.children;

        var others = _util.obj.pickOthers(Arrow.propTypes, this.props);
        var iconType = Arrow.ARROW_ICON_TYPES[arrowDirection][type];
        var disabled = Arrow.isDisabled(this.props);

        var arrowClazz = (0, _classnames2.default)([prefix + 'slick-arrow', prefix + 'slick-' + type, arrowPosition, arrowSize, arrowDirection], { disabled: disabled });

        var arrowProps = (0, _extends3.default)({}, others, {
            key: type,
            'data-role': 'none',
            className: arrowClazz,
            style: { display: 'block' },
            onClick: disabled ? null : this.handleClick.bind(this, { message: type }),
            onMouseEnter: disabled ? null : onMouseEnter,
            onMouseLeave: disabled ? null : onMouseLeave
        });

        if (children) {
            return _react2.default.cloneElement(_react2.default.Children.only(children), arrowProps);
        } else {
            return _react2.default.createElement('button', (0, _extends3.default)({ type: 'button', role: 'button' }, arrowProps), _react2.default.createElement(_icon2.default, { type: iconType }));
        }
    };

    return Arrow;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    type: _propTypes2.default.oneOf(['prev', 'next']).isRequired,
    centerMode: _propTypes2.default.bool,
    currentSlide: _propTypes2.default.number,
    infinite: _propTypes2.default.bool,
    clickHandler: _propTypes2.default.func,
    slideCount: _propTypes2.default.number,
    slidesToShow: _propTypes2.default.number,
    arrow: _propTypes2.default.element,
    arrowSize: _propTypes2.default.string,
    arrowPosition: _propTypes2.default.string,
    arrowDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
    onMouseEnter: _propTypes2.default.func,
    onMouseLeave: _propTypes2.default.func,
    children: _propTypes2.default.node
}, _class.defaultProps = {
    onMouseEnter: noop,
    onMouseLeave: noop
}, _class.ARROW_ICON_TYPES = {
    hoz: { prev: 'arrow-left', next: 'arrow-right' },
    ver: { prev: 'arrow-up', next: 'arrow-down' }
}, _temp);
Arrow.displayName = 'Arrow';
exports.default = Arrow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Slider Track
 * 内容轨道
 */

var getSlideClasses = function getSlideClasses(specProps) {
    var _classNames;

    var prefix = specProps.prefix;
    var slickActive = void 0,
        slickCenter = void 0;
    var centerOffset = void 0,
        index = void 0;

    if (specProps.rtl) {
        index = specProps.slideCount - 1 - specProps.activeIndex;
    } else {
        index = specProps.activeIndex;
    }

    var slickCloned = index < 0 || index >= specProps.slideCount;
    if (specProps.centerMode) {
        centerOffset = Math.floor(specProps.slidesToShow / 2);
        slickCenter = (index - specProps.currentSlide) % specProps.slideCount === 0;
        if (index > specProps.currentSlide - centerOffset - 1 && index <= specProps.currentSlide + centerOffset) {
            slickActive = true;
        }
    } else {
        slickActive = specProps.currentSlide <= index && index < specProps.currentSlide + specProps.slidesToShow;
    }

    return (0, _classnames2.default)(prefix + 'slick-slide', (_classNames = {}, _classNames[prefix + 'slick-active'] = slickActive, _classNames[prefix + 'slick-center'] = slickCenter, _classNames[prefix + 'slick-cloned'] = slickCloned, _classNames));
};

var getSlideStyle = function getSlideStyle(specProps) {
    var style = {};

    if (specProps.variableWidth === undefined || specProps.variableWidth === false) {
        style.width = specProps.slideWidth;
    }

    if (specProps.animation === 'fade') {
        style.position = 'relative';

        style.opacity = specProps.currentSlide === specProps.activeIndex ? 1 : 0;
        style.visibility = 'visible';
        style.transition = 'opacity ' + specProps.speed + 'ms ' + specProps.cssEase;
        style.WebkitTransition = 'opacity ' + specProps.speed + 'ms ' + specProps.cssEase;

        if (specProps.vertical) {
            style.top = -specProps.activeIndex * specProps.slideHeight;
        } else {
            style.left = -specProps.activeIndex * specProps.slideWidth;
        }
    }

    if (specProps.vertical) {
        style.width = '100%';
    }

    return style;
};

var getKey = function getKey(child, fallbackKey) {
    // key could be a zero
    return child.key === null || child.key === undefined ? fallbackKey : child.key;
};

var renderSlides = function renderSlides(specProps) {
    var key = void 0;
    var slides = [];
    var preCloneSlides = [];
    var postCloneSlides = [];
    var count = _react2.default.Children.count(specProps.children);
    var child = void 0;

    _react2.default.Children.forEach(specProps.children, function (elem, index) {
        var childOnClickOptions = {
            message: 'children',
            index: index,
            slidesToScroll: specProps.slidesToScroll,
            currentSlide: specProps.currentSlide
        };

        if (!specProps.lazyLoad | (specProps.lazyLoad && specProps.lazyLoadedList.indexOf(index) >= 0)) {
            child = elem;
        } else {
            child = elem.key ? _react2.default.createElement('div', { key: elem.key }) : _react2.default.createElement('div', null);
        }
        var childStyle = getSlideStyle((0, _extends3.default)({}, specProps, { activeIndex: index }));
        var slickClasses = getSlideClasses((0, _extends3.default)({
            activeIndex: index
        }, specProps));
        var cssClasses = void 0;

        if (child.props.className) {
            cssClasses = (0, _classnames2.default)(slickClasses, child.props.className);
        } else {
            cssClasses = slickClasses;
        }

        var onClick = function onClick(e) {
            // only child === elem, it will has .props.onClick;
            child.props && child.props.onClick && elem.props.onClick(e);
            if (specProps.focusOnSelect) {
                specProps.focusOnSelect(childOnClickOptions);
            }
        };

        slides.push(_react2.default.cloneElement(child, {
            key: 'original' + getKey(child, index),
            'data-index': index,
            className: cssClasses,
            tabIndex: '-1',
            'aria-posinset': index,
            'aria-setsize': count,
            role: 'listitem',
            dir: specProps.rtl ? 'rtl' : 'ltr',
            // server-side render depend on elements of their own style
            style: !_util.dom.hasDOM ? (0, _extends3.default)({ outline: 'none' }, childStyle, child.props.style) : (0, _extends3.default)({ outline: 'none' }, child.props.style, childStyle),
            onClick: onClick
        }));

        // variableWidth doesn't wrap properly.
        if (specProps.infinite && specProps.animation !== 'fade') {
            var infiniteCount = specProps.variableWidth ? specProps.slidesToShow + 1 : specProps.slidesToShow;

            if (index >= count - infiniteCount) {
                key = -(count - index);
                preCloneSlides.push(_react2.default.cloneElement(child, {
                    key: 'precloned' + getKey(child, key),
                    'data-index': key,
                    className: cssClasses,
                    style: (0, _extends3.default)({}, child.props.style, childStyle)
                }));
            }

            if (index < infiniteCount) {
                key = count + index;
                postCloneSlides.push(_react2.default.cloneElement(child, {
                    key: 'postcloned' + getKey(child, key),
                    'data-index': key,
                    className: cssClasses,
                    style: (0, _extends3.default)({}, child.props.style, childStyle)
                }));
            }
        }
    });
    // To support server-side rendering
    if (!_util.dom.hasDOM) {
        return slides.slice(specProps.currentSlide, specProps.currentSlide + specProps.slidesToShow);
    }
    if (specProps.rtl) {
        return preCloneSlides.concat(slides, postCloneSlides).reverse();
    } else {
        return preCloneSlides.concat(slides, postCloneSlides);
    }
};

var Track = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Track, _Component);

    function Track() {
        (0, _classCallCheck3.default)(this, Track);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Track.prototype.render = function render() {
        var slides = renderSlides(this.props);
        return _react2.default.createElement('div', { role: 'list', className: this.props.prefix + 'slick-track', style: this.props.trackStyle }, slides);
    };

    return Track;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    trackStyle: _propTypes2.default.object
}, _class.defaultProps = {
    prefix: 'next-'
}, _temp);
Track.displayName = 'Track';
exports.default = Track;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * slider dots
 * 导航锚点
 */

var noop = _util.func.noop;
var Dots = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Dots, _React$Component);

    function Dots() {
        (0, _classCallCheck3.default)(this, Dots);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    Dots.prototype.handleChangeSlide = function handleChangeSlide(options, e) {
        e.preventDefault();

        this.props.changeSlide(options);
    };

    Dots.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            slideCount = _props.slideCount,
            slidesToScroll = _props.slidesToScroll,
            currentSlide = _props.currentSlide,
            dotsClass = _props.dotsClass,
            dotsDirection = _props.dotsDirection,
            dotsRender = _props.dotsRender,
            triggerType = _props.triggerType,
            rtl = _props.rtl;

        var dotsClazz = (0, _classnames2.default)(prefix + 'slick-dots', dotsDirection, dotsClass);
        var dotCount = Math.ceil(slideCount / slidesToScroll);
        var children = [];

        for (var i = 0; i < dotCount; i++) {
            var _handleProp;

            var leftBound = i * slidesToScroll;
            var rightBound = leftBound + slidesToScroll - 1;
            var itemClazz = (0, _classnames2.default)(prefix + 'slick-dots-item', {
                active: currentSlide >= leftBound && currentSlide <= rightBound
            });
            var dotOptions = {
                message: 'dots',
                index: i,
                slidesToScroll: slidesToScroll,
                currentSlide: currentSlide
            };
            // 除非设置为hover，默认使用click触发
            var handleProp = (_handleProp = {}, _handleProp[triggerType.toLowerCase() === 'hover' ? 'onMouseEnter' : 'onClick'] = this.handleChangeSlide.bind(this, dotOptions), _handleProp);

            var docIndex = i;
            var currentSlideIndex = currentSlide;
            if (rtl) {
                docIndex = dotCount - 1 - i;
                currentSlideIndex = dotCount - 1 - currentSlide;
            }

            children.push(_react2.default.createElement('li', (0, _extends3.default)({ key: i, className: itemClazz }, handleProp), dotsRender instanceof Function ? _react2.default.createElement('span', null, dotsRender(docIndex, currentSlideIndex)) :
            // Slider is navigated by right and left arrow buttons so the dots are not required functionality
            _react2.default.createElement('button', { tabIndex: '-1' })));
        }

        return _react2.default.createElement('ul', { className: dotsClazz, 'aria-hidden': 'true' }, children);
    };

    return Dots;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    currentSlide: _propTypes2.default.number,
    changeSlide: _propTypes2.default.func,
    dotsClass: _propTypes2.default.string,
    slideCount: _propTypes2.default.number,
    slidesToScroll: _propTypes2.default.number,
    dotsDirection: _propTypes2.default.oneOf(['hoz', 'ver']),
    dotsRender: _propTypes2.default.func,
    triggerType: _propTypes2.default.string
}, _class.defaultProps = {
    changeSlide: noop
}, _temp);
Dots.displayName = 'Dots';
exports.default = Dots;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var react_dom_1 = __webpack_require__(13);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var button_1 = tslib_1.__importDefault(__webpack_require__(18));
var overlay_1 = tslib_1.__importDefault(__webpack_require__(16));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var menu_1 = tslib_1.__importDefault(__webpack_require__(17));
var Popup = overlay_1.default.Popup;
var SplitButton = /** @class */function (_super) {
    tslib_1.__extends(SplitButton, _super);
    function SplitButton() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.state = {
            selectedKeys: _this.props.defaultSelectedKeys,
            visible: _this.props.defaultVisible
        };
        _this.wrapper = null;
        _this.menu = null;
        _this.selectMenuItem = function (keys) {
            var _a;
            var others = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                others[_i - 1] = arguments[_i];
            }
            if (!('selectedKeys' in _this.props)) {
                _this.setState({
                    selectedKeys: keys
                });
            }
            (_a = _this.props).onSelect.apply(_a, tslib_1.__spreadArray([keys], tslib_1.__read(others), false));
        };
        _this.clickMenuItem = function (key) {
            var _a;
            var others = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                others[_i - 1] = arguments[_i];
            }
            (_a = _this.props).onItemClick.apply(_a, tslib_1.__spreadArray([key], tslib_1.__read(others), false));
            _this.onVisibleChange(false, 'menuSelect');
        };
        _this.onPopupOpen = function () {
            if (_this.props.autoWidth && _this.wrapper && _this.menu) {
                util_1.dom.setStyle(_this.menu, {
                    width: _this.wrapper.offsetWidth
                });
            }
        };
        _this.onVisibleChange = function (visible, reason) {
            if (!('visible' in _this.props)) {
                _this.setState({
                    visible: visible
                });
            }
            _this.props.onVisibleChange(visible, reason);
        };
        _this._menuRefHandler = function (ref) {
            _this.menu = (0, react_dom_1.findDOMNode)(ref);
            var refFn = _this.props.menuProps.ref;
            if (typeof refFn === 'function') {
                refFn(ref);
            }
        };
        _this._wrapperRefHandler = function (ref) {
            _this.wrapper = (0, react_dom_1.findDOMNode)(ref);
        };
        return _this;
    }
    SplitButton.getDerivedStateFromProps = function (nextProps) {
        var st = {};
        if ('visible' in nextProps) {
            st.visible = nextProps.visible;
        }
        if ('selectedKeys' in nextProps) {
            st.selectedKeys = nextProps.selectedKeys;
        }
        return st;
    };
    SplitButton.prototype.componentDidMount = function () {
        // 由于定位目标是 wrapper，如果弹层默认展开，wrapper 还未渲染，didMount 后强制再渲染一次，弹层重新定位
        if (this.state.visible) {
            this.forceUpdate();
        }
    };
    SplitButton.prototype.render = function () {
        var _a, _b, _c;
        var _this = this;
        var _d = this.props,
            prefix = _d.prefix,
            label = _d.label,
            size = _d.size,
            type = _d.type,
            component = _d.component,
            ghost = _d.ghost,
            className = _d.className,
            style = _d.style,
            children = _d.children,
            triggerProps = _d.triggerProps,
            popupAlign = _d.popupAlign,
            popupTriggerType = _d.popupTriggerType,
            popupStyle = _d.popupStyle,
            popupClassName = _d.popupClassName,
            popupProps = _d.popupProps,
            popupContainer = _d.popupContainer,
            followTrigger = _d.followTrigger,
            selectMode = _d.selectMode,
            menuProps = _d.menuProps,
            leftButtonProps = _d.leftButtonProps,
            disabled = _d.disabled,
            others = tslib_1.__rest(_d, ["prefix", "label", "size", "type", "component", "ghost", "className", "style", "children", "triggerProps", "popupAlign", "popupTriggerType", "popupStyle", "popupClassName", "popupProps", "popupContainer", "followTrigger", "selectMode", "menuProps", "leftButtonProps", "disabled"]);
        var state = this.state;
        var classNames = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "split-btn")] = true, _a), className);
        var sharedBtnProps = {
            type: type,
            size: size,
            component: component,
            ghost: ghost,
            disabled: disabled
        };
        var triggerClassNames = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "split-btn-trigger")] = true, _b["".concat(prefix, "expand")] = state.visible, _b.opened = state.visible, _b));
        var iconCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "split-btn-symbol-fold")] = true, _c));
        var trigger = react_1.default.createElement(button_1.default, tslib_1.__assign({}, sharedBtnProps, triggerProps, { className: triggerClassNames }), react_1.default.createElement(icon_1.default, { type: "arrow-down", className: iconCls }));
        return react_1.default.createElement(button_1.default.Group, tslib_1.__assign({}, util_1.obj.pickOthers(SplitButton.propTypes, others), { className: classNames, style: style, size: size, ref: this._wrapperRefHandler }), react_1.default.createElement(button_1.default, tslib_1.__assign({}, sharedBtnProps, leftButtonProps), label), react_1.default.createElement(Popup, tslib_1.__assign({}, popupProps, { followTrigger: followTrigger, visible: state.visible, onVisibleChange: this.onVisibleChange, trigger: trigger, triggerType: popupTriggerType, align: popupAlign, container: popupContainer, target: function target() {
                return _this.wrapper;
            }, style: popupStyle, shouldUpdatePosition: true, className: popupClassName, onOpen: this.onPopupOpen }), react_1.default.createElement("div", { className: "".concat(prefix, "split-btn-spacing-tb") }, react_1.default.createElement(menu_1.default, tslib_1.__assign({}, menuProps, { selectMode: selectMode, selectedKeys: state.selectedKeys, onSelect: this.selectMenuItem, onItemClick: this.clickMenuItem, ref: this._menuRefHandler }), children))));
    };
    SplitButton.propTypes = {
        prefix: prop_types_1.default.string,
        style: prop_types_1.default.object,
        type: prop_types_1.default.oneOf(['normal', 'primary', 'secondary']),
        size: prop_types_1.default.oneOf(['small', 'medium', 'large']),
        label: prop_types_1.default.node,
        component: prop_types_1.default.oneOf(['button', 'a']),
        ghost: prop_types_1.default.oneOf(['light', 'dark', false, true]),
        defaultSelectedKeys: prop_types_1.default.array,
        selectedKeys: prop_types_1.default.array,
        selectMode: prop_types_1.default.oneOf(['single', 'multiple']),
        onSelect: prop_types_1.default.func,
        onItemClick: prop_types_1.default.func,
        triggerProps: prop_types_1.default.object,
        autoWidth: prop_types_1.default.bool,
        visible: prop_types_1.default.bool,
        defaultVisible: prop_types_1.default.bool,
        onVisibleChange: prop_types_1.default.func,
        popupTriggerType: prop_types_1.default.oneOf(['click', 'hover']),
        popupAlign: prop_types_1.default.string,
        popupStyle: prop_types_1.default.object,
        popupClassName: prop_types_1.default.string,
        popupProps: prop_types_1.default.object,
        popupContainer: prop_types_1.default.any,
        followTrigger: prop_types_1.default.bool,
        menuProps: prop_types_1.default.object,
        leftButtonProps: prop_types_1.default.object,
        className: prop_types_1.default.string,
        children: prop_types_1.default.any
    };
    SplitButton.defaultProps = {
        prefix: 'next-',
        type: 'normal',
        size: 'medium',
        autoWidth: true,
        popupTriggerType: 'click',
        onVisibleChange: util_1.func.noop,
        onItemClick: util_1.func.noop,
        onSelect: util_1.func.noop,
        defaultSelectedKeys: [],
        menuProps: {},
        leftButtonProps: {}
    };
    SplitButton.Item = menu_1.default.Item;
    SplitButton.Divider = menu_1.default.Divider;
    SplitButton.Group = menu_1.default.Group;
    return SplitButton;
}(react_1.default.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(SplitButton));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var step_1 = tslib_1.__importDefault(__webpack_require__(398));
var step_item_1 = tslib_1.__importDefault(__webpack_require__(399));
var component_1 = __webpack_require__(22);
var WithStepItem = (0, component_1.assignSubComponent)(step_1.default, { Item: step_item_1.default });
exports.default = config_provider_1.default.config(WithStepItem, {
    transform: function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'shape', 'Step');
            var _a = props,
                type = _a.type,
                others = tslib_1.__rest(_a, ["type"]);
            props = tslib_1.__assign({ shape: type }, others);
        }
        var _b = props,
            direction = _b.direction,
            labelPlacement = _b.labelPlacement;
        if (direction === 'vertical') {
            deprecated('direction="vertical"', 'direction="ver"', 'Step');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { direction: 'ver' });
        }
        if (direction === 'horizontal') {
            deprecated('direction="horizontal"', 'direction="hoz"', 'Step');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { direction: 'hoz' });
        }
        if (labelPlacement === 'vertical') {
            deprecated('labelPlacement="vertical"', 'labelPlacement="ver"', 'Step');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { labelPlacement: 'ver' });
        }
        if (labelPlacement === 'horizontal') {
            deprecated('labelPlacement="horizontal"', 'labelPlacement="hoz"', 'Step');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { labelPlacement: 'hoz' });
        }
        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_lifecycles_compat_1 = __webpack_require__(11);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var getHeight = function getHeight(el) {
    return util_1.dom.getStyle(el, 'height');
};
var setHeight = function setHeight(el, height) {
    return util_1.dom.setStyle(el, 'height', height);
};
/** Step */
var Step = /** @class */function (_super) {
    tslib_1.__extends(Step, _super);
    function Step(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.step = null;
        _this._stepRefHandler = function (ref) {
            _this.step = ref;
        };
        _this.state = {
            parentWidth: 'auto',
            parentHeight: 'auto',
            currentfocus: 0
        };
        _this.resize = _this.resize.bind(_this);
        return _this;
    }
    Step.getDerivedStateFromProps = function (newProps) {
        if ('current' in newProps) {
            return {
                current: newProps.current
            };
        }
        return null;
    };
    Step.prototype.componentDidMount = function () {
        if (!util_1.support.flex) {
            this.resize();
            util_1.events.on(window, 'resize', this.resize);
        }
        this.adjustHeight();
    };
    Step.prototype.componentDidUpdate = function () {
        this.adjustHeight();
    };
    Step.prototype.componentWillUnmount = function () {
        if (!util_1.support.flex) {
            util_1.events.off(window, 'resize', this.resize);
        }
    };
    Step.prototype.adjustHeight = function () {
        var _a = this.props,
            shape = _a.shape,
            direction = _a.direction,
            prefix = _a.prefix,
            labelPlacement = _a.labelPlacement;
        var step = react_dom_1.default.findDOMNode(this.step);
        if (shape !== 'arrow' && direction === 'hoz' && labelPlacement === 'ver') {
            var height = Array.prototype.slice.call(step.getElementsByClassName("".concat(prefix, "step-item"))).reduce(function (ret, re) {
                var itemHeight = getHeight(re.getElementsByClassName("".concat(prefix, "step-item-container"))[0]) + getHeight(re.getElementsByClassName("".concat(prefix, "step-item-body"))[0]);
                return Math.max(itemHeight, ret);
            }, 0);
            setHeight(step, height);
        } else {
            setHeight(step, '');
        }
    };
    Step.prototype.resize = function () {
        if (this.step) {
            this.setState({
                parentWidth: this.step.offsetWidth || 0,
                parentHeight: this.step.offsetHeight || 0
            });
        }
    };
    Step.prototype._getValidChildren = function (children) {
        var result = [];
        react_1.default.Children.forEach(children, function (child) {
            if (react_1.default.isValidElement(child)) {
                result.push(child);
            }
        });
        return result;
    };
    Step.prototype.render = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            className = _b.className,
            current = _b.current,
            labelPlacement = _b.labelPlacement,
            shape = _b.shape,
            readOnly = _b.readOnly,
            animation = _b.animation,
            itemRender = _b.itemRender,
            rtl = _b.rtl,
            stretch = _b.stretch;
        var others = util_1.obj.pickOthers(Step.propTypes, this.props);
        var _c = this.props,
            prefix = _c.prefix,
            direction = _c.direction;
        prefix = this.context.prefix || prefix;
        var _d = this.state,
            parentWidth = _d.parentWidth,
            parentHeight = _d.parentHeight;
        // type 不同对应的 direction 不同
        direction = shape === 'arrow' ? 'hoz' : direction;
        // children 去除 null
        var children = this._getValidChildren(this.props.children);
        // 修改子节点属性
        var cloneChildren = react_1.Children.map(children, function (child, index) {
            var status = index < current ? 'finish' : index === current ? 'process' : 'wait';
            return react_1.default.cloneElement(child, {
                prefix: prefix,
                key: index,
                index: index,
                total: children.length,
                status: child.props.status || status,
                shape: shape,
                direction: direction,
                labelPlacement: labelPlacement,
                parentWidth: parentWidth,
                parentHeight: parentHeight,
                readOnly: readOnly,
                animation: animation,
                tabIndex: 0,
                'aria-current': status === 'process' ? 'step' : null,
                itemRender: child.props.itemRender ? child.props.itemRender : itemRender, // 优先使用Item的itemRender
                onResize: function onResize() {
                    _this.step && _this.adjustHeight();
                },
                stretch: stretch
            });
        });
        var _direction = direction === 'ver' ? 'vertical' : 'horizontal';
        var _labelPlacement = labelPlacement === 'ver' ? 'vertical' : 'horizontal';
        var stepCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "step")] = true, _a["".concat(prefix, "step-").concat(shape)] = shape, _a["".concat(prefix, "step-").concat(_direction)] = _direction, _a["".concat(prefix, "step-label-").concat(_labelPlacement)] = _labelPlacement, _a[className] = className, _a));
        if (rtl) {
            others.dir = 'rtl';
        }
        // others.onKeyDown = makeChain(this.handleKeyDown, others.onKeyDown);
        return react_1.default.createElement("ol", tslib_1.__assign({}, others, { className: stepCls, ref: this._stepRefHandler }), cloneChildren);
    };
    Step.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, rtl: prop_types_1.default.bool, current: prop_types_1.default.number, direction: prop_types_1.default.oneOf(['hoz', 'ver']), labelPlacement: prop_types_1.default.oneOf(['hoz', 'ver']), shape: prop_types_1.default.oneOf(['circle', 'arrow', 'dot']), readOnly: prop_types_1.default.bool, animation: prop_types_1.default.bool, className: prop_types_1.default.string, itemRender: prop_types_1.default.func, stretch: prop_types_1.default.bool });
    Step.defaultProps = {
        prefix: 'next-',
        current: 0,
        direction: 'hoz',
        labelPlacement: 'ver',
        shape: 'circle',
        animation: true,
        itemRender: null,
        stretch: false
    };
    Step.contextTypes = {
        prefix: prop_types_1.default.string
    };
    return Step;
}(react_1.Component);
exports.default = (0, react_lifecycles_compat_1.polyfill)(Step);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var resize_observer_polyfill_1 = tslib_1.__importDefault(__webpack_require__(52));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var progress_1 = tslib_1.__importDefault(__webpack_require__(99));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var util_1 = __webpack_require__(4);
var getWidth = function getWidth(el) {
    return util_1.dom.getStyle(el, 'width');
};
var getHeight = function getHeight(el) {
    return util_1.dom.getStyle(el, 'height');
};
/** Step.Item */
var StepItem = /** @class */function (_super) {
    tslib_1.__extends(StepItem, _super);
    function StepItem(props) {
        var _this = _super.call(this, props) || this;
        _this.onClick = function () {
            var _a = _this.props,
                index = _a.index,
                disabled = _a.disabled,
                readOnly = _a.readOnly,
                animation = _a.animation;
            if (disabled || readOnly) {
                return false;
            }
            if (animation && _this.stepNode) {
                util_1.dom.hasClass(_this.stepNode, 'clicked') ? util_1.dom.removeClass(_this.stepNode, 'clicked') : util_1.dom.addClass(_this.stepNode, 'clicked');
            }
            _this.props.onClick(index);
        };
        _this.removeClickedCls = _this.removeClickedCls.bind(_this);
        _this._refHandlerCreator = _this._refHandlerCreator.bind(_this);
        _this.resize = _this.resize.bind(_this);
        _this.ro = new resize_observer_polyfill_1.default(function () {
            var _a = _this.props,
                shape = _a.shape,
                direction = _a.direction,
                onResize = _a.onResize;
            if (!_this.body || shape === 'arrow') {
                return;
            }
            if (direction === 'ver') {
                _this.resize();
            } else {
                onResize && onResize();
            }
        });
        return _this;
    }
    StepItem.prototype.componentDidMount = function () {
        var _a = this.props,
            shape = _a.shape,
            direction = _a.direction,
            labelPlacement = _a.labelPlacement,
            index = _a.index,
            total = _a.total,
            stretch = _a.stretch;
        this.body && this.ro.observe(react_dom_1.default.findDOMNode(this.body));
        if (shape === 'arrow') {
            return;
        }
        if (direction === 'ver') {
            this.resize();
            this.forceUpdate(); // 解决 Step 嵌套的情况下，嵌套节点宽度为 0 的问题
            this.eventHandler = util_1.events.on(window, 'resize', this.resize); // 调整垂直 Step
        } else if (direction === 'hoz' && labelPlacement === 'hoz' && index !== total - 1) {
            // 调整横向 Content
            this.adjustTail();
        }
        if (stretch && direction === 'hoz') {
            this.adjustItemWidth();
        }
    };
    StepItem.prototype.componentDidUpdate = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            shape = _b.shape,
            direction = _b.direction,
            labelPlacement = _b.labelPlacement,
            index = _b.index,
            total = _b.total,
            rtl = _b.rtl,
            stretch = _b.stretch;
        if (shape === 'arrow') {
            return;
        }
        var resetTailStyle = function resetTailStyle() {
            util_1.dom.setStyle(_this.tail, {
                width: '',
                top: '',
                height: ''
            });
        };
        if (direction === 'ver') {
            this.resize();
        } else if (direction === 'hoz') {
            var pos = rtl ? 'right' : 'left';
            util_1.dom.setStyle(this.body, (_a = {
                width: ''
            }, _a[pos] = '', _a));
            if (shape === 'circle' && labelPlacement === 'hoz' && index !== total - 1) {
                // 调整横向 Content
                this.adjustTail();
            } else {
                resetTailStyle();
            }
            if (stretch) {
                this.adjustItemWidth();
            }
        } else if (index !== total - 1) {
            resetTailStyle();
        }
    };
    StepItem.prototype.componentWillUnmount = function () {
        this.eventHandler && this.eventHandler.off();
    };
    StepItem.prototype.adjustItemWidth = function () {
        var _a = this.props,
            index = _a.index,
            total = _a.total,
            labelPlacement = _a.labelPlacement;
        var lastNodeWidth = labelPlacement === 'hoz' ? this.container.offsetWidth + this.body.offsetWidth : this.title.offsetWidth;
        var width = total - 1 !== index ? "calc((100% - ".concat(lastNodeWidth, "px)/").concat(total - 1, ")") : 'auto';
        util_1.dom.setStyle(this.step, {
            width: width
        });
    };
    StepItem.prototype.adjustTail = function () {
        var width = this.container.offsetWidth + this.title.offsetWidth;
        util_1.dom.setStyle(this.tail, {
            width: "calc(100% - ".concat(width, "px)"),
            top: "".concat(getHeight(this.container) / 2, "px")
        });
    };
    StepItem.prototype.resize = function () {
        var direction = this.props.direction;
        if (direction === 'ver') {
            var stepWidth = getWidth(this.step);
            var stepHozWhitespace = util_1.dom.getNodeHozWhitespace(this.step.parentNode);
            var stepBodyHozWhitespace = util_1.dom.getNodeHozWhitespace(this.body);
            var rtl = this.props.rtl;
            rtl ? this.body.style.right = "".concat(stepWidth, "px") : this.body.style.left = "".concat(stepWidth, "px");
            util_1.dom.setStyle(this.body, {
                width: getWidth(this.step.parentNode.parentNode) - stepWidth - stepHozWhitespace - stepBodyHozWhitespace
            });
            util_1.dom.setStyle(this.tail, 'height', getHeight(this.body) - getHeight(this.container));
        }
    };
    StepItem.prototype._getNode = function () {
        var _a = this.props,
            prefix = _a.prefix,
            index = _a.index,
            status = _a.status,
            icon = _a.icon,
            shape = _a.shape,
            percent = _a.percent,
            itemRender = _a.itemRender;
        var nodeElement = icon;
        if (shape === 'dot') {
            nodeElement = icon ? react_1.default.createElement(icon_1.default, { type: icon }) : react_1.default.createElement("div", { className: "".concat(prefix, "step-item-node-dot") }, " ");
        } else if (shape === 'circle' && percent) {
            nodeElement = react_1.default.createElement(progress_1.default, { shape: "circle", percent: percent, className: "".concat(prefix, "step-item-progress") });
        } else if (shape === 'circle' && !!itemRender && typeof itemRender === 'function') {
            nodeElement = null; // 如果是需要自定义节点，则不处理，返回空
        } else {
            nodeElement = react_1.default.createElement("div", { className: "".concat(prefix, "step-item-node-circle") }, icon ? react_1.default.createElement(icon_1.default, { type: icon }) : this._itemRender(index, status));
        }
        return nodeElement;
    };
    StepItem.prototype.getNode = function (args) {
        var _a = this.props,
            prefix = _a.prefix,
            itemRender = _a.itemRender,
            index = _a.index,
            status = _a.status,
            title = _a.title,
            content = _a.content,
            shape = _a.shape;
        var others = args.others,
            stepCls = args.stepCls,
            overlayCls = args.overlayCls;
        var nodeElement = this._getNode();
        var containerStyle = shape === 'dot' && { fontSize: 'initial' } || {};
        var finalNodeElement = react_1.default.createElement("div", { className: "".concat(prefix, "step-item-container"), style: containerStyle, ref: this._refHandlerCreator('container') }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-node-placeholder"), onClick: this.onClick }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-node"), ref: this._refHandlerCreator('stepNode'), onTransitionEnd: this.removeClickedCls }, nodeElement)));
        if (!nodeElement) {
            // 需要自定义子节点
            finalNodeElement = react_1.default.createElement("div", { className: "".concat(prefix, "step-item-container"), style: containerStyle, ref: this._refHandlerCreator('container') }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-node-placeholder"), onClick: this.onClick }, itemRender(index, status, title, content)));
        }
        if (shape !== 'arrow') {
            delete others.tabIndex;
            delete others['aria-current'];
        }
        return react_1.default.createElement("li", tslib_1.__assign({}, others, { style: this.getStyle(), className: stepCls, ref: this._refHandlerCreator('step') }), finalNodeElement, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-body"), ref: this._refHandlerCreator('body'), tabIndex: this.props.tabIndex, "aria-current": this.props['aria-current'] }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-title"), ref: this._refHandlerCreator('title') }, title), react_1.default.createElement("div", { className: "".concat(prefix, "step-item-content") }, content)), react_1.default.createElement("div", { className: "".concat(prefix, "step-item-tail"), ref: this._refHandlerCreator('tail') }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-tail-underlay") }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-tail-overlay"), style: overlayCls }))));
    };
    StepItem.prototype.getStyle = function () {
        var _a = this.props,
            parentWidth = _a.parentWidth,
            parentHeight = _a.parentHeight,
            direction = _a.direction,
            total = _a.total,
            index = _a.index,
            shape = _a.shape;
        var width = 'auto';
        if (Number(parentWidth) && Number(parentHeight)) {
            if (!util_1.support.flex && shape === 'arrow') {
                width = Math.floor(parentWidth / total - parentHeight / 2 - parentHeight / 8);
            }
        }
        if (shape !== 'arrow' && direction === 'hoz') {
            width = total - 1 !== index ? "".concat(Math.floor(100 / total), "%") : 'auto';
        }
        return {
            width: width
        };
    };
    StepItem.prototype.removeClickedCls = function () {
        var animation = this.props.animation;
        if (animation && this.stepNode && util_1.dom.hasClass(this.stepNode, 'clicked')) {
            util_1.dom.removeClass(this.stepNode, 'clicked');
        }
    };
    // 节点的渲染方法
    StepItem.prototype._itemRender = function (index, status) {
        var itemRender = this.props.itemRender;
        if (itemRender) {
            return itemRender(index, status);
        }
        return status === 'finish' ? react_1.default.createElement(icon_1.default, { type: "select" }) : index + 1;
    };
    StepItem.prototype._refHandlerCreator = function (refName) {
        var _this = this;
        return function (ref) {
            _this[refName] = ref;
        };
    };
    StepItem.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            status = _b.status,
            title = _b.title,
            index = _b.index,
            total = _b.total,
            shape = _b.shape,
            disabled = _b.disabled,
            readOnly = _b.readOnly;
        var others = util_1.obj.pickOthers(StepItem.propTypes, this.props);
        var stepCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "step-item")] = true, _a["".concat(prefix, "step-item-").concat(status)] = status, _a["".concat(prefix, "step-item-first")] = index === 0, _a["".concat(prefix, "step-item-last")] = index === total - 1, _a["".concat(prefix, "step-item-disabled")] = disabled, _a["".concat(prefix, "step-item-read-only")] = readOnly, _a[className] = className, _a));
        var overlayCls = status === 'finish' ? { width: '100%' } : null;
        var arrowElement = react_1.default.createElement("li", tslib_1.__assign({}, others, { style: this.getStyle(), className: stepCls, onClick: this.onClick }), react_1.default.createElement("div", { className: "".concat(prefix, "step-item-container") }, react_1.default.createElement("div", { className: "".concat(prefix, "step-item-title") }, title)));
        var otherElement = this.getNode({ others: others, stepCls: stepCls, overlayCls: overlayCls });
        return shape === 'arrow' ? arrowElement : otherElement;
    };
    StepItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, rtl: prop_types_1.default.bool, status: prop_types_1.default.oneOf(['wait', 'process', 'finish']), title: prop_types_1.default.node, direction: prop_types_1.default.oneOf(['hoz', 'ver']), labelPlacement: prop_types_1.default.oneOf(['hoz', 'ver']), shape: prop_types_1.default.oneOf(['circle', 'arrow', 'dot']), icon: prop_types_1.default.string, content: prop_types_1.default.node, itemRender: prop_types_1.default.func, percent: prop_types_1.default.number, index: prop_types_1.default.number, total: prop_types_1.default.number, animation: prop_types_1.default.bool, disabled: prop_types_1.default.bool, parentWidth: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]), parentHeight: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]), onClick: prop_types_1.default.func, className: prop_types_1.default.string, readOnly: prop_types_1.default.bool, onResize: prop_types_1.default.func, stretch: prop_types_1.default.bool });
    StepItem.defaultProps = {
        shape: 'circle',
        index: 0,
        total: 1,
        onClick: function onClick() {},
        stretch: false
    };
    return StepItem;
}(react_1.Component);
exports.default = config_provider_1.default.config(StepItem, {
    transform: function transform(props, deprecated) {
        var _a = props,
            direction = _a.direction,
            labelPlacement = _a.labelPlacement;
        if (direction === 'vertical') {
            deprecated('direction="vertical"', 'direction="ver"', 'Step.Item');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { direction: 'ver' });
        }
        if (direction === 'horizontal') {
            deprecated('direction="horizontal"', 'direction="hoz"', 'Step.Item');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { direction: 'hoz' });
        }
        if (labelPlacement === 'vertical') {
            deprecated('labelPlacement="vertical"', 'labelPlacement="ver"', 'Step.Item');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { labelPlacement: 'ver' });
        }
        if (labelPlacement === 'horizontal') {
            deprecated('labelPlacement="horizontal"', 'labelPlacement="hoz"', 'Step.Item');
            props = tslib_1.__assign(tslib_1.__assign({}, props), { labelPlacement: 'hoz' });
        }
        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var Switch = /** @class */function (_super) {
    tslib_1.__extends(Switch, _super);
    function Switch(props) {
        var _this = _super.call(this, props) || this;
        var checked = props.checked || props.defaultChecked;
        _this.onChange = _this.onChange.bind(_this);
        _this.onKeyDown = _this.onKeyDown.bind(_this);
        _this.state = {
            checked: checked
        };
        return _this;
    }
    Switch.getDerivedStateFromProps = function (props, state) {
        if ('checked' in props && props.checked !== state.checked) {
            return {
                checked: !!props.checked
            };
        }
        return null;
    };
    Switch.prototype.onChange = function (ev) {
        var checked = !this.state.checked;
        if (!('checked' in this.props)) {
            this.setState({
                checked: checked
            });
        }
        this.props.onChange(checked, ev);
        this.props.onClick && this.props.onClick(ev);
    };
    Switch.prototype.onKeyDown = function (e) {
        if (e.keyCode === util_1.KEYCODE.ENTER || e.keyCode === util_1.KEYCODE.SPACE) {
            this.onChange(e);
        }
        this.props.onKeyDown && this.props.onKeyDown(e);
    };
    Switch.prototype.render = function () {
        var _a, _b;
        var _c = this.props,
            prefix = _c.prefix,
            className = _c.className,
            disabled = _c.disabled,
            readOnly = _c.readOnly,
            size = _c.size,
            loading = _c.loading,
            autoWidth = _c.autoWidth,
            checkedChildren = _c.checkedChildren,
            unCheckedChildren = _c.unCheckedChildren,
            rtl = _c.rtl,
            isPreview = _c.isPreview,
            renderPreview = _c.renderPreview,
            locale = _c.locale,
            others = tslib_1.__rest(_c, ["prefix", "className", "disabled", "readOnly", "size", "loading", "autoWidth", "checkedChildren", "unCheckedChildren", "rtl", "isPreview", "renderPreview", "locale"]);
        var domOtherProps = util_1.obj.pickOthers(Switch.propTypes, others);
        var checked = this.state.checked;
        var status = checked ? 'on' : 'off';
        var children = checked ? checkedChildren : unCheckedChildren;
        var _size = size;
        if (_size !== 'small' && _size !== 'medium') {
            _size = 'medium';
        }
        var classes = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "switch")] = true, _a["".concat(prefix, "switch-loading")] = loading, _a["".concat(prefix, "switch-").concat(status)] = true, _a["".concat(prefix, "switch-").concat(_size)] = true, _a["".concat(prefix, "switch-auto-width")] = autoWidth, _a), className);
        var attrs;
        var isDisabled = disabled || readOnly;
        if (!isDisabled) {
            attrs = {
                onClick: this.onChange,
                tabIndex: 0,
                onKeyDown: this.onKeyDown,
                disabled: false
            };
        } else {
            attrs = {
                disabled: true,
                onClick: undefined
            };
        }
        if (isPreview) {
            var previewCls = (0, classnames_1.default)(className, (_b = {}, _b["".concat(prefix, "form-preview")] = true, _b));
            if (typeof renderPreview === 'function') {
                return react_1.default.createElement("div", tslib_1.__assign({ className: previewCls }, domOtherProps), renderPreview(checked, this.props));
            }
            return react_1.default.createElement("p", tslib_1.__assign({ className: previewCls }, domOtherProps), children || locale[status]);
        }
        return react_1.default.createElement("div", tslib_1.__assign({ role: "switch", dir: rtl ? 'rtl' : undefined, tabIndex: 0 }, domOtherProps, { className: classes }, attrs, { "aria-checked": checked }), react_1.default.createElement("div", { className: "".concat(prefix, "switch-btn") }, loading && react_1.default.createElement(icon_1.default, { type: "loading", className: "".concat(prefix, "switch-inner-icon") })), react_1.default.createElement("div", { className: "".concat(prefix, "switch-children") }, children));
    };
    Switch.displayName = 'Switch';
    Switch.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { name: prop_types_1.default.string, prefix: prop_types_1.default.string, rtl: prop_types_1.default.bool, pure: prop_types_1.default.bool, className: prop_types_1.default.string, style: prop_types_1.default.object, checkedChildren: prop_types_1.default.any, unCheckedChildren: prop_types_1.default.any, onChange: prop_types_1.default.func, checked: prop_types_1.default.bool, defaultChecked: prop_types_1.default.bool, disabled: prop_types_1.default.bool, loading: prop_types_1.default.bool, size: prop_types_1.default.oneOf(['medium', 'small']), onClick: prop_types_1.default.func, onKeyDown: prop_types_1.default.func, isPreview: prop_types_1.default.bool, renderPreview: prop_types_1.default.func, autoWidth: prop_types_1.default.bool, locale: prop_types_1.default.object });
    Switch.defaultProps = {
        prefix: 'next-',
        size: 'medium',
        disabled: false,
        defaultChecked: false,
        isPreview: false,
        loading: false,
        readOnly: false,
        autoWidth: false,
        onChange: function onChange() {},
        locale: zh_cn_1.default.Switch
    };
    return Switch;
}(react_1.default.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(Switch));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _tab = __webpack_require__(402);

var _tab2 = _interopRequireDefault(_tab);

var _tabItem = __webpack_require__(409);

var _tabItem2 = _interopRequireDefault(_tabItem);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_tab2.default.Item = _tabItem2.default;

_tab2.default.TabPane = _configProvider2.default.config(_tabItem2.default, {
    transform: function transform(props, deprecated) {
        deprecated('Tab.TabPane', 'Tab.Item', 'Tab');
        return props;
    }
});

exports.default = _configProvider2.default.config(_tab2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('type' in props) {
            deprecated('type', 'shape', 'Tab');
            var _props = props,
                type = _props.type,
                others = (0, _objectWithoutProperties3.default)(_props, ['type']);

            props = (0, _extends3.default)({ shape: type }, others);
        }
        if ('resDirection' in props) {
            var _props2 = props,
                resDirection = _props2.resDirection,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['resDirection']);

            var excessMode = void 0;
            if (resDirection === 'horizontal') {
                deprecated('resDirection=horizontal', 'excessMode=slide', 'Tab');

                excessMode = 'slide';
            } else if (resDirection === 'vertical') {
                deprecated('resDirection=vertical', 'excessMode=dropdown', 'Tab');

                excessMode = 'dropdown';
            }
            props = (0, _extends3.default)({ excessMode: excessMode }, _others);
        }
        if ('tabBarExtraContent' in props) {
            deprecated('tabBarExtraContent', 'extra', 'Tab');

            var _props3 = props,
                tabBarExtraContent = _props3.tabBarExtraContent,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['tabBarExtraContent']);

            props = (0, _extends3.default)({ extra: tabBarExtraContent }, _others2);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _nav = __webpack_require__(403);

var _nav2 = _interopRequireDefault(_nav);

var _content = __webpack_require__(408);

var _content2 = _interopRequireDefault(_content);

var _utils = __webpack_require__(178);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

/** Tab */
var Tab = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Tab, _Component);

    function Tab(props, context) {
        (0, _classCallCheck3.default)(this, Tab);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.handleTriggerEvent = function (eventType, key) {
            var _this$props = _this.props,
                triggerType = _this$props.triggerType,
                onClick = _this$props.onClick,
                onChange = _this$props.onChange;

            if (triggerType === eventType) {
                onClick(key);
                _this.setActiveKey(key);
                if (_this.state.activeKey !== key) {
                    onChange(key);
                }
            }
        };

        _this.onNavKeyDown = function (e) {
            var keyCode = e.keyCode;
            var disableKeyboard = _this.props.disableKeyboard;

            if (disableKeyboard) {
                return;
            }

            if (keyCode >= _util.KEYCODE.LEFT && keyCode <= _util.KEYCODE.DOWN) {
                e.preventDefault();
            }

            var newKey = void 0;
            if (keyCode === _util.KEYCODE.RIGHT || keyCode === _util.KEYCODE.DOWN) {
                newKey = _this.getNextActiveKey(true);
                _this.handleTriggerEvent(_this.props.triggerType, newKey);
            } else if (keyCode === _util.KEYCODE.LEFT || keyCode === _util.KEYCODE.UP) {
                newKey = _this.getNextActiveKey(false);
                _this.handleTriggerEvent(_this.props.triggerType, newKey);
            }
        };

        _this.state = {
            activeKey: _this.getDefaultActiveKey(props)
        };
        return _this;
    }

    Tab.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.activeKey !== undefined && state.activeKey !== '' + props.activeKey) {
            return {
                activeKey: '' + props.activeKey
            };
        }

        return {};
    };

    Tab.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var preChildLen = prevProps.children && prevProps.children.length || 0;
        var curChildLen = this.props.children && this.props.children.length || 0;
        if (preChildLen !== 0 && curChildLen !== 0 && !('activeKey' in this.props) & !this.isActiveKeyExist(this.state.activeKey)) {
            var activeKey = this.getDefaultActiveKey(this.props);
            if (activeKey) {
                // eslint-disable-next-line react/no-did-update-set-state
                this.setState({
                    activeKey: activeKey
                });
            }
        }
    };

    Tab.prototype.getDefaultActiveKey = function getDefaultActiveKey(props) {
        var activeKey = props.activeKey === undefined ? props.defaultActiveKey : props.activeKey;

        if (activeKey === undefined) {
            _react2.default.Children.forEach(props.children, function (child, index) {
                if (activeKey !== undefined) return;
                if (_react2.default.isValidElement(child)) {
                    if (!child.props.disabled) {
                        activeKey = child.key || index;
                    }
                }
            });
        }

        return activeKey !== undefined ? '' + activeKey : undefined;
    };

    Tab.prototype.getNextActiveKey = function getNextActiveKey(isNext) {
        var _this2 = this;

        var children = [];
        _react2.default.Children.forEach(this.props.children, function (child) {
            if (_react2.default.isValidElement(child)) {
                if (!child.props.disabled) {
                    if (isNext) {
                        children.push(child);
                    } else {
                        children.unshift(child);
                    }
                }
            }
        });

        var length = children.length;
        var key = length && children[0].key;
        children.forEach(function (child, i) {
            if (child.key === _this2.state.activeKey) {
                if (i === length - 1) {
                    key = children[0].key;
                } else {
                    key = children[i + 1].key;
                }
            }
        });
        return key;
    };

    Tab.prototype.isActiveKeyExist = function isActiveKeyExist(activeKey) {
        var exist = false;
        _react2.default.Children.forEach(this.props.children, function (child, index) {
            if (exist) return;
            if (_react2.default.isValidElement(child)) {
                if (!child.props.disabled) {
                    var key = child.key || index;
                    if (activeKey === '' + key) {
                        exist = true;
                    }
                }
            }
        });
        return exist;
    };

    Tab.prototype.setActiveKey = function setActiveKey(key) {
        var activeKey = this.state.activeKey;

        // 如果 key 没变，或者受控状态下，则跳过

        if (key === activeKey || 'activeKey' in this.props) {
            return;
        }
        this.setState({
            activeKey: key
        });
    };

    Tab.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            animation = _props.animation,
            shape = _props.shape,
            size = _props.size,
            extra = _props.extra,
            excessMode = _props.excessMode,
            tabPosition = _props.tabPosition,
            tabRender = _props.tabRender,
            triggerType = _props.triggerType,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            popupProps = _props.popupProps,
            navStyle = _props.navStyle,
            navClassName = _props.navClassName,
            contentStyle = _props.contentStyle,
            contentClassName = _props.contentClassName,
            className = _props.className,
            onClose = _props.onClose,
            children = _props.children,
            rtl = _props.rtl,
            device = _props.device,
            locale = _props.locale,
            icons = _props.icons,
            showAdd = _props.showAdd,
            onAdd = _props.onAdd,
            addIcon = _props.addIcon,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'animation', 'shape', 'size', 'extra', 'excessMode', 'tabPosition', 'tabRender', 'triggerType', 'lazyLoad', 'unmountInactiveTabs', 'popupProps', 'navStyle', 'navClassName', 'contentStyle', 'contentClassName', 'className', 'onClose', 'children', 'rtl', 'device', 'locale', 'icons', 'showAdd', 'onAdd', 'addIcon']);
        var activeKey = this.state.activeKey;

        var tabs = (0, _utils.toArray)(children);
        var newPosition = tabPosition;
        if (rtl && ['left', 'right'].indexOf(tabPosition) >= 0) {
            newPosition = tabPosition === 'left' ? 'right' : 'left';
        }
        var classNames = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'tabs'] = true, _classnames[prefix + 'tabs-' + shape] = shape, _classnames[prefix + 'tabs-vertical'] = shape === 'wrapped' && ['left', 'right'].indexOf(tabPosition) >= 0, _classnames[prefix + 'tabs-scrollable'] = true, _classnames[prefix + 'tabs-' + newPosition] = shape === 'wrapped', _classnames['' + (prefix + size)] = size, _classnames), className);

        var navProps = {
            prefix: prefix,
            rtl: rtl,
            animation: animation,
            activeKey: activeKey,
            excessMode: excessMode,
            extra: extra,
            tabs: tabs,
            tabPosition: tabPosition,
            tabRender: tabRender,
            triggerType: triggerType,
            popupProps: popupProps,
            onClose: onClose,
            onTriggerEvent: this.handleTriggerEvent,
            onKeyDown: this.onNavKeyDown,
            style: navStyle,
            className: navClassName,
            locale: locale,
            icons: icons,
            showAdd: showAdd,
            addIcon: addIcon,
            onAdd: onAdd
        };

        var contentProps = {
            prefix: prefix,
            activeKey: activeKey,
            lazyLoad: lazyLoad,
            unmountInactiveTabs: unmountInactiveTabs,
            style: contentStyle,
            className: contentClassName
        };

        var tabChildren = [_react2.default.createElement(_nav2.default, (0, _extends3.default)({ key: 'tab-nav' }, navProps)), _react2.default.createElement(_content2.default, (0, _extends3.default)({ key: 'tab-content' }, contentProps), tabs)];

        if (tabPosition === 'bottom') {
            tabChildren.reverse();
        }

        return _react2.default.createElement('div', (0, _extends3.default)({ dir: rtl ? 'rtl' : undefined, className: classNames }, _util.obj.pickOthers(Tab.propTypes, others)), tabChildren);
    };

    return Tab;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    device: _propTypes2.default.oneOf(['tablet', 'desktop', 'phone']),
    /**
     * 被激活的选项卡的 key, 赋值则tab为受控组件, 用户无法切换
     */
    activeKey: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 初始化时被激活的选项卡的 key
     */
    defaultActiveKey: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 外观形态
     */
    shape: _propTypes2.default.oneOf(['pure', 'wrapped', 'text', 'capsule']),
    /**
     * 是否开启动效
     */
    animation: _propTypes2.default.bool,
    /**
     * 选项卡过多时的滑动模式
     */
    excessMode: _propTypes2.default.oneOf(['slide', 'dropdown']),
    /**
     * 导航选项卡的位置，只适用于包裹型（wrapped）选项卡
     */
    tabPosition: _propTypes2.default.oneOf(['top', 'bottom', 'left', 'right']),
    /**
     * 尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium']),
    /**
     * 激活选项卡的触发方式
     */
    triggerType: _propTypes2.default.oneOf(['hover', 'click']),
    /**
     * 是否延迟加载 TabItem 的内容, 默认开启, 即不提前渲染
     */
    lazyLoad: _propTypes2.default.bool,
    /**
     * 是否自动卸载未处于激活状态的选项卡
     */
    unmountInactiveTabs: _propTypes2.default.bool,
    /**
     * 导航条的自定义样式
     */
    navStyle: _propTypes2.default.object,
    /**
     * 导航条的自定义样式类
     */
    navClassName: _propTypes2.default.string,
    /**
     * 内容区容器的自定义样式
     */
    contentStyle: _propTypes2.default.object,
    /**
     * 内容区容器的自定义样式类
     */
    contentClassName: _propTypes2.default.string,
    /**
     * 导航栏附加内容
     */
    extra: _propTypes2.default.node,
    /**
     * 禁止键盘事件，设置后无法通过键盘的上下左右按键，切换当前选中的tab
     */
    disableKeyboard: _propTypes2.default.bool,
    /**
     * 点击单个选项卡时触发的回调
     */
    onClick: _propTypes2.default.func,
    /**
     * 选项卡发生切换时的事件回调
     * @param {String|Number} key 改变后的 key
     */
    onChange: _propTypes2.default.func,
    /**
     * 选项卡被关闭时的事件回调
     * @param {String|Number} key   关闭的选项卡的 key
     */
    onClose: _propTypes2.default.func,
    /**
     * 自定义选项卡模板渲染函数
     * @param {String} key 当前 Tab.Item 的 key 值
     * @param {Object} props 传给 Tab.Item 的所有属性键值对
     * @return {ReactNode} 返回自定义组件
     */
    tabRender: _propTypes2.default.func,
    /**
     * 弹层属性透传, 只有当 excessMode 为 dropdown 时生效
     */
    popupProps: _propTypes2.default.object,
    children: _propTypes2.default.any,
    className: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    /**
     * 自定义组件内 icon
     */
    icons: _propTypes2.default.shape({
        prev: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),
        next: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string]),
        dropdown: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.string])
    }),
    /**
     * 新增按钮
     */
    showAdd: _propTypes2.default.bool,
    /**
     * 新增的事件回调
     */
    onAdd: _propTypes2.default.func,
    /**
     * 自定义添加按钮
     */
    addIcon: _propTypes2.default.node
}, _class.defaultProps = {
    prefix: 'next-',
    shape: 'pure',
    size: 'medium',
    animation: true,
    tabPosition: 'top',
    excessMode: 'slide',
    triggerType: 'click',
    lazyLoad: true,
    unmountInactiveTabs: false,
    disableKeyboard: false,
    onClick: noop,
    onChange: noop,
    onClose: noop,
    locale: _zhCn2.default.Tab,
    icons: {}
}, _temp);
Tab.displayName = 'Tab';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Tab);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(404);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames4 = __webpack_require__(7);

var _classnames5 = _interopRequireDefault(_classnames4);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _animate = __webpack_require__(21);

var _animate2 = _interopRequireDefault(_animate);

var _util = __webpack_require__(4);

var _utils = __webpack_require__(178);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var floatRight = { float: 'right', zIndex: 1 };
var floatLeft = { float: 'left', zIndex: 1 };
var iconTypeMap = {
    dropdown: 'arrow-down',
    prev: 'arrow-left',
    next: 'arrow-right'
};
var Popup = _overlay2.default.Popup;
var Nav = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Nav, _React$Component);

    function Nav(props, context) {
        (0, _classCallCheck3.default)(this, Nav);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

        _this.removeTab = function (key, e) {
            e && e.stopPropagation(); // stop bubble, so that it won't trigger upstream listener
            _this.props.onClose(key);
        };

        _this.debounceSetSideBtn = function () {
            clearTimeout(_this.slideTimer);
            _this.slideTimer = setTimeout(function () {
                _this.setSlideBtn();
            }, 100);
        };

        _this.onScroll = function () {
            // 每次滚动时更新btn状态
            _this.debounceSetSideBtn();
        };

        _this.onCloseKeyDown = function (key, e) {
            if (e.keyCode === _util.KEYCODE.ENTER) {
                e.stopPropagation();
                e.preventDefault();
                _this.props.onClose(key);
            }
        };

        _this.defaultTabTemplateRender = function (key, _ref) {
            var title = _ref.title,
                closeable = _ref.closeable;
            var _this$props = _this.props,
                locale = _this$props.locale,
                prefix = _this$props.prefix;

            var tail = closeable ? _react2.default.createElement(_icon2.default, {
                'aria-label': locale.closeAriaLabel,
                type: 'close',
                tabIndex: '0',
                onKeyDown: function onKeyDown(e) {
                    return _this.onCloseKeyDown(key, e);
                },
                onClick: function onClick(e) {
                    return _this.removeTab(key, e);
                },
                className: prefix + 'tabs-tab-close'
            }) : null;
            return _react2.default.createElement('div', { className: prefix + 'tabs-tab-inner' }, title, tail);
        };

        _this.scrollToActiveTab = function () {
            if (_this.activeTab && ['slide', 'dropdown'].includes(_this.props.excessMode)) {
                var activeTabWH = (0, _utils.getOffsetWH)(_this.activeTab);
                var wrapperWH = (0, _utils.getOffsetWH)(_this.wrapper);
                var activeTabOffset = (0, _utils.getOffsetLT)(_this.activeTab);
                var wrapperOffset = (0, _utils.getOffsetLT)(_this.wrapper);
                var target = _this.offset;

                if (activeTabOffset + activeTabWH > wrapperOffset + wrapperWH + 1 || activeTabOffset < wrapperOffset) {
                    _this.setOffset(_this.offset + wrapperOffset - activeTabOffset, true, true);
                    return;
                }
                _this.setOffset(target, true, true);
            }
        };

        _this.onPrevClick = function () {
            var wrapperWH = (0, _utils.getOffsetWH)(_this.wrapper);
            _this.setOffset(_this.offset + wrapperWH, true, false);
        };

        _this.onNextClick = function () {
            var wrapperWH = (0, _utils.getOffsetWH)(_this.wrapper);
            _this.setOffset(_this.offset - wrapperWH, true, false);
        };

        _this.onSelectMenuItem = function (keys) {
            var _this$props2 = _this.props,
                onTriggerEvent = _this$props2.onTriggerEvent,
                triggerType = _this$props2.triggerType;

            onTriggerEvent(triggerType, keys[0]);
        };

        _this.onWindowResized = function () {
            if (_this.updateTimer) {
                clearTimeout(_this.updateTimer);
            }

            _this.updateTimer = setTimeout(function () {
                _this.setSlideBtn();
                _this.getDropdownItems(_this.props);
            }, 100);
        };

        _this.navRefHandler = function (ref) {
            _this.nav = (0, _reactDom.findDOMNode)(ref);
        };

        _this.wrapperRefHandler = function (ref) {
            _this.wrapper = ref;
        };

        _this.scrollerRefHandler = function (ref) {
            _this.scroller = ref;
        };

        _this.navbarRefHandler = function (ref) {
            _this.navbar = ref;
        };

        _this.activeTabRefHandler = function (ref) {
            _this.activeTab = ref;
        };

        _this.prevBtnHandler = function (ref) {
            _this.prevBtn = (0, _reactDom.findDOMNode)(ref);
        };

        _this.nextBtnHandler = function (ref) {
            _this.nextBtn = (0, _reactDom.findDOMNode)(ref);
        };

        _this.state = {
            showBtn: false,
            dropdownTabs: []
        };
        return _this;
    }

    /**
     * 实时获取滚动位置
     */

    Nav.prototype.componentDidMount = function componentDidMount() {
        if (!this.props.animation) {
            this.initialSettings();
        }

        _util.events.on(window, 'resize', this.onWindowResized);
    };

    Nav.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var _this2 = this;

        // 此处通过延时处理，屏蔽动画带来的定位不准确问题（由于要支持ie9，因此无法使用transitionend）
        clearTimeout(this.scrollTimer);
        this.scrollTimer = setTimeout(function () {
            _this2.scrollToActiveTab();
            _this2.setSlideBtn();
        }, 410); // transition-duration is set to be .4s, wait for the transition finishes before re-calc

        // 更改tabs后如果有dropdown属性，应该重新执行getDropdownItems函数更新dropdown数据
        if (this.props.excessMode === 'dropdown') {
            if (!(0, _utils.tabsArrayShallowEqual)(this.props.tabs, prevProps.tabs)) {
                this.getDropdownItems(this.props);
            }
        }
    };

    Nav.prototype.componentWillUnmount = function componentWillUnmount() {
        _util.events.off(window, 'resize', this.onWindowResized);
    };

    Nav.prototype.initialSettings = function initialSettings() {
        this.setSlideBtn();
        this.getDropdownItems(this.props);
    };

    /**
     * The key method about move
     * @param {number} target position to slide to
     * @param {bool} checkSlideBtn need to check the slide button status or not
     * @param {bool} setActive need to check the active status or not
     */

    Nav.prototype.setOffset = function setOffset(target) {
        var checkSlideBtn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        var setActive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var _props = this.props,
            tabPosition = _props.tabPosition,
            rtl = _props.rtl;

        var navWH = (0, _utils.getOffsetWH)(this.nav, tabPosition);
        var wrapperWH = (0, _utils.getOffsetWH)(this.wrapper);

        // target should not be great than 0, i.e. should not over slide to left-most
        target = target >= 0 ? 0 : target;
        // when need to slide, should not slide to exceed right-most
        target = target <= wrapperWH - navWH && wrapperWH - navWH < 0 ? wrapperWH - navWH : target;

        var relativeOffset = target - this.offset;
        if (this.activeTab && this.props.excessMode === 'slide' && setActive) {
            var activeTabWH = (0, _utils.getOffsetWH)(this.activeTab);
            var activeTabOffset = (0, _utils.getOffsetLT)(this.activeTab) + relativeOffset;
            var wrapperOffset = (0, _utils.getOffsetLT)(this.wrapper);
            target = this._adjustTarget({
                wrapperOffset: wrapperOffset,
                wrapperWH: wrapperWH,
                activeTabWH: activeTabWH,
                activeTabOffset: activeTabOffset,
                rtl: rtl,
                target: target
            });
        }

        var scaleRate = 1;

        if (this.nav && this.nav.offsetWidth) {
            scaleRate = (0, _utils.getOffsetWH)(this.nav) / this.nav.offsetWidth;
        }

        var _ov = target / scaleRate;
        var offsetValue = isNaN(_ov) ? target : _ov;

        if (this.offset !== target && this.nav) {
            var divScroll = this.nav.parentElement;

            if (tabPosition === 'left' || tabPosition === 'right') {
                divScroll.scrollTo({ top: -offsetValue, left: 0, behavior: 'smooth' });
            } else if (!this.props.rtl) {
                divScroll.scrollTo({ top: 0, left: -offsetValue, behavior: 'smooth' });
            } else {
                divScroll.scrollTo({ top: 0, left: offsetValue, behavior: 'smooth' });
            }

            if (checkSlideBtn) {
                this.setSlideBtn();
            }
        }
    };

    Nav.prototype._adjustTarget = function _adjustTarget(_ref2) {
        var wrapperOffset = _ref2.wrapperOffset,
            wrapperWH = _ref2.wrapperWH,
            activeTabWH = _ref2.activeTabWH,
            activeTabOffset = _ref2.activeTabOffset,
            rtl = _ref2.rtl,
            target = _ref2.target;

        if (
        // active tab covers wrapper right edge
        wrapperOffset + wrapperWH < activeTabOffset + activeTabWH && activeTabOffset < wrapperOffset + wrapperWH) {
            if (rtl) {
                target += activeTabOffset + activeTabWH - (wrapperOffset + wrapperWH); // Move more to make active tab totally in visible zone
            } else {
                target -= activeTabOffset + activeTabWH - (wrapperOffset + wrapperWH) + 1;
            }

            return target;
        }
        if (
        // active tab covers wrapper left edge
        wrapperOffset < activeTabOffset + activeTabWH && activeTabOffset < wrapperOffset) {
            if (rtl) {
                target -= wrapperOffset - activeTabOffset + 1;
            } else {
                target += wrapperOffset - activeTabOffset;
            }
            return target;
        }
        return target;
    };

    Nav.prototype._setBtnStyle = function _setBtnStyle(prev, next) {
        if (this.prevBtn && this.nextBtn) {
            var cls = 'disabled';
            this.prevBtn.disabled = !prev;
            this.nextBtn.disabled = !next;
            if (prev) {
                _util.dom.removeClass(this.prevBtn, cls);
            } else {
                _util.dom.addClass(this.prevBtn, cls);
            }
            if (next) {
                _util.dom.removeClass(this.nextBtn, cls);
            } else {
                _util.dom.addClass(this.nextBtn, cls);
            }
        }
    };

    Nav.prototype.setSlideBtn = function setSlideBtn() {
        var tabPosition = this.props.tabPosition;

        // TEMP: 这里会受 Animate 影响，re-render 过程中 this.nav 实际上指向的是上次的 tabList 元素，建议暂时关闭 animation 解决

        var navWH = (0, _utils.getOffsetWH)(this.nav, tabPosition);
        var wrapperWH = (0, _utils.getOffsetWH)(this.wrapper, tabPosition);
        // 这里统一向下取整再做比较，否则会因为小数点精度问题导致无法对齐
        var minOffset = Math.floor(wrapperWH - navWH);
        var offset = Math.floor(this.offset);
        var next = void 0;
        var prev = void 0;
        if (minOffset >= 0 || navWH <= wrapperWH) {
            next = false;
            prev = false;
            this.setOffset(0, false); // no need to check slide again since this call is invoked from inside setSlideBtn
        } else if (offset < 0 && offset <= minOffset) {
            prev = true;
            next = false;
        } else if (offset >= 0) {
            prev = false;
            next = true;
        } else {
            prev = true;
            next = true;
        }

        if ((prev || next) !== this.state.showBtn) {
            this.setState({
                showBtn: prev || next
            });
        } else {
            this._setBtnStyle(prev, next);
        }
    };

    Nav.prototype.getDropdownItems = function getDropdownItems(_ref3) {
        var excessMode = _ref3.excessMode,
            tabs = _ref3.tabs;

        if (excessMode !== 'dropdown') {
            return;
        }

        var wrapperWidth = this.wrapper.offsetWidth;
        var childNodes = this.nav.childNodes;

        var index = void 0;
        var tabsWidth = 0;
        for (index = 0; index < tabs.length; index++) {
            tabsWidth += childNodes[index].offsetWidth;
            if (tabsWidth > wrapperWidth) {
                break;
            }
        }

        if (index === tabs.length) {
            this.setState({
                dropdownTabs: []
            });
        } else {
            this.setState({
                dropdownTabs: tabs
            });
        }
    };

    Nav.prototype.renderTabList = function renderTabList(props, hideAdd) {
        var _this3 = this;

        var prefix = props.prefix,
            tabs = props.tabs,
            activeKey = props.activeKey,
            tabRender = props.tabRender,
            showAdd = props.showAdd,
            onAdd = props.onAdd,
            addIcon = props.addIcon;

        var tabTemplateFn = tabRender || this.defaultTabTemplateRender;

        var rst = [];
        _react2.default.Children.forEach(tabs, function (child) {
            var _classnames;

            var _child$props = child.props,
                disabled = _child$props.disabled,
                className = _child$props.className,
                onClick = _child$props.onClick,
                onMouseEnter = _child$props.onMouseEnter,
                onMouseLeave = _child$props.onMouseLeave,
                style = _child$props.style;

            var active = activeKey === child.key;
            var cls = (0, _classnames5.default)((_classnames = {}, _classnames[prefix + 'tabs-tab'] = true, _classnames.disabled = disabled, _classnames.active = active, _classnames), className);

            var events = {};

            if (!disabled) {
                events = {
                    onClick: _this3.onNavItemClick.bind(_this3, child.key, onClick),
                    onMouseEnter: _this3.onNavItemMouseEnter.bind(_this3, child.key, onMouseEnter),
                    onMouseLeave: _this3.onNavItemMouseLeave.bind(_this3, child.key, onMouseLeave)
                };
            }

            var dataProps = _util.obj.pickAttrsWith(child.props, 'data-');

            rst.push(_react2.default.createElement('li', (0, _extends3.default)({}, dataProps, {
                role: 'tab',
                key: child.key,
                ref: active ? _this3.activeTabRefHandler : null,
                'aria-hidden': disabled ? 'true' : 'false',
                'aria-selected': active ? 'true' : 'false',
                tabIndex: active ? 0 : -1,
                className: cls,
                style: style
            }, events), tabTemplateFn(child.key, child.props)));
        });

        if (!hideAdd && showAdd) {
            rst.push(_react2.default.createElement('li', { role: 'button', className: prefix + 'tabs-tab ' + prefix + 'tabs-add', onClick: onAdd, key: 'add' }, _react2.default.createElement('div', { className: prefix + 'tabs-tab-inner' }, addIcon ? addIcon : _react2.default.createElement(_icon2.default, { type: 'add' }))));
        }
        return rst;
    };

    Nav.prototype.onNavItemClick = function onNavItemClick(key, callback, e) {
        this.props.onTriggerEvent(_utils.triggerEvents.CLICK, key);
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.onNavItemMouseEnter = function onNavItemMouseEnter(key, callback, e) {
        this.props.onTriggerEvent(_utils.triggerEvents.HOVER, key);
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.onNavItemMouseLeave = function onNavItemMouseLeave(key, callback, e) {
        if (callback) {
            return callback(key, e);
        }
    };

    Nav.prototype.getIcon = function getIcon(type) {
        var _props2 = this.props,
            prefix = _props2.prefix,
            icons = _props2.icons,
            rtl = _props2.rtl;

        var iconType = iconTypeMap[type];
        var icon = _react2.default.createElement(_icon2.default, { type: iconType, rtl: rtl, className: prefix + 'tab-icon-' + type });
        if (icons[type]) {
            icon = typeof icons[type] === 'string' ? _react2.default.createElement(_icon2.default, { rtl: rtl, type: icons[type] }) : icons[type];
        }

        return icon;
    };

    Nav.prototype.renderDropdownTabs = function renderDropdownTabs() {
        var _this4 = this;

        var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        if (!tabs.length) {
            return null;
        }

        var _props3 = this.props,
            prefix = _props3.prefix,
            activeKey = _props3.activeKey,
            triggerType = _props3.triggerType,
            popupProps = _props3.popupProps,
            rtl = _props3.rtl;

        var dropdownIcon = this.getIcon('dropdown');

        var trigger = _react2.default.createElement('button', { className: prefix + 'tabs-btn-down' }, dropdownIcon);

        return _react2.default.createElement(Popup, (0, _extends3.default)({
            key: 'down',
            rtl: rtl,
            triggerType: triggerType,
            trigger: trigger,
            container: function container(target) {
                return target.parentNode;
            },
            className: prefix + 'tabs-bar-popup'
        }, popupProps), _react2.default.createElement(_menu2.default, { rtl: rtl, selectedKeys: [activeKey], onSelect: this.onSelectMenuItem, selectMode: 'single' }, tabs.map(function (tab) {
            var _tab$props = tab.props,
                disabled = _tab$props.disabled,
                onClick = _tab$props.onClick,
                onMouseEnter = _tab$props.onMouseEnter,
                onMouseLeave = _tab$props.onMouseLeave;

            var events = {};
            if (!disabled) {
                events = {
                    onClick: _this4.onNavItemClick.bind(_this4, tab.key, onClick),
                    onMouseEnter: _this4.onNavItemMouseEnter.bind(_this4, tab.key, onMouseEnter),
                    onMouseLeave: _this4.onNavItemMouseLeave.bind(_this4, tab.key, onMouseLeave)
                };
            }
            return _react2.default.createElement(_menu2.default.Item, (0, _extends3.default)({ key: tab.key }, events), tab.props.title);
        })));
    };

    Nav.prototype.render = function render() {
        var _classnames2, _classnames3;

        var _props4 = this.props,
            prefix = _props4.prefix,
            tabPosition = _props4.tabPosition,
            excessMode = _props4.excessMode,
            extra = _props4.extra,
            onKeyDown = _props4.onKeyDown,
            animation = _props4.animation,
            style = _props4.style,
            className = _props4.className,
            showAdd = _props4.showAdd,
            onAdd = _props4.onAdd,
            addIcon = _props4.addIcon,
            rtl = _props4.rtl;

        var state = this.state;
        var nextButton = void 0;
        var prevButton = void 0;
        var restButton = void 0;

        var showNextPrev = state.showBtn;

        if (excessMode === 'dropdown' && showNextPrev && state.dropdownTabs.length) {
            restButton = this.renderDropdownTabs(state.dropdownTabs);
            prevButton = null;
            nextButton = null;
        } else if (showNextPrev) {
            var prevIcon = this.getIcon('prev');
            prevButton = _react2.default.createElement('button', {
                onClick: this.onPrevClick,
                className: prefix + 'tabs-btn-prev',
                ref: this.prevBtnHandler,
                type: 'button',
                key: 'prev'
            }, prevIcon);

            var nextIcon = this.getIcon('next');

            nextButton = _react2.default.createElement('button', {
                onClick: this.onNextClick,
                className: prefix + 'tabs-btn-next',
                ref: this.nextBtnHandler,
                type: 'button',
                key: 'next'
            }, nextIcon);
            restButton = null;
        } else {
            nextButton = null;
            prevButton = null;
            restButton = null;
        }

        var containerCls = (0, _classnames5.default)((_classnames2 = {}, _classnames2[prefix + 'tabs-nav-container'] = true, _classnames2[prefix + 'tabs-nav-container-scrolling'] = showNextPrev, _classnames2[prefix + 'tabs-show-add'] = showAdd, _classnames2));

        var hasExtra = restButton || prevButton || nextButton;
        var navCls = prefix + 'tabs-nav';
        var tabList = this.renderTabList(this.props, hasExtra);
        var wrapCls = (0, _classnames5.default)((_classnames3 = {}, _classnames3[prefix + 'tabs-nav-wrap'] = true, _classnames3[prefix + 'tabs-nav-has-add'] = showAdd, _classnames3));

        var container = _react2.default.createElement('div', { className: containerCls, onKeyDown: onKeyDown, key: 'nav-container' }, _react2.default.createElement('div', { className: prefix + 'tabs-nav-wrap', ref: this.wrapperRefHandler }, _react2.default.createElement('div', { className: prefix + 'tabs-nav-scroll', ref: this.scrollerRefHandler, onScroll: this.onScroll }, animation ? _react2.default.createElement(_animate2.default, {
            role: 'tablist',
            'aria-multiselectable': false,
            component: 'ul',
            className: navCls,
            animation: navCls,
            singleMode: false,
            ref: this.navRefHandler,
            afterAppear: this.initialSettings.bind(this)
        }, tabList) : _react2.default.createElement('ul', {
            role: 'tablist',
            className: navCls + ' ' + prefix + 'disable-animation',
            ref: this.navRefHandler
        }, tabList))), showAdd && hasExtra ? _react2.default.createElement('div', { className: navCls + '-operations' }, prevButton, nextButton, restButton, _react2.default.createElement('li', { className: prefix + 'tabs-tab ' + prefix + 'tabs-add', onClick: onAdd, key: 'add' }, _react2.default.createElement('div', { className: prefix + 'tabs-tab-inner' }, addIcon ? addIcon : _react2.default.createElement(_icon2.default, { type: 'add' })))) : [prevButton, nextButton, restButton]);

        var navChildren = [container];

        if (extra) {
            var extraProps = {
                className: prefix + 'tabs-nav-extra',
                key: 'nav-extra'
            };
            if (tabPosition === 'top' || tabPosition === 'bottom') {
                var _style = rtl ? floatLeft : floatRight;
                navChildren.unshift(_react2.default.createElement('div', (0, _extends3.default)({}, extraProps, { style: _style }), extra));
            } else {
                navChildren.push(_react2.default.createElement('div', extraProps, extra));
            }
        }

        var navbarCls = (0, _classnames5.default)(prefix + 'tabs-bar', className);

        return _react2.default.createElement('div', { className: navbarCls, style: style, ref: this.navbarRefHandler }, navChildren);
    };

    (0, _createClass3.default)(Nav, [{
        key: 'offset',
        get: function get() {
            var scroller = this.scroller;
            if (!scroller) {
                return 0;
            }
            var scrollLeft = scroller.scrollLeft;
            return scrollLeft > 0 ? -scrollLeft : scrollLeft;
        }
    }]);
    return Nav;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    animation: _propTypes2.default.bool,
    activeKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    excessMode: _propTypes2.default.string,
    extra: _propTypes2.default.any,
    tabs: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    tabPosition: _propTypes2.default.string,
    tabRender: _propTypes2.default.func,
    triggerType: _propTypes2.default.string,
    popupProps: _propTypes2.default.object,
    onTriggerEvent: _propTypes2.default.func,
    onKeyDown: _propTypes2.default.func,
    onClose: _propTypes2.default.func,
    style: _propTypes2.default.object,
    className: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    icons: _propTypes2.default.object
}, _temp);
Nav.displayName = 'Nav';
exports.default = Nav;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(405);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(406), __esModule: true };

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(407);
var $Object = __webpack_require__(26).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(32);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(27), 'Object', { defineProperty: __webpack_require__(28).f });


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var TabContent = (_temp = _class = function (_PureComponent) {
    (0, _inherits3.default)(TabContent, _PureComponent);

    function TabContent() {
        (0, _classCallCheck3.default)(this, TabContent);
        return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
    }

    TabContent.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            activeKey = _props.activeKey,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            children = _props.children,
            className = _props.className,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'activeKey', 'lazyLoad', 'unmountInactiveTabs', 'children', 'className']);

        var formatChildren = [];
        _react2.default.Children.forEach(children, function (child) {
            /* eslint-disable eqeqeq */
            var active = activeKey == child.key;
            formatChildren.push(_react2.default.cloneElement(child, {
                prefix: prefix,
                active: active,
                lazyLoad: lazyLoad,
                unmountInactiveTabs: unmountInactiveTabs
            }));
        });

        var classNames = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'tabs-content'] = true, _classnames), className);

        return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: classNames }), formatChildren);
    };

    return TabContent;
}(_react.PureComponent), _class.propTypes = {
    prefix: _propTypes2.default.string,
    activeKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    lazyLoad: _propTypes2.default.bool,
    children: _propTypes2.default.any
}, _temp);
exports.default = TabContent;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _reactLifecyclesCompat = __webpack_require__(11);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/** Tab.Item */
var TabItem = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(TabItem, _React$Component);

    function TabItem() {
        (0, _classCallCheck3.default)(this, TabItem);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    TabItem.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            prefix = _props.prefix,
            active = _props.active,
            lazyLoad = _props.lazyLoad,
            unmountInactiveTabs = _props.unmountInactiveTabs,
            children = _props.children;

        this._actived = this._actived || active;
        if (lazyLoad && !this._actived) {
            return null;
        }

        if (unmountInactiveTabs && !active) {
            return null;
        }

        var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'tabs-tabpane'] = true, _classnames['' + (active ? 'active' : 'hidden')] = true, _classnames));

        return _react2.default.createElement('div', { role: 'tabpanel', 'aria-hidden': active ? 'false' : 'true', className: cls }, children);
    };

    return TabItem;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    /**
     * 选项卡标题
     */
    title: _propTypes2.default.node,
    /**
     * 单个选项卡是否可关闭
     */
    closeable: _propTypes2.default.bool,
    /**
     * 选项卡是否被禁用
     */
    disabled: _propTypes2.default.bool,
    active: _propTypes2.default.bool,
    lazyLoad: _propTypes2.default.bool,
    unmountInactiveTabs: _propTypes2.default.bool,
    children: _propTypes2.default.any
}, _class.defaultProps = {
    prefix: 'next-',
    closeable: false
}, _temp);
TabItem.displayName = 'TabItem';
exports.default = (0, _reactLifecyclesCompat.polyfill)(TabItem);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _base = __webpack_require__(411);

var _base2 = _interopRequireDefault(_base);

var _tree = __webpack_require__(416);

var _tree2 = _interopRequireDefault(_tree);

var _fixed = __webpack_require__(419);

var _fixed2 = _interopRequireDefault(_fixed);

var _selection = __webpack_require__(420);

var _selection2 = _interopRequireDefault(_selection);

var _expanded = __webpack_require__(421);

var _expanded2 = _interopRequireDefault(_expanded);

var _virtual = __webpack_require__(422);

var _virtual2 = _interopRequireDefault(_virtual);

var _lock = __webpack_require__(424);

var _lock2 = _interopRequireDefault(_lock);

var _newLock = __webpack_require__(425);

var _newLock2 = _interopRequireDefault(_newLock);

var _list = __webpack_require__(426);

var _list2 = _interopRequireDefault(_list);

var _sticky = __webpack_require__(429);

var _sticky2 = _interopRequireDefault(_sticky);

var _listHeader = __webpack_require__(187);

var _listHeader2 = _interopRequireDefault(_listHeader);

var _listFooter = __webpack_require__(188);

var _listFooter2 = _interopRequireDefault(_listFooter);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var ieVersion = _util.env.ieVersion;

var ORDER_LIST = [_fixed2.default, _lock2.default, _selection2.default, _expanded2.default, _virtual2.default, _tree2.default, _list2.default, _sticky2.default];
var Table = ORDER_LIST.reduce(function (ret, current) {
    ret = current(ret);
    return ret;
}, _base2.default);

_lock2.default._typeMark = 'lock';
_expanded2.default._typeMark = 'expanded';
_fixed2.default._typeMark = 'fixed';

var StickyLockTable = ORDER_LIST.reduce(function (ret, current) {
    var newLock = !ieVersion;
    if (current._typeMark === 'lock') {
        ret = newLock ? (0, _newLock2.default)(ret) : (0, _lock2.default)(ret);
    } else if (current._typeMark === 'expanded') {
        ret = newLock ? (0, _expanded2.default)(ret, true) : (0, _expanded2.default)(ret);
    } else if (current._typeMark === 'fixed') {
        ret = newLock ? (0, _fixed2.default)(ret, true) : (0, _fixed2.default)(ret);
    } else {
        ret = current(ret);
    }
    return ret;
}, _base2.default);

Table.Base = _base2.default;
Table.fixed = _fixed2.default;
Table.lock = _lock2.default;
Table.selection = _selection2.default;
Table.expanded = _expanded2.default;
Table.tree = _tree2.default;
Table.virtual = _virtual2.default;
Table.list = _list2.default;
Table.sticky = _sticky2.default;

Table.GroupHeader = _listHeader2.default;
Table.GroupFooter = _listFooter2.default;

Table.StickyLock = _configProvider2.default.config(StickyLockTable, {
    componentName: 'Table'
});

exports.default = _configProvider2.default.config(Table, {
    componentName: 'Table',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        // fix https://github.com/alibaba-fusion/next/issues/4062
        if ('columns' in props && typeof props.columns !== 'undefined') {
            var _props = props,
                columns = _props.columns,
                others = (0, _objectWithoutProperties3.default)(_props, ['columns']);

            var newColumns = [].concat(columns);

            props = (0, _extends3.default)({
                columns: newColumns
            }, others);
        }

        if ('expandedRowKeys' in props) {
            deprecated('expandedRowKeys', 'openRowKeys', 'Table');

            var _props2 = props,
                expandedRowKeys = _props2.expandedRowKeys,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['expandedRowKeys']);

            props = (0, _extends3.default)({ openRowKeys: expandedRowKeys }, _others);
        }
        if ('onExpandedChange' in props) {
            deprecated('onExpandedChange', 'onRowOpen', 'Table');

            var _props3 = props,
                onExpandedChange = _props3.onExpandedChange,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['onExpandedChange']);

            props = (0, _extends3.default)({ onRowOpen: onExpandedChange }, _others2);
        }
        if ('isLoading' in props) {
            deprecated('isLoading', 'loading', 'Table');

            var _props4 = props,
                isLoading = _props4.isLoading,
                _others3 = (0, _objectWithoutProperties3.default)(_props4, ['isLoading']);

            props = (0, _extends3.default)({ loading: isLoading }, _others3);
        }
        if ('indentSize' in props) {
            deprecated('indentSize', 'indent', 'Table');

            var _props5 = props,
                indentSize = _props5.indentSize,
                _others4 = (0, _objectWithoutProperties3.default)(_props5, ['indentSize']);

            props = (0, _extends3.default)({ indent: indentSize }, _others4);
        }
        if ('optimization' in props) {
            deprecated('optimization', 'pure', 'Table');

            var _props6 = props,
                optimization = _props6.optimization,
                _others5 = (0, _objectWithoutProperties3.default)(_props6, ['optimization']);

            props = (0, _extends3.default)({ pure: optimization }, _others5);
        }

        if ('getRowClassName' in props) {
            deprecated('getRowClassName', 'getRowProps', 'Table');

            var _props7 = props,
                getRowClassName = _props7.getRowClassName,
                getRowProps = _props7.getRowProps,
                _others6 = (0, _objectWithoutProperties3.default)(_props7, ['getRowClassName', 'getRowProps']);

            if (getRowClassName) {
                var newGetRowProps = function newGetRowProps() {
                    return (0, _extends3.default)({
                        className: getRowClassName.apply(undefined, arguments)
                    }, getRowProps ? getRowProps.apply(undefined, arguments) : {});
                };

                props = (0, _extends3.default)({ getRowProps: newGetRowProps }, _others6);
            } else {
                props = (0, _extends3.default)({ getRowProps: getRowProps }, _others6);
            }
        }

        if ('getRowProps' in props) {
            deprecated('getRowProps', 'rowProps', 'Table in 1.15.0');

            var _props8 = props,
                _getRowProps = _props8.getRowProps,
                _others7 = (0, _objectWithoutProperties3.default)(_props8, ['getRowProps']);

            props = (0, _extends3.default)({ rowProps: _getRowProps }, _others7);
        }

        if ('getCellProps' in props) {
            deprecated('getCellProps', 'cellProps', 'Table in 1.15.0');

            var _props9 = props,
                getCellProps = _props9.getCellProps,
                _others8 = (0, _objectWithoutProperties3.default)(_props9, ['getCellProps']);

            props = (0, _extends3.default)({ cellProps: getCellProps }, _others8);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(13);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _shallowElementEquals = __webpack_require__(100);

var _shallowElementEquals2 = _interopRequireDefault(_shallowElementEquals);

var _reactLifecyclesCompat = __webpack_require__(11);

var _loading = __webpack_require__(98);

var _loading2 = _interopRequireDefault(_loading);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _body = __webpack_require__(62);

var _body2 = _interopRequireDefault(_body);

var _header = __webpack_require__(179);

var _header2 = _interopRequireDefault(_header);

var _wrapper = __webpack_require__(414);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _row = __webpack_require__(63);

var _row2 = _interopRequireDefault(_row);

var _cell = __webpack_require__(64);

var _cell2 = _interopRequireDefault(_cell);

var _filter = __webpack_require__(180);

var _filter2 = _interopRequireDefault(_filter);

var _sort = __webpack_require__(181);

var _sort2 = _interopRequireDefault(_sort);

var _column = __webpack_require__(101);

var _column2 = _interopRequireDefault(_column);

var _columnGroup = __webpack_require__(415);

var _columnGroup2 = _interopRequireDefault(_columnGroup);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Children = _react2.default.Children,
    noop = function noop() {};

//<Table>
//    <Table.Column/>
//    <Table.ColumnGroup>
//      <Table.Column/>
//      <Table.Column/>
//    </Table.ColumnGroup>
//</Table>

/** Table */
var Table = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Table, _React$Component);

    function Table(props, context) {
        (0, _classCallCheck3.default)(this, Table);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

        _this.state = {
            sort: _this.props.sort || {}
        };

        _this.onSort = function (dataIndex, order, sort) {
            if (typeof _this.props.sort === 'undefined') {
                _this.setState({
                    sort: sort
                }, function () {
                    _this.props.onSort(dataIndex, order, sort);
                });
            } else {
                _this.props.onSort(dataIndex, order, sort);
            }
        };

        _this.onFilter = function (filterParams) {
            _this.props.onFilter(filterParams);
        };

        _this.onResizeChange = function (dataIndex, value) {
            _this.props.onResizeChange(dataIndex, value);
        };

        _this.getResizeProxyDomRef = function (resizeProxyDom) {
            if (!resizeProxyDom) {
                return _this.resizeProxyDomRef;
            }
            _this.resizeProxyDomRef = resizeProxyDom;
        };

        _this.getWrapperRef = function (wrapper) {
            if (!wrapper) {
                return _this.wrapper;
            }
            _this.wrapper = wrapper;
        };

        _this.getAffixRef = function (affixRef) {
            if (!affixRef) {
                return _this.affixRef;
            }
            _this.affixRef = affixRef;
        };

        _this.getHeaderCellRef = function (i, j, cell) {
            var cellRef = 'header_cell_' + i + '_' + j;
            if (!cell) {
                return _this[cellRef];
            }
            _this[cellRef] = cell;
        };

        _this.getRowRef = function (i, row) {
            var rowRef = 'row_' + i;
            if (!row) {
                return _this[rowRef];
            }
            _this[rowRef] = row;
        };

        _this.getCellRef = function (i, j, cell) {
            var cellRef = 'cell_' + i + '_' + j;
            if (!cell) {
                return _this[cellRef];
            }
            _this[cellRef] = cell;
        };

        _this.handleColHoverClass = function (rowIndex, colIndex, isAdd) {
            var crossline = _this.props.crossline;

            var funcName = isAdd ? 'addClass' : 'removeClass';
            if (crossline) {
                _this.props.entireDataSource.forEach(function (val, index) {
                    try {
                        // in case of finding an unmounted component due to cached data
                        // need to clear refs of this.tableInc when dataSource Changed
                        // in virtual table
                        var currentCol = (0, _reactDom.findDOMNode)(_this.getCellRef(index, colIndex));
                        currentCol && _util.dom[funcName](currentCol, 'hovered');
                    } catch (error) {
                        return null;
                    }
                });
            }
        };

        _this.findEventTarget = function (e) {
            var prefix = _this.props.prefix;

            var target = _util.dom.getClosest(e.target, 'td.' + prefix + 'table-cell');
            var colIndex = target && target.getAttribute('data-next-table-col');
            var rowIndex = target && target.getAttribute('data-next-table-row');

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of this.tableInc when dataSource Changed
                // in virtual table
                var currentCol = (0, _reactDom.findDOMNode)(_this.getCellRef(rowIndex, colIndex));
                if (currentCol === target) {
                    return {
                        colIndex: colIndex,
                        rowIndex: rowIndex
                    };
                }
            } catch (error) {
                return {};
            }

            return {};
        };

        _this.onBodyMouseOver = function (e) {
            var crossline = _this.props.crossline;

            if (!crossline) {
                return;
            }

            var _this$findEventTarget = _this.findEventTarget(e),
                colIndex = _this$findEventTarget.colIndex,
                rowIndex = _this$findEventTarget.rowIndex;
            // colIndex, rowIndex are string


            if (!colIndex || !rowIndex) {
                return;
            }
            _this.handleColHoverClass(rowIndex, colIndex, true);
            _this.colIndex = colIndex;
            _this.rowIndex = rowIndex;
        };

        _this.onBodyMouseOut = function (e) {
            var crossline = _this.props.crossline;

            if (!crossline) {
                return;
            }

            var _this$findEventTarget2 = _this.findEventTarget(e),
                colIndex = _this$findEventTarget2.colIndex,
                rowIndex = _this$findEventTarget2.rowIndex;
            // colIndex, rowIndex are string


            if (!colIndex || !rowIndex) {
                return;
            }
            _this.handleColHoverClass(_this.rowIndex, _this.colIndex, false);
            _this.colIndex = -1;
            _this.rowIndex = -1;
        };

        _this.addColIndex = function (children) {
            var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            children.forEach(function (child, i) {
                child.__colIndex = start + i;
            });
        };

        _this.getTableEl = function (ref) {
            _this.tableEl = ref;
        };

        var _this$context = _this.context,
            getTableInstance = _this$context.getTableInstance,
            getTableInstanceForVirtual = _this$context.getTableInstanceForVirtual,
            getTableInstanceForFixed = _this$context.getTableInstanceForFixed,
            getTableInstanceForExpand = _this$context.getTableInstanceForExpand;

        getTableInstance && getTableInstance(props.lockType, _this);
        getTableInstanceForFixed && getTableInstanceForFixed(props.lockType, _this);
        getTableInstanceForVirtual && getTableInstanceForVirtual(props.lockType, _this);
        getTableInstanceForExpand && getTableInstanceForExpand(_this);
        _this.notRenderCellIndex = [];
        return _this;
    }

    Table.prototype.getChildContext = function getChildContext() {
        return {
            notRenderCellIndex: this.notRenderCellIndex || [],
            lockType: this.props.lockType
        };
    };

    Table.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
        var state = {};

        if (typeof nextProps.sort !== 'undefined') {
            state.sort = nextProps.sort;
        }

        return state;
    };

    Table.prototype.componentDidMount = function componentDidMount() {
        this.notRenderCellIndex = [];
    };

    Table.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
        if (nextProps.pure) {
            var isEqual = (0, _shallowElementEquals2.default)(nextProps, this.props) && _util.obj.shallowEqual(nextState, this.state) && _util.obj.shallowEqual(nextContext, this.context);
            return !isEqual;
        }

        return true;
    };

    Table.prototype.componentDidUpdate = function componentDidUpdate() {
        this.notRenderCellIndex = [];
    };

    Table.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
        var columns = props.columns;
        if (props.children) {
            columns = this.normalizeChildren(props);
        }
        return this.fetchInfoFromBinaryChildren(columns);
    };

    // 将React结构化数据提取props转换成数组


    Table.prototype.normalizeChildren = function normalizeChildren(props) {
        var columns = props.columns;

        var getChildren = function getChildren(children) {
            var ret = [];
            Children.forEach(children, function (child) {
                if (child) {
                    var _props = (0, _extends3.default)({}, child.props);

                    if (child.ref) {
                        _props.ref = child.ref;
                    }

                    if (!(child && ['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1 && (child.type._typeMark === 'column' || child.type._typeMark === 'columnGroup'))) {
                        _util.log.warning('Use <Table.Column/>, <Table.ColumnGroup/> as child.');
                    }
                    ret.push(_props);
                    if (child.props.children) {
                        _props.children = getChildren(child.props.children);
                    }
                }
            });
            return ret;
        };
        if (props.children) {
            columns = getChildren(props.children);
        }
        return columns;
    };

    Table.prototype.fetchInfoFromBinaryChildren = function fetchInfoFromBinaryChildren(children) {
        var hasGroupHeader = false;
        var flatChildren = [],
            groupChildren = [],
            getChildren = function getChildren() {
            var propsChildren = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var level = arguments[1];

            groupChildren[level] = groupChildren[level] || [];
            propsChildren.forEach(function (child) {
                child.headerCellRowIndex = level;
                child.headerCellColIndex = groupChildren[level].length;
                if (child.children) {
                    hasGroupHeader = true;
                    getChildren(child.children, level + 1);
                } else {
                    flatChildren.push(child);
                }
                groupChildren[level].push(child);
            });
        },
            getColSpan = function getColSpan(children, colSpan) {
            colSpan = colSpan || 0;
            children.forEach(function (child) {
                if (child.children) {
                    colSpan = getColSpan(child.children, colSpan);
                } else {
                    colSpan += 1;
                }
            });
            return colSpan;
        };

        getChildren(children, 0);

        groupChildren.forEach(function (groupChild, i) {
            groupChild.forEach(function (child, j) {
                var colSpan = void 0;
                var children = child.children;

                if (children) {
                    colSpan = getColSpan(children);
                    child.colSpan = colSpan;
                    groupChildren[i][j] = child;
                }
            });
        });

        var _props2 = this.props,
            lockType = _props2.lockType,
            lengths = _props2.lengths;

        var start = lockType === 'right' ? lengths.origin - lengths.right : 0;
        this.addColIndex(flatChildren, start);

        return {
            flatChildren: flatChildren,
            groupChildren: groupChildren,
            hasGroupHeader: hasGroupHeader
        };
    };

    Table.prototype.renderColGroup = function renderColGroup(flatChildren) {
        var cols = flatChildren.map(function (col, index) {
            var width = col.width;
            var style = {};
            if (width) {
                style = {
                    width: width
                };
            }

            return _react2.default.createElement('col', { style: style, key: index });
        });
        return _react2.default.createElement('colgroup', { key: 'table-colgroup' }, cols);
    };

    // 通过头部和扁平的结构渲染表格
    Table.prototype.renderTable = function renderTable(groupChildren, flatChildren) {
        if (flatChildren.length || !flatChildren.length && !this.props.lockType) {
            var _props3 = this.props,
                hasHeader = _props3.hasHeader,
                components = _props3.components,
                prefix = _props3.prefix,
                wrapperContent = _props3.wrapperContent,
                filterParams = _props3.filterParams,
                locale = _props3.locale,
                dataSource = _props3.dataSource,
                emptyContent = _props3.emptyContent,
                loading = _props3.loading,
                primaryKey = _props3.primaryKey,
                cellProps = _props3.cellProps,
                rowProps = _props3.rowProps,
                onRowClick = _props3.onRowClick,
                onRowMouseEnter = _props3.onRowMouseEnter,
                onRowMouseLeave = _props3.onRowMouseLeave,
                expandedIndexSimulate = _props3.expandedIndexSimulate,
                pure = _props3.pure,
                rtl = _props3.rtl,
                crossline = _props3.crossline,
                sortIcons = _props3.sortIcons,
                tableWidth = _props3.tableWidth;
            var sort = this.state.sort;
            var _components$Header = components.Header,
                Header = _components$Header === undefined ? _header2.default : _components$Header,
                _components$Wrapper = components.Wrapper,
                Wrapper = _components$Wrapper === undefined ? _wrapper2.default : _components$Wrapper,
                _components$Body = components.Body,
                Body = _components$Body === undefined ? _body2.default : _components$Body;

            var colGroup = this.renderColGroup(flatChildren);

            return [_react2.default.createElement('div', {
                key: prefix + 'table-column-resize-proxy',
                ref: this.getResizeProxyDomRef,
                className: prefix + 'table-column-resize-proxy'
            }), _react2.default.createElement(Wrapper, {
                key: prefix + 'table-wrapper',
                colGroup: colGroup,
                ref: this.getWrapperRef,
                prefix: prefix,
                tableWidth: tableWidth
            }, hasHeader ? _react2.default.createElement(Header, {
                prefix: prefix,
                rtl: rtl,
                pure: pure,
                affixRef: this.getAffixRef,
                colGroup: colGroup,
                className: prefix + 'table-header',
                filterParams: filterParams,
                tableEl: this.tableEl,
                columns: groupChildren,
                locale: locale,
                headerCellRef: this.getHeaderCellRef,
                components: components,
                onFilter: this.onFilter,
                sort: sort,
                onResizeChange: this.onResizeChange,
                onSort: this.onSort,
                sortIcons: sortIcons,
                tableWidth: tableWidth,
                resizeProxyDomRef: this.resizeProxyDomRef
            }) : null, _react2.default.createElement(Body, {
                prefix: prefix,
                rtl: rtl,
                pure: pure,
                crossline: crossline,
                colGroup: colGroup,
                className: prefix + 'table-body',
                components: components,
                loading: loading,
                emptyContent: emptyContent,
                getCellProps: cellProps,
                primaryKey: primaryKey,
                getRowProps: rowProps,
                columns: flatChildren,
                rowRef: this.getRowRef,
                cellRef: this.getCellRef,
                onRowClick: onRowClick,
                expandedIndexSimulate: expandedIndexSimulate,
                tableEl: this.tableEl,
                onRowMouseEnter: onRowMouseEnter,
                onRowMouseLeave: onRowMouseLeave,
                dataSource: dataSource,
                locale: locale,
                onBodyMouseOver: this.onBodyMouseOver,
                onBodyMouseOut: this.onBodyMouseOut,
                tableWidth: tableWidth
            }), wrapperContent)];
        } else {
            return null;
        }
    };

    /**
     * @param event
     * @returns {Object} { rowIndex: string; colIndex: string }
     */

    Table.prototype.render = function render() {
        var _classnames, _classnames2;

        var ret = this.normalizeChildrenState(this.props);
        this.groupChildren = ret.groupChildren;
        this.flatChildren = ret.flatChildren;
        /* eslint-disable no-unused-vars, prefer-const */
        var table = this.renderTable(ret.groupChildren, ret.flatChildren),
            _props4 = this.props,
            className = _props4.className,
            style = _props4.style,
            hasBorder = _props4.hasBorder,
            isZebra = _props4.isZebra,
            loading = _props4.loading,
            size = _props4.size,
            hasHeader = _props4.hasHeader,
            prefix = _props4.prefix,
            dataSource = _props4.dataSource,
            entireDataSource = _props4.entireDataSource,
            onSort = _props4.onSort,
            onResizeChange = _props4.onResizeChange,
            onRowClick = _props4.onRowClick,
            onRowMouseEnter = _props4.onRowMouseEnter,
            onRowMouseLeave = _props4.onRowMouseLeave,
            onFilter = _props4.onFilter,
            rowProps = _props4.rowProps,
            cellProps = _props4.cellProps,
            scrollToRow = _props4.scrollToRow,
            primaryKey = _props4.primaryKey,
            components = _props4.components,
            wrapperContent = _props4.wrapperContent,
            lockType = _props4.lockType,
            locale = _props4.locale,
            expandedIndexSimulate = _props4.expandedIndexSimulate,
            refs = _props4.refs,
            pure = _props4.pure,
            rtl = _props4.rtl,
            emptyContent = _props4.emptyContent,
            filterParams = _props4.filterParams,
            columns = _props4.columns,
            sortIcons = _props4.sortIcons,
            _props4$loadingCompon = _props4.loadingComponent,
            LoadingComponent = _props4$loadingCompon === undefined ? _loading2.default : _props4$loadingCompon,
            tableLayout = _props4.tableLayout,
            tableWidth = _props4.tableWidth,
            ref = _props4.ref,
            others = (0, _objectWithoutProperties3.default)(_props4, ['className', 'style', 'hasBorder', 'isZebra', 'loading', 'size', 'hasHeader', 'prefix', 'dataSource', 'entireDataSource', 'onSort', 'onResizeChange', 'onRowClick', 'onRowMouseEnter', 'onRowMouseLeave', 'onFilter', 'rowProps', 'cellProps', 'scrollToRow', 'primaryKey', 'components', 'wrapperContent', 'lockType', 'locale', 'expandedIndexSimulate', 'refs', 'pure', 'rtl', 'emptyContent', 'filterParams', 'columns', 'sortIcons', 'loadingComponent', 'tableLayout', 'tableWidth', 'ref']),
            cls = (0, _classnames4.default)((_classnames = {}, _classnames[prefix + 'table'] = true, _classnames[prefix + 'table-' + size] = size, _classnames[prefix + 'table-layout-' + tableLayout] = tableLayout, _classnames[prefix + 'table-loading'] = loading, _classnames['only-bottom-border'] = !hasBorder, _classnames['no-header'] = !hasHeader, _classnames.zebra = isZebra, _classnames[className] = className, _classnames));

        if (rtl) {
            others.dir = 'rtl';
        }

        var loadingcls = (0, _classnames4.default)((_classnames2 = {}, _classnames2[prefix + 'table-loading-content'] = true, _classnames2));

        return _react2.default.createElement('div', (0, _extends3.default)({
            className: cls,
            style: style,
            ref: ref || this.getTableEl
        }, _util.obj.pickOthers(Object.keys(Table.propTypes), others)), table, loading ? _react2.default.createElement(LoadingComponent, { className: loadingcls }) : null);
    };

    return Table;
}(_react2.default.Component), _class.Column = _column2.default, _class.ColumnGroup = _columnGroup2.default, _class.Header = _header2.default, _class.Body = _body2.default, _class.Wrapper = _wrapper2.default, _class.Row = _row2.default, _class.Cell = _cell2.default, _class.Filter = _filter2.default, _class.Sort = _sort2.default, _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    /**
     * 样式类名的品牌前缀
     */
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    /**
     * 表格元素的 table-layout 属性，设为 fixed 表示内容不会影响列的布局
     */
    tableLayout: _propTypes2.default.oneOf(['fixed', 'auto']),
    /**
     * 表格的总长度，可以这么用：设置表格总长度 、设置部分列的宽度，这样表格会按照剩余空间大小，自动其他列分配宽度
     */
    tableWidth: _propTypes2.default.number,
    /**
     * 自定义类名
     */
    className: _propTypes2.default.string,
    /**
     * 自定义内联样式
     */
    style: _propTypes2.default.object,
    /**
     * 尺寸 small为紧凑模式
     */
    size: _propTypes2.default.oneOf(['small', 'medium']),
    /**
     * 表格展示的数据源
     */
    dataSource: _propTypes2.default.array,
    entireDataSource: _propTypes2.default.array,
    /**
     * 点击表格每一行触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowClick: _propTypes2.default.func,
    /**
     * 悬浮在表格每一行的时候触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowMouseEnter: _propTypes2.default.func,
    /**
     * 离开表格每一行的时候触发的事件
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @param {Event} e DOM事件对象
     */
    onRowMouseLeave: _propTypes2.default.func,
    /**
     * 点击列排序触发的事件
     * @param {String} dataIndex 指定的排序的字段
     * @param {String} order 排序对应的顺序, 有`desc`和`asc`两种
     */
    onSort: _propTypes2.default.func,
    /**
     * 点击过滤确认按钮触发的事件
     * @param {Object} filterParams 过滤的字段信息
     */
    onFilter: _propTypes2.default.func,
    /**
     * 重设列尺寸的时候触发的事件
     * @param {String} dataIndex 指定重设的字段
     * @param {Number} value 列宽变动的数值
     */
    onResizeChange: _propTypes2.default.func,
    /**
     * 设置每一行的属性，如果返回值和其他针对行操作的属性冲突则无效。
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Object} 需要设置的行属性
     */
    rowProps: _propTypes2.default.func,
    /**
     * 设置单元格的属性，通过该属性可以进行合并单元格
     * @param {Number} rowIndex 该行所对应的序列
     * @param {Number} colIndex 该列所对应的序列
     * @param {String} dataIndex 该列所对应的字段名称
     * @param {Object} record 该行对应的记录
     * @returns {Object} 返回td元素的所支持的属性对象
     */
    cellProps: _propTypes2.default.func,
    /**
     * 虚拟滚动时向前保留渲染的行数
     */
    keepForwardRenderRows: _propTypes2.default.number,
    /**
     * 表格是否具有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 表格是否具有头部
     */
    hasHeader: _propTypes2.default.bool,
    /**
     * 表格是否是斑马线
     */
    isZebra: _propTypes2.default.bool,
    /**
     * 表格是否在加载中
     */
    loading: _propTypes2.default.bool,
    /**
     * 自定义 Loading 组件
     * 请务必传递 props, 使用方式： loadingComponent={props => <Loading {...props}/>}
     * @param {LoadingProps} props 需要透传给组件的参数
     * @return {React.ReactNode} 展示的组件
     */
    loadingComponent: _propTypes2.default.func,
    /**
     * 当前过滤的的keys,使用此属性可以控制表格的头部的过滤选项中哪个菜单被选中,格式为 {dataIndex: {selectedKeys:[]}}
     * 示例:
     * 假设要控制dataIndex为id的列的过滤菜单中key为one的菜单项选中
     * `<Table filterParams={{id: {selectedKeys: ['one']}}}/>`
     */
    filterParams: _propTypes2.default.object,
    /**
     * 当前排序的字段,使用此属性可以控制表格的字段的排序,格式为{[dataIndex]: 'asc' | 'desc' } , 例如  {id: 'desc'}
     */
    sort: _propTypes2.default.object,
    /**
     * 自定义排序按钮，例如上下排布的: `{desc: <Icon style={{top: '6px', left: '4px'}} type={'arrow-down'} size="small" />, asc: <Icon style={{top: '-6px', left: '4px'}} type={'arrow-up'} size="small" />}`
     */
    sortIcons: _propTypes2.default.object,
    /**
     * 自定义国际化文案对象
     * @property {String} ok 过滤器中确认按钮文案
     * @property {String} reset 过滤器中重置按钮文案
     * @property {String} empty 没有数据情况下 table内的文案
     * @property {String} asc 排序升序状态下的文案
     * @property {String} desc 排序将序状态下的文案
     * @property {String} expanded 可折叠行，展开状态下的文案
     * @property {String} folded 可折叠行，折叠状态下的文案
     * @property {String} filter 过滤器文案
     * @property {String} selectAll header里全选的按钮文案
     */
    locale: _propTypes2.default.object,
    components: _propTypes2.default.object,
    /**
     * 等同于写子组件 Table.Column ，子组件优先级更高
     */
    columns: _propTypes2.default.array,
    /**
     * 设置数据为空的时候的表格内容展现
     */
    emptyContent: _propTypes2.default.node,
    /**
     * dataSource当中数据的主键，如果给定的数据源中的属性不包含该主键，会造成选择状态全部选中
     */
    primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
    lockType: _propTypes2.default.oneOf(['left', 'right']),
    wrapperContent: _propTypes2.default.any,
    refs: _propTypes2.default.object,
    /**
     * 额外渲染行的渲染函数
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Element} 渲染内容
     */
    expandedRowRender: _propTypes2.default.func,
    /**
     * 设置行是否可展开，设置 false 为不可展开
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Boolean} 是否可展开
     */
    rowExpandable: _propTypes2.default.func,
    /**
     * 额外渲染行的缩进, 是个二维数组(eg:[1,1]) 分别表示左右两边的缩进
     */
    expandedRowIndent: _propTypes2.default.array,
    /**
     * 是否显示点击展开额外渲染行的+号按钮
     */
    hasExpandedRowCtrl: _propTypes2.default.bool,
    /**
     * 设置额外渲染行的属性
     * @param {Object} record 该行所对应的数据
     * @param {Number} index 该行所对应的序列
     * @returns {Object} 额外渲染行的属性
     */
    getExpandedColProps: _propTypes2.default.func,
    /**
     * 当前展开的 Expand行 或者 Tree行 , 传入此属性为受控状态，一般配合 onRowOpen 使用
     */
    openRowKeys: _propTypes2.default.array,
    /**
     * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
     * @version 1.23.22
     */
    defaultOpenRowKeys: _propTypes2.default.array,
    /**
     * 在 Expand行 或者 Tree行 展开或者收起的时候触发的事件
     * @param {Array} openRowKeys 展开的渲染行的key
     * @param {String} currentRowKey 当前点击的渲染行的key
     * @param {Boolean} expanded 当前点击是展开还是收起
     * @param {Object} currentRecord 当前点击额外渲染行的记录
     */
    onRowOpen: _propTypes2.default.func,
    onExpandedRowClick: _propTypes2.default.func,
    /**
     * 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条
     */
    fixedHeader: _propTypes2.default.bool,
    /**
     * 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条
     */
    maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    /**
     * 是否启用选择模式
     * @property {Function} getProps `Function(record, index)=>Object` 获取selection的默认属性
     * @property {Function} onChange `Function(selectedRowKeys:Array, records:Array)` 选择改变的时候触发的事件，**注意:** 其中records只会包含当前dataSource的数据，很可能会小于selectedRowKeys的长度。
     * @property {Function} onSelect `Function(selected:Boolean, record:Object, records:Array)` 用户手动选择/取消选择某行的回调
     * @property {Function} onSelectAll `Function(selected:Boolean, records:Array)` 用户手动选择/取消选择所有行的回调
     * @property {Array} selectedRowKeys 设置了此属性,将rowSelection变为受控状态,接收值为该行数据的primaryKey的值
     * @property {String} mode 选择selection的模式, 可选值为`single`, `multiple`，默认为`multiple`
     * @property {Function} columnProps `Function()=>Object` 选择列 的props，例如锁列、对齐等，可使用`Table.Column` 的所有参数
     * @property {Function} titleProps `Function()=>Object` 选择列 表头的props，仅在 `multiple` 模式下生效
     * @property {Function} titleAddons `Function()=>Node` 选择列 表头添加的元素，在`single` `multiple` 下都生效
     */
    rowSelection: _propTypes2.default.object,
    /**
     * 表头是否是sticky
     */
    stickyHeader: _propTypes2.default.bool,
    /**
     * 距离窗口顶部达到指定偏移量后触发
     */
    offsetTop: _propTypes2.default.number,
    /**
     * affix组件的的属性
     */
    affixProps: _propTypes2.default.object,
    /**
     * 在tree模式下的缩进尺寸， 仅在isTree为true时候有效
     */
    indent: _propTypes2.default.number,
    /**
     * 开启Table的tree模式, 接收的数据格式中包含children则渲染成tree table
     */
    isTree: _propTypes2.default.bool,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _propTypes2.default.bool,
    rowHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),
    /**
     * 滚动到第几行，需要保证行高相同。1.22.15 版本之前仅在虚拟滚动场景下生效，之后在所有情况下生效
     * @version 1.22.15
     */
    scrollToRow: _propTypes2.default.number,
    /**
     * 在内容区域滚动的时候触发的函数
     */
    onBodyScroll: _propTypes2.default.func,
    /**
     * 开启时，getExpandedColProps() / rowProps() / expandedRowRender() 的第二个参数 index (该行所对应的序列) 将按照01,2,3,4...的顺序返回，否则返回真实index(0,2,4,6... / 1,3,5,7...)
     */
    expandedIndexSimulate: _propTypes2.default.bool,
    /**
     * 在 hover 时出现十字参考轴，适用于表头比较复杂，需要做表头分类的场景。
     */
    crossline: _propTypes2.default.bool,
    lengths: _propTypes2.default.object
}), _class.defaultProps = {
    dataSource: [],
    onRowClick: noop,
    onRowMouseEnter: noop,
    onRowMouseLeave: noop,
    onSort: noop,
    onFilter: noop,
    onResizeChange: noop,
    size: 'medium',
    rowProps: noop,
    cellProps: noop,
    prefix: 'next-',
    hasBorder: true,
    keepForwardRenderRows: 10,
    hasHeader: true,
    isZebra: false,
    loading: false,
    expandedIndexSimulate: false,
    primaryKey: 'id',
    components: {},
    locale: _zhCn2.default.Table,
    crossline: false
}, _class.childContextTypes = {
    notRenderCellIndex: _propTypes2.default.array,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}, _class.contextTypes = {
    getTableInstance: _propTypes2.default.func,
    getTableInstanceForFixed: _propTypes2.default.func,
    getTableInstanceForVirtual: _propTypes2.default.func,
    getTableInstanceForExpand: _propTypes2.default.func
}, _temp);
Table.displayName = 'Table';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Table);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 412 */
/***/ (function(module, exports) {

var hasOwnProperty = Object.prototype.hasOwnProperty;

function transformEntryEqual(a, b) {
  for (var k in a) {
    if (hasOwnProperty.call(a, k)) {
      return a[k] === b[k];
    }
  }
  return false;
}

function transformEqual(a, b) {
  if ((!a && !b) || (a === b)) {
    return true;
  }
  if (!a !== !b) {
    return false;
  }
  if (a.length !== b.length) {
    return false;
  }
  for (var i = 0; i < a.length; i++) {
    if (!transformEntryEqual(a[i], b[i])) {
      return false;
    }
  }
  return true;
}

function shallowObjectEquals(a, b) {
  var k;
  var i = 0;
  var j = 0;
  for (k in a) {
    if (hasOwnProperty.call(a, k)) {
      switch (k) {
        case 'transform':
          if (!transformEqual(a[k], b[k])) {
            return false;
          }
          break;
        case 'shadowOffset':
          if (!shallowObjectEquals(a[k], b[k])) {
            return false;
          }
          break;
        default:
          if (a[k] !== b[k]) {
            return false;
          }
          break;
      }
      i++;
    }
  }
  for (k in b) {
    if (hasOwnProperty.call(b, k)) {
      j++;
    }
  }
  return i === j;
}

function styleEqual(a, b) {
  if ((!a && !b) || (a === b)) {
    return true;
  }
  if (!a !== !b) {
    return false;
  }
  switch (typeof a) {
    case 'object':
      if (a instanceof Array) {
        for (var i = 0; i < a.length; i++) {
          if (!styleEqual(a[i], b[i])) {
            return false;
          }
        }
        return a.length === b.length;
      } else {
        return shallowObjectEquals(a, b);
      }
      break;
    case 'number':
    default:
      return a === b;
  }
}

module.exports = styleEqual;


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Resize = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Resize, _React$Component);

    function Resize() {
        (0, _classCallCheck3.default)(this, Resize);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this));

        _this.showResizeProxy = function () {
            _this.props.resizeProxyDomRef.style.cssText = 'display:block;left:' + _this.startLeft + 'px;';
        };

        _this.moveResizeProxy = function () {
            var moveLeft = _this.startLeft + _this.changedPageX;
            _this.props.resizeProxyDomRef.style.cssText = 'left:' + moveLeft + 'px;display:block;';
        };

        _this.resetResizeProxy = function () {
            // when the mouse was not moved,don't change cell width
            if (_this.asyncResizeFlag) {
                _this.props.onChange(_this.props.dataIndex, _this.changedPageX);
            }
            _this.changedPageX = 0;
            _this.tRight = 0;
            _this.asyncResizeFlag = false;
            _this.props.resizeProxyDomRef.style.cssText = 'display:none;';
        };

        _this.movingLimit = function () {
            // table right limit
            var moveLeft = _this.startLeft + _this.changedPageX;
            if (moveLeft > _this.tRight) {
                moveLeft = _this.tRight;
                _this.changedPageX = _this.tRight - _this.startLeft;
            }

            // cell left limit
            if (moveLeft - _this.cellLeft < _this.cellMinWidth) {
                _this.changedPageX = _this.cellLeft + _this.cellMinWidth - _this.startLeft;
            }

            // table left limit
            if (moveLeft < 0) {
                _this.changedPageX = 0 - _this.startLeft;
            }

            if (_this.props.col.width + _this.changedPageX < _this.cellMinWidth) {
                _this.changedPageX = _this.cellMinWidth - _this.props.col.width;
            }
        };

        _this.onMouseDown = function (e) {
            var _this$props$tableEl$g = _this.props.tableEl.getBoundingClientRect(),
                tableLeft = _this$props$tableEl$g.left,
                tableWidth = _this$props$tableEl$g.width;

            if (!_this.props.cellDomRef || !_this.props.cellDomRef.current) {
                return;
            }

            var _this$props$cellDomRe = _this.props.cellDomRef.current.getBoundingClientRect(),
                cellDomLeft = _this$props$cellDomRe.left;

            _this.lastPageX = e.pageX;
            _this.tLeft = tableLeft;
            _this.tRight = tableWidth;
            _this.startLeft = e.pageX - tableLeft;
            _this.cellLeft = cellDomLeft - tableLeft;

            if (_this.props.asyncResizable) _this.showResizeProxy();
            _util.events.on(document, 'mousemove', _this.onMouseMove);
            _util.events.on(document, 'mouseup', _this.onMouseUp);
            _this.unSelect();
        };

        _this.onMouseMove = function (e) {
            var pageX = e.pageX;
            _this.changedPageX = pageX - _this.lastPageX;

            if (_this.props.rtl) {
                _this.changedPageX = -_this.changedPageX;
            }

            if (_this.props.hasLock) {
                if (!_this.props.asyncResizable) {
                    // when hasn't lock attribute, cellLeft will change
                    _this.cellLeft = _this.props.cellDomRef.current.getBoundingClientRect().left - _this.tLeft;
                }
            }
            _this.movingLimit();

            // stop at here when async
            if (_this.props.asyncResizable) {
                // asyncResizeFlag use to prevent just click without mouse move
                _this.asyncResizeFlag = true;
                _this.moveResizeProxy();
                return;
            }
            _this.props.onChange(_this.props.dataIndex, _this.changedPageX);
            _this.lastPageX = pageX;
        };

        _this.onMouseUp = function () {
            if (_this.props.asyncResizable) {
                _this.resetResizeProxy();
            }
            _this.startLeft = 0;
            _this.destory();
        };

        _this.cellMinWidth = 40;

        _this.lastPageX = 0;
        _this.tRight = 0;
        _this.tLeft = 0;
        _this.cellLeft = 0;
        _this.startLeft = 0;
        _this.changedPageX = 0;

        _this.asyncResizeFlag = false;
        return _this;
    }

    Resize.prototype.componentWillUnmount = function componentWillUnmount() {
        this.destory();
    };

    Resize.prototype.destory = function destory() {
        _util.events.off(document, 'mousemove', this.onMouseMove);
        _util.events.off(document, 'mouseup', this.onMouseUp);
        this.select();
    };

    Resize.prototype.unSelect = function unSelect() {
        _util.dom.setStyle(document.body, {
            userSelect: 'none',
            cursor: 'ew-resize'
        });
        document.body.setAttribute('unselectable', 'on');
    };

    Resize.prototype.select = function select() {
        _util.dom.setStyle(document.body, {
            userSelect: '',
            cursor: ''
        });
        document.body.removeAttribute('unselectable');
    };

    Resize.prototype.render = function render() {
        var prefix = this.props.prefix;

        return _react2.default.createElement('a', { className: prefix + 'table-resize-handler', onMouseDown: this.onMouseDown });
    };

    return Resize;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    onChange: _propTypes2.default.func,
    dataIndex: _propTypes2.default.string,
    tableEl: _propTypes2.default.any,
    resizeProxyDomRef: _propTypes2.default.any,
    cellDomRef: _propTypes2.default.any,
    col: _propTypes2.default.any,
    hasLock: _propTypes2.default.bool,
    asyncResizable: _propTypes2.default.bool
}, _class.defaultProps = {
    onChange: function onChange() {}
}, _temp);
Resize.displayName = 'Resize';
exports.default = Resize;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var Wrapper = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Wrapper, _Component);

    function Wrapper() {
        (0, _classCallCheck3.default)(this, Wrapper);
        return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
    }

    Wrapper.prototype.render = function render() {
        var _props = this.props,
            colGroup = _props.colGroup,
            children = _props.children,
            tableWidth = _props.tableWidth,
            Tag = _props.component;

        return _react2.default.createElement(Tag, { role: 'table', style: { width: tableWidth } }, colGroup, children);
    };

    return Wrapper;
}(_react.Component), _class.propTypes = {
    tableWidth: _propTypes2.default.number
}, _temp);
Wrapper.displayName = 'Wrapper';
exports.default = Wrapper;

Wrapper.defaultProps = {
    component: 'table'
};

Wrapper.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    colGroup: _propTypes2.default.any,
    component: _propTypes2.default.string
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Table.ColumnGroup
 * @order 1
 **/
var ColumnGroup = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(ColumnGroup, _React$Component);

    function ColumnGroup() {
        (0, _classCallCheck3.default)(this, ColumnGroup);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    ColumnGroup.prototype.getChildContext = function getChildContext() {
        return {
            parent: this
        };
    };

    ColumnGroup.prototype.render = function render() {
        return null;
    };

    return ColumnGroup;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 表头显示的内容
     */
    title: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.node, _propTypes2.default.func])
}, _class.childContextTypes = {
    parent: _propTypes2.default.any
}, _class.defaultProps = {
    title: 'column-group'
}, _class._typeMark = 'columnGroup', _temp);
ColumnGroup.displayName = 'ColumnGroup';
exports.default = ColumnGroup;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = tree;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _row = __webpack_require__(417);

var _row2 = _interopRequireDefault(_row);

var _cell = __webpack_require__(418);

var _cell2 = _interopRequireDefault(_cell);

var _util = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

function tree(BaseComponent) {
    var _class, _temp;

    var TreeTable = (_temp = _class = function (_React$Component) {
        (0, _inherits3.default)(TreeTable, _React$Component);

        function TreeTable(props, context) {
            (0, _classCallCheck3.default)(this, TreeTable);

            var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

            _this.onTreeNodeClick = function (record) {
                var primaryKey = _this.props.primaryKey,
                    id = record[primaryKey],
                    dataSource = _this.ds,
                    openRowKeys = [].concat(_this.state.openRowKeys),
                    index = openRowKeys.indexOf(id),
                    getChildrenKeyById = function getChildrenKeyById(id) {
                    var ret = [id];
                    var loop = function loop(data) {
                        data.forEach(function (item) {
                            ret.push(item[primaryKey]);
                            if (item.children) {
                                loop(item.children);
                            }
                        });
                    };
                    dataSource.forEach(function (item) {
                        if (item[primaryKey] === id) {
                            if (item.children) {
                                loop(item.children);
                            }
                        }
                    });
                    return ret;
                };

                if (index > -1) {
                    // 不仅要删除当前的openRowKey，还需要删除关联子节点的openRowKey
                    var ids = getChildrenKeyById(id);
                    ids.forEach(function (id) {
                        var i = openRowKeys.indexOf(id);
                        if (i > -1) {
                            openRowKeys.splice(i, 1);
                        }
                    });
                } else {
                    openRowKeys.push(id);
                }

                if (!('openRowKeys' in _this.props)) {
                    _this.setState({
                        openRowKeys: openRowKeys
                    });
                }
                _this.props.onRowOpen(openRowKeys, id, index === -1, record);
            };

            _this.state = {
                openRowKeys: props.openRowKeys || props.defaultOpenRowKeys || []
            };
            return _this;
        }

        TreeTable.prototype.getChildContext = function getChildContext() {
            return {
                openTreeRowKeys: this.state.openRowKeys,
                indent: this.props.indent,
                treeStatus: this.getTreeNodeStatus(this.ds),
                onTreeNodeClick: this.onTreeNodeClick,
                isTree: this.props.isTree
            };
        };

        TreeTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if ('openRowKeys' in nextProps) {
                return {
                    openRowKeys: nextProps.openRowKeys || []
                };
            }

            return null;
        };

        TreeTable.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {
            var openRowKeys = this.state.openRowKeys;
            var primaryKey = this.props.primaryKey;

            var ret = [],
                loop = function loop(dataSource, level) {
                var parentId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

                dataSource.forEach(function (item) {
                    item.__level = level;

                    if (level === 0 || openRowKeys.indexOf(parentId) > -1) {
                        item.__hidden = false;
                    } else {
                        item.__hidden = true;
                    }
                    ret.push(item);

                    if (item.children) {
                        loop(item.children, level + 1, item[primaryKey]);
                    }
                });
            };
            loop(dataSource, 0);
            this.ds = ret;
            return ret;
        };

        TreeTable.prototype.getTreeNodeStatus = function getTreeNodeStatus() {
            var dataSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var openRowKeys = this.state.openRowKeys,
                primaryKey = this.props.primaryKey,
                ret = [];

            openRowKeys.forEach(function (openKey) {
                dataSource.forEach(function (item) {
                    if (item[primaryKey] === openKey) {
                        if (item.children) {
                            item.children.forEach(function (child) {
                                ret.push(child[primaryKey]);
                            });
                        }
                    }
                });
            });
            return ret;
        };

        TreeTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props = this.props,
                components = _props.components,
                isTree = _props.isTree,
                dataSource = _props.dataSource,
                indent = _props.indent,
                others = (0, _objectWithoutProperties3.default)(_props, ['components', 'isTree', 'dataSource', 'indent']);

            if (isTree) {
                components = (0, _extends3.default)({}, components);
                if (!components.Row) {
                    components.Row = _row2.default;
                }
                if (!components.Cell) {
                    components.Cell = _cell2.default;
                }

                dataSource = this.normalizeDataSource(dataSource);
            }
            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, { dataSource: dataSource, components: components }));
        };

        return TreeTable;
    }(_react2.default.Component), _class.TreeRow = _row2.default, _class.TreeCell = _cell2.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 默认情况下展开的树形表格，传入了此属性代表tree的展开为受控操作
         */
        openRowKeys: _propTypes2.default.array,
        /**
         * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
         * @version 1.23.22
         */
        defaultOpenRowKeys: _propTypes2.default.array,
        /**
         * 点击tree展开或者关闭的时候触发的事件
         * @param {Array} openRowKeys tree模式下展开的key
         * @param {String} currentRowKey 当前点击行的key
         * @param {Boolean} opened 当前点击是展开还是收起
         * @param {Object} currentRecord 当前点击行的记录
         */
        onRowOpen: _propTypes2.default.func,
        /**
         * dataSource当中数据的主键，如果给定的数据源中的属性不包含该主键，会造成选择状态全部选中
         */
        primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
        /**
         * 在tree模式下的缩进尺寸， 仅在isTree为true时候有效
         */
        indent: _propTypes2.default.number,
        /**
         * 开启Table的tree模式, 接收的数据格式中包含children则渲染成tree table
         */
        isTree: _propTypes2.default.bool,
        locale: _propTypes2.default.object
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps, {
        primaryKey: 'id',
        onRowOpen: noop,
        components: {},
        indent: 12
    }), _class.childContextTypes = {
        openTreeRowKeys: _propTypes2.default.array,
        indent: _propTypes2.default.number,
        treeStatus: _propTypes2.default.array,
        onTreeNodeClick: _propTypes2.default.func,
        isTree: _propTypes2.default.bool
    }, _temp);
    TreeTable.displayName = 'TreeTable';

    (0, _util.statics)(TreeTable, BaseComponent);
    return (0, _reactLifecyclesCompat.polyfill)(TreeTable);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _row = __webpack_require__(182);

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var TreeRow = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(TreeRow, _React$Component);

    function TreeRow() {
        (0, _classCallCheck3.default)(this, TreeRow);
        return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));
    }

    TreeRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            className = _props.className,
            record = _props.record,
            primaryKey = _props.primaryKey,
            prefix = _props.prefix,
            others = (0, _objectWithoutProperties3.default)(_props, ['className', 'record', 'primaryKey', 'prefix']);
        var _context = this.context,
            treeStatus = _context.treeStatus,
            openRowKeys = _context.openRowKeys;

        var cls = (0, _classnames3.default)((_classnames = {
            hidden: !(treeStatus.indexOf(record[primaryKey]) > -1) && record.__level !== 0
        }, _classnames[prefix + 'table-row-level-' + record.__level] = true, _classnames.opened = openRowKeys.indexOf(record[primaryKey]) > -1, _classnames[className] = className, _classnames));
        return _react2.default.createElement(_row2.default, (0, _extends3.default)({}, others, { record: record, className: cls, primaryKey: primaryKey, prefix: prefix }));
    };

    return TreeRow;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({}, _row2.default.propTypes), _class.defaultProps = (0, _extends3.default)({}, _row2.default.defaultProps), _class.contextTypes = {
    treeStatus: _propTypes2.default.array,
    openRowKeys: _propTypes2.default.array
}, _temp);
TreeRow.displayName = 'TreeRow';
exports.default = TreeRow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _cell = __webpack_require__(64);

var _cell2 = _interopRequireDefault(_cell);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var TreeCell = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(TreeCell, _React$Component);

    function TreeCell() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TreeCell);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onTreeNodeClick = function (record, e) {
            e.stopPropagation();
            _this.context.onTreeNodeClick(record);
        }, _this.expandedKeydown = function (record, e) {
            e.preventDefault();
            e.stopPropagation();

            if (e.keyCode === _util.KEYCODE.ENTER) {
                _this.onTreeNodeClick(record, e);
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    TreeCell.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props,
            colIndex = _props.colIndex,
            record = _props.record,
            prefix = _props.prefix,
            primaryKey = _props.primaryKey,
            locale = _props.locale,
            rtl = _props.rtl,
            children = _props.children;
        var _context = this.context,
            openRowKeys = _context.openTreeRowKeys,
            indent = _context.indent,
            isTree = _context.isTree,
            rowSelection = _context.rowSelection;

        var treeArrowNodeIndex = rowSelection ? 1 : 0;
        var firstCellStyle = void 0,
            treeArrowNode = void 0;
        if (colIndex === treeArrowNodeIndex) {
            var treeArrowType = void 0;
            if (isTree) {
                var _firstCellStyle;

                var paddingType = rtl ? 'paddingRight' : 'paddingLeft';
                firstCellStyle = (_firstCellStyle = {}, _firstCellStyle[paddingType] = indent * (record.__level + 1), _firstCellStyle);
                treeArrowNode = _react2.default.createElement(_icon2.default, { size: 'xs', rtl: rtl, className: prefix + 'table-tree-placeholder', type: 'arrow-right' });
                if (record.children && record.children.length) {
                    var hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1;

                    treeArrowType = hasExpanded ? 'arrow-down' : 'arrow-right';

                    treeArrowNode = _react2.default.createElement(_icon2.default, {
                        className: prefix + 'table-tree-arrow',
                        type: treeArrowType,
                        size: 'xs',
                        rtl: rtl,
                        onClick: function onClick(e) {
                            return _this2.onTreeNodeClick(record, e);
                        },
                        onKeyDown: function onKeyDown(e) {
                            return _this2.expandedKeydown(record, e);
                        },
                        role: 'button',
                        tabIndex: '0',
                        'aria-expanded': hasExpanded,
                        'aria-label': hasExpanded ? locale.expanded : locale.folded
                    });
                }
            }
        }
        return _react2.default.createElement(_cell2.default, (0, _extends3.default)({}, this.props, { innerStyle: firstCellStyle, isIconLeft: !!treeArrowNode }), children, treeArrowNode);
    };

    return TreeCell;
}(_react2.default.Component), _class.propTypes = (0, _extends3.default)({
    indent: _propTypes2.default.number,
    locale: _propTypes2.default.object
}, _cell2.default.propTypes), _class.defaultProps = (0, _extends3.default)({}, _cell2.default.defaultProps, {
    component: 'td',
    indent: 20
}), _class.contextTypes = {
    openTreeRowKeys: _propTypes2.default.array,
    indent: _propTypes2.default.number,
    onTreeNodeClick: _propTypes2.default.func,
    isTree: _propTypes2.default.bool,
    rowSelection: _propTypes2.default.object
}, _temp2);
TreeCell.displayName = 'TreeCell';
exports.default = TreeCell;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = fixed;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(13);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _util = __webpack_require__(4);

var _header = __webpack_require__(65);

var _header2 = _interopRequireDefault(_header);

var _body = __webpack_require__(184);

var _body2 = _interopRequireDefault(_body);

var _wrapper = __webpack_require__(66);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function fixed(BaseComponent, stickyLock) {
    var _class, _temp2;

    /** Table */
    var FixedTable = (_temp2 = _class = function (_React$Component) {
        (0, _inherits3.default)(FixedTable, _React$Component);

        function FixedTable() {
            var _temp, _this, _ret;

            (0, _classCallCheck3.default)(this, FixedTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.getNode = function (type, node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['' + type + lockType + 'Node'] = node;
            }, _this.getTableInstance = function (type, instance) {
                type = '';
                _this['table' + type + 'Inc'] = instance;
            }, _this.onFixedScrollSync = function () {
                var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { currentTarget: {} };

                var currentTarget = current.currentTarget || {},
                    headerNode = _this.headerNode,
                    bodyNode = _this.bodyNode;

                var scrollLeft = currentTarget.scrollLeft,
                    scrollWidth = currentTarget.scrollWidth,
                    clientWidth = currentTarget.clientWidth;

                var scrollToRightEnd = !(scrollLeft < scrollWidth - clientWidth);
                var _this$props = _this.props,
                    prefix = _this$props.prefix,
                    loading = _this$props.loading;

                if (!loading && scrollToRightEnd !== _this.scrollToRightEnd) {
                    _this.scrollToRightEnd = scrollToRightEnd;
                    var table = _this.getTableNode();

                    var leftFunc = scrollToRightEnd ? 'removeClass' : 'addClass';
                    _util.dom[leftFunc](table, prefix + 'table-scrolling-to-right');
                }

                // 通过定时器避免重复设置表格的左滚动距离
                if (!_this.scrollTarget || _this.scrollTarget === currentTarget) {
                    _this.scrollTarget = currentTarget;
                    window.clearTimeout(_this.timeoutId);

                    _this.timeoutId = window.setTimeout(function () {
                        _this.scrollTarget = null;
                        _this.timeoutId = undefined;
                    }, 100);

                    if (currentTarget === bodyNode) {
                        if (headerNode && scrollLeft !== headerNode.scrollLeft) {
                            headerNode.scrollLeft = scrollLeft;
                        }
                    } else if (currentTarget === headerNode) {
                        if (bodyNode && scrollLeft !== bodyNode.scrollLeft) {
                            bodyNode.scrollLeft = scrollLeft;
                        }
                    }
                }
            }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
        }

        FixedTable.prototype.getChildContext = function getChildContext() {
            return {
                fixedHeader: this.props.fixedHeader,
                maxBodyHeight: this.props.maxBodyHeight,
                getTableInstanceForFixed: this.getTableInstance,
                onFixedScrollSync: this.onFixedScrollSync,
                getNode: this.getNode
            };
        };

        FixedTable.prototype.componentDidMount = function componentDidMount() {
            this.adjustFixedHeaderSize();
            this.scrollToRightEnd = undefined;
            this.onFixedScrollSync({ currentTarget: this.bodyNode, target: this.bodyNode });
        };

        FixedTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustFixedHeaderSize();
            this.onFixedScrollSync({ currentTarget: this.bodyNode, target: this.bodyNode });
        };

        FixedTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        // for fixed header scroll left


        FixedTable.prototype.adjustFixedHeaderSize = function adjustFixedHeaderSize() {
            var _props = this.props,
                hasHeader = _props.hasHeader,
                rtl = _props.rtl,
                prefix = _props.prefix;

            var paddingName = rtl ? 'paddingLeft' : 'paddingRight';
            var marginName = rtl ? 'marginLeft' : 'marginRight';
            var body = this.bodyNode;
            var scrollBarSize = +_util.dom.scrollbar().width || 0;

            if (hasHeader && !this.props.lockType && body) {
                var hasVerScroll = body.scrollHeight > body.clientHeight,
                    hasHozScroll = body.scrollWidth > body.clientWidth;
                var style = {};
                if (!hasVerScroll) {
                    style[paddingName] = 0;
                    style[marginName] = 0;
                }

                if (+scrollBarSize) {
                    style.marginBottom = -scrollBarSize;
                    if (hasHozScroll) {
                        style.paddingBottom = scrollBarSize;
                    } else {
                        style.paddingBottom = scrollBarSize;
                    }
                    if (hasVerScroll) {
                        style[marginName] = scrollBarSize;
                    }
                }

                _util.dom.setStyle(this.headerNode, style);
            }

            if (hasHeader && !this.props.lockType && this.headerNode) {
                var fixer = this.headerNode.querySelector('.' + prefix + 'table-header-fixer');
                var height = _util.dom.getStyle(this.headerNode, 'height');
                var paddingBottom = _util.dom.getStyle(this.headerNode, 'paddingBottom');

                _util.dom.setStyle(fixer, {
                    width: scrollBarSize,
                    height: height - paddingBottom
                });
            }
        };

        FixedTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                components = _props2.components,
                className = _props2.className,
                prefix = _props2.prefix,
                fixedHeader = _props2.fixedHeader,
                lockType = _props2.lockType,
                dataSource = _props2.dataSource,
                maxBodyHeight = _props2.maxBodyHeight,
                others = (0, _objectWithoutProperties3.default)(_props2, ['components', 'className', 'prefix', 'fixedHeader', 'lockType', 'dataSource', 'maxBodyHeight']);

            if (fixedHeader) {
                var _classnames;

                components = (0, _extends3.default)({}, components);
                if (!components.Header) {
                    components.Header = _header2.default;
                }
                if (!components.Body) {
                    components.Body = _body2.default;
                }
                if (!components.Wrapper) {
                    components.Wrapper = _wrapper2.default;
                }
                className = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-fixed'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));
            }

            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                dataSource: dataSource,
                lockType: lockType,
                components: components,
                className: className,
                prefix: prefix
            }));
        };

        return FixedTable;
    }(_react2.default.Component), _class.FixedHeader = _header2.default, _class.FixedBody = _body2.default, _class.FixedWrapper = _wrapper2.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 是否具有表头
         */
        hasHeader: _propTypes2.default.bool,
        /**
         * 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条
         */
        fixedHeader: _propTypes2.default.bool,
        /**
         * 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条
         */
        maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps, {
        hasHeader: true,
        fixedHeader: false,
        maxBodyHeight: 200,
        components: {},
        refs: {},
        prefix: 'next-'
    }), _class.childContextTypes = {
        fixedHeader: _propTypes2.default.bool,
        getNode: _propTypes2.default.func,
        onFixedScrollSync: _propTypes2.default.func,
        getTableInstanceForFixed: _propTypes2.default.func,
        maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
    }, _temp2);
    FixedTable.displayName = 'FixedTable';

    (0, _util2.statics)(FixedTable, BaseComponent);
    return FixedTable;
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = selection;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _checkbox = __webpack_require__(48);

var _checkbox2 = _interopRequireDefault(_checkbox);

var _radio = __webpack_require__(49);

var _radio2 = _interopRequireDefault(_radio);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _row = __webpack_require__(182);

var _row2 = _interopRequireDefault(_row);

var _column = __webpack_require__(101);

var _column2 = _interopRequireDefault(_column);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var makeChain = _util.func.makeChain;

var unique = function unique(arr) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'this';

    var temp = {},
        ret = [];
    arr.forEach(function (item) {
        var value = void 0;
        if (key === 'this') {
            value = item;
        } else {
            value = item[key];
        }
        if (!temp[value]) {
            ret.push(item);
            temp[value] = true;
        }
    });
    return ret;
};

function selection(BaseComponent) {
    var _class, _temp;

    /** Table */
    var SelectionTable = (_temp = _class = function (_React$Component) {
        (0, _inherits3.default)(SelectionTable, _React$Component);

        function SelectionTable(props, context) {
            (0, _classCallCheck3.default)(this, SelectionTable);

            var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

            _this.addSelection = function (columns) {
                var _this$props = _this.props,
                    prefix = _this$props.prefix,
                    rowSelection = _this$props.rowSelection,
                    size = _this$props.size;

                var attrs = rowSelection.columnProps && rowSelection.columnProps() || {};

                if (!columns.find(function (record) {
                    return record.key === 'selection';
                })) {
                    columns.unshift((0, _extends3.default)({
                        key: 'selection',
                        title: _this.renderSelectionHeader.bind(_this),
                        cell: _this.renderSelectionBody.bind(_this),
                        width: size === 'small' ? 34 : 50,
                        className: prefix + 'table-selection ' + prefix + 'table-prerow',
                        __normalized: true
                    }, attrs));
                }
            };

            _this.renderSelectionHeader = function () {
                var onChange = _this.selectAllRow,
                    attrs = {},
                    _this$props2 = _this.props,
                    rowSelection = _this$props2.rowSelection,
                    primaryKey = _this$props2.primaryKey,
                    dataSource = _this$props2.dataSource,
                    entireDataSource = _this$props2.entireDataSource,
                    locale = _this$props2.locale,
                    selectedRowKeys = _this.state.selectedRowKeys,
                    mode = rowSelection.mode ? rowSelection.mode : 'multiple';

                var checked = !!selectedRowKeys.length;
                var indeterminate = false;

                var source = entireDataSource || dataSource;

                _this.flatDataSource(source).filter(function (record, index) {
                    if (!rowSelection.getProps) {
                        return true;
                    } else {
                        return !(rowSelection.getProps(record, index) || {}).disabled;
                    }
                }).map(function (record) {
                    return record[primaryKey];
                }).forEach(function (id) {
                    if (selectedRowKeys.indexOf(id) === -1) {
                        checked = false;
                    } else {
                        indeterminate = true;
                    }
                });
                attrs.onClick = makeChain(function (e) {
                    e.stopPropagation();
                }, attrs.onClick);

                var userAttrs = rowSelection.titleProps && rowSelection.titleProps() || {};

                if (checked) {
                    indeterminate = false;
                }
                return [mode === 'multiple' ? _react2.default.createElement(_checkbox2.default, (0, _extends3.default)({
                    key: '_total',
                    indeterminate: indeterminate,
                    'aria-label': locale.selectAll,
                    checked: checked,
                    onChange: onChange
                }, attrs, userAttrs)) : null, rowSelection.titleAddons && rowSelection.titleAddons()];
            };

            _this.renderSelectionBody = function (value, index, record) {
                var _this$props3 = _this.props,
                    rowSelection = _this$props3.rowSelection,
                    primaryKey = _this$props3.primaryKey;
                var selectedRowKeys = _this.state.selectedRowKeys;

                var mode = rowSelection.mode ? rowSelection.mode : 'multiple';
                var checked = selectedRowKeys.indexOf(record[primaryKey]) > -1;
                var onChange = _this.selectOneRow.bind(_this, index, record);
                var attrs = rowSelection.getProps ? rowSelection.getProps(record, index) || {} : {};

                attrs.onClick = makeChain(function (e) {
                    e.stopPropagation();
                }, attrs.onClick);
                return mode === 'multiple' ? _react2.default.createElement(_checkbox2.default, (0, _extends3.default)({ checked: checked, onChange: onChange }, attrs)) : _react2.default.createElement(_radio2.default, (0, _extends3.default)({ checked: checked, onChange: onChange }, attrs));
            };

            _this.selectAllRow = function (checked, e) {
                var ret = [].concat(_this.state.selectedRowKeys),
                    _this$props4 = _this.props,
                    rowSelection = _this$props4.rowSelection,
                    primaryKey = _this$props4.primaryKey,
                    dataSource = _this$props4.dataSource,
                    entireDataSource = _this$props4.entireDataSource,
                    selectedRowKeys = _this.state.selectedRowKeys,
                    getProps = rowSelection.getProps;

                var attrs = {},
                    records = [];

                var source = entireDataSource ? entireDataSource : dataSource;

                _this.flatDataSource(source).forEach(function (record, index) {
                    var id = record[primaryKey];
                    if (getProps) {
                        attrs = getProps(record, index) || {};
                    }
                    // 反选和全选的时候不要丢弃禁用项的选中状态
                    if (checked && (!attrs.disabled || selectedRowKeys.indexOf(id) > -1)) {
                        ret.push(id);
                        records.push(record);
                    } else if (attrs.disabled && selectedRowKeys.indexOf(id) > -1) {
                        ret.push(id);
                        records.push(record);
                    } else {
                        var i = ret.indexOf(id);
                        i > -1 && ret.splice(i, 1);
                    }
                });

                records = unique(records, primaryKey);
                if (typeof rowSelection.onSelectAll === 'function') {
                    rowSelection.onSelectAll(checked, records);
                }
                _this.triggerSelection(rowSelection, unique(ret), records);
                e.stopPropagation();
            };

            _this.state = {
                selectedRowKeys: props.rowSelection && 'selectedRowKeys' in props.rowSelection ? props.rowSelection.selectedRowKeys || [] : []
            };
            return _this;
        }

        SelectionTable.prototype.getChildContext = function getChildContext() {
            return {
                rowSelection: this.props.rowSelection,
                selectedRowKeys: this.state.selectedRowKeys
            };
        };

        SelectionTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {
                var selectedRowKeys = nextProps.rowSelection.selectedRowKeys || [];
                return {
                    selectedRowKeys: selectedRowKeys
                };
            }

            return null;
        };

        SelectionTable.prototype.normalizeChildren = function normalizeChildren(children) {
            var _props = this.props,
                prefix = _props.prefix,
                rowSelection = _props.rowSelection,
                size = _props.size;

            if (rowSelection) {
                children = _react.Children.map(children, function (child, index) {
                    return _react2.default.cloneElement(child, {
                        key: index
                    });
                });

                var attrs = rowSelection.columnProps && rowSelection.columnProps() || {};

                children.unshift(_react2.default.createElement(_column2.default, (0, _extends3.default)({
                    key: 'selection',
                    title: this.renderSelectionHeader.bind(this),
                    cell: this.renderSelectionBody.bind(this),
                    width: size === 'small' ? 34 : 50,
                    className: prefix + 'table-selection ' + prefix + 'table-prerow',
                    __normalized: true
                }, attrs)));
                return children;
            }
            return children;
        };

        SelectionTable.prototype.selectOneRow = function selectOneRow(index, record, checked, e) {
            var selectedRowKeys = [].concat(this.state.selectedRowKeys),
                i = void 0;
            var _props2 = this.props,
                primaryKey = _props2.primaryKey,
                rowSelection = _props2.rowSelection,
                dataSource = _props2.dataSource,
                entireDataSource = _props2.entireDataSource,
                mode = rowSelection.mode ? rowSelection.mode : 'multiple',
                id = record[primaryKey];

            if (id === null || id === undefined) {
                _util.log.warning('Can\'t get value from record using given ' + primaryKey + ' as primaryKey.');
            }
            if (mode === 'multiple') {
                if (checked) {
                    selectedRowKeys.push(id);
                } else {
                    i = selectedRowKeys.indexOf(id);
                    selectedRowKeys.splice(i, 1);
                }
            } else if (checked) {
                selectedRowKeys = [id];
            }
            var totalDS = dataSource;
            if (Array.isArray(entireDataSource) && entireDataSource.length > dataSource.length) {
                totalDS = entireDataSource;
            }
            var records = unique(totalDS.filter(function (item) {
                return selectedRowKeys.indexOf(item[primaryKey]) > -1;
            }), primaryKey);
            if (typeof rowSelection.onSelect === 'function') {
                rowSelection.onSelect(checked, record, records);
            }

            this.triggerSelection(rowSelection, selectedRowKeys, records);

            e.stopPropagation();
        };

        SelectionTable.prototype.triggerSelection = function triggerSelection(rowSelection, selectedRowKeys, records) {
            if (!('selectedRowKeys' in rowSelection)) {
                this.setState({
                    selectedRowKeys: selectedRowKeys
                });
            }
            if (typeof rowSelection.onChange === 'function') {
                rowSelection.onChange(selectedRowKeys, records);
            }
        };

        SelectionTable.prototype.flatDataSource = function flatDataSource(dataSource) {
            var ret = dataSource;
            var listHeader = this.context.listHeader;

            if (listHeader) {
                ret = [];
                var hasChildrenSelection = listHeader.hasChildrenSelection,
                    hasSelection = listHeader.hasSelection;

                dataSource.forEach(function (item) {
                    var children = item.children;
                    // 如果需要渲染selection才将这条记录插入到dataSource
                    // 或者没有孩子节点
                    if (hasSelection) {
                        ret.push(item);
                    }
                    if (children && hasChildrenSelection) {
                        ret = ret.concat(children);
                    }
                });
            }
            return ret;
        };

        SelectionTable.prototype.render = function render() {
            /* eslint-disable prefer-const */
            var _props3 = this.props,
                rowSelection = _props3.rowSelection,
                components = _props3.components,
                children = _props3.children,
                columns = _props3.columns,
                others = (0, _objectWithoutProperties3.default)(_props3, ['rowSelection', 'components', 'children', 'columns']);

            var useColumns = columns && !children;

            if (rowSelection) {
                if (useColumns) {
                    this.addSelection(columns);
                } else {
                    children = this.normalizeChildren(children || []);
                }
                components = (0, _extends3.default)({}, components);
                components.Row = components.Row || _row2.default;
            }
            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, { columns: columns, components: components, children: children }));
        };

        return SelectionTable;
    }(_react2.default.Component), _class.SelectionRow = _row2.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 是否启用选择模式
         * @property {Function} getProps `Function(record, index)=>Object` 获取selection的默认属性
         * @property {Function} onChange `Function(selectedRowKeys:Array, records:Array)` 选择改变的时候触发的事件，**注意:** 其中records只会包含当前dataSource的数据，很可能会小于selectedRowKeys的长度。
         * @property {Function} onSelect `Function(selected:Boolean, record:Object, records:Array)` 用户手动选择/取消选择某行的回调
         * @property {Function} onSelectAll `Function(selected:Boolean, records:Array)` 用户手动选择/取消选择所有行的回调
         * @property {Array} selectedRowKeys 设置了此属性,将rowSelection变为受控状态,接收值为该行数据的primaryKey的值
         * @property {String} mode 选择selection的模式, 可选值为`single`, `multiple`，默认为`multiple`
         * @property {Function} columnProps `Function()=>Object` 选择列 的props，例如锁列、对齐等，可使用`Table.Column` 的所有参数
         * @property {Function} titleProps `Function()=>Object` 选择列 表头的props，仅在 `multiple` 模式下生效
         */
        rowSelection: _propTypes2.default.object,
        primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
        dataSource: _propTypes2.default.array,
        entireDataSource: _propTypes2.default.array
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps, {
        locale: _zhCn2.default.Table,
        primaryKey: 'id',
        prefix: 'next-'
    }), _class.contextTypes = {
        listHeader: _propTypes2.default.any
    }, _class.childContextTypes = {
        rowSelection: _propTypes2.default.object,
        selectedRowKeys: _propTypes2.default.array
    }, _temp);
    SelectionTable.displayName = 'SelectionTable';

    (0, _util2.statics)(SelectionTable, BaseComponent);
    return (0, _reactLifecyclesCompat.polyfill)(SelectionTable);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = expanded;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _reactLifecyclesCompat = __webpack_require__(11);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _row = __webpack_require__(183);

var _row2 = _interopRequireDefault(_row);

var _column = __webpack_require__(101);

var _column2 = _interopRequireDefault(_column);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};

function expanded(BaseComponent, stickyLock) {
    var _class, _temp2;

    /** Table */
    var ExpandedTable = (_temp2 = _class = function (_React$Component) {
        (0, _inherits3.default)(ExpandedTable, _React$Component);

        function ExpandedTable() {
            var _temp, _this, _ret;

            (0, _classCallCheck3.default)(this, ExpandedTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
                openRowKeys: _this.props.openRowKeys || _this.props.defaultOpenRowKeys || []
            }, _this.saveExpandedRowRef = function (key, rowRef) {
                if (!_this.expandedRowRefs) {
                    _this.expandedRowRefs = {};
                }
                _this.expandedRowRefs[key] = rowRef;
            }, _this.setExpandedWidth = function () {
                var prefix = _this.props.prefix;

                var tableEl = _this.getTableNode();
                var totalWidth = +(tableEl && tableEl.clientWidth) - 1 || '100%';
                var bodyNode = tableEl && tableEl.querySelector('.' + prefix + 'table-body');

                Object.keys(_this.expandedRowRefs || {}).forEach(function (key) {
                    _util.dom.setStyle(_this.expandedRowRefs[key], { width: bodyNode && bodyNode.clientWidth || totalWidth });
                });
            }, _this.getTableInstance = function (instance) {
                _this.tableInc = instance;
            }, _this.expandedKeydown = function (value, record, index, e) {
                e.preventDefault();
                e.stopPropagation();

                if (e.keyCode === _util.KEYCODE.ENTER) {
                    _this.onExpandedClick(value, record, index, e);
                }
            }, _this.renderExpandedCell = function (value, index, record) {
                var _classnames;

                var _this$props = _this.props,
                    getExpandedColProps = _this$props.getExpandedColProps,
                    prefix = _this$props.prefix,
                    locale = _this$props.locale,
                    rowExpandable = _this$props.rowExpandable;

                if (typeof rowExpandable === 'function' && !rowExpandable(record, index)) {
                    return '';
                }

                var openRowKeys = _this.state.openRowKeys,
                    primaryKey = _this.props.primaryKey,
                    hasExpanded = openRowKeys.indexOf(record[primaryKey]) > -1,
                    switchNode = hasExpanded ? _react2.default.createElement(_icon2.default, { type: 'minus', size: 'xs', className: prefix + 'table-expand-unfold' }) : _react2.default.createElement(_icon2.default, { type: 'add', size: 'xs', className: prefix + 'table-expand-fold' }),
                    attrs = getExpandedColProps(record, index) || {};

                var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-expanded-ctrl'] = true, _classnames.disabled = attrs.disabled, _classnames[attrs.className] = attrs.className, _classnames));

                if (!attrs.disabled) {
                    attrs.onClick = _this.onExpandedClick.bind(_this, value, record, index);
                }
                return _react2.default.createElement('span', (0, _extends3.default)({}, attrs, {
                    role: 'button',
                    tabIndex: '0',
                    onKeyDown: _this.expandedKeydown.bind(_this, value, record, index),
                    'aria-label': hasExpanded ? locale.expanded : locale.folded,
                    'aria-expanded': hasExpanded,
                    className: cls
                }), switchNode);
            }, _this.addExpandCtrl = function (columns) {
                var _this$props2 = _this.props,
                    prefix = _this$props2.prefix,
                    size = _this$props2.size;

                if (!columns.find(function (record) {
                    return record.key === 'expanded';
                })) {
                    columns.unshift({
                        key: 'expanded',
                        title: '',
                        cell: _this.renderExpandedCell.bind(_this),
                        width: size === 'small' ? 34 : 50,
                        className: prefix + 'table-expanded ' + prefix + 'table-prerow',
                        __normalized: true
                    });
                }
            }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
        }

        ExpandedTable.prototype.getChildContext = function getChildContext() {
            return {
                openRowKeys: this.state.openRowKeys,
                expandedRowRender: this.props.expandedRowRender,
                expandedIndexSimulate: this.props.expandedIndexSimulate,
                expandedRowWidthEquals2Table: stickyLock,
                getExpandedRowRef: this.saveExpandedRowRef,
                getTableInstanceForExpand: this.getTableInstance,
                expandedRowIndent: stickyLock ? [0, 0] : this.props.expandedRowIndent
            };
        };

        ExpandedTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {
            if ('openRowKeys' in nextProps) {
                return {
                    openRowKeys: nextProps.openRowKeys || []
                };
            }

            return null;
        };

        ExpandedTable.prototype.componentDidMount = function componentDidMount() {
            this.setExpandedWidth();
            _util.events.on(window, 'resize', this.setExpandedWidth);
        };

        ExpandedTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.setExpandedWidth();
        };

        ExpandedTable.prototype.componentWillUnmount = function componentWillUnmount() {
            _util.events.off(window, 'resize', this.setExpandedWidth);
        };

        ExpandedTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        ExpandedTable.prototype.onExpandedClick = function onExpandedClick(value, record, i, e) {
            var openRowKeys = [].concat(this.state.openRowKeys),
                primaryKey = this.props.primaryKey,
                id = record[primaryKey],
                index = openRowKeys.indexOf(id);

            if (index > -1) {
                openRowKeys.splice(index, 1);
            } else {
                openRowKeys.push(id);
            }
            if (!('openRowKeys' in this.props)) {
                this.setState({
                    openRowKeys: openRowKeys
                });
            }
            this.props.onRowOpen(openRowKeys, id, index === -1, record);
            e.stopPropagation();
        };

        ExpandedTable.prototype.normalizeChildren = function normalizeChildren(children) {
            var _props = this.props,
                prefix = _props.prefix,
                size = _props.size;

            var toArrayChildren = _react.Children.map(children, function (child, index) {
                return _react2.default.cloneElement(child, {
                    key: index
                });
            });
            toArrayChildren.unshift(_react2.default.createElement(_column2.default, {
                title: '',
                key: 'expanded',
                cell: this.renderExpandedCell.bind(this),
                width: size === 'small' ? 34 : 50,
                className: prefix + 'table-expanded ' + prefix + 'table-prerow',
                __normalized: true
            }));
            return toArrayChildren;
        };

        ExpandedTable.prototype.normalizeDataSource = function normalizeDataSource(ds) {
            var ret = [];
            ds.forEach(function (item) {
                var itemCopy = (0, _extends3.default)({}, item);
                itemCopy.__expanded = true;
                ret.push(item, itemCopy);
            });
            return ret;
        };

        ExpandedTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                components = _props2.components,
                openRowKeys = _props2.openRowKeys,
                expandedRowRender = _props2.expandedRowRender,
                rowExpandable = _props2.rowExpandable,
                hasExpandedRowCtrl = _props2.hasExpandedRowCtrl,
                children = _props2.children,
                columns = _props2.columns,
                dataSource = _props2.dataSource,
                entireDataSource = _props2.entireDataSource,
                getExpandedColProps = _props2.getExpandedColProps,
                expandedRowIndent = _props2.expandedRowIndent,
                onRowOpen = _props2.onRowOpen,
                onExpandedRowClick = _props2.onExpandedRowClick,
                others = (0, _objectWithoutProperties3.default)(_props2, ['components', 'openRowKeys', 'expandedRowRender', 'rowExpandable', 'hasExpandedRowCtrl', 'children', 'columns', 'dataSource', 'entireDataSource', 'getExpandedColProps', 'expandedRowIndent', 'onRowOpen', 'onExpandedRowClick']);

            if (expandedRowRender && !components.Row) {
                components = (0, _extends3.default)({}, components);
                components.Row = _row2.default;
                dataSource = this.normalizeDataSource(dataSource);
                entireDataSource = this.normalizeDataSource(entireDataSource);
            }
            if (expandedRowRender && hasExpandedRowCtrl) {
                var useColumns = columns && !children;

                if (useColumns) {
                    this.addExpandCtrl(columns);
                } else {
                    children = this.normalizeChildren(children || []);
                }
            }

            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                columns: columns,
                dataSource: dataSource,
                entireDataSource: entireDataSource,
                components: components
            }), children);
        };

        return ExpandedTable;
    }(_react2.default.Component), _class.ExpandedRow = _row2.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 额外渲染行的渲染函数
         * @param {Object} record 该行所对应的数据
         * @param {Number} index 该行所对应的序列
         * @returns {Element}
         */
        expandedRowRender: _propTypes2.default.func,
        /**
         * 设置行是否可展开，设置 false 为不可展开
         * @param {Object} record 该行所对应的数据
         * @param {Number} index 该行所对应的序列
         * @returns {Boolean} 是否可展开
         * @version 1.21
         */
        rowExpandable: _propTypes2.default.func,
        /**
         * 额外渲染行的缩进
         */
        expandedRowIndent: _propTypes2.default.array,
        /**
         * 默认情况下展开的渲染行或者Tree, 传入此属性为受控状态
         */
        openRowKeys: _propTypes2.default.array,
        /**
         * 默认情况下展开的 Expand行 或者 Tree行，非受控模式
         * @version 1.23.22
         */
        defaultOpenRowKeys: _propTypes2.default.array,
        /**
         * 是否显示点击展开额外渲染行的+号按钮
         */
        hasExpandedRowCtrl: _propTypes2.default.bool,
        /**
         * 设置额外渲染行的属性
         */
        getExpandedColProps: _propTypes2.default.func,
        /**
         * 在额外渲染行或者Tree展开或者收起的时候触发的事件
         * @param {Array} openRowKeys 展开的渲染行的key
         * @param {String} currentRowKey 当前点击的渲染行的key
         * @param {Boolean} expanded 当前点击是展开还是收起
         * @param {Object} currentRecord 当前点击额外渲染行的记录
         */
        onRowOpen: _propTypes2.default.func,
        onExpandedRowClick: _propTypes2.default.func,
        locale: _propTypes2.default.object
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps, {
        getExpandedColProps: noop,
        onRowOpen: noop,
        hasExpandedRowCtrl: true,
        components: {},
        expandedRowIndent: stickyLock ? [0, 0] : [1, 0],
        prefix: 'next-'
    }), _class.childContextTypes = {
        openRowKeys: _propTypes2.default.array,
        expandedRowRender: _propTypes2.default.func,
        expandedIndexSimulate: _propTypes2.default.bool,
        expandedRowWidthEquals2Table: _propTypes2.default.bool,
        expandedRowIndent: _propTypes2.default.array,
        getExpandedRowRef: _propTypes2.default.func,
        getTableInstanceForExpand: _propTypes2.default.func
    }, _temp2);
    ExpandedTable.displayName = 'ExpandedTable';

    (0, _util2.statics)(ExpandedTable, BaseComponent);
    return (0, _reactLifecyclesCompat.polyfill)(ExpandedTable);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = virtual;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _util = __webpack_require__(4);

var _body = __webpack_require__(423);

var _body2 = _interopRequireDefault(_body);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};
function virtual(BaseComponent) {
    var _class, _temp;

    var VirtualTable = (_temp = _class = function (_React$Component) {
        (0, _inherits3.default)(VirtualTable, _React$Component);

        function VirtualTable(props, context) {
            (0, _classCallCheck3.default)(this, VirtualTable);

            var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

            _this.onScroll = function () {
                // 避免横向滚动带来的性能问题
                var scrollTop = _this.bodyNode.scrollTop;
                if (scrollTop === _this.lastScrollTop) {
                    return;
                }
                var start = _this.computeScrollToRow(scrollTop);
                if (!('scrollToRow' in _this.props)) {
                    _this.setState({
                        scrollToRow: start
                    });
                }
                _this.props.onBodyScroll(start);
                _this.lastScrollTop = scrollTop;
            };

            _this.getBodyNode = function (node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['body' + lockType + 'Node'] = node;
            };

            _this.getTableInstance = function (type, instance) {
                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
                _this['table' + type + 'Inc'] = instance;
            };

            var useVirtual = props.useVirtual,
                dataSource = props.dataSource;

            var hasVirtualData = useVirtual && dataSource && dataSource.length > 0;

            _this.state = {
                rowHeight: _this.props.rowHeight,
                scrollToRow: _this.props.scrollToRow,
                height: _this.props.maxBodyHeight,
                hasVirtualData: hasVirtualData
            };
            return _this;
        }

        VirtualTable.prototype.getChildContext = function getChildContext() {
            return {
                onVirtualScroll: this.onScroll,
                bodyHeight: this.computeBodyHeight(),
                innerTop: this.computeInnerTop(),
                getBodyNode: this.getBodyNode,
                getTableInstanceForVirtual: this.getTableInstance,
                rowSelection: this.rowSelection
            };
        };

        VirtualTable.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
            var state = {};

            if ('maxBodyHeight' in nextProps) {
                if (prevState.height !== nextProps.maxBodyHeight) {
                    state.height = nextProps.maxBodyHeight;
                }
            }

            if ('scrollToRow' in nextProps) {
                state.scrollToRow = nextProps.scrollToRow;
            }

            if (prevState.useVirtual !== nextProps.useVirtual || prevState.dataSource !== nextProps.dataSource) {
                state.hasVirtualData = nextProps.useVirtual && nextProps.dataSource && nextProps.dataSource.length > 0;
            }

            return state;
        };

        VirtualTable.prototype.componentDidMount = function componentDidMount() {
            if (this.state.hasVirtualData && this.bodyNode) {
                this.lastScrollTop = this.bodyNode.scrollTop;
            } else {
                this.lastScrollTop = 0;
            }

            this.adjustScrollTop();
            this.adjustSize();
            this.reComputeSize();
        };

        VirtualTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustScrollTop();
            this.adjustSize();
            this.reComputeSize();
        };

        VirtualTable.prototype.reComputeSize = function reComputeSize() {
            var _state = this.state,
                rowHeight = _state.rowHeight,
                hasVirtualData = _state.hasVirtualData;

            if (typeof rowHeight === 'function' && hasVirtualData) {
                var row = this.getRowNode();
                var rowClientHeight = row && row.clientHeight;
                if (rowClientHeight !== this.state.rowHeight) {
                    this.setState({
                        rowHeight: rowClientHeight
                    });
                }
            }
        };

        VirtualTable.prototype.computeBodyHeight = function computeBodyHeight() {
            var rowHeight = this.state.rowHeight;
            var dataSource = this.props.dataSource;

            if (typeof rowHeight === 'function') {
                return 0;
            }
            var count = 0;
            dataSource.forEach(function (item) {
                if (!item.__hidden) {
                    count += 1;
                }
            });
            return count * rowHeight;
        };

        VirtualTable.prototype.computeInnerTop = function computeInnerTop() {
            var keepForwardRenderRows = this.props.keepForwardRenderRows;
            var rowHeight = this.state.rowHeight;

            if (typeof rowHeight === 'function') {
                return 0;
            }

            var start = Math.max(this.start - keepForwardRenderRows, 0);

            return start * rowHeight;
        };

        VirtualTable.prototype.getVisibleRange = function getVisibleRange(ExpectStart) {
            var _state2 = this.state,
                height = _state2.height,
                rowHeight = _state2.rowHeight;

            var len = this.props.dataSource.length;

            var end = void 0,
                visibleCount = 0;
            var start = 0;
            if (typeof rowHeight === 'function') {
                // try get cell height;
                end = 1;
            } else {
                visibleCount = parseInt(_util.dom.getPixels(height) / rowHeight, 10);

                if ('number' === typeof ExpectStart) {
                    start = ExpectStart < len ? ExpectStart : 0;
                }

                end = Math.min(+start + 1 + visibleCount + 10, len);
            }
            this.end = end;
            this.visibleCount = visibleCount;
            return {
                start: start,
                end: end
            };
        };

        VirtualTable.prototype.adjustScrollTop = function adjustScrollTop() {
            var _state3 = this.state,
                rowHeight = _state3.rowHeight,
                hasVirtualData = _state3.hasVirtualData,
                scrollToRow = _state3.scrollToRow;

            var oldScrollToRow = Math.floor(this.lastScrollTop / rowHeight);
            if (hasVirtualData && this.bodyNode) {
                //根据上次lastScrollTop记录的位置计算而来的scrollToRow位置不准 则以最新的scrollToRow为准重新校准位置（可能是由非用户滚动事件导致的props.scrollToRow发生了变化）
                if (oldScrollToRow !== scrollToRow) {
                    this.bodyNode.scrollTop = rowHeight * scrollToRow;
                } else {
                    this.bodyNode.scrollTop = this.lastScrollTop % rowHeight + rowHeight * scrollToRow;
                }
            }
        };

        VirtualTable.prototype.adjustSize = function adjustSize() {
            if (this.state.hasVirtualData && this.bodyNode) {
                var body = this.bodyNode;
                var virtualScrollNode = body.querySelector('div');
                var clientHeight = body.clientHeight,
                    clientWidth = body.clientWidth;

                var tableInc = this.tableInc;
                var tableNode = (0, _reactDom.findDOMNode)(tableInc);
                var prefix = this.props.prefix;

                var headerNode = tableNode.querySelector('.' + prefix + 'table-header table');
                var headerClientWidth = headerNode && headerNode.clientWidth;
                // todo 2.0 设置宽度这个可以去掉
                if (clientWidth < headerClientWidth) {
                    _util.dom.setStyle(virtualScrollNode, 'min-width', headerClientWidth);
                    var leftNode = this.bodyLeftNode;
                    var rightNode = this.bodyRightNode;
                    leftNode && _util.dom.setStyle(leftNode, 'max-height', clientHeight);
                    rightNode && _util.dom.setStyle(rightNode, 'max-height', clientHeight);
                } else {
                    _util.dom.setStyle(virtualScrollNode, 'min-width', 'auto');
                }
            }
        };

        VirtualTable.prototype.computeScrollToRow = function computeScrollToRow(offset) {
            var rowHeight = this.state.rowHeight;

            var start = parseInt(offset / rowHeight);
            this.start = start;
            return start;
        };

        VirtualTable.prototype.getRowNode = function getRowNode() {
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of this.tableInc when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(this.tableInc.getRowRef(0));
            } catch (error) {
                return null;
            }
        };

        VirtualTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props = this.props,
                useVirtual = _props.useVirtual,
                components = _props.components,
                dataSource = _props.dataSource,
                fixedHeader = _props.fixedHeader,
                rowHeight = _props.rowHeight,
                scrollToRow = _props.scrollToRow,
                onBodyScroll = _props.onBodyScroll,
                keepForwardRenderRows = _props.keepForwardRenderRows,
                others = (0, _objectWithoutProperties3.default)(_props, ['useVirtual', 'components', 'dataSource', 'fixedHeader', 'rowHeight', 'scrollToRow', 'onBodyScroll', 'keepForwardRenderRows']);

            var entireDataSource = dataSource;
            var newDataSource = dataSource;

            this.rowSelection = this.props.rowSelection;
            if (this.state.hasVirtualData) {
                newDataSource = [];
                components = (0, _extends3.default)({}, components);

                var _getVisibleRange = this.getVisibleRange(this.state.scrollToRow),
                    start = _getVisibleRange.start,
                    end = _getVisibleRange.end;

                var count = -1;
                dataSource.forEach(function (current, index, record) {
                    if (!current.__hidden) {
                        count += 1;
                        if (count >= Math.max(start - keepForwardRenderRows, 0) && count < end) {
                            newDataSource.push(current);
                        }
                    }
                    current.__rowIndex = index;
                });

                if (!components.Body) {
                    components.Body = _body2.default;
                }
                fixedHeader = true;
            }

            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                scrollToRow: scrollToRow,
                dataSource: newDataSource,
                entireDataSource: entireDataSource,
                components: components,
                fixedHeader: fixedHeader
            }));
        };

        return VirtualTable;
    }(_react2.default.Component), _class.VirtualBody = _body2.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 是否开启虚拟滚动
         */
        useVirtual: _propTypes2.default.bool,
        /**
         * 设置行高
         */
        rowHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),
        maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
        primaryKey: _propTypes2.default.oneOfType([_propTypes2.default.symbol, _propTypes2.default.string]),
        dataSource: _propTypes2.default.array,
        /**
         * 在内容区域滚动的时候触发的函数
         */
        onBodyScroll: _propTypes2.default.func,
        keepForwardRenderRows: _propTypes2.default.number
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps, {
        primaryKey: 'id',
        rowHeight: noop,
        maxBodyHeight: 200,
        components: {},
        prefix: 'next-',
        onBodyScroll: noop,
        keepForwardRenderRows: 10
    }), _class.childContextTypes = {
        onVirtualScroll: _propTypes2.default.func,
        bodyHeight: _propTypes2.default.number,
        innerTop: _propTypes2.default.number,
        getBodyNode: _propTypes2.default.func,
        getTableInstanceForVirtual: _propTypes2.default.func,
        rowSelection: _propTypes2.default.object
    }, _temp);
    VirtualTable.displayName = 'VirtualTable';

    (0, _util2.statics)(VirtualTable, BaseComponent);
    return (0, _reactLifecyclesCompat.polyfill)(VirtualTable);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _body = __webpack_require__(62);

var _body2 = _interopRequireDefault(_body);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function */
var VirtualBody = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(VirtualBody, _React$Component);

    function VirtualBody() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, VirtualBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.tableRef = function (table) {
            _this.tableNode = table;
        }, _this.virtualScrollRef = function (virtualScroll) {
            _this.virtualScrollNode = virtualScroll;
        }, _this.onScroll = function (current) {
            // for fixed
            _this.context.onFixedScrollSync(current);
            // for lock
            _this.context.onLockBodyScroll(current);
            // for virtual
            _this.context.onVirtualScroll();
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    VirtualBody.prototype.componentDidMount = function componentDidMount() {
        var bodyNode = (0, _reactDom.findDOMNode)(this);
        // // for fixed
        this.context.getNode('body', bodyNode);
        // for virtual
        this.context.getBodyNode(bodyNode, this.context.lockType);
        // for lock
        this.context.getLockNode('body', bodyNode, this.context.lockType);
    };

    VirtualBody.prototype.render = function render() {
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            colGroup = _props.colGroup,
            tableWidth = _props.tableWidth,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'colGroup', 'tableWidth']);
        var _context = this.context,
            maxBodyHeight = _context.maxBodyHeight,
            bodyHeight = _context.bodyHeight,
            innerTop = _context.innerTop;

        var style = {
            width: tableWidth
        };
        var wrapperStyle = {
            position: 'relative'
        };
        // todo 2.0 ，这里最好自己画滚动条
        if (bodyHeight > maxBodyHeight) {
            wrapperStyle.height = bodyHeight;
        }
        return _react2.default.createElement('div', { style: { maxHeight: maxBodyHeight }, className: className, onScroll: this.onScroll }, _react2.default.createElement('div', { style: wrapperStyle, ref: this.virtualScrollRef }, _react2.default.createElement('div', {
            style: {
                position: 'relative',
                transform: 'translateY(' + innerTop + 'px)',
                willChange: 'transform'
            }
        }, _react2.default.createElement('table', { ref: this.tableRef, style: style }, colGroup, _react2.default.createElement(_body2.default, (0, _extends3.default)({}, others, { prefix: prefix }))))));
    };

    return VirtualBody;
}(_react2.default.Component), _class.propTypes = {
    children: _propTypes2.default.any,
    prefix: _propTypes2.default.string,
    className: _propTypes2.default.string,
    colGroup: _propTypes2.default.any,
    tableWidth: _propTypes2.default.number
}, _class.contextTypes = {
    maxBodyHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    onBodyScroll: _propTypes2.default.func,
    onFixedScrollSync: _propTypes2.default.func,
    onVirtualScroll: _propTypes2.default.func,
    onLockBodyScroll: _propTypes2.default.func,
    bodyHeight: _propTypes2.default.number,
    innerTop: _propTypes2.default.number,
    getNode: _propTypes2.default.func,
    getBodyNode: _propTypes2.default.func,
    getLockNode: _propTypes2.default.func,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}, _temp2);
VirtualBody.displayName = 'VirtualBody';
exports.default = VirtualBody;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = lock;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _shallowElementEquals = __webpack_require__(100);

var _shallowElementEquals2 = _interopRequireDefault(_shallowElementEquals);

var _util = __webpack_require__(4);

var _row = __webpack_require__(102);

var _row2 = _interopRequireDefault(_row);

var _body = __webpack_require__(185);

var _body2 = _interopRequireDefault(_body);

var _header = __webpack_require__(186);

var _header2 = _interopRequireDefault(_header);

var _wrapper = __webpack_require__(66);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var ieVersion = _util.env.ieVersion;
function lock(BaseComponent) {
    var _class, _temp;

    /** Table */
    var LockTable = (_temp = _class = function (_React$Component) {
        (0, _inherits3.default)(LockTable, _React$Component);

        function LockTable(props, context) {
            (0, _classCallCheck3.default)(this, LockTable);

            var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props, context));

            _this.state = {};

            _this.getTableInstance = function (type, instance) {
                type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
                _this['table' + type + 'Inc'] = instance;
            };

            _this.getNode = function (type, node, lockType) {
                lockType = lockType ? lockType.charAt(0).toUpperCase() + lockType.substr(1) : '';
                _this['' + type + lockType + 'Node'] = node;
                if (type === 'header' && !_this.innerHeaderNode && !lockType) {
                    _this.innerHeaderNode = _this.headerNode.querySelector('div');
                }
            };

            _this.onRowMouseEnter = function (record, index) {
                if (_this.isLock()) {
                    var row = _this.getRowNode(index);
                    var leftRow = _this.getRowNode(index, 'left');
                    var rightRow = _this.getRowNode(index, 'right');
                    [row, leftRow, rightRow].forEach(function (row) {
                        row && _util.dom.addClass(row, 'hovered');
                    });
                }
            };

            _this.onRowMouseLeave = function (record, index) {
                if (_this.isLock()) {
                    var row = _this.getRowNode(index);
                    var leftRow = _this.getRowNode(index, 'left');
                    var rightRow = _this.getRowNode(index, 'right');
                    [row, leftRow, rightRow].forEach(function (row) {
                        row && _util.dom.removeClass(row, 'hovered');
                    });
                }
            };

            _this.onLockBodyScrollTop = function (event) {
                // set scroll top for lock columns & main body
                var target = event.target;
                if (event.currentTarget !== target) {
                    return;
                }
                var distScrollTop = target.scrollTop;

                if (_this.isLock() && distScrollTop !== _this.lastScrollTop) {
                    var lockRightBody = _this.bodyRightNode,
                        lockLeftBody = _this.bodyLeftNode,
                        bodyNode = _this.bodyNode;

                    var arr = [lockLeftBody, lockRightBody, bodyNode];

                    arr.forEach(function (node) {
                        if (node && node.scrollTop !== distScrollTop) {
                            node.scrollTop = distScrollTop;
                        }
                    });

                    _this.lastScrollTop = distScrollTop;
                }
            };

            _this.onLockBodyScrollLeft = function () {
                // add shadow class for lock columns
                if (_this.isLock()) {
                    var rtl = _this.props.rtl;

                    var lockRightTable = rtl ? _this.getWrapperNode('left') : _this.getWrapperNode('right'),
                        lockLeftTable = rtl ? _this.getWrapperNode('right') : _this.getWrapperNode('left'),
                        shadowClassName = 'shadow';

                    var x = _this.bodyNode.scrollLeft;

                    if (x === 0) {
                        lockLeftTable && _util.dom.removeClass(lockLeftTable, shadowClassName);
                        lockRightTable && _util.dom.addClass(lockRightTable, shadowClassName);
                    } else if (x === _this.bodyNode.scrollWidth - _this.bodyNode.clientWidth) {
                        lockLeftTable && _util.dom.addClass(lockLeftTable, shadowClassName);
                        lockRightTable && _util.dom.removeClass(lockRightTable, shadowClassName);
                    } else {
                        lockLeftTable && _util.dom.addClass(lockLeftTable, shadowClassName);
                        lockRightTable && _util.dom.addClass(lockRightTable, shadowClassName);
                    }
                }
            };

            _this.onLockBodyScroll = function (event) {
                _this.onLockBodyScrollTop(event);
                _this.onLockBodyScrollLeft();
            };

            _this.adjustSize = function () {
                if (!_this.adjustIfTableNotNeedLock()) {
                    _this.adjustHeaderSize();
                    _this.adjustBodySize();
                    _this.adjustRowHeight();
                    _this.onLockBodyScrollLeft();
                }
            };

            _this.getFlatenChildrenLength = function () {
                var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

                var loop = function loop(arr) {
                    var newArray = [];
                    arr.forEach(function (child) {
                        if (child && child.children) {
                            newArray.push.apply(newArray, loop(child.children));
                        } else {
                            newArray.push(child);
                        }
                    });
                    return newArray;
                };

                return loop(children).length;
            };

            _this.saveLockLeftRef = function (ref) {
                _this.lockLeftEl = ref;
            };

            _this.saveLockRightRef = function (ref) {
                _this.lockRightEl = ref;
            };

            _this.lockLeftChildren = [];
            _this.lockRightChildren = [];
            return _this;
        }

        LockTable.prototype.getChildContext = function getChildContext() {
            return {
                getTableInstance: this.getTableInstance,
                getLockNode: this.getNode,
                onLockBodyScroll: this.onLockBodyScroll,
                onRowMouseEnter: this.onRowMouseEnter,
                onRowMouseLeave: this.onRowMouseLeave
            };
        };

        LockTable.prototype.componentDidMount = function componentDidMount() {
            _util.events.on(window, 'resize', this.adjustSize);

            this.scroll();
            this.adjustSize();
            this.forceUpdate();
        };

        LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
            if (nextProps.pure) {
                var isEqual = (0, _shallowElementEquals2.default)(nextProps, this.props);
                return !(isEqual && _util.obj.shallowEqual(nextContext, this.context));
            }

            return true;
        };

        LockTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.adjustSize();
            this._isLock = false;
        };

        LockTable.prototype.componentWillUnmount = function componentWillUnmount() {
            _util.events.off(window, 'resize', this.adjustSize);
        };

        LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
            var columns = this.normalizeChildren(props);
            var splitChildren = this.splitFromNormalizeChildren(columns);
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;

            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                children: this.mergeFromSplitLockChildren(splitChildren)
            };
        };

        // 将React结构化数据提取props转换成数组


        LockTable.prototype.normalizeChildren = function normalizeChildren(props) {
            var children = props.children,
                columns = props.columns;

            var isLock = false,
                ret = void 0;
            var checkLock = function checkLock(col) {
                if ([true, 'left', 'right'].indexOf(col.lock) > -1) {
                    if (!('width' in col)) {
                        _util.log.warning('Should config width for lock column named [ ' + col.dataIndex + ' ].');
                    }
                    isLock = true;
                }
            };
            if (columns && !children) {
                ret = columns;

                var getColumns = function getColumns(cols) {
                    cols.forEach(function () {
                        var col = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                        checkLock(col);

                        if (col.children) {
                            getColumns(col.children);
                        }
                    });
                };

                getColumns(columns);
            } else {
                var getChildren = function getChildren(children) {
                    var ret = [];
                    _react.Children.forEach(children, function (child) {
                        if (child) {
                            var _props = (0, _extends3.default)({}, child.props);
                            checkLock(_props);
                            ret.push(_props);
                            if (child.props.children) {
                                _props.children = getChildren(child.props.children);
                            }
                        }
                    });
                    return ret;
                };

                ret = getChildren(children);
            }

            ret.forEach(function (child) {
                // 为自定义的列特殊处理
                if (child.__normalized && isLock) {
                    // users can set lock type for column selection now, so its origin lock type comes first
                    child.lock = child.lock || 'left';
                    delete child.__normalized;
                }
            });
            this._isLock = isLock;
            return ret;
        };

        //从数组中分离出lock的列和正常的列


        LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {
            var originChildren = deepCopy(children);
            var lockLeftChildren = deepCopy(children);
            var lockRightChildren = deepCopy(children);
            var loop = function loop(lockChildren, condition) {
                var ret = [];
                lockChildren.forEach(function (child) {
                    if (child.children) {
                        var res = loop(child.children, condition);
                        if (!res.length) {
                            ret.push(child);
                        }
                    } else {
                        var order = condition(child);
                        if (!order) {
                            ret.push(child);
                        }
                    }
                });
                ret.forEach(function (res) {
                    var index = lockChildren.indexOf(res);
                    lockChildren.splice(index, 1);
                });
                return lockChildren;
            };
            loop(lockLeftChildren, function (child) {
                if (child.lock === true || child.lock === 'left') {
                    return 'left';
                }
            });
            loop(lockRightChildren, function (child) {
                if (child.lock === 'right') {
                    return 'right';
                }
            });
            loop(originChildren, function (child) {
                return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';
            });
            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                originChildren: originChildren
            };
        };

        //将左侧的锁列树和中间的普通树及右侧的锁列树进行合并


        LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren) {
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;
            var originChildren = splitChildren.originChildren;

            Array.prototype.unshift.apply(originChildren, lockLeftChildren);
            originChildren = originChildren.concat(lockRightChildren);
            return originChildren;
        };

        LockTable.prototype.scroll = function scroll() {
            var _props2 = this.props,
                _props2$scrollToCol = _props2.scrollToCol,
                scrollToCol = _props2$scrollToCol === undefined ? 0 : _props2$scrollToCol,
                _props2$scrollToRow = _props2.scrollToRow,
                scrollToRow = _props2$scrollToRow === undefined ? 0 : _props2$scrollToRow;

            if (!scrollToCol && !scrollToRow || !this.bodyNode) {
                return;
            }
            var colCellNode = this.getCellNode(0, scrollToCol);
            var rowCellNode = this.getCellNode(scrollToRow, 0);
            var bodyNodeOffset = this.bodyNode.getBoundingClientRect() || {};
            if (colCellNode) {
                var cellNodeoffset = colCellNode.getBoundingClientRect();
                var scrollLeft = cellNodeoffset.left - bodyNodeOffset.left;
                this.bodyNode.scrollLeft = scrollLeft;
            }
            if (rowCellNode) {
                var _cellNodeoffset = rowCellNode.getBoundingClientRect();
                var scrollTop = _cellNodeoffset.top - bodyNodeOffset.top;
                this.bodyNode.scrollTop = scrollTop;
            }
        };

        // Table处理过后真实的lock状态
        LockTable.prototype.isLock = function isLock() {
            return this.lockLeftChildren.length || this.lockRightChildren.length;
        };

        // 用户设置的lock状态


        LockTable.prototype.isOriginLock = function isOriginLock() {
            return this._isLock;
        };

        LockTable.prototype.removeLockTable = function removeLockTable() {
            var lockLeftLen = this.lockLeftChildren.length;
            var lockRightLen = this.lockRightChildren.length;

            if (lockLeftLen) {
                this._notNeedAdjustLockLeft = true;
            }
            if (lockRightLen) {
                this._notNeedAdjustLockRight = true;
            }
            if (lockRightLen || lockLeftLen) {
                this.forceUpdate();
                return true;
            }
        };

        LockTable.prototype.adjustIfTableNotNeedLock = function adjustIfTableNotNeedLock() {
            var _this2 = this;

            if (this.isOriginLock()) {
                var widthObj = this.tableInc.flatChildren.map(function (item, index) {
                    var cell = _this2.getCellNode(0, index) || {};
                    var headerCell = _this2.getHeaderCellNode(0, index) || {};

                    // fix https://codesandbox.io/s/fusion-next-template-d9bu8
                    // close #1832
                    try {
                        return {
                            cellWidths: parseFloat(getComputedStyle(cell).width) || 0,
                            headerWidths: parseFloat(getComputedStyle(headerCell).width) || 0
                        };
                    } catch (error) {
                        return {
                            cellWidths: cell.clientWidth || 0,
                            headerWidths: headerCell.clientWidth || 0
                        };
                    }
                }).reduce(function (a, b) {
                    return {
                        cellWidths: a.cellWidths + b.cellWidths,
                        headerWidths: a.headerWidths + b.headerWidths
                    };
                }, {
                    cellWidths: 0,
                    headerWidths: 0
                });

                var node = void 0,
                    width = void 0;

                try {
                    node = (0, _reactDom.findDOMNode)(this);
                    width = node.clientWidth;
                } catch (err) {
                    node = null;
                    width = 0;
                }

                // if the table doesn't exist, there is no need to adjust
                if (width === 0) {
                    return true;
                }

                var configWidths = parseInt(widthObj.cellWidths) || parseInt(widthObj.headerWidths);

                if (configWidths <= width && configWidths > 0) {
                    this.removeLockTable();
                } else if (this._notNeedAdjustLockLeft || this._notNeedAdjustLockRight) {
                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;
                    this.forceUpdate();
                } else {
                    this._notNeedAdjustLockLeft = this._notNeedAdjustLockRight = false;
                    return false;
                }
            }

            return false;
        };

        LockTable.prototype.adjustBodySize = function adjustBodySize() {
            var _style;

            var _props3 = this.props,
                rtl = _props3.rtl,
                hasHeader = _props3.hasHeader;

            var header = this.headerNode;
            var paddingName = rtl ? 'paddingLeft' : 'paddingRight';
            var marginName = rtl ? 'marginLeft' : 'marginRight';
            var scrollBarSize = +_util.dom.scrollbar().width || 0;
            var style = (_style = {}, _style[paddingName] = scrollBarSize, _style[marginName] = scrollBarSize, _style);
            var body = this.bodyNode,
                hasVerScroll = body && body.scrollHeight > body.clientHeight;

            if (this.isLock()) {
                var lockLeftBody = this.bodyLeftNode,
                    lockRightBody = this.bodyRightNode,
                    lockRightBodyWrapper = this.getWrapperNode('right'),
                    bodyHeight = body.offsetHeight,
                    width = hasVerScroll ? scrollBarSize : 0,
                    lockBodyHeight = bodyHeight - scrollBarSize;

                if (!hasVerScroll) {
                    style[paddingName] = 0;
                    style[marginName] = 0;
                }
                if (+scrollBarSize) {
                    style.marginBottom = -scrollBarSize;
                    style.paddingBottom = scrollBarSize;
                } else {
                    style.marginBottom = -20;
                    style.paddingBottom = 20;
                }

                var lockStyle = {
                    'max-height': lockBodyHeight
                };
                if (!hasHeader && !+scrollBarSize) {
                    lockStyle[marginName] = 0;
                }
                if (+scrollBarSize) {
                    lockStyle[marginName] = -scrollBarSize;
                }
                lockLeftBody && _util.dom.setStyle(lockLeftBody, lockStyle);
                lockRightBody && _util.dom.setStyle(lockRightBody, lockStyle);
                lockRightBodyWrapper && +scrollBarSize && _util.dom.setStyle(lockRightBodyWrapper, rtl ? 'left' : 'right', width + 'px');
            } else {
                style.marginBottom = -scrollBarSize;
                style.paddingBottom = scrollBarSize;
                style[marginName] = 0;
                if (!hasVerScroll) {
                    style[paddingName] = 0;
                }
            }

            header && _util.dom.setStyle(header, style);
        };

        LockTable.prototype.adjustHeaderSize = function adjustHeaderSize() {
            var _this3 = this;

            if (this.isLock()) {
                this.tableInc.groupChildren.forEach(function (child, index) {
                    var lastIndex = _this3.tableInc.groupChildren[index].length - 1;
                    var headerRightRow = _this3.getHeaderCellNode(index, lastIndex),
                        headerLeftRow = _this3.getHeaderCellNode(index, 0),
                        headerRightLockRow = _this3.getHeaderCellNode(index, 0, 'right'),
                        headerLeftLockRow = _this3.getHeaderCellNode(index, 0, 'left');

                    if (headerRightRow && headerRightLockRow) {
                        var maxRightRowHeight = headerRightRow.offsetHeight;

                        _util.dom.setStyle(headerRightLockRow, 'height', maxRightRowHeight);

                        setTimeout(function () {
                            var affixRef = _this3.tableRightInc.affixRef;
                            // if rendered then update postion of affix
                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();
                        });
                    }

                    if (headerLeftRow && headerLeftLockRow) {
                        var maxLeftRowHeight = headerLeftRow.offsetHeight;

                        _util.dom.setStyle(headerLeftLockRow, 'height', maxLeftRowHeight);

                        setTimeout(function () {
                            var affixRef = _this3.tableLeftInc.affixRef;
                            // if rendered then update postion of affix
                            return affixRef && affixRef.getInstance() && affixRef.getInstance().updatePosition();
                        });
                    }
                });
            }
        };

        LockTable.prototype.adjustRowHeight = function adjustRowHeight() {
            var _this4 = this;

            if (this.isLock()) {
                this.tableInc.props.dataSource.forEach(function (item, index) {
                    // record may be a string
                    var rowIndex = '' + ((typeof item === 'undefined' ? 'undefined' : (0, _typeof3.default)(item)) === 'object' && '__rowIndex' in item ? item.__rowIndex : index) + (item.__expanded ? '_expanded' : '');

                    // 同步左侧的锁列
                    _this4.setRowHeight(rowIndex, 'left');
                    // 同步右侧的锁列
                    _this4.setRowHeight(rowIndex, 'right');
                });
            }
        };

        LockTable.prototype.setRowHeight = function setRowHeight(rowIndex, dir) {
            var lockRow = this.getRowNode(rowIndex, dir),
                row = this.getRowNode(rowIndex),
                rowHeight = (ieVersion ? row && row.offsetHeight : row && parseFloat(getComputedStyle(row).height)) || 'auto',
                lockHeight = (ieVersion ? lockRow && lockRow.offsetHeight : lockRow && parseFloat(getComputedStyle(lockRow).height)) || 'auto';

            if (lockRow && rowHeight !== lockHeight) {
                _util.dom.setStyle(lockRow, 'height', rowHeight);
            }
        };

        LockTable.prototype.getWrapperNode = function getWrapperNode(type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(this['lock' + type + 'El']);
            } catch (error) {
                return null;
            }
        };

        // remove this in next major version, keep this for temperary incase of using it
        // getFirstNormalCellNode(index) {
        //     let i = 0;
        //     let row;
        //     do {
        //         row = this.getCellNode(index, i);
        //         i++;
        //     } while (
        //         (!row || (row && row.rowSpan && row.rowSpan > 1)) &&
        //         this.tableInc.flatChildren.length > i
        //     );

        //     return row;
        // }

        LockTable.prototype.getRowNode = function getRowNode(index, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.getRowRef(index));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.getHeaderCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getCellNode = function getCellNode(index, i, type) {
            type = type ? type.charAt(0).toUpperCase() + type.substr(1) : '';
            var table = this['table' + type + 'Inc'];

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.getCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars, prefer-const */
            var _props4 = this.props,
                children = _props4.children,
                columns = _props4.columns,
                prefix = _props4.prefix,
                components = _props4.components,
                className = _props4.className,
                dataSource = _props4.dataSource,
                tableWidth = _props4.tableWidth,
                others = (0, _objectWithoutProperties3.default)(_props4, ['children', 'columns', 'prefix', 'components', 'className', 'dataSource', 'tableWidth']);

            var _normalizeChildrenSta = this.normalizeChildrenState(this.props),
                lockLeftChildren = _normalizeChildrenSta.lockLeftChildren,
                lockRightChildren = _normalizeChildrenSta.lockRightChildren,
                normalizedChildren = _normalizeChildrenSta.children;

            var leftLen = this.getFlatenChildrenLength(lockLeftChildren);
            var rightLen = this.getFlatenChildrenLength(lockRightChildren);
            var originLen = this.getFlatenChildrenLength(normalizedChildren);

            var lengths = {
                left: leftLen,
                right: rightLen,
                origin: originLen
            };
            if (this._notNeedAdjustLockLeft) {
                lockLeftChildren = [];
            }
            if (this._notNeedAdjustLockRight) {
                lockRightChildren = [];
            }
            this.lockLeftChildren = lockLeftChildren;
            this.lockRightChildren = lockRightChildren;

            if (this.isOriginLock()) {
                var _classnames;

                components = (0, _extends3.default)({}, components);
                components.Body = components.Body || _body2.default;
                components.Header = components.Header || _header2.default;
                components.Wrapper = components.Wrapper || _wrapper2.default;
                components.Row = components.Row || _row2.default;
                className = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));
                var content = [_react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                    dataSource: dataSource,
                    key: 'lock-left',
                    columns: lockLeftChildren,
                    className: prefix + 'table-lock-left',
                    lengths: lengths,
                    prefix: prefix,
                    lockType: 'left',
                    components: components,
                    ref: this.saveLockLeftRef,
                    loading: false,
                    'aria-hidden': true
                })), _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                    dataSource: dataSource,
                    key: 'lock-right',
                    columns: lockRightChildren,
                    className: prefix + 'table-lock-right',
                    lengths: lengths,
                    prefix: prefix,
                    lockType: 'right',
                    components: components,
                    ref: this.saveLockRightRef,
                    loading: false,
                    'aria-hidden': true
                }))];
                return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                    tableWidth: tableWidth,
                    dataSource: dataSource,
                    columns: normalizedChildren,
                    prefix: prefix,
                    lengths: lengths,
                    wrapperContent: content,
                    components: components,
                    className: className
                }));
            }
            return _react2.default.createElement(BaseComponent, this.props);
        };

        return LockTable;
    }(_react2.default.Component), _class.LockRow = _row2.default, _class.LockBody = _body2.default, _class.LockHeader = _header2.default, _class.propTypes = (0, _extends3.default)({
        scrollToCol: _propTypes2.default.number,
        /**
         * 指定滚动到某一行，仅在`useVirtual`的时候生效
         */
        scrollToRow: _propTypes2.default.number
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps), _class.childContextTypes = {
        getTableInstance: _propTypes2.default.func,
        getLockNode: _propTypes2.default.func,
        onLockBodyScroll: _propTypes2.default.func,
        onRowMouseEnter: _propTypes2.default.func,
        onRowMouseLeave: _propTypes2.default.func
    }, _temp);
    LockTable.displayName = 'LockTable';

    (0, _util2.statics)(LockTable, BaseComponent);
    return LockTable;
}

function deepCopy(arr) {
    var copy = function copy(arr) {
        return arr.map(function (item) {
            var newItem = (0, _extends3.default)({}, item);
            if (item.children) {
                item.children = copy(item.children);
            }
            return newItem;
        });
    };
    return copy(arr);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = stickyLock;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _shallowElementEquals = __webpack_require__(100);

var _shallowElementEquals2 = _interopRequireDefault(_shallowElementEquals);

var _util = __webpack_require__(4);

var _row = __webpack_require__(102);

var _row2 = _interopRequireDefault(_row);

var _body = __webpack_require__(185);

var _body2 = _interopRequireDefault(_body);

var _header = __webpack_require__(186);

var _header2 = _interopRequireDefault(_header);

var _wrapper = __webpack_require__(66);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _util2 = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function stickyLock(BaseComponent) {
    var _class, _temp;

    /** Table */
    var LockTable = (_temp = _class = function (_React$Component) {
        (0, _inherits3.default)(LockTable, _React$Component);

        function LockTable(props, context) {
            (0, _classCallCheck3.default)(this, LockTable);

            var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

            _this.state = {};

            _this.updateOffsetArr = function () {
                var _ref = _this.splitChildren || {},
                    lockLeftChildren = _ref.lockLeftChildren,
                    lockRightChildren = _ref.lockRightChildren,
                    originChildren = _ref.originChildren;

                var leftLen = _this.getFlatenChildren(lockLeftChildren).length;
                var rightLen = _this.getFlatenChildren(lockRightChildren).length;
                var totalLen = leftLen + rightLen + _this.getFlatenChildren(originChildren).length;

                var hasLockLeft = leftLen > 0;
                var hasLockRight = rightLen > 0;

                var leftOffsetArr = _this.getStickyWidth(lockLeftChildren, 'left', totalLen);
                var rightOffsetArr = _this.getStickyWidth(lockRightChildren, 'right', totalLen);

                var state = {};

                if ('' + leftOffsetArr !== '' + _this.state.leftOffsetArr) {
                    state.leftOffsetArr = leftOffsetArr;
                }

                if ('' + rightOffsetArr !== '' + _this.state.rightOffsetArr) {
                    state.rightOffsetArr = rightOffsetArr;
                }

                if (hasLockLeft !== _this.state.hasLockLeft) {
                    state.hasLockLeft = hasLockLeft;
                }

                if (hasLockRight !== _this.state.hasLockRight) {
                    state.hasLockRight = hasLockRight;
                }

                if (Object.keys(state).length > 0) {
                    _this.setState(state);
                }
            };

            _this.onLockBodyScroll = function (e, forceSet) {
                var _ref2 = e.currentTarget || {},
                    scrollLeft = _ref2.scrollLeft,
                    scrollWidth = _ref2.scrollWidth,
                    clientWidth = _ref2.clientWidth;

                var pingRight = _this.pingRight,
                    pingLeft = _this.pingLeft;

                var pingLeftNext = scrollLeft > 0 && _this.state.hasLockLeft;
                var pingRightNext = scrollLeft < scrollWidth - clientWidth && _this.state.hasLockRight;

                if (forceSet || pingLeft !== pingLeftNext || pingRight !== pingRightNext) {
                    var prefix = _this.props.prefix;

                    var table = _this.getTableNode();

                    _this.pingLeft = pingLeftNext;
                    _this.pingRight = pingRightNext;

                    var leftFunc = pingLeftNext ? 'addClass' : 'removeClass';
                    _util.dom[leftFunc](table, prefix + 'table-ping-left');
                    var rightFunc = pingRightNext ? 'addClass' : 'removeClass';
                    _util.dom[rightFunc](table, prefix + 'table-ping-right');
                }
            };

            _this.getStickyWidth = function (lockChildren, dir, totalLen) {
                var _this$props = _this.props,
                    dataSource = _this$props.dataSource,
                    scrollToRow = _this$props.scrollToRow;

                var offsetArr = [];
                var flatenChildren = _this.getFlatenChildren(lockChildren);
                var len = flatenChildren.length;

                flatenChildren.reduce(function (ret, col, index) {
                    var tag = dir === 'left' ? index : len - 1 - index;
                    var tagNext = dir === 'left' ? tag - 1 : tag + 1;
                    var nodeToGetWidth = dir === 'left' ? tag - 1 : totalLen - index;

                    if (dir === 'left' && tag === 0) {
                        ret[0] = 0;
                        return ret;
                    } else if (dir === 'right' && tag === len - 1) {
                        ret[tag] = 0;
                        return ret;
                    }

                    var _flatenChildren$tagNe = flatenChildren[tagNext],
                        headerCellRowIndex = _flatenChildren$tagNe.headerCellRowIndex,
                        headerCellColIndex = _flatenChildren$tagNe.headerCellColIndex;

                    // 根据tableHeader计算，避免单元格合并出现问题

                    var node = _this.getHeaderCellNode(headerCellRowIndex, headerCellColIndex);
                    var colWidth = 0;
                    if (node) {
                        colWidth = parseFloat(getComputedStyle(node).width) || 0;
                    }

                    ret[tag] = (ret[tagNext] || 0) + colWidth;
                    return ret;
                }, offsetArr);

                return offsetArr;
            };

            _this.getTableInstance = function (type, instance) {
                type = '';
                _this['table' + type + 'Inc'] = instance;
            };

            _this.getNode = function (type, node) {
                _this[type + 'Node'] = node;
            };

            _this.getFlatenChildren = function () {
                var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

                var loop = function loop(arr) {
                    var newArray = [];
                    arr.forEach(function (child) {
                        if (child.children) {
                            newArray.push.apply(newArray, loop(child.children));
                        } else {
                            newArray.push(child);
                        }
                    });
                    return newArray;
                };

                return loop(children);
            };

            _this.state = {
                hasLockLeft: true,
                hasLockRight: true
            };

            _this.pingLeft = false;
            _this.pingRight = false;
            return _this;
        }

        LockTable.prototype.getChildContext = function getChildContext() {
            return {
                getTableInstance: this.getTableInstance,
                getLockNode: this.getNode,
                onLockBodyScroll: this.onLockBodyScroll
            };
        };

        LockTable.prototype.componentDidMount = function componentDidMount() {
            var dataSource = this.props.dataSource;

            var isEmpty = !(dataSource && dataSource.length > 0);

            this.updateOffsetArr();
            this.onLockBodyScroll(isEmpty ? { currentTarget: this.headerNode } : { currentTarget: this.bodyNode });
            this.forceUpdate();

            _util.events.on(window, 'resize', this.updateOffsetArr);
        };

        LockTable.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState, nextContext) {
            if (nextProps.pure) {
                var isEqual = (0, _shallowElementEquals2.default)(nextProps, this.props);
                return !(isEqual && _util.obj.shallowEqual(nextContext, this.context));
            }

            return true;
        };

        LockTable.prototype.componentDidUpdate = function componentDidUpdate() {
            this.updateOffsetArr();
            this.onLockBodyScroll(this.bodyNode ? { currentTarget: this.bodyNode } : { currentTarget: this.headerNode }, true);
        };

        LockTable.prototype.componentWillUnmount = function componentWillUnmount() {
            this.pingLeft = false;
            this.pingRight = false;
            _util.events.off(window, 'resize', this.updateOffsetArr);
        };

        LockTable.prototype.normalizeChildrenState = function normalizeChildrenState(props) {
            var columns = this.normalizeChildren(props);

            this.splitChildren = this.splitFromNormalizeChildren(columns);

            return this.mergeFromSplitLockChildren(this.splitChildren, props.prefix);
        };

        // 将React结构化数据提取props转换成数组


        LockTable.prototype.normalizeChildren = function normalizeChildren(props) {
            var children = props.children,
                columns = props.columns;

            var isLock = false,
                ret = void 0;
            var getChildren = function getChildren(children) {
                var ret = [];
                _react.Children.forEach(children, function (child) {
                    if (child) {
                        var _props = (0, _extends3.default)({}, child.props);
                        if ([true, 'left', 'right'].indexOf(_props.lock) > -1) {
                            isLock = true;
                            if (!('width' in _props)) {
                                _util.log.warning('Should config width for lock column named [ ' + _props.dataIndex + ' ].');
                            }
                        }
                        ret.push(_props);
                        if (child.props.children) {
                            _props.children = getChildren(child.props.children);
                        }
                    }
                });
                return ret;
            };

            if (columns && !children) {
                ret = columns;
                isLock = columns.find(function (record) {
                    return [true, 'left', 'right'].indexOf(record.lock) > -1;
                });
            } else {
                ret = getChildren(children);
            }
            ret.forEach(function (child) {
                // 为自定义的列特殊处理
                if (child.__normalized && isLock) {
                    // users can set lock type for column selection now, so its origin lock type comes first
                    child.lock = child.lock || 'left';
                    delete child.__normalized;
                }
            });
            return ret;
        };

        /**
         * 从数组中分离出lock的列和正常的列
         * @param {Array} children
         * @return {Object} { lockLeftChildren, lockRightChildren, originChildren } 锁左列, 锁左列, 剩余列
         */

        LockTable.prototype.splitFromNormalizeChildren = function splitFromNormalizeChildren(children) {
            var originChildren = deepCopy(children);
            var lockLeftChildren = deepCopy(children);
            var lockRightChildren = deepCopy(children);
            var loop = function loop(lockChildren, condition) {
                var ret = [];
                lockChildren.forEach(function (child) {
                    if (child.children) {
                        var res = loop(child.children, condition);
                        if (!res.length) {
                            ret.push(child);
                        }
                    } else {
                        var order = condition(child);
                        if (!order) {
                            ret.push(child);
                        }
                    }
                });
                ret.forEach(function (res) {
                    var index = lockChildren.indexOf(res);
                    lockChildren.splice(index, 1);
                });
                return lockChildren;
            };
            loop(lockLeftChildren, function (child) {
                if (child.lock === true || child.lock === 'left') {
                    return 'left';
                }
            });
            loop(lockRightChildren, function (child) {
                if (child.lock === 'right') {
                    return 'right';
                }
            });
            loop(originChildren, function (child) {
                return child.lock !== true && child.lock !== 'left' && child.lock !== 'right';
            });
            return {
                lockLeftChildren: lockLeftChildren,
                lockRightChildren: lockRightChildren,
                originChildren: originChildren
            };
        };

        /**
         * 将左侧的锁列树和中间的普通树及右侧的锁列树进行合并
         * 会在原始 originChildren 上做改动
         * @param {Object} splitChildren { lockLeftChildren, lockRightChildren, originChildren }
         * @return {Array} originChildren
         */

        LockTable.prototype.mergeFromSplitLockChildren = function mergeFromSplitLockChildren(splitChildren, prefix) {
            var lockLeftChildren = splitChildren.lockLeftChildren,
                lockRightChildren = splitChildren.lockRightChildren;
            var originChildren = splitChildren.originChildren;

            var flatenLeftChildren = this.getFlatenChildren(lockLeftChildren);
            var flatenRightChildren = this.getFlatenChildren(lockRightChildren);

            (0, _util2.setStickyStyle)(lockLeftChildren, flatenLeftChildren, 'left', this.state.leftOffsetArr, prefix);
            (0, _util2.setStickyStyle)(lockRightChildren, flatenRightChildren, 'right', this.state.rightOffsetArr, prefix);

            return [].concat(lockLeftChildren, originChildren, lockRightChildren);
        };

        LockTable.prototype.getCellNode = function getCellNode(index, i) {
            var table = this.tableInc;

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.getCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getTableNode = function getTableNode() {
            var table = this.tableInc;
            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.tableEl);
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.getHeaderCellNode = function getHeaderCellNode(index, i) {
            var table = this.tableInc;

            try {
                // in case of finding an unmounted component due to cached data
                // need to clear refs of table when dataSource Changed
                // use try catch for temporary
                return (0, _reactDom.findDOMNode)(table.getHeaderCellRef(index, i));
            } catch (error) {
                return null;
            }
        };

        LockTable.prototype.render = function render() {
            var _classnames;

            /* eslint-disable no-unused-vars, prefer-const */
            var _props2 = this.props,
                children = _props2.children,
                columns = _props2.columns,
                prefix = _props2.prefix,
                components = _props2.components,
                scrollToRow = _props2.scrollToRow,
                className = _props2.className,
                dataSource = _props2.dataSource,
                others = (0, _objectWithoutProperties3.default)(_props2, ['children', 'columns', 'prefix', 'components', 'scrollToRow', 'className', 'dataSource']);

            var normalizedChildren = this.normalizeChildrenState(this.props);

            components = (0, _extends3.default)({}, components);
            components.Body = components.Body || _body2.default;
            components.Header = components.Header || _header2.default;
            components.Wrapper = components.Wrapper || _wrapper2.default;
            components.Row = components.Row || _row2.default;
            className = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-lock'] = true, _classnames[prefix + 'table-stickylock'] = true, _classnames[prefix + 'table-wrap-empty'] = !dataSource.length, _classnames[className] = className, _classnames));

            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                dataSource: dataSource,
                columns: normalizedChildren,
                prefix: prefix,
                components: components,
                className: className
            }));
        };

        return LockTable;
    }(_react2.default.Component), _class.LockRow = _row2.default, _class.LockBody = _body2.default, _class.LockHeader = _header2.default, _class.propTypes = (0, _extends3.default)({
        scrollToCol: _propTypes2.default.number,
        /**
         * 指定滚动到某一行，仅在`useVirtual`的时候生效
         */
        scrollToRow: _propTypes2.default.number
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps), _class.childContextTypes = {
        getTableInstance: _propTypes2.default.func,
        getLockNode: _propTypes2.default.func,
        onLockBodyScroll: _propTypes2.default.func
    }, _temp);
    LockTable.displayName = 'LockTable';

    (0, _util2.statics)(LockTable, BaseComponent);
    return LockTable;
}

function deepCopy(arr) {
    var copy = function copy(arr) {
        return arr.map(function (item) {
            var newItem = (0, _extends3.default)({}, item);
            if (item.children) {
                item.children = copy(item.children);
            }
            return newItem;
        });
    };
    return copy(arr);
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = list;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _listHeader = __webpack_require__(187);

var _listHeader2 = _interopRequireDefault(_listHeader);

var _listFooter = __webpack_require__(188);

var _listFooter2 = _interopRequireDefault(_listFooter);

var _row = __webpack_require__(427);

var _row2 = _interopRequireDefault(_row);

var _body = __webpack_require__(428);

var _body2 = _interopRequireDefault(_body);

var _header = __webpack_require__(65);

var _header2 = _interopRequireDefault(_header);

var _wrapper = __webpack_require__(66);

var _wrapper2 = _interopRequireDefault(_wrapper);

var _util = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function list(BaseComponent) {
    var _class, _temp2;

    var ListTable = (_temp2 = _class = function (_React$Component) {
        (0, _inherits3.default)(ListTable, _React$Component);

        function ListTable() {
            var _temp, _this, _ret;

            (0, _classCallCheck3.default)(this, ListTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
        }

        ListTable.prototype.getChildContext = function getChildContext() {
            return {
                listHeader: this.listHeader,
                listFooter: this.listFooter,
                rowSelection: this.rowSelection
            };
        };

        ListTable.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {
            var ret = [];
            var loop = function loop(dataSource, level) {
                dataSource.forEach(function (item) {
                    var itemCopy = (0, _extends3.default)({}, item);
                    itemCopy.__level = level;
                    ret.push(itemCopy);
                    if (itemCopy.children) {
                        loop(itemCopy.children, level + 1);
                    }
                });
            };
            loop(dataSource, 0);
            this.ds = ret;
            return ret;
        };

        ListTable.prototype.render = function render() {
            var _this2 = this;

            /* eslint-disable prefer-const */
            var _props = this.props,
                components = _props.components,
                children = _props.children,
                className = _props.className,
                prefix = _props.prefix,
                others = (0, _objectWithoutProperties3.default)(_props, ['components', 'children', 'className', 'prefix']);

            var isList = false,
                ret = [];
            _react.Children.forEach(children, function (child) {
                if (child) {
                    if (['function', 'object'].indexOf((0, _typeof3.default)(child.type)) > -1) {
                        if (child.type._typeMark === 'listHeader') {
                            _this2.listHeader = child.props;
                            isList = true;
                        } else if (child.type._typeMark === 'listFooter') {
                            _this2.listFooter = child.props;
                        } else {
                            ret.push(child);
                        }
                    } else {
                        ret.push(child);
                    }
                }
            });
            this.rowSelection = this.props.rowSelection;
            if (isList) {
                var _classnames;

                components = (0, _extends3.default)({}, components);
                components.Row = components.Row || _row2.default;
                components.Body = components.Body || _body2.default;
                components.Header = components.Header || _header2.default;
                components.Wrapper = components.Wrapper || _wrapper2.default;
                className = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-group'] = true, _classnames[className] = className, _classnames));
            }
            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                components: components,
                children: ret.length > 0 ? ret : undefined,
                className: className,
                prefix: prefix
            }));
        };

        return ListTable;
    }(_react2.default.Component), _class.ListHeader = _listHeader2.default, _class.ListFooter = _listFooter2.default, _class.ListRow = _row2.default, _class.ListBody = _body2.default, _class.propTypes = (0, _extends3.default)({}, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({}, BaseComponent.defaultProps), _class.childContextTypes = {
        listHeader: _propTypes2.default.any,
        listFooter: _propTypes2.default.any,
        rowSelection: _propTypes2.default.object
    }, _temp2);
    ListTable.displayName = 'ListTable';

    (0, _util.statics)(ListTable, BaseComponent);
    return ListTable;
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _util = __webpack_require__(4);

var _row = __webpack_require__(63);

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var GroupListRow = (_temp = _class = function (_Row) {
    (0, _inherits3.default)(GroupListRow, _Row);

    function GroupListRow() {
        (0, _classCallCheck3.default)(this, GroupListRow);
        return (0, _possibleConstructorReturn3.default)(this, _Row.apply(this, arguments));
    }

    GroupListRow.prototype.render = function render() {
        var _classnames;

        /* eslint-disable no-unused-vars*/
        var _props = this.props,
            prefix = _props.prefix,
            className = _props.className,
            onClick = _props.onClick,
            onMouseEnter = _props.onMouseEnter,
            onMouseLeave = _props.onMouseLeave,
            columns = _props.columns,
            Cell = _props.Cell,
            rowIndex = _props.rowIndex,
            __rowIndex = _props.__rowIndex,
            record = _props.record,
            children = _props.children,
            primaryKey = _props.primaryKey,
            colGroup = _props.colGroup,
            cellRef = _props.cellRef,
            getCellProps = _props.getCellProps,
            locale = _props.locale,
            wrapper = _props.wrapper,
            rtl = _props.rtl,
            tableEl = _props.tableEl,
            others = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'className', 'onClick', 'onMouseEnter', 'onMouseLeave', 'columns', 'Cell', 'rowIndex', '__rowIndex', 'record', 'children', 'primaryKey', 'colGroup', 'cellRef', 'getCellProps', 'locale', 'wrapper', 'rtl', 'tableEl']);

        var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-row'] = true, _classnames[className] = className, _classnames));

        // clear notRenderCellIndex, incase of cached data
        this.context.notRenderCellIndex = [];

        return _react2.default.createElement('table', (0, _extends3.default)({
            className: cls,
            role: 'row'
        }, others, {
            onClick: this.onClick,
            onMouseEnter: this.onMouseEnter,
            onMouseLeave: this.onMouseLeave
        }), colGroup, _react2.default.createElement('tbody', null, this.renderContent('header'), this.renderChildren(), this.renderContent('footer')));
    };

    GroupListRow.prototype.isChildrenSelection = function isChildrenSelection() {
        return this.context.listHeader && this.context.listHeader.hasChildrenSelection;
    };

    GroupListRow.prototype.isFirstLevelDataWhenNoChildren = function isFirstLevelDataWhenNoChildren() {
        return this.context.listHeader && this.context.listHeader.useFirstLevelDataWhenNoChildren;
    };

    GroupListRow.prototype.isSelection = function isSelection() {
        return this.context.listHeader && this.context.listHeader.hasSelection;
    };

    GroupListRow.prototype.renderChildren = function renderChildren() {
        var _this2 = this;

        var _props2 = this.props,
            record = _props2.record,
            primaryKey = _props2.primaryKey;
        var children = record.children;

        var toRenderList = children;
        if (this.isFirstLevelDataWhenNoChildren()) {
            _util.log.warning('useFirstLevelDataWhenNoChildren is deprecated, change your dataSource structure, make sure there is \'children\' in your dataSource.');

            toRenderList = children || [record];
        }

        if (toRenderList) {
            return toRenderList.map(function (child, index) {
                var cells = _this2.renderCells(child, index);
                if (_this2.isChildrenSelection()) {
                    if (!child[primaryKey]) {
                        _util.log.warning('record.children/recored should contains primaryKey when childrenSelection is true.');
                    }
                    return _react2.default.createElement('tr', { key: child[primaryKey] }, cells);
                }
                if (_this2.context.rowSelection) {
                    cells.shift();
                    cells[0] = cells[0] && _react2.default.cloneElement(cells[0], (0, _extends3.default)({
                        colSpan: 2
                    }, cells[0].props));
                }
                return _react2.default.createElement('tr', { key: index }, cells);
            });
        }
        return null;
    };

    GroupListRow.prototype.renderContent = function renderContent(type) {
        var _props3 = this.props,
            columns = _props3.columns,
            prefix = _props3.prefix,
            record = _props3.record,
            rowIndex = _props3.rowIndex;

        var cameType = type.charAt(0).toUpperCase() + type.substr(1);
        var list = this.context['list' + cameType];
        var listNode = void 0;
        if (list) {
            if (_react2.default.isValidElement(list.cell)) {
                listNode = _react2.default.cloneElement(list.cell, {
                    record: record,
                    index: rowIndex
                });
            } else if (typeof list.cell === 'function') {
                listNode = list.cell(record, rowIndex);
            }
            if (listNode) {
                var cells = this.renderCells(record);
                if (type === 'header' && this.context.rowSelection && this.isSelection()) {
                    cells = cells.slice(0, 1);
                    cells.push(_react2.default.createElement('td', { colSpan: columns.length - 1, key: 'listNode' }, _react2.default.createElement('div', { className: prefix + 'table-cell-wrapper' }, listNode)));
                    listNode = _react2.default.createElement('tr', { className: prefix + 'table-group-' + type }, cells);
                } else {
                    listNode = _react2.default.createElement('tr', { className: prefix + 'table-group-' + type }, _react2.default.createElement('td', { colSpan: columns.length }, _react2.default.createElement('div', { className: prefix + 'table-cell-wrapper' }, listNode)));
                }
            }
        }
        return listNode;
    };

    return GroupListRow;
}(_row2.default), _class.contextTypes = {
    listHeader: _propTypes2.default.any,
    listFooter: _propTypes2.default.any,
    rowSelection: _propTypes2.default.object,
    notRenderCellIndex: _propTypes2.default.array,
    lockType: _propTypes2.default.oneOf(['left', 'right'])
}, _temp);
exports.default = GroupListRow;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(13);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _body = __webpack_require__(62);

var _body2 = _interopRequireDefault(_body);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var ListBody = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(ListBody, _React$Component);

    function ListBody() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, ListBody);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onScroll = function (e) {
            var onFixedScrollSync = _this.context.onFixedScrollSync;

            onFixedScrollSync && onFixedScrollSync(e);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    ListBody.prototype.componentDidMount = function componentDidMount() {
        var getNode = this.context.getNode;

        getNode && getNode('body', (0, _reactDom.findDOMNode)(this));
    };

    ListBody.prototype.render = function render() {
        return _react2.default.createElement(_body2.default, (0, _extends3.default)({ component: 'div', onScroll: this.onScroll }, this.props));
    };

    return ListBody;
}(_react2.default.Component), _class.contextTypes = {
    getNode: _propTypes2.default.func,
    onFixedScrollSync: _propTypes2.default.func
}, _temp2);
ListBody.displayName = 'ListBody';
exports.default = ListBody;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = sticky;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _header = __webpack_require__(65);

var _header2 = _interopRequireDefault(_header);

var _header3 = __webpack_require__(430);

var _header4 = _interopRequireDefault(_header3);

var _util = __webpack_require__(23);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function sticky(BaseComponent) {
    var _class, _temp2;

    /** Table */
    var StickyTable = (_temp2 = _class = function (_React$Component) {
        (0, _inherits3.default)(StickyTable, _React$Component);

        function StickyTable() {
            var _temp, _this, _ret;

            (0, _classCallCheck3.default)(this, StickyTable);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
        }

        StickyTable.prototype.getChildContext = function getChildContext() {
            return {
                Header: this.props.components.Header || _header2.default,
                offsetTop: this.props.offsetTop,
                affixProps: this.props.affixProps
            };
        };

        StickyTable.prototype.render = function render() {
            /* eslint-disable no-unused-vars */
            var _props = this.props,
                stickyHeader = _props.stickyHeader,
                offsetTop = _props.offsetTop,
                affixProps = _props.affixProps,
                others = (0, _objectWithoutProperties3.default)(_props, ['stickyHeader', 'offsetTop', 'affixProps']);
            var _props2 = this.props,
                components = _props2.components,
                maxBodyHeight = _props2.maxBodyHeight,
                fixedHeader = _props2.fixedHeader;

            if (stickyHeader) {
                components = (0, _extends3.default)({}, components);
                components.Header = _header4.default;
                fixedHeader = true;
                maxBodyHeight = Math.max(maxBodyHeight, 10000);
            }
            return _react2.default.createElement(BaseComponent, (0, _extends3.default)({}, others, {
                components: components,
                fixedHeader: fixedHeader,
                maxBodyHeight: maxBodyHeight
            }));
        };

        return StickyTable;
    }(_react2.default.Component), _class.StickyHeader = _header4.default, _class.propTypes = (0, _extends3.default)({
        /**
         * 表头是否是sticky
         */
        stickyHeader: _propTypes2.default.bool,
        /**
         * 距离窗口顶部达到指定偏移量后触发
         */
        offsetTop: _propTypes2.default.number,
        /**
         * affix组件的的属性
         */
        affixProps: _propTypes2.default.object,
        components: _propTypes2.default.object
    }, BaseComponent.propTypes), _class.defaultProps = (0, _extends3.default)({
        components: {}
    }, BaseComponent.defaultProps), _class.childContextTypes = {
        Header: _propTypes2.default.any,
        offsetTop: _propTypes2.default.number,
        affixProps: _propTypes2.default.object
    }, _temp2);
    StickyTable.displayName = 'StickyTable';

    (0, _util.statics)(StickyTable, BaseComponent);
    return StickyTable;
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _affix = __webpack_require__(68);

var _affix2 = _interopRequireDefault(_affix);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/* eslint-disable react/prefer-stateless-function*/
var StickHeader = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(StickHeader, _React$Component);

    function StickHeader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, StickHeader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getAffixRef = function (ref) {
            _this.props.affixRef && _this.props.affixRef(ref);
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    StickHeader.prototype.render = function render() {
        var _classnames;

        var prefix = this.props.prefix;
        var _context = this.context,
            Header = _context.Header,
            offsetTop = _context.offsetTop,
            affixProps = _context.affixProps;

        var newAffixProps = affixProps || {};
        var className = newAffixProps.className,
            others = (0, _objectWithoutProperties3.default)(newAffixProps, ['className']);

        var cls = (0, _classnames3.default)((_classnames = {}, _classnames[prefix + 'table-affix'] = true, _classnames.className = className, _classnames));

        return _react2.default.createElement(_affix2.default, (0, _extends3.default)({ ref: this.getAffixRef }, others, { className: cls, offsetTop: offsetTop }), _react2.default.createElement(Header, this.props));
    };

    return StickHeader;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string
}, _class.contextTypes = {
    Header: _propTypes2.default.any,
    offsetTop: _propTypes2.default.number,
    affixProps: _propTypes2.default.object
}, _temp2);
StickHeader.displayName = 'StickHeader';
exports.default = StickHeader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _timePicker = __webpack_require__(432);

var _timePicker2 = _interopRequireDefault(_timePicker);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_timePicker2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('defaultOpen' in props) {
            deprecated('defaultOpen', 'defaultVisible', 'TimePicker');
            var _props = props,
                defaultOpen = _props.defaultOpen,
                others = (0, _objectWithoutProperties3.default)(_props, ['defaultOpen']);

            props = (0, _extends3.default)({ defaultVisible: defaultOpen }, others);
        }
        if ('open' in props) {
            deprecated('open', 'visible', 'TimePicker');

            var _props2 = props,
                open = _props2.open,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['open']);

            props = (0, _extends3.default)({ visible: open }, _others);
        }
        if ('onOpenChange' in props) {
            deprecated('onOpenChange', 'onVisibleChange', 'TimePicker');

            var _props3 = props,
                onOpenChange = _props3.onOpenChange,
                _others2 = (0, _objectWithoutProperties3.default)(_props3, ['onOpenChange']);

            props = (0, _extends3.default)({ onVisibleChange: onOpenChange }, _others2);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _moment = __webpack_require__(20);

var _moment2 = _interopRequireDefault(_moment);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _panel = __webpack_require__(91);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(92);

var _util2 = __webpack_require__(31);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;
var noop = _util.func.noop;

var timePickerLocale = _zhCn2.default.TimePicker;

/**
 * TimePicker
 */
var TimePicker = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(TimePicker, _Component);

    function TimePicker(props, context) {
        (0, _classCallCheck3.default)(this, TimePicker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var value = (0, _utils.formatDateValue)(props.value || props.defaultValue, props.format);
        _this.inputAsString = typeof (props.value || props.defaultValue) === 'string';
        _this.state = {
            value: value,
            inputStr: '',
            inputing: false,
            visible: props.visible || props.defaultVisible
        };
        return _this;
    }

    TimePicker.getDerivedStateFromProps = function getDerivedStateFromProps(props) {
        var state = {};

        if ('value' in props) {
            state.value = (0, _utils.formatDateValue)(props.value, props.format);
        }

        if ('visible' in props) {
            state.visible = props.visible;
        }

        return state;
    };

    TimePicker.prototype.onValueChange = function onValueChange(newValue) {
        var ret = this.inputAsString && newValue ? newValue.format(this.props.format) : newValue;
        this.props.onChange(ret);
    };

    TimePicker.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames4.default)(className, prefix + 'form-preview');

        var label = value ? value.format(format) : '';

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    TimePicker.prototype.render = function render() {
        var _classnames, _classnames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            label = _props2.label,
            state = _props2.state,
            placeholder = _props2.placeholder,
            size = _props2.size,
            format = _props2.format,
            hasClear = _props2.hasClear,
            hourStep = _props2.hourStep,
            minuteStep = _props2.minuteStep,
            secondStep = _props2.secondStep,
            disabledHours = _props2.disabledHours,
            disabledMinutes = _props2.disabledMinutes,
            disabledSeconds = _props2.disabledSeconds,
            renderTimeMenuItems = _props2.renderTimeMenuItems,
            inputProps = _props2.inputProps,
            popupAlign = _props2.popupAlign,
            popupTriggerType = _props2.popupTriggerType,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            popupContent = _props2.popupContent,
            followTrigger = _props2.followTrigger,
            disabled = _props2.disabled,
            className = _props2.className,
            locale = _props2.locale,
            rtl = _props2.rtl,
            isPreview = _props2.isPreview,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'label', 'state', 'placeholder', 'size', 'format', 'hasClear', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems', 'inputProps', 'popupAlign', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'popupContent', 'followTrigger', 'disabled', 'className', 'locale', 'rtl', 'isPreview']);
        var _state = this.state,
            value = _state.value,
            inputStr = _state.inputStr,
            inputing = _state.inputing,
            visible = _state.visible;

        var triggerCls = (0, _classnames4.default)((_classnames = {}, _classnames[prefix + 'time-picker-trigger'] = true, _classnames));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, TimePicker.PropTypes));
        }

        var inputValue = inputing ? inputStr : value && value.format(format) || '';
        var sharedInputProps = (0, _extends3.default)({}, inputProps, {
            size: size,
            disabled: disabled,
            value: inputValue,
            hasClear: value && hasClear,
            onChange: this.onInputChange,
            onBlur: this.onInputBlur,
            onPressEnter: this.onInputBlur,
            onKeyDown: this.onKeyown,
            hint: _react2.default.createElement(_icon2.default, { type: 'clock', className: prefix + 'time-picker-symbol-clock-icon' })
        });

        var triggerInput = _react2.default.createElement('div', { className: triggerCls }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            placeholder: placeholder || locale.placeholder,
            className: prefix + 'time-picker-input'
        })));

        var panelProps = {
            prefix: prefix,
            locale: locale,
            value: value,
            disabled: disabled,
            showHour: format.indexOf('H') > -1,
            showSecond: format.indexOf('s') > -1,
            showMinute: format.indexOf('m') > -1,
            hourStep: hourStep,
            minuteStep: minuteStep,
            secondStep: secondStep,
            disabledHours: disabledHours,
            disabledMinutes: disabledMinutes,
            disabledSeconds: disabledSeconds,
            renderTimeMenuItems: renderTimeMenuItems,
            onSelect: this.onTimePanelSelect
        };

        var classNames = (0, _classnames4.default)((_classnames2 = {}, _classnames2[prefix + 'time-picker'] = true, _classnames2[prefix + 'time-picker-' + size] = size, _classnames2[prefix + 'disabled'] = disabled, _classnames2), className);

        var PopupComponent = popupComponent ? popupComponent : Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(TimePicker.propTypes, others), { className: classNames }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            autoFocus: true,
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            visible: visible,
            onVisibleChange: this.onVisibleChange,
            trigger: triggerInput,
            container: popupContainer,
            disabled: disabled,
            triggerType: popupTriggerType,
            style: popupStyle,
            className: popupClassName
        }), popupContent ? popupContent : _react2.default.createElement('div', { dir: others.dir, className: prefix + 'time-picker-body' }, _react2.default.createElement('div', { className: prefix + 'time-picker-panel-header' }, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedInputProps, {
            placeholder: format,
            className: prefix + 'time-picker-panel-input'
        }))), _react2.default.createElement(_panel2.default, panelProps))));
    };

    return TimePicker;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 按钮的文案
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['error', 'success']),
    /**
     * 输入框提示
     */
    placeholder: _propTypes2.default.string,
    /**
     * 时间值（moment 对象或时间字符串，受控状态使用）
     */
    value: _utils.checkDateValue,
    /**
     * 时间初值（moment 对象或时间字符串，非受控状态使用）
     */
    defaultValue: _utils.checkDateValue,
    /**
     * 时间选择框的尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否允许清空时间
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 时间的格式
     * https://momentjs.com/docs/#/parsing/string-format/
     */
    format: _propTypes2.default.string,
    /**
     * 小时选项步长
     */
    hourStep: _propTypes2.default.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _propTypes2.default.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _propTypes2.default.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _propTypes2.default.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _propTypes2.default.func,
    /**
     * 禁用秒钟函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _propTypes2.default.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {moment} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _propTypes2.default.func,
    /**
     * 弹层是否显示（受控）
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示（非受控）
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层容器
     * @param {Object} target 目标节点
     * @return {ReactNode} 容器节点
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层对齐方式, 详情见Overlay 文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {MomentObject|null} value 时间
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 时间值改变时的回调
     * @param {Object|String} value 时间对象或时间字符串
     */
    onChange: _propTypes2.default.func,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    inputProps: _propTypes2.default.object,
    popupComponent: _propTypes2.default.elementType,
    popupContent: _propTypes2.default.node
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    locale: timePickerLocale,
    size: 'medium',
    format: 'HH:mm:ss',
    hasClear: true,
    disabled: false,
    popupAlign: 'tl tl',
    popupTriggerType: 'click',
    onChange: noop,
    onVisibleChange: noop
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onClearValue = function () {
        _this2.setState({
            value: null
        });
        if (_this2.state.value) {
            _this2.onValueChange(null);
        }
    };

    this.onInputChange = function (inputValue, e, eventType) {
        if (!('value' in _this2.props)) {
            if (eventType === 'clear' || !inputValue) {
                e.stopPropagation();
                _this2.onClearValue();
            }

            _this2.setState({
                inputStr: inputValue,
                inputing: true
            });
        } else if (eventType === 'clear') {
            // 受控状态下用户点击 clear
            e.stopPropagation();
            _this2.onValueChange(null);
        }
    };

    this.onInputBlur = function () {
        var inputStr = _this2.state.inputStr;

        if (inputStr) {
            var format = _this2.props.format;

            var parsed = (0, _moment2.default)(inputStr, format, true);
            if (parsed.isValid()) {
                _this2.setState({
                    value: parsed,
                    inputStr: ''
                });
                _this2.onValueChange(parsed);
            }
            _this2.setState({
                inputing: false
            });
        }
    };

    this.onKeyown = function (e) {
        var _state2 = _this2.state,
            value = _state2.value,
            inputStr = _state2.inputStr;
        var _props3 = _this2.props,
            format = _props3.format,
            _props3$hourStep = _props3.hourStep,
            hourStep = _props3$hourStep === undefined ? 1 : _props3$hourStep,
            _props3$minuteStep = _props3.minuteStep,
            minuteStep = _props3$minuteStep === undefined ? 1 : _props3$minuteStep,
            _props3$secondStep = _props3.secondStep,
            secondStep = _props3$secondStep === undefined ? 1 : _props3$secondStep,
            disabledMinutes = _props3.disabledMinutes,
            disabledSeconds = _props3.disabledSeconds;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }
        var timeStr = (0, _util2.onTimeKeydown)(e, {
            format: format,
            timeInputStr: inputStr,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            },
            value: value
        }, unit);

        if (!timeStr) return;

        _this2.onInputChange(timeStr);
    };

    this.onTimePanelSelect = function (value) {
        if (!('value' in _this2.props)) {
            _this2.setState({
                value: value,
                inputing: false
            });
        }
        if (!_this2.state.value || value.valueOf() !== _this2.state.value.valueOf()) {
            _this2.onValueChange(value);
        }
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this2.props)) {
            _this2.setState({
                visible: visible
            });
        }
        _this2.props.onVisibleChange(visible, type);
    };
}, _temp);
TimePicker.displayName = 'TimePicker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(TimePicker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var component_1 = __webpack_require__(22);
var timeline_1 = tslib_1.__importDefault(__webpack_require__(434));
var timeline_item_1 = tslib_1.__importDefault(__webpack_require__(435));
var TimelineWithItem = (0, component_1.assignSubComponent)(timeline_1.default, {
    Item: timeline_item_1.default
});
exports.default = TimelineWithItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
/** Timeline */
var Timeline = /** @class */function (_super) {
    tslib_1.__extends(Timeline, _super);
    function Timeline(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            fold: props.fold
        };
        return _this;
    }
    Timeline.getDerivedStateFromProps = function (nextProps, prevState) {
        var innerUpdate = prevState.innerUpdate,
            fold = prevState.fold;
        if (innerUpdate) {
            return {
                fold: fold,
                innerUpdate: false
            };
        }
        if ('fold' in nextProps) {
            return {
                fold: nextProps.fold
            };
        }
        return null;
    };
    Timeline.prototype.toggleFold = function (folderIndex, total) {
        var fold = this.state.fold.map(function (item) {
            return tslib_1.__assign({}, item);
        });
        if (folderIndex) {
            for (var i = 0; i < fold.length; i++) {
                var _a = fold[i],
                    foldArea = _a.foldArea,
                    foldShow = _a.foldShow;
                if (foldArea[1] && folderIndex === foldArea[1] || !foldArea[1] && folderIndex === total - 1) {
                    fold[i].foldShow = !foldShow;
                }
            }
            this.setState({ fold: fold, innerUpdate: true });
        }
    };
    Timeline.prototype.render = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            prefix = _b.prefix,
            rtl = _b.rtl,
            className = _b.className,
            children = _b.children,
            locale = _b.locale,
            animation = _b.animation,
            mode = _b.mode,
            others = tslib_1.__rest(_b, ["prefix", "rtl", "className", "children", "locale", "animation", "mode"]);
        var fold = this.state.fold;
        // 修改子节点属性
        var childrenCount = react_1.default.Children.count(children);
        var isAlternateMode = mode === 'alternate';
        var getPositionCls = function getPositionCls(idx) {
            if (isAlternateMode) {
                return idx % 2 === 0 ? "".concat(prefix, "timeline-item-left") : "".concat(prefix, "timeline-item-right");
            }
            return "".concat(prefix, "timeline-item-left");
        };
        var cloneChildren = react_1.Children.map(children, function (child, i) {
            var folderIndex = null;
            var foldNodeShow = false;
            fold.forEach(function (item) {
                var foldArea = item.foldArea,
                    foldShow = item.foldShow;
                if (foldArea[0] && i >= foldArea[0] && (i <= foldArea[1] || !foldArea[1])) {
                    folderIndex = foldArea[1] || childrenCount - 1;
                    foldNodeShow = foldShow;
                }
            });
            return react_1.default.cloneElement(child, {
                prefix: prefix,
                locale: locale,
                total: childrenCount,
                className: getPositionCls(i),
                index: i,
                folderIndex: folderIndex,
                foldShow: foldNodeShow,
                toggleFold: folderIndex === i ? _this.toggleFold.bind(_this, folderIndex, childrenCount) : function () {},
                animation: animation
            });
        });
        var timelineCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "timeline")] = true, _a["".concat(prefix, "alternate")] = isAlternateMode, _a), className);
        if (rtl) {
            others.dir = 'rtl';
        }
        return react_1.default.createElement("ul", tslib_1.__assign({}, util_1.obj.pickOthers(Timeline.propTypes, others), { className: timelineCls }), cloneChildren);
    };
    Timeline.displayName = 'Timeline';
    Timeline.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, rtl: prop_types_1.default.bool, fold: prop_types_1.default.array, className: prop_types_1.default.string, children: prop_types_1.default.any, locale: prop_types_1.default.object, animation: prop_types_1.default.bool, mode: prop_types_1.default.oneOf(['left', 'alternate']) });
    Timeline.defaultProps = {
        prefix: 'next-',
        rtl: false,
        fold: [],
        locale: zh_cn_1.default.Timeline,
        animation: true,
        mode: 'left'
    };
    return Timeline;
}(react_1.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(Timeline));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var button_1 = tslib_1.__importDefault(__webpack_require__(18));
var util_1 = __webpack_require__(4);
var Expand = animate_1.default.Expand;
/** Timeline.Item */
var TimelineItem = /** @class */function (_super) {
    tslib_1.__extends(TimelineItem, _super);
    function TimelineItem() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.beforeEnter = function () {
            _this['timeline-item'].style.setProperty('min-height', 'auto');
        };
        _this.beforeLeave = function () {
            _this['timeline-item'].style.setProperty('min-height', '48px'); // timeleft 节点最小高度
        };
        return _this;
    }
    TimelineItem.prototype.toggleFold = function (folderIndex) {
        this.props.toggleFold(folderIndex);
    };
    TimelineItem.prototype.render = function () {
        var _a, _b, _c, _d;
        var _this = this;
        var _e = this.props,
            prefix = _e.prefix,
            className = _e.className,
            state = _e.state,
            icon = _e.icon,
            dot = _e.dot,
            time = _e.time,
            title = _e.title,
            timeLeft = _e.timeLeft,
            content = _e.content,
            index = _e.index,
            total = _e.total,
            folderIndex = _e.folderIndex,
            foldShow = _e.foldShow,
            locale = _e.locale,
            animation = _e.animation,
            others = tslib_1.__rest(_e, ["prefix", "className", "state", "icon", "dot", "time", "title", "timeLeft", "content", "index", "total", "folderIndex", "foldShow", "locale", "animation"]);
        var finalItemNode = dot ? dot : icon ? react_1.default.createElement("span", { className: "".concat(prefix, "timeline-item-icon") }, react_1.default.createElement(icon_1.default, { type: icon, size: "xs" })) : react_1.default.createElement("span", { className: "".concat(prefix, "timeline-item-dot") });
        var itemCls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "timeline-item")] = true, _a["".concat(prefix, "timeline-item-first")] = index === 0, _a["".concat(prefix, "timeline-item-last")] = index === total - 1, _a["".concat(prefix, "timeline-item-").concat(state)] = state, _a["".concat(prefix, "timeline-item-folded")] = folderIndex, _a["".concat(prefix, "timeline-item-unfolded")] = foldShow, _a["".concat(prefix, "timeline-item-has-left-content")] = timeLeft, _a[className] = className, _a));
        var folderCls = (0, classnames_1.default)((_b = {}, _b["".concat(prefix, "timeline-item-folder")] = true, _b["".concat(prefix, "timeline-item-has-left-content")] = timeLeft, _b));
        var itemNodeCls = (0, classnames_1.default)((_c = {}, _c["".concat(prefix, "timeline-item-node")] = true, _c["".concat(prefix, "timeline-item-node-custom")] = dot, _c));
        var dotTailCls = (0, classnames_1.default)((_d = {}, _d["".concat(prefix, "timeline-item-dot-tail")] = true, _d["".concat(prefix, "timeline-item-dot-tail-solid")] = foldShow, _d["".concat(prefix, "timeline-hide")] = index === total - 1 && foldShow, _d));
        var renderTimeLineItemContent = function renderTimeLineItemContent(isLeft) {
            if (isLeft) return react_1.default.createElement("p", { className: "".concat(prefix, "timeline-item-body") }, timeLeft);
            return react_1.default.createElement(react_1.default.Fragment, null, react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-title") }, title), react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-body") }, content), react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-time") }, time));
        };
        var buttonProps = {
            text: true,
            size: 'small',
            type: 'primary',
            onClick: this.toggleFold.bind(this, folderIndex, total)
        };
        var timelineNode = folderIndex && foldShow || !folderIndex ? react_1.default.createElement("div", tslib_1.__assign({}, util_1.obj.pickOthers(TimelineItem.propTypes, others), { className: itemCls, ref: function ref(e) {
                _this['timeline-item'] = e;
            } }), react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-left-content") }, renderTimeLineItemContent(className.includes("".concat(prefix, "timeline-item-left")))), react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-timeline") }, react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-tail") }, react_1.default.createElement("i", null)), react_1.default.createElement("div", { className: itemNodeCls }, finalItemNode)), react_1.default.createElement("div", { className: "".concat(prefix, "timeline-item-content") }, renderTimeLineItemContent(!className.includes("".concat(prefix, "timeline-item-left"))))) : null;
        return react_1.default.createElement("li", { tabIndex: 0 }, animation && folderIndex ? react_1.default.createElement(Expand, { animationAppear: false, beforeEnter: this.beforeEnter, beforeLeave: this.beforeEnter, afterEnter: this.beforeLeave }, timelineNode) : timelineNode, folderIndex === index ? react_1.default.createElement("div", { className: folderCls }, react_1.default.createElement("div", { className: dotTailCls }), foldShow ? react_1.default.createElement(button_1.default, tslib_1.__assign({}, buttonProps), locale.fold, react_1.default.createElement(icon_1.default, { type: "arrow-up" })) : react_1.default.createElement(button_1.default, tslib_1.__assign({}, buttonProps), locale.expand, react_1.default.createElement(icon_1.default, { type: "arrow-down" }))) : null);
    };
    TimelineItem.displayName = 'TimelineItem';
    TimelineItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, config_provider_1.default.propTypes), { prefix: prop_types_1.default.string, index: prop_types_1.default.number, total: prop_types_1.default.number, folderIndex: prop_types_1.default.number, foldShow: prop_types_1.default.bool, state: prop_types_1.default.oneOf(['done', 'process', 'error', 'success']), icon: prop_types_1.default.string, dot: prop_types_1.default.node, time: prop_types_1.default.node, title: prop_types_1.default.node, timeLeft: prop_types_1.default.node, content: prop_types_1.default.node, toggleFold: prop_types_1.default.func, className: prop_types_1.default.string, locale: prop_types_1.default.object, animation: prop_types_1.default.bool });
    TimelineItem.defaultProps = {
        prefix: 'next-',
        state: 'done',
        toggleFold: function toggleFold() {},
        animation: true
    };
    return TimelineItem;
}(react_1.Component);
exports.default = config_provider_1.default.config(TimelineItem, {});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _transfer = __webpack_require__(437);

var _transfer2 = _interopRequireDefault(_transfer);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _transfer2.default;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _transferPanel = __webpack_require__(438);

var _transferPanel2 = _interopRequireDefault(_transferPanel);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var config = _configProvider2.default.config;
var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;

var getLeftValue = function getLeftValue(dataSource, rightValue) {
    return dataSource.map(function (item) {
        return item.value;
    }).filter(function (itemValue) {
        return rightValue.indexOf(itemValue) === -1;
    });
};

var filterCheckedValue = function filterCheckedValue(left, right, dataSource) {
    var result = {
        left: [],
        right: []
    };

    if (left.length || right.length) {
        var value = dataSource.map(function (item) {
            return item.value;
        });
        value.forEach(function (itemValue) {
            if (left.indexOf(itemValue) > -1) {
                result.left.push(itemValue);
            } else if (right.indexOf(itemValue) > -1) {
                result.right.push(itemValue);
            }
        });
    }

    return result;
};

/**
 * Transfer
 */
var Transfer = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(Transfer, _Component);

    Transfer.normalizeValue = function normalizeValue(value) {
        if (value) {
            if (Array.isArray(value)) {
                return value;
            }
            /* istanbul ignore next */
            return [value];
        }

        return [];
    };

    Transfer.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var innerUpdate = prevState.innerUpdate,
            value = prevState.value,
            leftValue = prevState.leftValue;

        if (innerUpdate) {
            return {
                innerUpdate: false,
                value: value,
                leftValue: leftValue
            };
        }
        var st = {};

        var newValue = void 0;
        if ('value' in nextProps) {
            var _value = Transfer.normalizeValue(nextProps.value);
            st.value = _value;
            newValue = _value;
        } else {
            /* istanbul ignore next */
            newValue = prevState.value;
        }
        st.leftValue = getLeftValue(nextProps.dataSource, newValue);

        var _filterCheckedValue = filterCheckedValue(prevState.leftCheckedValue, prevState.rightCheckedValue, nextProps.dataSource),
            left = _filterCheckedValue.left,
            right = _filterCheckedValue.right;

        st.leftCheckedValue = left;
        st.rightCheckedValue = right;

        return st;
    };

    function Transfer(props, context) {
        (0, _classCallCheck3.default)(this, Transfer);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        var value = props.value,
            defaultValue = props.defaultValue,
            defaultLeftChecked = props.defaultLeftChecked,
            defaultRightChecked = props.defaultRightChecked,
            dataSource = props.dataSource,
            rtl = props.rtl,
            operations = props.operations;

        if (operations.length === 0) {
            operations.push(_react2.default.createElement(_icon2.default, { rtl: rtl, type: 'arrow-right' }));
            operations.push(_react2.default.createElement(_icon2.default, { rtl: rtl, type: 'arrow-left' }));
        }

        var _filterCheckedValue2 = filterCheckedValue(Transfer.normalizeValue(defaultLeftChecked), Transfer.normalizeValue(defaultRightChecked), dataSource),
            left = _filterCheckedValue2.left,
            right = _filterCheckedValue2.right;

        var stValue = Transfer.normalizeValue('value' in props ? value : defaultValue);
        _this.state = {
            value: stValue,
            leftCheckedValue: left,
            rightCheckedValue: right,
            leftValue: getLeftValue(dataSource, stValue)
        };

        bindCtx(_this, ['handlePanelChange', 'handlePanelSort', 'handleMoveItem', 'handleSimpleMove', 'handleSimpleMoveAll']);
        return _this;
    }

    Transfer.prototype.groupDatasource = function groupDatasource(value, itemValues, dataSource) {
        return value.reduce(function (ret, itemValue) {
            var index = itemValues.indexOf(itemValue);
            if (index > -1) {
                ret.push(dataSource[index]);
            }
            return ret;
        }, []);
    };

    Transfer.prototype.handlePanelChange = function handlePanelChange(position, value) {
        var _setState;

        var _state = this.state,
            leftCheckedValue = _state.leftCheckedValue,
            rightCheckedValue = _state.rightCheckedValue;
        var onSelect = this.props.onSelect;

        var valuePropName = position === 'left' ? 'leftCheckedValue' : 'rightCheckedValue';
        // inner state changed
        this.setState((_setState = {
            innerUpdate: true
        }, _setState[valuePropName] = value, _setState));
        onSelect && onSelect(position === 'left' ? value : leftCheckedValue, position === 'left' ? rightCheckedValue : value, position === 'left' ? 'source' : 'target');
    };

    Transfer.prototype.handlePanelSort = function handlePanelSort(position, dragValue, referenceValue, dragGap) {
        var _this2 = this;

        var _state2 = this.state,
            value = _state2.value,
            leftValue = _state2.leftValue;

        var newValue = position === 'right' ? value : leftValue;
        var currentIndex = newValue.indexOf(dragValue);
        var referenceIndex = newValue.indexOf(referenceValue);
        var expectIndex = dragGap === 'before' ? referenceIndex : referenceIndex + 1;
        if (currentIndex === expectIndex) {
            return;
        }

        newValue.splice(currentIndex, 1);
        if (currentIndex < expectIndex) {
            expectIndex = expectIndex - 1;
        }
        newValue.splice(expectIndex, 0, dragValue);
        this.setState({
            innerUpdate: true,
            value: value,
            leftValue: leftValue
        }, function () {
            _this2.props.onSort(newValue, position);
        });
    };

    Transfer.prototype.handleMoveItem = function handleMoveItem(direction) {
        var _st;

        var rightValue = void 0;
        var newLeftValue = void 0;
        var movedValue = void 0;
        var valuePropName = void 0;

        var _state3 = this.state,
            value = _state3.value,
            leftValue = _state3.leftValue,
            leftCheckedValue = _state3.leftCheckedValue,
            rightCheckedValue = _state3.rightCheckedValue;

        if (direction === 'right') {
            rightValue = leftCheckedValue.concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return leftCheckedValue.indexOf(itemValue) === -1;
            });
            movedValue = leftCheckedValue;
            valuePropName = 'leftCheckedValue';
        } else {
            rightValue = value.filter(function (itemValue) {
                return rightCheckedValue.indexOf(itemValue) === -1;
            });
            newLeftValue = rightCheckedValue.concat(leftValue);
            movedValue = rightCheckedValue;
            valuePropName = 'rightCheckedValue';
        }

        var st = (_st = {}, _st[valuePropName] = [], _st);

        this.setValueState(st, rightValue, newLeftValue, movedValue, direction);
    };

    Transfer.prototype.handleSimpleMove = function handleSimpleMove(direction, v) {
        var rightValue = void 0;
        var newLeftValue = void 0;

        var _state4 = this.state,
            value = _state4.value,
            leftValue = _state4.leftValue;

        if (direction === 'right') {
            rightValue = [v].concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return itemValue !== v;
            });
        } else {
            rightValue = value.filter(function (itemValue) {
                return itemValue !== v;
            });
            newLeftValue = [v].concat(leftValue);
        }

        this.setValueState({}, rightValue, newLeftValue, [v], direction);
    };

    Transfer.prototype.handleSimpleMoveAll = function handleSimpleMoveAll(direction) {
        var rightValue = void 0;
        var newLeftValue = void 0;
        var movedValue = void 0;

        var dataSource = this.props.dataSource;
        var _state5 = this.state,
            value = _state5.value,
            leftValue = _state5.leftValue;

        var disabledValue = dataSource.reduce(function (ret, item) {
            if (item.disabled) {
                ret.push(item.value);
            }

            return ret;
        }, []);

        if (direction === 'right') {
            movedValue = leftValue.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) === -1;
            });
            rightValue = movedValue.concat(value);
            newLeftValue = leftValue.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) > -1;
            });
        } else {
            movedValue = value.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) === -1;
            });
            rightValue = value.filter(function (itemValue) {
                return disabledValue.indexOf(itemValue) > -1;
            });
            newLeftValue = movedValue.concat(leftValue);
        }

        this.setValueState({}, rightValue, newLeftValue, movedValue, direction);
    };

    // eslint-disable-next-line max-params


    Transfer.prototype.setValueState = function setValueState(st, rightValue, leftValue, movedValue, direction) {
        var _this3 = this;

        var dataSource = this.props.dataSource;

        var callback = function callback() {
            if ('onChange' in _this3.props) {
                var itemValues = dataSource.map(function (item) {
                    return item.value;
                });
                var rightData = _this3.groupDatasource(rightValue, itemValues, dataSource);
                var leftData = _this3.groupDatasource(leftValue, itemValues, dataSource);
                var movedData = _this3.groupDatasource(movedValue, itemValues, dataSource);

                _this3.props.onChange(rightValue, rightData, {
                    leftValue: leftValue,
                    leftData: leftData,
                    movedValue: movedValue,
                    movedData: movedData,
                    direction: direction
                });
            }
        };

        if (!('value' in this.props)) {
            st.value = rightValue;
            st.leftValue = leftValue;
        }

        if (Object.keys(st).length) {
            this.setState(st, callback);
        } else {
            // eslint-disable-next-line callback-return
            callback();
        }
    };

    Transfer.prototype.renderCenter = function renderCenter() {
        var _props = this.props,
            prefix = _props.prefix,
            mode = _props.mode,
            operations = _props.operations,
            disabled = _props.disabled,
            leftDisabled = _props.leftDisabled,
            rightDisabled = _props.rightDisabled,
            locale = _props.locale;
        var _state6 = this.state,
            leftCheckedValue = _state6.leftCheckedValue,
            rightCheckedValue = _state6.rightCheckedValue;

        return _react2.default.createElement('div', { className: prefix + 'transfer-operations' }, mode === 'simple' ? _react2.default.createElement(_icon2.default, { className: prefix + 'transfer-move', size: 'large', type: 'switch' }) : [_react2.default.createElement(_button2.default, {
            'aria-label': locale.moveToRight,
            key: 'l2r',
            className: prefix + 'transfer-operation',
            type: leftCheckedValue.length ? 'primary' : 'normal',
            disabled: leftDisabled || disabled || !leftCheckedValue.length,
            onClick: this.handleMoveItem.bind(this, 'right')
        }, operations[0]), _react2.default.createElement(_button2.default, {
            'aria-label': locale.moveToLeft,
            key: 'r2l',
            className: prefix + 'transfer-operation',
            type: rightCheckedValue.length ? 'primary' : 'normal',
            disabled: rightDisabled || disabled || !rightCheckedValue.length,
            onClick: this.handleMoveItem.bind(this, 'left')
        }, operations[1])]);
    };

    Transfer.prototype.render = function render() {
        var _props2 = this.props,
            prefix = _props2.prefix,
            mode = _props2.mode,
            disabled = _props2.disabled,
            className = _props2.className,
            dataSource = _props2.dataSource,
            locale = _props2.locale,
            _props2$showSearch = _props2.showSearch,
            showSearch = _props2$showSearch === undefined ? false : _props2$showSearch,
            _props2$searchProps = _props2.searchProps,
            searchProps = _props2$searchProps === undefined ? {} : _props2$searchProps,
            filter = _props2.filter,
            onSearch = _props2.onSearch,
            leftDisabled = _props2.leftDisabled,
            rightDisabled = _props2.rightDisabled,
            searchPlaceholder = _props2.searchPlaceholder,
            notFoundContent = _props2.notFoundContent,
            titles = _props2.titles,
            listClassName = _props2.listClassName,
            listStyle = _props2.listStyle,
            itemRender = _props2.itemRender,
            sortable = _props2.sortable,
            useVirtual = _props2.useVirtual,
            rtl = _props2.rtl,
            id = _props2.id,
            children = _props2.children,
            showCheckAll = _props2.showCheckAll;
        var _state7 = this.state,
            value = _state7.value,
            leftValue = _state7.leftValue,
            leftCheckedValue = _state7.leftCheckedValue,
            rightCheckedValue = _state7.rightCheckedValue;

        var itemValues = dataSource.map(function (item) {
            return item.value;
        });
        var leftDatasource = this.groupDatasource(leftValue, itemValues, dataSource);
        var rightDatasource = this.groupDatasource(value, itemValues, dataSource);
        var panelProps = {
            prefix: prefix,
            mode: mode,
            locale: locale,
            filter: filter,
            onSearch: onSearch,
            searchPlaceholder: searchPlaceholder,
            listClassName: listClassName,
            listStyle: listStyle,
            itemRender: itemRender,
            onMove: this.handleSimpleMove,
            onMoveAll: this.handleSimpleMoveAll,
            onChange: this.handlePanelChange,
            sortable: sortable,
            useVirtual: useVirtual,
            onSort: this.handlePanelSort,
            baseId: id,
            customerList: children,
            showCheckAll: showCheckAll
        };
        var others = pickOthers(Object.keys(Transfer.propTypes), this.props);

        if (rtl) {
            others.dir = 'rtl';
        }
        var _showSearch = Array.isArray(showSearch) ? showSearch : [showSearch, showSearch];
        var _searchProps = Array.isArray(searchProps) ? searchProps : [searchProps, searchProps];
        var _notFoundContent = Array.isArray(notFoundContent) ? notFoundContent : [notFoundContent, notFoundContent];
        return _react2.default.createElement('div', (0, _extends3.default)({ className: (0, _classnames2.default)(prefix + 'transfer', className), id: id }, others), _react2.default.createElement(_transferPanel2.default, (0, _extends3.default)({}, panelProps, {
            position: 'left',
            dataSource: leftDatasource,
            disabled: leftDisabled || disabled,
            value: leftCheckedValue,
            showSearch: _showSearch[0],
            searchProps: _searchProps[0],
            notFoundContent: _notFoundContent[0],
            title: titles[0]
        })), this.renderCenter(), _react2.default.createElement(_transferPanel2.default, (0, _extends3.default)({}, panelProps, {
            position: 'right',
            dataSource: rightDatasource,
            disabled: rightDisabled || disabled,
            value: rightCheckedValue,
            showSearch: _showSearch[1],
            searchProps: _searchProps[1],
            notFoundContent: _notFoundContent[1],
            title: titles[1]
        })));
    };

    return Transfer;
}(_react.Component), _class.contextTypes = {
    prefix: _propTypes2.default.string
}, _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    rtl: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    /**
     * 移动选项模式
     */
    mode: _propTypes2.default.oneOf(['normal', 'simple']),
    /**
     * 数据源
     */
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.object),
    /**
     * （用于受控）当前值
     */
    value: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * （用于非受控）初始值
     */
    defaultValue: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * 值发生改变的时候触发的回调函数
     * @param {Array} value 右面板值
     * @param {Array} data 右面板数据
     * @param {Object} extra 额外参数
     * @param {Array} extra.leftValue 左面板值
     * @param {Array} extra.leftData 左面板数据
     * @param {Array} extra.movedValue 发生移动的值
     * @param {Object} extra.movedData 发生移动的数据
     * @param {String} extra.direction 移动的方向，值为'left'或'right'
     */
    onChange: _propTypes2.default.func,
    /**
     * Item 被选中的时候触发的回调函数
     * @param {Array} sourceSelectedValue 源面板选中的 Item 列表
     * @param {Array} targetSelectedValue 目标面板选中的 Item 列表
     * @param {String} trigger 触发面板，值为'source'或'target'
     */
    onSelect: _propTypes2.default.func,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否禁用左侧面板
     */
    leftDisabled: _propTypes2.default.bool,
    /**
     * 是否禁用右侧面板
     */
    rightDisabled: _propTypes2.default.bool,
    /**
     * 列表项渲染函数
     * @param {Object} data 数据
     * @return {ReactNode} 列表项内容
     */
    itemRender: _propTypes2.default.func,
    /**
     * 自定义搜索函数
     * @param {String} searchedValue 搜索的内容
     * @param {Object} data 数据
     * @return {Boolean} 是否匹配到
     * @default 根据 label 属性匹配
     */
    filter: _propTypes2.default.func,
    /**
     * 搜索框输入时触发的回调函数
     * @param {String} searchedValue 搜索的内容
     * @param {String} position 搜索面板的位置
     */
    onSearch: _propTypes2.default.func,
    /**
     * 搜索框占位符
     */
    searchPlaceholder: _propTypes2.default.string,
    /**
     * 左右面板是否显示搜索框
     */
    showSearch: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.arrayOf(_propTypes2.default.bool)]),
    /**
     * 左右面板搜索框配置项，同 Search 组件 props
     */
    searchProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.arrayOf(_propTypes2.default.object)]),
    /**
     * 列表为空显示内容
     */
    notFoundContent: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.arrayOf(_propTypes2.default.node)]),
    /**
     * 左右面板标题
     */
    titles: _propTypes2.default.arrayOf(_propTypes2.default.node),
    /**
     * 向右向左移动按钮显示内容
     * @default [<Icon type="arrow-right" />, <Icon type="arrow-left" />]
     */
    operations: _propTypes2.default.arrayOf(_propTypes2.default.node),
    /**
     * 左面板默认选中值
     */
    defaultLeftChecked: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * 右面板默认选中值
     */
    defaultRightChecked: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * 左右面板列表自定义样式类名
     */
    listClassName: _propTypes2.default.string,
    /**
     * 左右面板列表自定义样式对象
     */
    listStyle: _propTypes2.default.object,
    /**
     * 是否允许拖拽排序
     */
    sortable: _propTypes2.default.bool,
    /**
     * 拖拽排序时触发的回调函数
     * @param {Array} value 排序后的值
     * @param {String} position 拖拽的面板位置，值为：left 或 right
     */
    onSort: _propTypes2.default.func,
    /**
     * 自定义国际化文案对象
     */
    locale: _propTypes2.default.object,
    /**
     * 请设置 id 以保证transfer的可访问性
     */
    id: _propTypes2.default.string,
    /**
     * 接收 children 自定义渲染列表
     */
    children: _propTypes2.default.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _propTypes2.default.bool,
    /**
     * 是否显示底部全选 checkbox
     */
    showCheckAll: _propTypes2.default.bool
}), _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    mode: 'normal',
    dataSource: [],
    defaultValue: [],
    disabled: false,
    leftDisabled: false,
    rightDisabled: false,
    showCheckAll: true,
    itemRender: function itemRender(data) {
        return data.label;
    },
    showSearch: false,
    filter: function filter(searchedValue, data) {
        var labelString = '';
        var loop = function loop(arg) {
            if (_react2.default.isValidElement(arg) && arg.props.children) {
                _react2.default.Children.forEach(arg.props.children, loop);
            } else if (typeof arg === 'string') {
                labelString += arg;
            }
        };
        loop(data.label);

        return labelString.length >= searchedValue.length && labelString.indexOf(searchedValue) > -1;
    },
    onSearch: function onSearch() {},
    notFoundContent: 'Not Found',
    titles: [],
    operations: [],
    defaultLeftChecked: [],
    defaultRightChecked: [],
    sortable: false,
    onSort: function onSort() {},
    locale: _zhCn2.default.Transfer
}, _temp);
Transfer.displayName = 'Transfer';
exports.default = config((0, _reactLifecyclesCompat.polyfill)(Transfer));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _checkbox = __webpack_require__(48);

var _checkbox2 = _interopRequireDefault(_checkbox);

var _search = __webpack_require__(176);

var _search2 = _interopRequireDefault(_search);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _util = __webpack_require__(4);

var _transferItem = __webpack_require__(439);

var _transferItem2 = _interopRequireDefault(_transferItem);

var _virtualList = __webpack_require__(50);

var _virtualList2 = _interopRequireDefault(_virtualList);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx;
var TransferPanel = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(TransferPanel, _Component);

    function TransferPanel(props, context) {
        (0, _classCallCheck3.default)(this, TransferPanel);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _this.state = {
            searchedValue: '',
            dragValue: null,
            dragOverValue: null
        };
        _this.footerId = props.baseId ? _util.htmlId.escapeForId(props.baseId + '-panel-footer-' + props.position) : '';
        _this.headerId = props.baseId ? _util.htmlId.escapeForId(props.baseId + '-panel-header-' + props.position) : '';

        bindCtx(_this, ['handleCheck', 'handleAllCheck', 'handleSearch', 'handleItemDragStart', 'handleItemDragOver', 'handleItemDragEnd', 'handleItemDrop', 'getListDOM']);
        _this.firstRender = true;
        return _this;
    }

    TransferPanel.prototype.componentDidMount = function componentDidMount() {
        this.firstRender = false;
    };

    TransferPanel.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.dataSource.length !== this.props.dataSource.length && this.list) {
            if (this.list.scrollTop > 0) {
                this.list.scrollTop = 0;
            }
        }

        this.searched = false;
    };

    TransferPanel.prototype.getListDOM = function getListDOM(ref) {
        this.list = ref;
    };

    TransferPanel.prototype.getListData = function getListData(dataSource, disableHighlight) {
        var _this2 = this;

        var _props = this.props,
            prefix = _props.prefix,
            position = _props.position,
            mode = _props.mode,
            value = _props.value,
            onMove = _props.onMove,
            disabled = _props.disabled,
            itemRender = _props.itemRender,
            sortable = _props.sortable;
        var _state = this.state,
            dragPosition = _state.dragPosition,
            dragValue = _state.dragValue,
            dragOverValue = _state.dragOverValue;

        return dataSource.map(function (item) {
            var others = 'title' in item ? {
                title: item.title
            } : {};

            return _react2.default.createElement(_transferItem2.default, (0, _extends3.default)({
                key: item.value,
                prefix: prefix,
                mode: mode,
                checked: value.indexOf(item.value) > -1,
                disabled: disabled || item.disabled,
                item: item,
                onCheck: _this2.handleCheck,
                onClick: onMove,
                needHighlight: !_this2.firstRender && !_this2.searched && !disableHighlight,
                itemRender: itemRender,
                draggable: sortable,
                onDragStart: _this2.handleItemDragStart,
                onDragOver: _this2.handleItemDragOver,
                onDragEnd: _this2.handleItemDragEnd,
                onDrop: _this2.handleItemDrop,
                dragPosition: dragPosition,
                dragValue: dragValue,
                dragOverValue: dragOverValue,
                panelPosition: position
            }, others));
        });
    };

    TransferPanel.prototype.handleAllCheck = function handleAllCheck(allChecked) {
        var _props2 = this.props,
            position = _props2.position,
            onChange = _props2.onChange,
            filter = _props2.filter;
        var searchedValue = this.state.searchedValue;

        var newValue = void 0;
        if (allChecked) {
            if (searchedValue) {
                newValue = this.enabledDatasource.filter(function (item) {
                    return filter(searchedValue, item);
                }).map(function (item) {
                    return item.value;
                });
            } else {
                newValue = this.enabledDatasource.map(function (item) {
                    return item.value;
                });
            }
        } else {
            newValue = [];
        }

        onChange && onChange(position, newValue);
    };

    TransferPanel.prototype.handleCheck = function handleCheck(itemValue, checked) {
        var _props3 = this.props,
            position = _props3.position,
            value = _props3.value,
            onChange = _props3.onChange;

        var newValue = [].concat(value);
        var index = value.indexOf(itemValue);
        if (checked && index === -1) {
            newValue.push(itemValue);
        } else if (!checked && index > -1) {
            newValue.splice(index, 1);
        }

        onChange && onChange(position, newValue);
    };

    TransferPanel.prototype.handleSearch = function handleSearch(searchedValue) {
        this.setState({
            searchedValue: searchedValue
        });
        this.searched = true;

        var _props4 = this.props,
            onSearch = _props4.onSearch,
            position = _props4.position;

        onSearch(searchedValue, position);
    };

    TransferPanel.prototype.handleItemDragStart = function handleItemDragStart(position, value) {
        this.setState({
            dragPosition: position,
            dragValue: value
        });
    };

    TransferPanel.prototype.handleItemDragOver = function handleItemDragOver(value) {
        this.setState({
            dragOverValue: value
        });
    };

    TransferPanel.prototype.handleItemDragEnd = function handleItemDragEnd() {
        this.setState({
            dragOverValue: null
        });
    };

    TransferPanel.prototype.handleItemDrop = function handleItemDrop() {
        var _props5;

        this.setState({
            dragOverValue: null
        });

        (_props5 = this.props).onSort.apply(_props5, arguments);
    };

    TransferPanel.prototype.renderHeader = function renderHeader() {
        var _props6 = this.props,
            title = _props6.title,
            prefix = _props6.prefix;

        return _react2.default.createElement('div', { id: this.headerId, className: prefix + 'transfer-panel-header' }, title);
    };

    TransferPanel.prototype.renderSearch = function renderSearch() {
        var _props7 = this.props,
            prefix = _props7.prefix,
            searchPlaceholder = _props7.searchPlaceholder,
            locale = _props7.locale,
            _props7$searchProps = _props7.searchProps,
            searchProps = _props7$searchProps === undefined ? {} : _props7$searchProps;

        return _react2.default.createElement(_search2.default, (0, _extends3.default)({
            'aria-labelledby': this.headerId,
            shape: 'simple'
        }, searchProps, {
            className: prefix + 'transfer-panel-search',
            placeholder: searchPlaceholder || locale.searchPlaceholder,
            onChange: this.handleSearch
        }));
    };

    TransferPanel.prototype.renderList = function renderList(dataSource) {
        var _cx;

        var _props8 = this.props,
            prefix = _props8.prefix,
            listClassName = _props8.listClassName,
            listStyle = _props8.listStyle,
            customerList = _props8.customerList,
            useVirtual = _props8.useVirtual;

        var newClassName = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'transfer-panel-list'] = true, _cx[listClassName] = !!listClassName, _cx));

        var customerPanel = customerList && customerList(this.props);
        if (customerPanel) {
            return _react2.default.createElement('div', { className: newClassName, style: listStyle, ref: this.getListDOM }, customerPanel);
        }

        if (!dataSource.length) {
            return _react2.default.createElement('div', { className: newClassName, style: listStyle }, this.renderNotFoundContent());
        }

        if (useVirtual) {
            return _react2.default.createElement('div', { className: newClassName, style: (0, _extends3.default)({ position: 'relative' }, listStyle) }, _react2.default.createElement(_virtualList2.default, {
                itemsRenderer: function itemsRenderer(items, ref) {
                    return _react2.default.createElement(_menu2.default, { style: { border: 'none' }, ref: ref }, items);
                }
            }, this.getListData(dataSource, true)));
        }

        return _react2.default.createElement(_menu2.default, { className: newClassName, style: listStyle, ref: this.getListDOM }, this.getListData(dataSource));
    };

    TransferPanel.prototype.renderNotFoundContent = function renderNotFoundContent() {
        var _props9 = this.props,
            prefix = _props9.prefix,
            notFoundContent = _props9.notFoundContent;

        return _react2.default.createElement('div', { className: prefix + 'transfer-panel-not-found-container' }, _react2.default.createElement('div', { className: prefix + 'transfer-panel-not-found' }, notFoundContent));
    };

    TransferPanel.prototype.renderFooter = function renderFooter() {
        var _props10 = this.props,
            prefix = _props10.prefix,
            position = _props10.position,
            mode = _props10.mode,
            disabled = _props10.disabled,
            locale = _props10.locale,
            showCheckAll = _props10.showCheckAll;

        if (mode === 'simple') {
            var _cx2;

            var onMoveAll = this.props.onMoveAll;

            var classNames = (0, _classnames2.default)((_cx2 = {}, _cx2[prefix + 'transfer-panel-move-all'] = true, _cx2[prefix + 'disabled'] = disabled, _cx2));
            return _react2.default.createElement('div', { className: prefix + 'transfer-panel-footer' }, _react2.default.createElement('a', { className: classNames, onClick: onMoveAll.bind(this, position === 'left' ? 'right' : 'left') }, locale.moveAll));
        }

        var _props11 = this.props,
            value = _props11.value,
            showSearch = _props11.showSearch,
            filter = _props11.filter,
            dataSource = _props11.dataSource;
        var searchedValue = this.state.searchedValue;

        var totalCount = dataSource.length;
        var _dataSource = dataSource;
        var checkedCount = value.length;
        var _checkedCount = checkedCount;
        if (showSearch && searchedValue) {
            _dataSource = dataSource.filter(function (item) {
                return filter(searchedValue, item);
            });
            totalCount = _dataSource.length;
            _checkedCount = _dataSource.filter(function (item) {
                return value.includes(item.value);
            }).length;
        }
        var totalEnabledCount = Math.min(totalCount, this.enabledDatasource.length);
        var checked = checkedCount > 0 && checkedCount >= totalEnabledCount;
        var indeterminate = checkedCount > 0 && _checkedCount >= 0 && _checkedCount < totalEnabledCount;
        var items = totalCount > 1 ? locale.items : locale.item;
        var countLabel = checkedCount === 0 ? totalCount + ' ' + items : checkedCount + '/' + totalCount + ' ' + items;

        return _react2.default.createElement('div', { className: prefix + 'transfer-panel-footer' }, showCheckAll && _react2.default.createElement(_checkbox2.default, {
            disabled: disabled,
            checked: checked,
            indeterminate: indeterminate,
            onChange: this.handleAllCheck,
            'aria-labelledby': this.footerId
        }), _react2.default.createElement('span', { className: prefix + 'transfer-panel-count', id: this.footerId }, countLabel));
    };

    TransferPanel.prototype.render = function render() {
        var _props12 = this.props,
            prefix = _props12.prefix,
            title = _props12.title,
            showSearch = _props12.showSearch,
            filter = _props12.filter,
            dataSource = _props12.dataSource;
        var searchedValue = this.state.searchedValue;

        var _dataSource = this.props.dataSource;
        this.enabledDatasource = dataSource.filter(function (item) {
            return !item.disabled;
        });
        if (showSearch && searchedValue) {
            _dataSource = dataSource.filter(function (item) {
                return filter(searchedValue, item);
            });
        }

        return _react2.default.createElement('div', { className: prefix + 'transfer-panel' }, title ? this.renderHeader() : null, showSearch ? this.renderSearch() : null, this.renderList(_dataSource), this.renderFooter());
    };

    return TransferPanel;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    position: _propTypes2.default.oneOf(['left', 'right']),
    mode: _propTypes2.default.oneOf(['normal', 'simple']),
    dataSource: _propTypes2.default.array,
    value: _propTypes2.default.array,
    onChange: _propTypes2.default.func,
    onMove: _propTypes2.default.func,
    onMoveAll: _propTypes2.default.func,
    disabled: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    title: _propTypes2.default.node,
    showSearch: _propTypes2.default.bool,
    searchProps: _propTypes2.default.object,
    filter: _propTypes2.default.func,
    onSearch: _propTypes2.default.func,
    searchPlaceholder: _propTypes2.default.string,
    notFoundContent: _propTypes2.default.node,
    listClassName: _propTypes2.default.string,
    listStyle: _propTypes2.default.object,
    itemRender: _propTypes2.default.func,
    sortable: _propTypes2.default.bool,
    onSort: _propTypes2.default.func,
    baseId: _propTypes2.default.string,
    customerList: _propTypes2.default.func,
    useVirtual: _propTypes2.default.bool,
    showCheckAll: _propTypes2.default.bool
}, _temp);
TransferPanel.displayName = 'TransferPanel';
exports.default = TransferPanel;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _menu = __webpack_require__(17);

var _menu2 = _interopRequireDefault(_menu);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Item = _menu2.default.Item,
    CheckboxItem = _menu2.default.CheckboxItem;
var bindCtx = _util.func.bindCtx;
var pickOthers = _util.obj.pickOthers;
var getOffset = _util.dom.getOffset;
var TransferItem = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(TransferItem, _Component);

    function TransferItem(props) {
        (0, _classCallCheck3.default)(this, TransferItem);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));

        _this.state = {
            highlight: false
        };

        bindCtx(_this, ['getItemDOM', 'handleClick', 'handleDragStart', 'handleDragOver', 'handleDragEnd', 'handleDrop']);
        return _this;
    }

    TransferItem.prototype.componentDidMount = function componentDidMount() {
        var _this2 = this;

        if (this.props.needHighlight) {
            this.addHighlightTimer = setTimeout(function () {
                _this2.setState({
                    highlight: true
                });
            }, 1);
            this.removeHighlightTimer = setTimeout(function () {
                _this2.setState({
                    highlight: false
                });
            }, 201);
        }
    };

    TransferItem.prototype.componentWillUnmount = function componentWillUnmount() {
        clearTimeout(this.addHighlightTimer);
        clearTimeout(this.removeHighlightTimer);
    };

    TransferItem.prototype.getItemDOM = function getItemDOM(ref) {
        this.item = ref;
    };

    TransferItem.prototype.handleClick = function handleClick() {
        var _props = this.props,
            onClick = _props.onClick,
            panelPosition = _props.panelPosition,
            item = _props.item;

        onClick(panelPosition === 'left' ? 'right' : 'left', item.value);
    };

    TransferItem.prototype.handleDragStart = function handleDragStart(ev) {
        ev && ev.dataTransfer && typeof ev.dataTransfer.setData === 'function' && ev.dataTransfer.setData('text/plain', ev.target.id);
        var _props2 = this.props,
            onDragStart = _props2.onDragStart,
            panelPosition = _props2.panelPosition,
            item = _props2.item;

        onDragStart(panelPosition, item.value);
    };

    TransferItem.prototype.getDragGap = function getDragGap(e) {
        var referenceTop = getOffset(e.currentTarget).top;
        var referenceHeight = e.currentTarget.offsetHeight;
        return e.pageY <= referenceTop + referenceHeight / 2 ? 'before' : 'after';
    };

    TransferItem.prototype.handleDragOver = function handleDragOver(e) {
        var _props3 = this.props,
            panelPosition = _props3.panelPosition,
            dragPosition = _props3.dragPosition,
            onDragOver = _props3.onDragOver,
            item = _props3.item;

        if (panelPosition === dragPosition) {
            e.preventDefault();

            var dragGap = this.getDragGap(e);
            if (this.dragGap !== dragGap) {
                this.dragGap = dragGap;
                onDragOver(item.value);
            }
        }
    };

    TransferItem.prototype.handleDragEnd = function handleDragEnd() {
        var onDragEnd = this.props.onDragEnd;

        onDragEnd();
    };

    TransferItem.prototype.handleDrop = function handleDrop(e) {
        e.preventDefault();

        var _props4 = this.props,
            onDrop = _props4.onDrop,
            item = _props4.item,
            panelPosition = _props4.panelPosition,
            dragValue = _props4.dragValue;

        onDrop(panelPosition, dragValue, item.value, this.dragGap);
    };

    TransferItem.prototype.render = function render() {
        var _cx;

        var _props5 = this.props,
            prefix = _props5.prefix,
            mode = _props5.mode,
            checked = _props5.checked,
            disabled = _props5.disabled,
            item = _props5.item,
            onCheck = _props5.onCheck,
            itemRender = _props5.itemRender,
            draggable = _props5.draggable,
            dragOverValue = _props5.dragOverValue,
            panelPosition = _props5.panelPosition,
            dragPosition = _props5.dragPosition;

        var others = pickOthers(Object.keys(TransferItem.propTypes), this.props);
        var highlight = this.state.highlight;

        var isSimple = mode === 'simple';

        var classNames = (0, _classnames2.default)((_cx = {}, _cx[prefix + 'transfer-panel-item'] = true, _cx[prefix + 'insert-' + this.dragGap] = dragOverValue === item.value && panelPosition === dragPosition, _cx[prefix + 'focused'] = highlight, _cx[prefix + 'simple'] = isSimple, _cx));

        var children = itemRender(item);
        var itemProps = (0, _extends3.default)({
            ref: this.getItemDOM,
            className: classNames,
            children: children,
            disabled: disabled,
            draggable: draggable && !disabled,
            onDragStart: this.handleDragStart,
            onDragOver: this.handleDragOver,
            onDragEnd: this.handleDragEnd,
            onDrop: this.handleDrop
        }, others);
        var title = void 0;
        if (typeof children === 'string') {
            title = children;
        }
        if (isSimple) {
            if (!itemProps.disabled) {
                itemProps.onClick = this.handleClick;
            }

            return _react2.default.createElement(Item, (0, _extends3.default)({ title: title }, itemProps));
        }

        return _react2.default.createElement(CheckboxItem, (0, _extends3.default)({ checked: checked, onChange: onCheck.bind(this, item.value), title: title }, itemProps));
    };

    return TransferItem;
}(_react.Component), _class.menuChildType = CheckboxItem.menuChildType, _class.propTypes = {
    prefix: _propTypes2.default.string,
    mode: _propTypes2.default.oneOf(['normal', 'simple']),
    value: _propTypes2.default.array,
    disabled: _propTypes2.default.bool,
    item: _propTypes2.default.object,
    onCheck: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    needHighlight: _propTypes2.default.bool,
    itemRender: _propTypes2.default.func,
    draggable: _propTypes2.default.bool,
    onDragStart: _propTypes2.default.func,
    onDragOver: _propTypes2.default.func,
    onDragEnd: _propTypes2.default.func,
    onDrop: _propTypes2.default.func,
    dragPosition: _propTypes2.default.oneOf(['left', 'right']),
    dragValue: _propTypes2.default.string,
    dragOverValue: _propTypes2.default.string,
    panelPosition: _propTypes2.default.oneOf(['left', 'right'])
}, _temp);
TransferItem.displayName = 'TransferItem';
exports.default = TransferItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.Tree = exports.treeNodeProps = void 0;
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var lodash_1 = __webpack_require__(441);
var react_lifecycles_compat_1 = __webpack_require__(11);
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var util_1 = __webpack_require__(4);
var tree_node_1 = tslib_1.__importDefault(__webpack_require__(103));
var virtual_list_1 = tslib_1.__importDefault(__webpack_require__(50));
var util_2 = __webpack_require__(190);
var bindCtx = util_1.func.bindCtx,
    noop = util_1.func.noop;
var getOffset = util_1.dom.getOffset;
var pickOthers = util_1.obj.pickOthers,
    pickProps = util_1.obj.pickProps,
    isPlainObject = util_1.obj.isPlainObject;
exports.treeNodeProps = ['key', 'label', 'selectable', 'checkable', 'editable', 'draggable', 'disabled', 'checkboxDisabled', 'isLeaf', 'icon'];
var getExpandedKeys = function getExpandedKeys(props, willReceiveProps, _k2n, _p2n) {
    var expandedKeys;
    if (!willReceiveProps && props.defaultExpandAll) {
        expandedKeys = Object.keys(_k2n).filter(function (key) {
            var children = _k2n[key].children;
            return children && children.length;
        });
    } else {
        expandedKeys = 'expandedKeys' in props ? props.expandedKeys : willReceiveProps ? [] : props.defaultExpandedKeys;
        expandedKeys = (0, util_2.normalizeToArray)(expandedKeys);
        if (props.autoExpandParent) {
            var newExpandedKeys_1 = [];
            var expandedPoss = expandedKeys.reduce(function (ret, key) {
                var pos = _k2n[key] && _k2n[key].pos;
                if (pos) {
                    ret.push(pos);
                    newExpandedKeys_1.push(key);
                }
                return ret;
            }, []);
            expandedPoss.forEach(function (pos) {
                var nums = pos.split('-');
                if (nums.length === 2) {
                    return;
                }
                for (var i = 1; i <= nums.length - 2; i++) {
                    var ancestorPos = nums.slice(0, i + 1).join('-');
                    var ancestorKey = _p2n[ancestorPos].key;
                    if (newExpandedKeys_1.indexOf(ancestorKey) === -1) {
                        newExpandedKeys_1.push(ancestorKey);
                    }
                }
            });
            return newExpandedKeys_1;
        }
    }
    return expandedKeys;
};
var getSelectedKeys = function getSelectedKeys(props, willReceiveProps, _k2n, _p2n) {
    var selectedKeys = 'selectedKeys' in props ? props.selectedKeys : willReceiveProps ? [] : props.defaultSelectedKeys;
    selectedKeys = (0, util_2.normalizeToArray)(selectedKeys);
    return selectedKeys.filter(function (key) {
        return _k2n[key];
    });
};
var getIndeterminateKeys = function getIndeterminateKeys(checkedKeys, checkStrictly, _k2n, _p2n) {
    if (checkStrictly) {
        return [];
    }
    var indeterminateKeys = [];
    var poss = (0, util_2.filterChildKey)(checkedKeys.filter(function (key) {
        return !!_k2n[key];
    }).filter(function (key) {
        return !_k2n[key].disabled && !_k2n[key].checkboxDisabled && _k2n[key].checkable !== false;
    }), _k2n, _p2n).map(function (key) {
        return _k2n[key].pos;
    });
    poss.forEach(function (pos) {
        var nums = pos.split('-');
        for (var i = nums.length; i > 2; i--) {
            var parentPos = nums.slice(0, i - 1).join('-');
            var parent_1 = _p2n[parentPos];
            if (parent_1.disabled || parent_1.checkboxDisabled) break;
            var parentKey = parent_1.key;
            if (indeterminateKeys.indexOf(parentKey) === -1) {
                indeterminateKeys.push(parentKey);
            }
        }
    });
    return indeterminateKeys;
};
var getCheckedKeys = function getCheckedKeys(props, willReceiveProps, _k2n, _p2n) {
    var checkedKeys = props.defaultCheckedKeys;
    var indeterminateKeys;
    if ('checkedKeys' in props) {
        checkedKeys = props.checkedKeys;
    } else if (willReceiveProps) {
        checkedKeys = [];
    }
    var checkStrictly = props.checkStrictly; // TODO TEST
    if (checkStrictly) {
        if (isPlainObject(checkedKeys)) {
            var checked = checkedKeys.checked,
                indeterminate = checkedKeys.indeterminate;
            checkedKeys = (0, util_2.normalizeToArray)(checked);
            indeterminateKeys = (0, util_2.normalizeToArray)(indeterminate);
        } else {
            checkedKeys = (0, util_2.normalizeToArray)(checkedKeys);
        }
        checkedKeys = checkedKeys.filter(function (key) {
            return !!_k2n[key];
        });
    } else {
        // @ts-expect-error must be Key[] type, but it's maybe be a object type
        checkedKeys = (0, util_2.getAllCheckedKeys)(checkedKeys, _k2n, _p2n);
        checkedKeys = checkedKeys.filter(function (key) {
            return !!_k2n[key];
        });
        indeterminateKeys = getIndeterminateKeys(checkedKeys, props.checkStrictly, _k2n, _p2n);
    }
    // @ts-expect-error need to assign default value to indeterminateKeys
    return { checkedKeys: checkedKeys, indeterminateKeys: indeterminateKeys };
};
var preHandleData = function preHandleData(dataSource, props) {
    var k2n = {};
    var p2n = {};
    var keyList = [];
    var drill = function drill(data, level, prefix, parent) {
        if (data === void 0) {
            data = [];
        }
        if (level === void 0) {
            level = 1;
        }
        if (prefix === void 0) {
            prefix = '0';
        }
        return data.map(function (item, index) {
            // 为了兼容之前的实现 保留非法节点
            if (item.illegalFlag) {
                return item;
            }
            var children = item.children;
            var pos = "".concat(prefix, "-").concat(index);
            var key = item.key;
            item.pos = pos;
            item.level = level;
            // 判断为叶子节点
            // - 指定isLeaf属性
            // - loadData模式下 没有指定isLeaf为true
            // - 存在children元素
            if (!('isLeaf' in item)) {
                item.isLeaf = !(children && children.length || props.loadData);
            }
            item.isLastChild = parent ? [].concat(parent.isLastChild || [], index === data.length - 1) : [];
            if (key === undefined || key === null) {
                item.key = key = pos;
            }
            keyList.push(key);
            !item.isLeaf && drill(children, level + 1, pos, item);
            k2n[key] = p2n[pos] = tslib_1.__assign({}, item);
            return item;
        });
    };
    return { dataSource: drill(dataSource), k2n: k2n, p2n: p2n, keyList: keyList };
};
var preHandleChildren = function preHandleChildren(props) {
    var k2n = {};
    var p2n = {};
    var keyList = [];
    var loop = function loop(children, prefix, level) {
        if (prefix === void 0) {
            prefix = '0';
        }
        if (level === void 0) {
            level = 1;
        }
        return react_1.Children.map(children, function (node, index) {
            if (!react_1.default.isValidElement(node)) {
                return;
            }
            var pos = "".concat(prefix, "-").concat(index);
            var key = node.key;
            key = key || pos;
            var item = tslib_1.__assign(tslib_1.__assign({}, node.props), { key: key, pos: pos, level: level });
            var children = node.props.children;
            var hasChildren = children && react_1.Children.count(children);
            if (!('isLeaf' in item)) {
                item.isLeaf = !(hasChildren || props.loadData);
            }
            keyList.push(key);
            if (hasChildren) {
                item.children = loop(children, pos, level + 1);
            }
            k2n[key] = p2n[pos] = item;
            return item;
        });
    };
    loop(props.children);
    return { k2n: k2n, p2n: p2n, keyList: keyList };
};
var getData = function getData(props) {
    var dataSource = props.dataSource,
        renderChildNodes = props.renderChildNodes,
        _a = props.children,
        children = _a === void 0 ? [] : _a,
        useVirtual = props.useVirtual,
        immutable = props.immutable;
    var data = immutable ? (0, lodash_1.cloneDeep)(dataSource) : dataSource;
    if ((renderChildNodes || useVirtual) && !('dataSource' in props)) {
        data = (0, util_2.convertChildren2Data)(children);
    }
    if (data) {
        try {
            return preHandleData(data, props);
        } catch (err) {
            if ((err.message || '').match('object is not extensible')) {
                // eslint-disable-next-line no-console
                console.error(err.message, 'try to set immutable to true to allow immutable dataSource');
            } else {
                throw err;
            }
        }
    } else {
        return preHandleChildren(props);
    }
};
/**
 * Tree
 */
var Tree = /** @class */function (_super) {
    tslib_1.__extends(Tree, _super);
    function Tree(props) {
        var _this = _super.call(this, props) || this;
        var _a = getData(props),
            _b = _a.dataSource,
            dataSource = _b === void 0 ? [] : _b,
            k2n = _a.k2n,
            p2n = _a.p2n,
            keyList = _a.keyList;
        var _c = _this.props,
            focusable = _c.focusable,
            autoFocus = _c.autoFocus,
            focusedKey = _c.focusedKey;
        var willReceiveProps = false;
        var _d = getCheckedKeys(props, willReceiveProps, k2n, p2n),
            checkedKeys = _d.checkedKeys,
            _e = _d.indeterminateKeys,
            indeterminateKeys = _e === void 0 ? [] : _e;
        _this.state = {
            _k2n: k2n,
            _p2n: p2n,
            _keyList: keyList,
            dataSource: dataSource,
            willReceiveProps: willReceiveProps,
            expandedKeys: getExpandedKeys(props, willReceiveProps, k2n, p2n),
            selectedKeys: getSelectedKeys(props, willReceiveProps, k2n, p2n),
            checkedKeys: checkedKeys,
            indeterminateKeys: indeterminateKeys,
            focusedKey: 'focusedKey' in props ? focusedKey : focusable && autoFocus ? _this.tabbableKey : null
        };
        if (focusable) {
            _this.tabbableKey = _this.getFirstAvaliablelChildKey('0');
        }
        if (focusable) {
            _this.tabbableKey = _this.getFirstAvaliablelChildKey('0');
        }
        bindCtx(_this, ['handleExpand', 'handleSelect', 'handleCheck', 'handleBlur']);
        _this.virtualListRef = (0, react_1.createRef)();
        return _this;
    }
    Tree.getDerivedStateFromProps = function (props, state) {
        var _a = getData(props),
            _b = _a.dataSource,
            dataSource = _b === void 0 ? [] : _b,
            k2n = _a.k2n,
            p2n = _a.p2n,
            keyList = _a.keyList;
        var st = {};
        if (!state.willReceiveProps) {
            return {
                willReceiveProps: true,
                _k2n: k2n,
                _p2n: p2n,
                _keyList: keyList
            };
        }
        if ('expandedKeys' in props) {
            st.expandedKeys = getExpandedKeys(props, state.willReceiveProps, k2n, p2n);
        }
        if ('selectedKeys' in props) {
            st.selectedKeys = getSelectedKeys(props, state.willReceiveProps, k2n, undefined);
        }
        if ('checkedKeys' in props) {
            var checkedKeys = getCheckedKeys(props, state.willReceiveProps, k2n, p2n).checkedKeys;
            st.checkedKeys = checkedKeys;
        }
        st.indeterminateKeys = props.checkStrictly ? props.checkedKeys && props.checkedKeys.indeterminate || [] : getIndeterminateKeys(st.checkedKeys || state.checkedKeys || [], props.checkStrictly, k2n, p2n);
        return tslib_1.__assign(tslib_1.__assign({}, st), { dataSource: dataSource, _k2n: k2n, _p2n: p2n });
    };
    Tree.prototype.setFocusKey = function () {
        var _a = this.state.selectedKeys,
            selectedKeys = _a === void 0 ? [] : _a;
        this.setState({
            focusedKey: selectedKeys.length > 0 ? selectedKeys[0] : this.getFirstAvaliablelChildKey('0')
        });
    };
    Tree.prototype.getAvailableKey = function (pos, prev) {
        var _this = this;
        var ps = Object.keys(this.state._p2n).filter(function (p) {
            return _this.isAvailablePos(pos, p);
        });
        if (ps.length > 1) {
            var index = ps.indexOf(pos);
            var targetIndex = void 0;
            if (prev) {
                targetIndex = index === 0 ? ps.length - 1 : index - 1;
            } else {
                targetIndex = index === ps.length - 1 ? 0 : index + 1;
            }
            return this.state._p2n[ps[targetIndex]].key;
        }
        return null;
    };
    Tree.prototype.getFirstAvaliablelChildKey = function (parentPos) {
        var _this = this;
        var pos = Object.keys(this.state._p2n).find(function (p) {
            return _this.isAvailablePos("".concat(parentPos, "-0"), p);
        });
        return pos ? this.state._p2n[pos].key : null;
    };
    Tree.prototype.isAvailablePos = function (refPos, targetPos) {
        var disabled = this.state._p2n[targetPos].disabled;
        return this.isSibling(refPos, targetPos) && !disabled;
    };
    Tree.prototype.isSibling = function (currentPos, targetPos) {
        var currentNums = currentPos.split('-').slice(0, -1);
        var targetNums = targetPos.split('-').slice(0, -1);
        return currentNums.length === targetNums.length && currentNums.every(function (num, index) {
            return num === targetNums[index];
        });
    };
    Tree.prototype.getParentKey = function (pos) {
        return this.state._p2n[pos.slice(0, pos.length - 2)].key;
    };
    Tree.prototype.processKey = function (keys, key, add) {
        var index = keys.indexOf(key);
        if (add && index === -1) {
            keys.push(key);
        } else if (!add && index > -1) {
            keys.splice(index, 1);
        }
        return keys;
    };
    /*eslint-disable max-statements*/
    Tree.prototype.handleItemKeyDown = function (key, item, e) {
        if ([util_1.KEYCODE.UP, util_1.KEYCODE.DOWN, util_1.KEYCODE.RIGHT, util_1.KEYCODE.LEFT, util_1.KEYCODE.ENTER, util_1.KEYCODE.ESC, util_1.KEYCODE.SPACE].indexOf(e.keyCode) > -1) {
            e.preventDefault();
            e.stopPropagation();
        }
        var focusedKey = this.state.focusedKey;
        var node = this.state._k2n[key];
        var pos = this.state._k2n[key].pos;
        var level = pos.split('-').length - 1;
        switch (e.keyCode) {
            case util_1.KEYCODE.UP:
                {
                    var avaliableKey = this.getAvailableKey(pos, true);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case util_1.KEYCODE.DOWN:
                {
                    var avaliableKey = this.getAvailableKey(pos, false);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case util_1.KEYCODE.RIGHT:
                {
                    this.handleExpand(true, key, node);
                    var avaliableKey = this.getFirstAvaliablelChildKey(pos);
                    if (avaliableKey) {
                        focusedKey = avaliableKey;
                    }
                    break;
                }
            case util_1.KEYCODE.LEFT:
            case util_1.KEYCODE.ESC:
                {
                    if (level === 1) {
                        var avaliableKey = this.getAvailableKey(pos, true);
                        if (avaliableKey) {
                            focusedKey = avaliableKey;
                        }
                    } else if (level > 1) {
                        var parentKey = this.getParentKey(pos);
                        this.handleExpand(false, parentKey, node);
                        focusedKey = parentKey;
                    }
                    break;
                }
            case util_1.KEYCODE.ENTER:
            case util_1.KEYCODE.SPACE:
                {
                    var checkable = 'checkable' in item.props ? item.props.checkable : this.props.checkable;
                    var selectable = 'selectable' in item.props ? item.props.selectable : this.props.selectable;
                    if (checkable) {
                        this.handleCheck(!item.props.checked, key, node);
                    } else if (selectable) {
                        this.handleSelect(!item.props.selected, key, node, e);
                    }
                    break;
                }
            case util_1.KEYCODE.TAB:
                focusedKey = null;
                break;
            default:
                break;
        }
        if (focusedKey !== this.state.focusedKey) {
            if (!('focusedKey' in this.props)) {
                this.setState({
                    focusedKey: focusedKey
                });
            }
        }
        this.props.onItemKeyDown(focusedKey, item, e);
        this.props.onItemFocus(focusedKey, e);
    };
    Tree.prototype.handleBlur = function (e) {
        this.setState({
            focusedKey: null
        });
        this.props.onBlur && this.props.onBlur(e);
    };
    Tree.prototype.handleExpand = function (expand, key, node) {
        var _this = this;
        var _a = this.props,
            onExpand = _a.onExpand,
            loadData = _a.loadData;
        var expandedKeys = this.state.expandedKeys; // 由于setState 是异步操作，所以去掉 [...this.state.expandedKeys]
        this.processKey(expandedKeys, key, expand);
        var setExpandedState = function setExpandedState() {
            if (!('expandedKeys' in _this.props)) {
                _this.setState({ expandedKeys: expandedKeys });
            }
            // @ts-expect-error must be NodeInstance type, but it's maybe DataNode type.
            onExpand(expandedKeys, { expanded: expand, node: node });
        };
        if (expand && loadData) {
            // @ts-expect-error must be NodeInstance type, but it's maybe DataNode type.
            return loadData(node).then(setExpandedState);
        } else {
            setExpandedState();
        }
    };
    Tree.prototype.handleSelect = function (select, key, node, e) {
        var _a = this.props,
            multiple = _a.multiple,
            onSelect = _a.onSelect;
        var selectedKeys = tslib_1.__spreadArray([], tslib_1.__read(this.state.selectedKeys), false);
        if (multiple) {
            this.processKey(selectedKeys, key, select);
        } else {
            selectedKeys = select ? [key] : [];
        }
        if (!('selectedKeys' in this.props)) {
            this.setState({ selectedKeys: selectedKeys });
        }
        onSelect(selectedKeys, {
            // @ts-expect-error must be NodeInstance type, but it's maybe be DataNode type.
            selectedNodes: this.getNodes(selectedKeys),
            // @ts-expect-error must be NodeInstance type, but it's maybe be DataNode type.
            node: node,
            selected: select,
            event: e
        });
    };
    // eslint-disable-next-line max-statements
    Tree.prototype.handleCheck = function (check, key, node) {
        var _this = this;
        var _a = this.props,
            checkStrictly = _a.checkStrictly,
            checkedStrategy = _a.checkedStrategy,
            onCheck = _a.onCheck;
        var _b = this.state,
            _k2n = _b._k2n,
            _p2n = _b._p2n;
        var checkedKeys = tslib_1.__spreadArray([], tslib_1.__read(this.state.checkedKeys), false);
        if (checkStrictly) {
            this.processKey(checkedKeys, key, check);
            var newCheckedKeys_1 = isPlainObject(this.props.checkedKeys) ? {
                checked: checkedKeys,
                indeterminate: this.state.indeterminateKeys
            } : checkedKeys;
            // @ts-expect-error must be Key[], but it's maybe be object
            onCheck(newCheckedKeys_1, {
                checkedNodes: this.getNodes(checkedKeys),
                checkedNodesPositions: checkedKeys.map(function (key) {
                    if (!_k2n[key]) return null;
                    var _a = _k2n[key],
                        node = _a.node,
                        pos = _a.pos;
                    return { node: node, pos: pos };
                }).filter(function (v) {
                    return !!v;
                }),
                node: node,
                indeterminateKeys: this.state.indeterminateKeys,
                checked: check,
                key: key
            });
            return;
        }
        var pos = _k2n[key].pos;
        (0, util_2.forEachEnableNode)(_k2n[key], function (node) {
            if (node.checkable === false) return;
            _this.processKey(checkedKeys, node.key, check);
        });
        var ps = Object.keys(_p2n);
        var currentPos = pos;
        var nums = pos.split('-');
        for (var i = nums.length; i > 2; i--) {
            var parentCheck = true;
            var parentPos = nums.slice(0, i - 1).join('-');
            if (_p2n[parentPos].disabled || _p2n[parentPos].checkboxDisabled || _p2n[parentPos].checkable === false) {
                currentPos = parentPos;
                continue;
            }
            var parentKey = _p2n[parentPos].key;
            var parentChecked = checkedKeys.indexOf(parentKey) > -1;
            if (!check && !parentChecked) {
                break;
            }
            for (var j = 0; j < ps.length; j++) {
                var p = ps[j];
                var pnode = _p2n[p];
                if ((0, util_2.isSiblingOrSelf)(currentPos, p) && !pnode.disabled && !pnode.checkboxDisabled) {
                    var k = pnode.key;
                    if (pnode.checkable === false) {
                        // eslint-disable-next-line max-depth
                        if (!pnode.children || pnode.children.length === 0) continue;
                        // eslint-disable-next-line max-depth
                        for (var m = 0; m < pnode.children.length; m++) {
                            if (!pnode.children.every(function (child) {
                                return (0, util_2.isNodeChecked)(child, checkedKeys);
                            })) {
                                parentCheck = false;
                                break;
                            }
                        }
                    } else if (checkedKeys.indexOf(k) === -1) {
                        parentCheck = false;
                    }
                    if (!parentCheck) break;
                }
            }
            this.processKey(checkedKeys, parentKey, parentCheck);
            currentPos = parentPos;
        }
        var indeterminateKeys = getIndeterminateKeys(checkedKeys, checkStrictly, _k2n, _p2n);
        if (!('checkedKeys' in this.props)) {
            this.setState({
                checkedKeys: checkedKeys,
                indeterminateKeys: indeterminateKeys
            });
        }
        var newCheckedKeys;
        switch (checkedStrategy) {
            case 'parent':
                newCheckedKeys = (0, util_2.filterChildKey)(checkedKeys, _k2n, _p2n);
                break;
            case 'child':
                newCheckedKeys = (0, util_2.filterParentKey)(checkedKeys, _k2n, _p2n);
                break;
            default:
                newCheckedKeys = checkedKeys;
                break;
        }
        onCheck(newCheckedKeys, {
            // @ts-expect-error must be NodeInstance type, but it's maybe be DataNode type.
            checkedNodes: this.getNodes(newCheckedKeys),
            // @ts-expect-error must be NodeInstance type, but it's maybe be DataNode type.
            checkedNodesPositions: newCheckedKeys.map(function (key) {
                if (!_k2n[key]) return null;
                var _a = _k2n[key],
                    node = _a.node,
                    pos = _a.pos;
                return { node: node, pos: pos };
            }).filter(function (v) {
                return !!v;
            }),
            // @ts-expect-error must be NodeInstance type, but it's maybe be DataNode type.
            node: node,
            indeterminateKeys: indeterminateKeys,
            checked: check,
            key: key
        });
    };
    Tree.prototype.getNodeProps = function (key) {
        var prefix = this.props.prefix;
        var _a = this.state,
            expandedKeys = _a.expandedKeys,
            selectedKeys = _a.selectedKeys,
            checkedKeys = _a.checkedKeys,
            dragOverNodeKey = _a.dragOverNodeKey,
            _k2n = _a._k2n,
            indeterminateKeys = _a.indeterminateKeys;
        var _b = _k2n[key],
            pos = _b.pos,
            isLeaf = _b.isLeaf,
            level = _b.level;
        return {
            prefix: prefix,
            root: this,
            eventKey: key,
            pos: pos,
            isLeaf: isLeaf,
            level: level,
            expanded: expandedKeys.indexOf(key) > -1,
            selected: selectedKeys.indexOf(key) > -1,
            checked: checkedKeys.indexOf(key) > -1,
            indeterminate: indeterminateKeys.indexOf(key) > -1,
            dragOver: dragOverNodeKey === key && this.dropPosition === 0,
            dragOverGapTop: dragOverNodeKey === key && this.dropPosition === -1,
            dragOverGapBottom: dragOverNodeKey === key && this.dropPosition === 1
        };
    };
    Tree.prototype.getNodes = function (keys) {
        var _this = this;
        return keys.map(function (key) {
            return _this.state._k2n[key] && _this.state._k2n[key].node;
        }).filter(function (v) {
            return !!v;
        });
    };
    Tree.prototype.handleDragStart = function (e, node) {
        var _this = this;
        var dragNodeKey = node.props.eventKey;
        this.dragNode = node;
        this.dragNodesKeys = Object.keys(this.state._k2n).filter(function (k) {
            return (0, util_2.isDescendantOrSelf)(_this.state._k2n[dragNodeKey].pos, _this.state._k2n[k].pos);
        });
        var expandedKeys = this.processKey(tslib_1.__spreadArray([], tslib_1.__read(this.state.expandedKeys), false), dragNodeKey, false);
        this.setState({ expandedKeys: expandedKeys });
        this.props.onDragStart({
            event: e,
            node: node,
            expandedKeys: expandedKeys
        });
    };
    Tree.prototype.handleDragEnter = function (e, node) {
        var dragOverNodeKey = node.props.eventKey;
        this.dropPosition = this.getDropPosition(e, node);
        if (this.dragNode && this.dragNode.props.eventKey === dragOverNodeKey && this.dropPosition === 0) {
            this.setState({
                dragOverNodeKey: null
            });
            return;
        }
        var expandedKeys = this.processKey(tslib_1.__spreadArray([], tslib_1.__read(this.state.expandedKeys), false), dragOverNodeKey, true);
        this.setState({
            dragOverNodeKey: dragOverNodeKey,
            expandedKeys: expandedKeys
        });
        this.props.onDragEnter({
            event: e,
            node: node,
            expandedKeys: expandedKeys
        });
    };
    Tree.prototype.getDropPosition = function (e, node) {
        var labelWrapperNode = node.labelWrapperEl;
        var offsetTop = getOffset(labelWrapperNode).top;
        var offsetHeight = labelWrapperNode.offsetHeight;
        var pageY = e.pageY;
        var gapHeight = 2;
        if (pageY > offsetTop + offsetHeight - gapHeight) {
            return 1;
        }
        if (pageY < offsetTop + gapHeight) {
            return -1;
        }
        return 0;
    };
    Tree.prototype.handleDragOver = function (e, node) {
        var dragOverNodeKey = node.props.eventKey;
        if (this.state.dragOverNodeKey !== dragOverNodeKey) {
            this.setState({
                dragOverNodeKey: dragOverNodeKey
            });
        }
        this.props.onDragOver({ event: e, node: node });
    };
    Tree.prototype.handleDragLeave = function (e, node) {
        var eventKey = node.props.eventKey;
        var _keyList = this.state._keyList;
        var firstKey = _keyList[0];
        var lastKey = _keyList[_keyList.length - 1];
        // 只针对树的边界节点（第一个和最后一个）做处理
        if (eventKey === firstKey || eventKey === lastKey) {
            this.setState({
                dragOverNodeKey: null
            });
        }
        this.props.onDragLeave({ event: e, node: node });
    };
    Tree.prototype.handleDragEnd = function (e, node) {
        this.setState({
            dragOverNodeKey: null
        });
        this.props.onDragEnd({ event: e, node: node });
        this.dragNode = null;
    };
    Tree.prototype.handleDrop = function (e, node) {
        if (this.dragNode && (0, util_2.isDescendantOrSelf)(this.state._k2n[this.dragNode.props.eventKey].pos, this.state._k2n[node.props.eventKey].pos)) {
            return;
        }
        this.setState({
            dragOverNodeKey: null
        });
        var params = this.generateDropParams(node);
        this.props.onDrop(tslib_1.__assign({ event: e }, params));
        this.dragNode = null;
    };
    Tree.prototype.canDrop = function (node) {
        var params = this.generateDropParams(node);
        return this.props.canDrop(params);
    };
    Tree.prototype.generateDropParams = function (node) {
        return {
            dragNode: this.dragNode,
            dragNodesKeys: tslib_1.__spreadArray([], tslib_1.__read(this.dragNodesKeys), false),
            node: node,
            dropPosition: this.dropPosition
        };
    };
    Tree.prototype.filterTreeNode = function (node) {
        return this.props.filterTreeNode.call(this, node);
    };
    Tree.prototype.shouldNodeShow = function (nodeData) {
        var _a = this.state,
            expandedKeys = _a.expandedKeys,
            _p2n = _a._p2n;
        return !(nodeData.style && nodeData.style.display === 'none') && (0, util_2.getAllDescendantKeys)(nodeData, _p2n).every(function (k) {
            return expandedKeys.includes(k);
        });
    };
    Tree.prototype.renderTreeNode = function (props, childNodes) {
        var _a = this.props,
            rtl = _a.rtl,
            labelRender = _a.labelRender;
        var key = props.key;
        var nodeProps = tslib_1.__assign(tslib_1.__assign({ _key: key }, props), this.getNodeProps(key));
        if (labelRender) {
            nodeProps.label = labelRender(pickProps(exports.treeNodeProps, props));
        }
        return (
            // @ts-expect-error DataNode is conflict with TreeNodeProps, should fix this.
            react_1.default.createElement(tree_node_1.default, tslib_1.__assign({ rtl: rtl, key: key }, nodeProps), childNodes)
        );
    };
    Tree.prototype.renderNodeList = function (dataSource) {
        var _this = this;
        var nodeList = [];
        var _k2n = this.state._k2n;
        var drill = function drill(list) {
            list.forEach(function (item) {
                // 为了兼容之前的实现 保留非法节点
                if (item.illegalFlag) {
                    nodeList.push(item);
                    return;
                }
                var children = item.children,
                    nodeProps = tslib_1.__rest(item, ["children"]);
                if (!_this.shouldNodeShow(item)) {
                    return;
                }
                nodeList.push(nodeProps);
                children && children.length && drill(children);
            });
        };
        drill(dataSource);
        return nodeList.map(function (nodeProps, index) {
            // 为了兼容之前的实现 保留非法节点
            if (nodeProps.illegalFlag) {
                return nodeProps.node;
            }
            // aria props
            nodeProps.size = nodeList.length;
            nodeProps.posinset = index + 1;
            // @ts-expect-error must pass second param
            return _k2n[nodeProps.key].node = _this.renderTreeNode(nodeProps);
        });
    };
    Tree.prototype.renderWithCustomChildNodes = function (dataSource) {
        var _this = this;
        var renderChildNodes = this.props.renderChildNodes;
        var _k2n = this.state._k2n;
        var drill = function drill(list) {
            return list.map(function (_a, index) {
                var children = _a.children,
                    nodeProps = tslib_1.__rest(_a, ["children"]);
                var childNodes;
                if (children && children.length) {
                    childNodes = renderChildNodes(drill(children));
                }
                // aria props
                nodeProps.size = list.length;
                nodeProps.posinset = index + 1;
                return _k2n[nodeProps.key].node = _this.renderTreeNode(nodeProps, childNodes);
            });
        };
        return drill(dataSource);
    };
    Tree.prototype.renderByDataSource = function (dataSource) {
        var _this = this;
        var drill = function drill(data, prefix) {
            if (prefix === void 0) {
                prefix = '0';
            }
            return data.map(function (item, index) {
                // 为了兼容之前的实现 保留非法节点
                if (item.illegalFlag) {
                    return item.node;
                }
                var pos = "".concat(prefix, "-").concat(index);
                var _a = item.key,
                    key = _a === void 0 ? pos : _a,
                    children = item.children,
                    others = tslib_1.__rest(item, ["key", "children"]);
                var props = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ size: data.length }, others), _this.getNodeProps("".concat(key))), { _key: key, key: key });
                if (children && children.length) {
                    props.children = drill(children, pos);
                }
                var node = _this.renderTreeNode(props, props.children);
                // eslint-disable-next-line
                _this.state._k2n[key].node = node;
                return node;
            });
        };
        return drill(dataSource);
    };
    Tree.prototype.renderByChildren = function () {
        var _this = this;
        var rtl = this.props.rtl;
        var _k2n = this.state._k2n;
        var loop = function loop(children, prefix) {
            if (prefix === void 0) {
                prefix = '0';
            }
            return react_1.Children.map(children, function (child, index) {
                if (!react_1.default.isValidElement(child)) {
                    return;
                }
                var pos = "".concat(prefix, "-").concat(index);
                var key = child.key || pos;
                var props = _this.getNodeProps("".concat(key));
                if (child.props.children) {
                    props.children = loop(child.props.children, pos);
                }
                props._key = key;
                props.rtl = rtl;
                props.size = react_1.Children.count(children);
                var node = (0, react_1.cloneElement)(child, props);
                _k2n[key].node = node;
                return node;
            });
        };
        return loop(this.props.children);
    };
    Tree.prototype.render = function () {
        var _a;
        var _this = this;
        var _b = this.props,
            prefix = _b.prefix,
            rtl = _b.rtl,
            className = _b.className,
            showLine = _b.showLine,
            isNodeBlock = _b.isNodeBlock,
            isLabelBlock = _b.isLabelBlock,
            multiple = _b.multiple,
            useVirtual = _b.useVirtual,
            renderChildNodes = _b.renderChildNodes,
            virtualListProps = _b.virtualListProps;
        var dataSource = this.state.dataSource;
        var _c = pickOthers(Object.keys(Tree.propTypes), this.props),
            style = _c.style,
            others = tslib_1.__rest(_c, ["style"]);
        if (rtl) {
            others.dir = 'rtl';
        }
        var newClassName = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "tree")] = true, _a["".concat(prefix, "label-block")] = isLabelBlock, _a["".concat(prefix, "node-block")] = isNodeBlock, _a["".concat(prefix, "node-indent")] = !isNodeBlock, _a["".concat(prefix, "show-line")] = !isNodeBlock && showLine, _a[className] = !!className, _a));
        var treeRender = function treeRender(items, ref) {
            return react_1.default.createElement("ul", tslib_1.__assign({ role: "tree", ref: ref, "aria-multiselectable": multiple, onBlur: _this.handleBlur, className: newClassName,
                // @ts-expect-error should not be null
                style: useVirtual ? null : style }, others), items);
        };
        var virtualTreeRender = function virtualTreeRender(dataSource) {
            return react_1.default.createElement("div", { className: "".concat(prefix, "virtual-tree-container"), style: style }, react_1.default.createElement(virtual_list_1.default, tslib_1.__assign({ ref: _this.virtualListRef, itemsRenderer: function itemsRenderer(items, ref) {
                    return treeRender(items, ref);
                } }, virtualListProps), _this.renderNodeList(dataSource)));
        };
        return useVirtual ? virtualTreeRender(dataSource) : renderChildNodes ? treeRender(this.renderWithCustomChildNodes(dataSource)) : !this.props.dataSource ? treeRender(this.renderByChildren()) : treeRender(this.renderByDataSource(dataSource));
    };
    Tree.propTypes = {
        prefix: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        pure: prop_types_1.default.bool,
        className: prop_types_1.default.string,
        children: prop_types_1.default.node,
        dataSource: prop_types_1.default.array,
        showLine: prop_types_1.default.bool,
        selectable: prop_types_1.default.bool,
        selectedKeys: prop_types_1.default.arrayOf(prop_types_1.default.string),
        defaultSelectedKeys: prop_types_1.default.arrayOf(prop_types_1.default.string),
        onSelect: prop_types_1.default.func,
        multiple: prop_types_1.default.bool,
        checkable: prop_types_1.default.bool,
        checkedKeys: prop_types_1.default.oneOfType([prop_types_1.default.arrayOf(prop_types_1.default.string), prop_types_1.default.object]),
        defaultCheckedKeys: prop_types_1.default.arrayOf(prop_types_1.default.string),
        checkStrictly: prop_types_1.default.bool,
        checkedStrategy: prop_types_1.default.oneOf(['all', 'parent', 'child']),
        onCheck: prop_types_1.default.func,
        expandedKeys: prop_types_1.default.arrayOf(prop_types_1.default.string),
        defaultExpandedKeys: prop_types_1.default.arrayOf(prop_types_1.default.string),
        defaultExpandAll: prop_types_1.default.bool,
        autoExpandParent: prop_types_1.default.bool,
        onExpand: prop_types_1.default.func,
        editable: prop_types_1.default.bool,
        onEditFinish: prop_types_1.default.func,
        draggable: prop_types_1.default.bool,
        onDragStart: prop_types_1.default.func,
        onDragEnter: prop_types_1.default.func,
        onDragOver: prop_types_1.default.func,
        onDragLeave: prop_types_1.default.func,
        onDragEnd: prop_types_1.default.func,
        onDrop: prop_types_1.default.func,
        canDrop: prop_types_1.default.func,
        loadData: prop_types_1.default.func,
        filterTreeNode: prop_types_1.default.func,
        onRightClick: prop_types_1.default.func,
        isLabelBlock: prop_types_1.default.bool,
        isNodeBlock: prop_types_1.default.oneOfType([prop_types_1.default.bool, prop_types_1.default.object]),
        animation: prop_types_1.default.bool,
        focusedKey: prop_types_1.default.string,
        renderChildNodes: prop_types_1.default.func,
        focusable: prop_types_1.default.bool,
        autoFocus: prop_types_1.default.bool,
        onItemFocus: prop_types_1.default.func,
        onBlur: prop_types_1.default.func,
        onItemKeyDown: prop_types_1.default.func,
        labelRender: prop_types_1.default.func,
        useVirtual: prop_types_1.default.bool,
        immutable: prop_types_1.default.bool,
        virtualListProps: prop_types_1.default.object,
        clickToCheck: prop_types_1.default.bool
    };
    Tree.defaultProps = {
        prefix: 'next-',
        rtl: false,
        pure: false,
        showLine: false,
        selectable: true,
        editable: false,
        multiple: false,
        checkable: false,
        checkStrictly: false,
        checkedStrategy: 'all',
        draggable: false,
        autoExpandParent: true,
        defaultExpandAll: false,
        defaultExpandedKeys: [],
        defaultCheckedKeys: [],
        defaultSelectedKeys: [],
        onExpand: noop,
        onCheck: noop,
        onSelect: noop,
        onDragStart: noop,
        onDragEnter: noop,
        onDragOver: noop,
        onDragLeave: noop,
        onDragEnd: noop,
        onDrop: noop,
        canDrop: function canDrop() {
            return true;
        },
        onEditFinish: noop,
        onRightClick: noop,
        isLabelBlock: false,
        isNodeBlock: false,
        animation: true,
        focusable: true,
        autoFocus: false,
        onItemFocus: noop,
        onItemKeyDown: noop,
        useVirtual: false,
        immutable: false,
        virtualListProps: {},
        clickToCheck: false
    };
    return Tree;
}(react_1.Component);
exports.Tree = Tree;
exports.default = (0, react_lifecycles_compat_1.polyfill)(Tree);

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(69), __webpack_require__(163)(module)))

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = __webpack_require__(13);
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var input_1 = tslib_1.__importDefault(__webpack_require__(19));
var TreeNodeInput = /** @class */function (_super) {
    tslib_1.__extends(TreeNodeInput, _super);
    function TreeNodeInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeNodeInput.prototype.componentDidMount = function () {
        var inputWrapperNode = (0, react_dom_1.findDOMNode)(this);
        inputWrapperNode.querySelector('input').focus();
    };
    TreeNodeInput.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            defaultValue = _a.defaultValue,
            others = tslib_1.__rest(_a, ["prefix", "defaultValue"]);
        return react_1.default.createElement(input_1.default, tslib_1.__assign({ size: "small", className: "".concat(prefix, "tree-node-input"), defaultValue: defaultValue }, others));
    };
    TreeNodeInput.propTypes = {
        prefix: prop_types_1.default.string
    };
    return TreeNodeInput;
}(react_1.Component);
exports.default = TreeNodeInput;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var TreeNodeIndent = /** @class */function (_super) {
    tslib_1.__extends(TreeNodeIndent, _super);
    function TreeNodeIndent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeNodeIndent.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            level = _b.level,
            isLastChild = _b.isLastChild,
            showLine = _b.showLine;
        var indents = [];
        for (var i = 1; i < level; i++) {
            var classNames = (0, classnames_1.default)("".concat(prefix, "tree-node-indent-unit"), (_a = {}, _a["".concat(prefix, "line")] = !isLastChild[i - 1] && showLine, _a));
            indents.push(react_1.default.createElement("span", { className: classNames, key: i - 1 }));
        }
        return indents;
    };
    TreeNodeIndent.propTypes = {
        prefix: prop_types_1.default.string,
        level: prop_types_1.default.number,
        isLastChild: prop_types_1.default.arrayOf(prop_types_1.default.bool),
        showLine: prop_types_1.default.bool
    };
    TreeNodeIndent.defaultProps = {
        isLastChild: []
    };
    return TreeNodeIndent;
}(react_1.Component);
exports.default = TreeNodeIndent;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _treeSelect = __webpack_require__(445);

var _treeSelect2 = _interopRequireDefault(_treeSelect);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

exports.default = _configProvider2.default.config(_treeSelect2.default, {
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        if ('shape' in props) {
            deprecated('shape', 'hasBorder', 'TreeSelect');
            var _props = props,
                shape = _props.shape,
                others = (0, _objectWithoutProperties3.default)(_props, ['shape']);

            props = (0, _extends3.default)({ hasBorder: shape !== 'arrow-only' }, others);
        }

        if ('container' in props) {
            deprecated('container', 'popupContainer', 'TreeSelect');

            var _props2 = props,
                container = _props2.container,
                _others = (0, _objectWithoutProperties3.default)(_props2, ['container']);

            props = (0, _extends3.default)({ popupContainer: container }, _others);
        }

        return props;
    }
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _select = __webpack_require__(30);

var _select2 = _interopRequireDefault(_select);

var _tree = __webpack_require__(189);

var _tree2 = _interopRequireDefault(_tree);

var _util = __webpack_require__(190);

var _util2 = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util3 = __webpack_require__(61);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var noop = function noop() {};
var TreeNode = _tree2.default.Node;
var bindCtx = _util2.func.bindCtx;

var POS_REGEXP = /^\d+(-\d+){1,}$/;

var flatDataSource = function flatDataSource(props) {
    var _k2n = {};
    var _p2n = {};
    var _v2n = {};

    if ('dataSource' in props) {
        var loop = function loop(data) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return data.map(function (item, index) {
                var value = item.value,
                    children = item.children;

                var pos = prefix + '-' + index;
                var key = item.key || pos;

                var newItem = (0, _extends3.default)({}, item, { key: key, pos: pos });
                if (children && children.length) {
                    newItem.children = loop(children, pos);
                }

                _k2n[key] = _p2n[pos] = _v2n[value] = newItem;
                return newItem;
            });
        };

        loop(props.dataSource);
    } else if ('children' in props) {
        var _loop = function _loop(children) {
            var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';
            return _react.Children.map(children, function (node, index) {
                if (!_react2.default.isValidElement(node)) {
                    return;
                }

                var _node$props = node.props,
                    value = _node$props.value,
                    children = _node$props.children;

                var pos = prefix + '-' + index;
                var key = node.key || pos;
                var newItem = (0, _extends3.default)({}, node.props, { key: key, pos: pos });
                if (children && _react.Children.count(children)) {
                    newItem.children = _loop(children, pos);
                }

                _k2n[key] = _p2n[pos] = _v2n[value] = newItem;
                return newItem;
            });
        };
        _loop(props.children);
    }

    return { _k2n: _k2n, _p2n: _p2n, _v2n: _v2n };
};

var isSearched = function isSearched(label, searchedValue) {
    var labelString = '';

    searchedValue = String(searchedValue);

    var loop = function loop(arg) {
        if ((0, _react.isValidElement)(arg) && arg.props.children) {
            _react.Children.forEach(arg.props.children, loop);
        } else {
            labelString += arg;
        }
    };
    loop(label);

    if (labelString.length >= searchedValue.length && labelString.toLowerCase().indexOf(searchedValue.toLowerCase()) > -1) {
        return true;
    }

    return false;
};

var getSearchKeys = function getSearchKeys(searchedValue, _k2n, _p2n) {
    var searchedKeys = [];
    var retainedKeys = [];
    Object.keys(_k2n).forEach(function (k) {
        var _k2n$k = _k2n[k],
            label = _k2n$k.label,
            pos = _k2n$k.pos;

        if (isSearched(label, searchedValue)) {
            searchedKeys.push(k);
            var posArr = pos.split('-');
            posArr.forEach(function (n, i) {
                if (i > 0) {
                    var p = posArr.slice(0, i + 1).join('-');
                    var kk = _p2n[p].key;
                    if (retainedKeys.indexOf(kk) === -1) {
                        retainedKeys.push(kk);
                    }
                }
            });
        }
    });

    return { searchedKeys: searchedKeys, retainedKeys: retainedKeys };
};

/**
 * TreeSelect
 */
var TreeSelect = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(TreeSelect, _Component);

    function TreeSelect(props, context) {
        (0, _classCallCheck3.default)(this, TreeSelect);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        var defaultVisible = props.defaultVisible,
            visible = props.visible,
            defaultValue = props.defaultValue,
            value = props.value;

        _this.state = (0, _extends3.default)({
            visible: typeof visible === 'undefined' ? defaultVisible : visible,
            value: (0, _util.normalizeToArray)(typeof value === 'undefined' ? defaultValue : value),
            searchedValue: '',
            expandedKeys: [],
            searchedKeys: [],
            retainedKeys: [],
            autoExpandParent: false,
            // map of value => item, includes value not exist in dataSource
            mapValueDS: {}
        }, flatDataSource(props));

        // init value/mapValueDS when defaultValue is not undefined
        if (_this.state.value !== undefined) {
            _this.state.mapValueDS = (0, _util3.getValueDataSource)(_this.state.value, _this.state.mapValueDS).mapValueDS;
            _this.state.value = _this.state.value.map(function (v) {
                return (0, _util3.valueToSelectKey)(v);
            });
        }

        bindCtx(_this, ['handleSelect', 'handleCheck', 'handleSearch', 'handleSearchClear', 'handleVisibleChange', 'handleChange', 'handleRemove', 'handleExpand', 'handleKeyDown', 'saveTreeRef', 'saveSelectRef', 'renderMaxTagPlaceholder']);
        return _this;
    }

    TreeSelect.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var st = {};

        if ('value' in props) {
            var valueArray = (0, _util.normalizeToArray)(props.value);
            // convert value to string[]
            st.value = valueArray.map(function (v) {
                return (0, _util3.valueToSelectKey)(v);
            });
            // re-calculate map
            st.mapValueDS = (0, _util3.getValueDataSource)(props.value, state.mapValueDS).mapValueDS;
        }
        if ('visible' in props) {
            st.visible = props.visible;
        }

        var _flatDataSource = flatDataSource(props),
            _k2n = _flatDataSource._k2n,
            _p2n = _flatDataSource._p2n,
            _v2n = _flatDataSource._v2n;

        if (props.showSearch && state.searchedValue) {
            var _getSearchKeys = getSearchKeys(state.searchedValue, _k2n, _p2n),
                searchedKeys = _getSearchKeys.searchedKeys,
                retainedKeys = _getSearchKeys.retainedKeys;

            st.searchedKeys = searchedKeys;
            st.retainedKeys = retainedKeys;
        }

        return (0, _extends3.default)({}, st, {
            _k2n: _k2n,
            _p2n: _p2n,
            _v2n: _v2n
        });
    };

    TreeSelect.prototype.getKeysByValue = function getKeysByValue(value) {
        var _this2 = this;

        return value.reduce(function (ret, v) {
            var k = _this2.state._v2n[v] && _this2.state._v2n[v].key;
            if (k) {
                ret.push(k);
            }
            return ret;
        }, []);
    };

    TreeSelect.prototype.getValueByKeys = function getValueByKeys(keys) {
        var _this3 = this;

        return keys.map(function (k) {
            return _this3.state._k2n[k].value;
        });
    };

    TreeSelect.prototype.getFullItemPath = function getFullItemPath(item) {
        if (!item) {
            return [];
        }
        var pos = item.pos;
        if (typeof pos === 'string' && POS_REGEXP.test(pos)) {
            var _p2n = this.state._p2n;

            var posArr = pos.split('-');
            var fullPosArr = posArr.map(function (_, i) {
                return posArr.slice(0, i + 1).join('-');
            }).slice(1);
            var itemArr = fullPosArr.map(function (pos) {
                return _p2n[pos];
            });
            return itemArr;
        }
        return [item];
    };

    TreeSelect.prototype.getValueForSelect = function getValueForSelect(value) {
        var treeCheckedStrategy = this.props.treeCheckedStrategy;

        var nonExistentValueKeys = this.getNonExistentValueKeys();

        var keys = this.getKeysByValue(value);

        keys = (0, _util.getAllCheckedKeys)(keys, this.state._k2n, this.state._p2n);

        switch (treeCheckedStrategy) {
            case 'parent':
                keys = (0, _util.filterChildKey)(keys, this.state._k2n, this.state._p2n);
                break;
            case 'child':
                keys = (0, _util.filterParentKey)(keys, this.state._k2n, this.state._p2n);
                break;
            default:
                break;
        }

        var values = this.getValueByKeys(keys);

        return [].concat(values, nonExistentValueKeys);
    };

    TreeSelect.prototype.getData = function getData(value, forSelect) {
        var _this4 = this;

        var preserveNonExistentValue = this.props.preserveNonExistentValue;
        var mapValueDS = this.state.mapValueDS;

        var ret = value.reduce(function (ret, v) {
            var k = _this4.state._v2n[v] && _this4.state._v2n[v].key;
            if (k) {
                var _state$_k2n$k = _this4.state._k2n[k],
                    label = _state$_k2n$k.label,
                    pos = _state$_k2n$k.pos,
                    disabled = _state$_k2n$k.disabled,
                    checkboxDisabled = _state$_k2n$k.checkboxDisabled,
                    children = _state$_k2n$k.children,
                    rests = (0, _objectWithoutProperties3.default)(_state$_k2n$k, ['label', 'pos', 'disabled', 'checkboxDisabled', 'children']);

                var d = (0, _extends3.default)({}, rests, {
                    value: v,
                    label: label,
                    pos: pos
                });
                if (forSelect) {
                    d.disabled = disabled || checkboxDisabled;
                } else {
                    d.key = k;
                }
                ret.push(d);
            } else if (preserveNonExistentValue) {
                // 需要保留 dataSource 中不存在的 value
                var item = mapValueDS[v];
                if (item) {
                    ret.push(item);
                }
            }
            return ret;
        }, []);

        return ret;
    };

    TreeSelect.prototype.getNonExistentValues = function getNonExistentValues() {
        var _this5 = this;

        var preserveNonExistentValue = this.props.preserveNonExistentValue;
        var value = this.state.value;

        if (!preserveNonExistentValue) {
            return [];
        }
        var nonExistentValues = value.filter(function (v) {
            return !_this5.state._v2n[v];
        });
        return nonExistentValues;
    };

    TreeSelect.prototype.getNonExistentValueKeys = function getNonExistentValueKeys() {
        var nonExistentValues = this.getNonExistentValues();
        return nonExistentValues.map(function (v) {
            if ((typeof v === 'undefined' ? 'undefined' : (0, _typeof3.default)(v)) === 'object' && v.hasOwnProperty('value')) {
                return v.value;
            }
            return v;
        });
    };

    TreeSelect.prototype.saveTreeRef = function saveTreeRef(ref) {
        this.tree = ref;
    };

    TreeSelect.prototype.saveSelectRef = function saveSelectRef(ref) {
        this.select = ref;
    };

    TreeSelect.prototype.handleVisibleChange = function handleVisibleChange(visible, type) {
        if (!('visible' in this.props)) {
            this.setState({
                visible: visible
            });
        }

        if (['fromTree', 'keyboard'].indexOf(type) !== -1 && !visible) {
            this.select.focusInput();
        }

        this.props.onVisibleChange(visible, type);
    };

    TreeSelect.prototype.triggerOnChange = function triggerOnChange(value, data) {
        var _props = this.props,
            useDetailValue = _props.useDetailValue,
            onChange = _props.onChange;

        onChange(useDetailValue ? data : value, data);
    };

    TreeSelect.prototype.handleSelect = function handleSelect(selectedKeys, extra) {
        var _props2 = this.props,
            multiple = _props2.multiple,
            autoClearSearch = _props2.autoClearSearch;
        var selected = extra.selected;

        if (multiple || selected) {
            var selectedValue = this.getValueByKeys(selectedKeys);
            var nonExistentValues = this.getNonExistentValues();
            var value = [].concat(nonExistentValues, selectedValue);

            if (!('value' in this.props)) {
                this.setState({
                    value: value
                });
            }
            if (!multiple) {
                this.handleVisibleChange(false, 'fromTree');
            }

            var data = this.getData(value);
            var selectedData = this.getData(selectedValue);
            // 单选情况下，不返回 nonExistentValue，直接返回当前选择值，避免无法改选的问题
            multiple ? this.triggerOnChange(value, data) : this.triggerOnChange(selectedValue[0], selectedData[0]);

            // clear search value manually
            if (autoClearSearch) {
                this.select.handleSearchClear('select');
            }
        } else {
            this.handleVisibleChange(false, 'fromTree');
        }
    };

    TreeSelect.prototype.handleCheck = function handleCheck(checkedKeys) {
        var autoClearSearch = this.props.autoClearSearch;

        var value = this.getValueByKeys(checkedKeys);
        var nonExistentValues = this.getNonExistentValues();
        value = [].concat(nonExistentValues, value);

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        this.triggerOnChange(value, this.getData(value));

        // clear search value manually
        if (autoClearSearch) {
            this.select.handleSearchClear('select');
        }
    };

    TreeSelect.prototype.handleRemove = function handleRemove(removedItem) {
        var _this6 = this;

        var removedValue = removedItem.value;
        var _props3 = this.props,
            treeCheckable = _props3.treeCheckable,
            treeCheckStrictly = _props3.treeCheckStrictly,
            treeCheckedStrategy = _props3.treeCheckedStrategy;

        var value = void 0;
        if (
        // there's linkage relationship among nodes
        treeCheckable && !treeCheckStrictly && ['parent', 'all'].indexOf(treeCheckedStrategy) !== -1 &&
        // value exits in datasource
        this.state._v2n[removedValue]) {
            var removedPos = this.state._v2n[removedValue].pos;
            value = this.state.value.filter(function (v) {
                var p = _this6.state._v2n[v].pos;
                return !(0, _util.isDescendantOrSelf)(removedPos, p);
            });

            var nums = removedPos.split('-');
            for (var i = nums.length; i > 2; i--) {
                var parentPos = nums.slice(0, i - 1).join('-');
                var parentValue = this.state._p2n[parentPos].value;
                var parentIndex = value.indexOf(parentValue);
                if (parentIndex > -1) {
                    value.splice(parentIndex, 1);
                } else {
                    break;
                }
            }
        } else {
            value = this.state.value.filter(function (v) {
                return v !== removedValue;
            });
        }

        if (!('value' in this.props)) {
            this.setState({
                value: value
            });
        }

        var data = this.getData(value);
        this.triggerOnChange(value, data);
    };

    TreeSelect.prototype.handleSearch = function handleSearch(searchedValue) {
        var _state = this.state,
            _k2n = _state._k2n,
            _p2n = _state._p2n;

        var _getSearchKeys2 = getSearchKeys(searchedValue, _k2n, _p2n),
            searchedKeys = _getSearchKeys2.searchedKeys,
            retainedKeys = _getSearchKeys2.retainedKeys;

        this.setState({
            searchedValue: searchedValue,
            expandedKeys: searchedKeys,
            searchedKeys: searchedKeys,
            retainedKeys: retainedKeys,
            autoExpandParent: true
        });

        this.props.onSearch(searchedValue);
    };

    TreeSelect.prototype.handleSearchClear = function handleSearchClear(triggerType) {
        this.setState({
            searchedValue: '',
            expandedKeys: []
        });
        this.props.onSearchClear(triggerType);
    };

    TreeSelect.prototype.handleExpand = function handleExpand(expandedKeys) {
        this.setState({
            expandedKeys: expandedKeys,
            autoExpandParent: false
        });
    };

    TreeSelect.prototype.handleKeyDown = function handleKeyDown(e) {
        var onKeyDown = this.props.onKeyDown;
        var visible = this.state.visible;

        if (onKeyDown) {
            onKeyDown(e);
        }

        if (!visible) {
            return;
        }

        switch (e.keyCode) {
            case _util2.KEYCODE.UP:
            case _util2.KEYCODE.DOWN:
                this.tree.setFocusKey();
                e.preventDefault();
                break;
            default:
                break;
        }
    };

    TreeSelect.prototype.handleChange = function handleChange(value, triggerType) {
        if (this.props.hasClear && triggerType === 'clear') {
            if (!('value' in this.props)) {
                this.setState({
                    value: []
                });
            }

            this.triggerOnChange(null, null);
        }
    };

    TreeSelect.prototype.searchNodes = function searchNodes(children) {
        var _state2 = this.state,
            searchedKeys = _state2.searchedKeys,
            retainedKeys = _state2.retainedKeys;

        var loop = function loop(children) {
            var retainedNodes = [];
            _react.Children.forEach(children, function (child) {
                if (searchedKeys.indexOf(child.key) > -1) {
                    retainedNodes.push(child);
                } else if (retainedKeys.indexOf(child.key) > -1) {
                    var retainedNode = child.props.children ? (0, _react.cloneElement)(child, {}, loop(child.props.children)) : child;
                    retainedNodes.push(retainedNode);
                } else {
                    var hideNode = (0, _react.cloneElement)(child, {
                        style: { display: 'none' }
                    });
                    retainedNodes.push(hideNode);
                }
            });
            return retainedNodes;
        };

        return loop(children);
    };

    TreeSelect.prototype.createNodesByData = function createNodesByData(data, searching) {
        var _this7 = this;

        var _state3 = this.state,
            searchedKeys = _state3.searchedKeys,
            retainedKeys = _state3.retainedKeys;

        var loop = function loop(data, isParentMatched) {
            var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';

            var retainedNodes = [];

            data.forEach(function (item, index) {
                var children = item.children,
                    others = (0, _objectWithoutProperties3.default)(item, ['children']);

                var pos = prefix + '-' + index;
                var key = _this7.state._p2n[pos].key;
                var addNode = function addNode(isParentMatched, hide) {
                    if (hide) {
                        others.style = { display: 'none' };
                    }

                    retainedNodes.push(_react2.default.createElement(TreeNode, (0, _extends3.default)({}, others, { key: key }), children && children.length ? loop(children, isParentMatched, pos) : null));
                };

                if (searching) {
                    if (searchedKeys.indexOf(key) > -1 || isParentMatched) {
                        addNode(true);
                    } else if (retainedKeys.indexOf(key) > -1) {
                        addNode(false);
                    } else {
                        addNode(false, true);
                    }
                } else {
                    addNode();
                }
            });

            return retainedNodes;
        };

        return loop(data, false);
    };

    /*eslint-disable max-statements*/

    TreeSelect.prototype.renderPopupContent = function renderPopupContent() {
        var prefix = this.props.prefix;
        var treeSelectPrefix = prefix + 'tree-select-';

        if (!this.state.visible) {
            return _react2.default.createElement('div', { className: treeSelectPrefix + 'dropdown' });
        }

        var _props4 = this.props,
            multiple = _props4.multiple,
            treeCheckable = _props4.treeCheckable,
            treeCheckStrictly = _props4.treeCheckStrictly,
            treeCheckedStrategy = _props4.treeCheckedStrategy,
            treeDefaultExpandAll = _props4.treeDefaultExpandAll,
            treeDefaultExpandedKeys = _props4.treeDefaultExpandedKeys,
            treeLoadData = _props4.treeLoadData,
            _props4$treeProps = _props4.treeProps,
            customTreeProps = _props4$treeProps === undefined ? {} : _props4$treeProps,
            showSearch = _props4.showSearch,
            filterLocal = _props4.filterLocal,
            dataSource = _props4.dataSource,
            children = _props4.children,
            readOnly = _props4.readOnly,
            notFoundContent = _props4.notFoundContent,
            useVirtual = _props4.useVirtual,
            clickToCheck = _props4.clickToCheck;
        var _state4 = this.state,
            value = _state4.value,
            searchedValue = _state4.searchedValue,
            expandedKeys = _state4.expandedKeys,
            autoExpandParent = _state4.autoExpandParent,
            searchedKeys = _state4.searchedKeys;

        var treeProps = {
            multiple: multiple,
            ref: this.saveTreeRef,
            loadData: treeLoadData,
            defaultExpandAll: treeDefaultExpandAll,
            defaultExpandedKeys: treeDefaultExpandedKeys,
            useVirtual: useVirtual,
            isNodeBlock: true,
            clickToCheck: clickToCheck
        };

        // 使用虚拟滚动 设置默认高度
        if (useVirtual) {
            customTreeProps.style = (0, _extends3.default)({
                maxHeight: '260px',
                overflow: 'auto',
                boxSizing: 'border-box'
            }, customTreeProps.style);
        }

        var keys = this.getKeysByValue(value);
        if (treeCheckable) {
            treeProps.checkable = treeCheckable;
            treeProps.checkStrictly = treeCheckStrictly;
            treeProps.checkedStrategy = treeCheckStrictly ? 'all' : treeCheckedStrategy;
            treeProps.checkedKeys = keys;
            treeProps.selectable = !clickToCheck;
            if (!readOnly) {
                treeProps.onCheck = this.handleCheck;
            }
        } else {
            treeProps.selectedKeys = keys;
            if (!readOnly) {
                treeProps.onSelect = this.handleSelect;
            }
        }

        var notFound = false;
        var newChildren = void 0;
        if (filterLocal && showSearch && searchedValue) {
            treeProps.expandedKeys = expandedKeys;
            treeProps.autoExpandParent = autoExpandParent;
            treeProps.onExpand = this.handleExpand;
            treeProps.filterTreeNode = function (node) {
                return searchedKeys.indexOf(node.props.eventKey) > -1;
            };

            if (searchedKeys.length) {
                newChildren = dataSource ? this.createNodesByData(dataSource, true) : this.searchNodes(children);
            } else {
                notFound = true;
            }
        } else {
            // eslint-disable-next-line
            if (dataSource) {
                if (dataSource.length) {
                    newChildren = this.createNodesByData(dataSource);
                } else {
                    notFound = true;
                }
            } else {
                // eslint-disable-next-line
                if (_react.Children.count(children)) {
                    newChildren = children;
                } else {
                    notFound = true;
                }
            }
        }
        var contentClass = treeSelectPrefix + 'dropdown-content';

        return _react2.default.createElement('div', { className: treeSelectPrefix + 'dropdown' }, notFound ? _react2.default.createElement('div', { className: treeSelectPrefix + 'not-found contentClass' }, notFoundContent) : _react2.default.createElement(_tree2.default, (0, _extends3.default)({}, treeProps, customTreeProps, { className: contentClass }), newChildren));
    };

    TreeSelect.prototype.renderPreview = function renderPreview(data, others) {
        var _props5 = this.props,
            prefix = _props5.prefix,
            className = _props5.className,
            renderPreview = _props5.renderPreview;

        var previewCls = (0, _classnames2.default)(className, prefix + 'form-preview');
        var items = data && !Array.isArray(data) ? [data] : data;

        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(items, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), items && items.map(function (_ref) {
            var label = _ref.label;
            return label;
        }).join(', '));
    };

    /**
     * TreeSelect 无法直接使用 Select 的 maxTagPlaceholder 逻辑
     * Select 的 totalValue 是所有 leaf 节点，TreeSelect 的 totalValue 受 treeCheckedStrategy 和 treeCheckStrictly 影响
     *
     * treeCheckStrictly = true: totalValue 为所有节点
     *
     * treeCheckStrictly = false: 根据 treeCheckedStrategy 判断
     *   treeCheckedStrategy = 'all': totalValue 为所有节点
     *   treeCheckedStrategy = 'parent': totalValue 无意义，不返回
     *   treeCheckedStrategy = 'child': totalValue 为所有 leaf 节点
     */

    TreeSelect.prototype.renderMaxTagPlaceholder = function renderMaxTagPlaceholder(value, totalValue) {
        // 这里的 totalValue 为所有 leaf 节点
        var _props6 = this.props,
            treeCheckStrictly = _props6.treeCheckStrictly,
            maxTagPlaceholder = _props6.maxTagPlaceholder,
            treeCheckedStrategy = _props6.treeCheckedStrategy,
            locale = _props6.locale;
        var _v2n = this.state._v2n;

        var treeSelectTotalValue = totalValue; // all the leaf nodes

        // calculate total value
        if (treeCheckStrictly) {
            // all the nodes
            treeSelectTotalValue = _util2.obj.values(_v2n);
        } else if (treeCheckedStrategy === 'all') {
            // all
            treeSelectTotalValue = _util2.obj.values(_v2n);
        } else if (treeCheckedStrategy === 'parent') {
            // totalValue is pointless when treeCheckedStrategy = 'parent'
            treeSelectTotalValue = undefined;
        }

        // custom render function
        if (maxTagPlaceholder) {
            return maxTagPlaceholder(value, treeSelectTotalValue);
        }

        // default render function
        if (treeCheckedStrategy === 'parent') {
            // don't show totalValue when treeCheckedStrategy = 'parent'
            return '' + _util2.str.template(locale.shortMaxTagPlaceholder, {
                selected: value.length
            });
        }
        return '' + _util2.str.template(locale.maxTagPlaceholder, {
            selected: value.length,
            total: treeSelectTotalValue.length
        });
    };

    /*eslint-enable*/

    TreeSelect.prototype.render = function render() {
        var _this8 = this;

        var _props7 = this.props,
            prefix = _props7.prefix,
            size = _props7.size,
            placeholder = _props7.placeholder,
            disabled = _props7.disabled,
            hasArrow = _props7.hasArrow,
            hasBorder = _props7.hasBorder,
            hasClear = _props7.hasClear,
            label = _props7.label,
            readOnly = _props7.readOnly,
            autoWidth = _props7.autoWidth,
            popupStyle = _props7.popupStyle,
            popupClassName = _props7.popupClassName,
            showSearch = _props7.showSearch,
            multiple = _props7.multiple,
            treeCheckable = _props7.treeCheckable,
            treeCheckStrictly = _props7.treeCheckStrictly,
            className = _props7.className,
            popupContainer = _props7.popupContainer,
            popupProps = _props7.popupProps,
            followTrigger = _props7.followTrigger,
            isPreview = _props7.isPreview,
            dataSource = _props7.dataSource,
            tagInline = _props7.tagInline,
            _valueRender = _props7.valueRender;

        var others = _util2.obj.pickOthers(Object.keys(TreeSelect.propTypes), this.props);
        var _state5 = this.state,
            value = _state5.value,
            visible = _state5.visible;

        var valueRenderProps = typeof _valueRender === 'function' ? {
            valueRender: function valueRender(item) {
                return _valueRender(item, _this8.getFullItemPath(item));
            }
        } : undefined;

        // if (non-leaf 节点可选 & 父子节点选中状态需要联动)，需要额外计算父子节点间的联动关系
        var valueForSelect = treeCheckable && !treeCheckStrictly ? this.getValueForSelect(value) : value;

        var data = this.getData(valueForSelect, true);
        if (!multiple && !treeCheckable) {
            data = data[0];
        }

        if (isPreview) {
            return this.renderPreview(data, others);
        }

        return _react2.default.createElement(_select2.default, (0, _extends3.default)({
            prefix: prefix,
            className: className,
            size: size,
            hasBorder: hasBorder,
            hasArrow: hasArrow,
            hasClear: hasClear,
            placeholder: placeholder,
            disabled: disabled,
            autoWidth: autoWidth,
            label: label,
            readOnly: readOnly,
            ref: this.saveSelectRef,
            dataSource: dataSource,
            value: data,
            onChange: this.handleChange,
            visible: visible,
            onVisibleChange: this.handleVisibleChange,
            showSearch: showSearch,
            onSearch: this.handleSearch,
            onSearchClear: this.handleSearchClear,
            popupContainer: popupContainer,
            popupStyle: popupStyle,
            popupClassName: popupClassName,
            popupProps: popupProps,
            followTrigger: followTrigger,
            tagInline: tagInline,
            maxTagPlaceholder: this.renderMaxTagPlaceholder
        }, valueRenderProps, others, {
            onRemove: this.handleRemove,
            onKeyDown: this.handleKeyDown,
            popupContent: this.renderPopupContent(),
            mode: treeCheckable || multiple ? 'multiple' : 'single'
        }));
    };

    return TreeSelect;
}(_react.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    pure: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    className: _propTypes2.default.string,
    /**
     * 树节点
     */
    children: _propTypes2.default.node,
    /**
     * 选择框大小
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 选择框占位符
     */
    placeholder: _propTypes2.default.string,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 是否有下拉箭头
     */
    hasArrow: _propTypes2.default.bool,
    /**
     * 是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 是否有清空按钮
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 自定义内联 label
     */
    label: _propTypes2.default.node,
    /**
     * 是否只读，只读模式下可以展开弹层但不能选择
     */
    readOnly: _propTypes2.default.bool,
    /**
     * 下拉框是否与选择器对齐
     */
    autoWidth: _propTypes2.default.bool,
    /**
     * 数据源，该属性优先级高于 children
     */
    dataSource: _propTypes2.default.arrayOf(_propTypes2.default.object),
    /**
     * value/defaultValue 在 dataSource 中不存在时，是否展示
     * @version 1.25
     */
    preserveNonExistentValue: _propTypes2.default.bool,
    /**
     * （受控）当前值
     */
    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.arrayOf(_propTypes2.default.any)]),
    /**
     * （非受控）默认值
     */
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.arrayOf(_propTypes2.default.any)]),
    /**
     * 选中值改变时触发的回调函数
     * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组
     * @param {Object|Array} data 选中的数据，包括 value, label, pos, key属性，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点
     */
    onChange: _propTypes2.default.func,
    /**
     * 是否一行显示，仅在 multiple 和 treeCheckable 为 true 时生效
     * @version 1.25
     */
    tagInline: _propTypes2.default.bool,
    /**
     * 隐藏多余 tag 时显示的内容，在 tagInline 生效时起作用
     * @param {Object[]} selectedValues 当前已选中的元素
     * @param {Object[]} totalValues 总待选元素
     * @returns {reactNode}
     * @version 1.25
     */
    maxTagPlaceholder: _propTypes2.default.func,
    /**
     * 选择时是否自动清空 searchValue
     * @version 1.26
     */
    autoClearSearch: _propTypes2.default.bool,
    /**
     * 是否显示搜索框
     */
    showSearch: _propTypes2.default.bool,
    /**
     * 	是否使用本地过滤，在数据源为远程的时候需要关闭此项
     */
    filterLocal: _propTypes2.default.bool,
    /**
     * 在搜索框中输入时触发的回调函数
     * @param {String} keyword 输入的关键字
     */
    onSearch: _propTypes2.default.func,
    onSearchClear: _propTypes2.default.func,
    /**
     * 无数据时显示内容
     */
    notFoundContent: _propTypes2.default.node,
    /**
     * 是否支持多选
     */
    multiple: _propTypes2.default.bool,
    /**
     * 下拉框中的树是否支持勾选节点的复选框
     */
    treeCheckable: _propTypes2.default.bool,
    /**
     * 下拉框中的树勾选节点复选框是否完全受控（父子节点选中状态不再关联）
     */
    treeCheckStrictly: _propTypes2.default.bool,
    /**
     * 定义选中时回填的方式
     * @enumdesc 返回所有选中的节点, 父子节点都选中时只返回父节点, 父子节点都选中时只返回子节点
     */
    treeCheckedStrategy: _propTypes2.default.oneOf(['all', 'parent', 'child']),
    /**
     * 下拉框中的树是否默认展开所有节点
     */
    treeDefaultExpandAll: _propTypes2.default.bool,
    /**
     * 下拉框中的树默认展开节点key的数组
     */
    treeDefaultExpandedKeys: _propTypes2.default.arrayOf(_propTypes2.default.string),
    /**
     * 下拉框中的树异步加载数据的函数，使用请参考[Tree的异步加载数据Demo](https://fusion.design/pc/component/tree?themeid=2#dynamic-container)
     * @param {ReactElement} node 被点击展开的节点
     */
    treeLoadData: _propTypes2.default.func,
    /**
     * 透传到 Tree 的属性对象
     */
    treeProps: _propTypes2.default.object,
    /**
     * 初始下拉框是否显示
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 当前下拉框是否显示
     */
    visible: _propTypes2.default.bool,
    /**
     * 下拉框显示或关闭时触发事件的回调函数
     * @param {Boolean} visible 是否显示
     * @param {String} type 触发显示关闭的操作类型
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 下拉框自定义样式对象
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 下拉框样式自定义类名
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 下拉框挂载的容器节点
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 透传到 Popup 的属性对象
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {Array<data>} value 选择值 { label: , value:}
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 是否开启虚拟滚动
     */
    useVirtual: _propTypes2.default.bool,
    /**
     * 是否是不可变数据
     * @version 1.23
     */
    immutable: _propTypes2.default.bool,
    /**
     * 点击文本是否可以勾选
     */
    clickToCheck: _propTypes2.default.bool,
    /**
     * 渲染 Select 展现内容的方法
     * @param {Object} item 渲染节点的item
     * @param {Object[]} itemPaths item的全路径数组
     * @return {ReactNode} 展现内容
     * @default item => `item.label || item.value`
     */
    valueRender: _propTypes2.default.func,
    useDetailValue: _propTypes2.default.bool
}, _class.defaultProps = {
    prefix: 'next-',
    pure: false,
    locale: _zhCn2.default.TreeSelect,
    size: 'medium',
    disabled: false,
    hasArrow: true,
    hasBorder: true,
    hasClear: false,
    autoWidth: true,
    defaultValue: null,
    onChange: noop,
    tagInline: false,
    autoClearSearch: true,
    showSearch: false,
    filterLocal: true,
    onSearch: noop,
    onSearchClear: noop,
    notFoundContent: 'Not Found',
    multiple: false,
    treeCheckable: false,
    treeCheckStrictly: false,
    treeCheckedStrategy: 'parent',
    treeDefaultExpandAll: false,
    treeDefaultExpandedKeys: [],
    treeProps: {},
    defaultVisible: false,
    onVisibleChange: noop,
    useVirtual: false,
    /**
     * TODO
     * 目前 select/cascade select 是默认支持的，在 2.x 版本中 tree-select 也将默认支持
     */
    preserveNonExistentValue: false,
    clickToCheck: false
}, _temp);
TreeSelect.displayName = 'TreeSelect';

TreeSelect.Node = TreeNode;

exports.default = (0, _reactLifecyclesCompat.polyfill)(TreeSelect);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var text_1 = tslib_1.__importDefault(__webpack_require__(67));
var paragraph_1 = tslib_1.__importDefault(__webpack_require__(447));
var typography_1 = tslib_1.__importDefault(__webpack_require__(448));
var title_1 = tslib_1.__importDefault(__webpack_require__(449));
var component_1 = __webpack_require__(22);
var WithSubTypography = (0, component_1.assignSubComponent)(typography_1.default, {
    Text: text_1.default,
    Paragraph: paragraph_1.default,
    H1: (0, title_1.default)('h1'),
    H2: (0, title_1.default)('h2'),
    H3: (0, title_1.default)('h3'),
    H4: (0, title_1.default)('h4'),
    H5: (0, title_1.default)('h5'),
    H6: (0, title_1.default)('h6')
});
exports.default = WithSubTypography;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var text_1 = tslib_1.__importDefault(__webpack_require__(67));
/**
 * Typography.Paragraph
 */
var Paragraph = /** @class */function (_super) {
    tslib_1.__extends(Paragraph, _super);
    function Paragraph() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Paragraph.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            className = _a.className,
            component = _a.component,
            others = tslib_1.__rest(_a, ["prefix", "className", "component"]);
        var cls = (0, classnames_1.default)("".concat(prefix, "typography-paragraph"), className);
        return react_1.default.createElement(text_1.default, tslib_1.__assign({}, others, { className: cls, component: component }));
    };
    Paragraph.propTypes = {
        prefix: prop_types_1.default.string,
        component: prop_types_1.default.elementType
    };
    Paragraph.defaultProps = {
        prefix: 'next-',
        type: 'long',
        size: 'medium',
        component: 'p'
    };
    return Paragraph;
}(react_1.default.Component);
exports.default = config_provider_1.default.config(Paragraph);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var text_1 = tslib_1.__importDefault(__webpack_require__(67));
/**
 * Typography
 */
var Typography = /** @class */function (_super) {
    tslib_1.__extends(Typography, _super);
    function Typography() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Typography.prototype.render = function () {
        return react_1.default.createElement(text_1.default, tslib_1.__assign({}, this.props));
    };
    Typography.propTypes = {
        component: prop_types_1.default.elementType
    };
    Typography.defaultProps = {
        component: 'article'
    };
    return Typography;
}(react_1.default.Component);
exports.default = Typography;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importDefault(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var text_1 = tslib_1.__importDefault(__webpack_require__(67));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
exports.default = function (Tag) {
    /**
     * Typography.Title
     */
    var Title = /** @class */function (_super) {
        tslib_1.__extends(Title, _super);
        function Title() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Title.prototype.render = function () {
            var _a = this.props,
                prefix = _a.prefix,
                className = _a.className,
                others = tslib_1.__rest(_a, ["prefix", "className"]);
            return react_1.default.createElement(text_1.default, tslib_1.__assign({}, others, { component: Tag, className: "".concat(className || '', " ").concat(prefix, "typography-title") }));
        };
        Title.propTypes = {
            prefix: prop_types_1.default.string
        };
        Title.defaultProps = {
            prefix: 'next-'
        };
        Title.displayName = Tag.toUpperCase();
        return Title;
    }(react_1.default.Component);
    return config_provider_1.default.config(Title);
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(41);

var _transform2 = __webpack_require__(191);

var _transform3 = _interopRequireDefault(_transform2);

var _upload = __webpack_require__(104);

var _upload2 = _interopRequireDefault(_upload);

var _list = __webpack_require__(106);

var _list2 = _interopRequireDefault(_list);

var _card = __webpack_require__(454);

var _card2 = _interopRequireDefault(_card);

var _dragger = __webpack_require__(455);

var _dragger2 = _interopRequireDefault(_dragger);

var _selecter = __webpack_require__(105);

var _selecter2 = _interopRequireDefault(_selecter);

var _uploader = __webpack_require__(194);

var _uploader2 = _interopRequireDefault(_uploader);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

_upload2.default.Card = _configProvider2.default.config(_card2.default, { componentName: 'Upload' });
_upload2.default.Dragger = _configProvider2.default.config(_dragger2.default, { componentName: 'Upload' });
_upload2.default.Selecter = _selecter2.default;
_upload2.default.Uploader = _uploader2.default;
_upload2.default.ErrorCode = _util2.errorCode;

// compatible with 0.x version
_upload2.default.ImageUpload = _configProvider2.default.config(_card2.default, {
    componentName: 'Upload',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Upload.ImageUpload', 'Upload.Card', 'Upload');
        var newprops = (0, _transform3.default)(props, function () {});
        if (newprops.locale && newprops.locale.image) {
            newprops.locale.card = newprops.locale.image;
        }

        return newprops;
    }
});

// compatible with 0.x version
_upload2.default.DragUpload = _configProvider2.default.config(_dragger2.default, {
    componentName: 'Upload',
    transform: /* istanbul ignore next */function transform(props, deprecated) {
        deprecated('Upload.DragUpload', 'Upload.Dragger', 'Upload');
        var newprops = (0, _transform3.default)(props, function () {});
        if (!newprops.listType) {
            newprops.listType = 'card';
        }

        return newprops;
    }
});

// compatible with 0.x version
/* istanbul ignore next */
_upload2.default.Core = function (_React$Component) {
    (0, _inherits3.default)(Core, _React$Component);

    function Core(props) {
        (0, _classCallCheck3.default)(this, Core);

        // eslint-disable-next-line
        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.handleSelect = function (files) {
            _this.uploader.startUpload(files);
        };

        var _this$props = _this.props,
            action = _this$props.action,
            name = _this$props.name,
            method = _this$props.method,
            beforeUpload = _this$props.beforeUpload,
            onProgress = _this$props.onProgress,
            onError = _this$props.onError,
            withCredentials = _this$props.withCredentials,
            headers = _this$props.headers,
            data = _this$props.data,
            onSuccess = _this$props.onSuccess;

        _this.uploader = new _uploader2.default({
            action: action,
            name: name,
            method: method,
            beforeUpload: beforeUpload,
            onProgress: onProgress,
            onError: onError,
            withCredentials: withCredentials,
            headers: headers,
            data: data,
            onSuccess: onSuccess
        });
        return _this;
    }

    Core.prototype.abort = function abort() {
        this.uploader.abort();
    };

    Core.prototype.render = function render() {
        _util.log.deprecated('Upload.Core', 'Upload.Selecter and Upload.Uploader', 'Upload');

        // eslint-disable-next-line
        var _props = this.props,
            action = _props.action,
            name = _props.name,
            method = _props.method,
            beforeUpload = _props.beforeUpload,
            onProgress = _props.onProgress,
            onError = _props.onError,
            withCredentials = _props.withCredentials,
            headers = _props.headers,
            data = _props.data,
            onSuccess = _props.onSuccess,
            others = (0, _objectWithoutProperties3.default)(_props, ['action', 'name', 'method', 'beforeUpload', 'onProgress', 'onError', 'withCredentials', 'headers', 'data', 'onSuccess']);

        var props = others;

        return _react2.default.createElement(_selecter2.default, (0, _extends3.default)({}, (0, _transform3.default)(props, function () {}), { onSelect: this.handleSelect }));
    };

    return Core;
}(_react2.default.Component);

_upload2.default.List = _list2.default;

// compatible with 0.x version
/* istanbul ignore next */
_upload2.default.CropUpload = function () {
    _util.log.deprecated('Upload.CropUpload', '@alife/bc-next-crop-upload', 'Upload');
    return null;
};

exports.default = _configProvider2.default.config(_upload2.default, {
    transform: _transform3.default
});
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = undefined;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _html5Uploader = __webpack_require__(193);

var _html5Uploader2 = _interopRequireDefault(_html5Uploader);

var _iframeUploader = __webpack_require__(453);

var _iframeUploader2 = _interopRequireDefault(_iframeUploader);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Uploader = function (_React$Component) {
    (0, _inherits3.default)(Uploader, _React$Component);

    function Uploader() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Uploader);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            Component: _html5Uploader2.default
        }, _this.saveUploaderRef = function (ref) {
            _this.uploaderRef = ref;
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    Uploader.prototype.componentDidMount = function componentDidMount() {
        if (typeof File === 'undefined') {
            /* eslint react/no-did-mount-set-state:0 */
            this.setState({
                Component: _iframeUploader2.default
            });
        }
    };

    Uploader.prototype.abort = function abort(file) {
        this.uploaderRef.abort(file);
    };

    Uploader.prototype.startUpload = function startUpload(files) {
        this.uploaderRef.startUpload(files);
    };

    Uploader.prototype.render = function render() {
        var Uploader = this.state.Component;
        return _react2.default.createElement(Uploader, (0, _extends3.default)({}, this.props, { ref: this.saveUploaderRef }));
    };

    return Uploader;
}(_react2.default.Component);

Uploader.displayName = 'Uploader';
exports.default = Uploader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = upload;
/**
 * clone from https://github.com/react-component/upload/blob/master/src/request.js
 */

function getError(option, xhr, msg) {
    msg = msg || 'cannot post ' + option.action + ' ' + xhr.status + '\'';
    var err = new Error(msg);
    err.status = xhr.status;
    err.method = option.method;
    err.url = option.action;
    return err;
}

function getBody(xhr) {
    var text = xhr.responseText || xhr.response;
    if (!text) {
        return text;
    }

    try {
        return JSON.parse(text);
    } catch (e) {
        return text;
    }
}

// option {
//  onProgress: (event: { percent: number }): void,
//  onError: (event: Error, body?: Object): void,
//  onSuccess: (body: Object): void,
//  data: Object,
//  filename: String,
//  file: File,
//  withCredentials: Boolean,
//  action: String,
//  headers: Object,
//  method: String
//  timeout: Number
// }
function upload(option) {
    var xhr = new XMLHttpRequest();

    if (option.onProgress && xhr.upload) {
        xhr.upload.onprogress = function progress(e) {
            if (e.total > 0) {
                e.percent = e.loaded / e.total * 100;
            }
            option.onProgress(e);
        };
    }

    var formData = new FormData();

    if (option.data) {
        Object.keys(option.data).forEach(function (key) {
            formData.append(key, option.data[key]);
        });
    }
    if (option.file instanceof Blob) {
        formData.append(option.filename, option.file, option.file.name);
    } else {
        formData.append(option.filename, option.file);
    }

    xhr.onerror = function error(e) {
        option.onError(e);
    };

    xhr.onload = function onload() {
        // allow success when 2xx status
        // see https://github.com/react-component/upload/issues/34
        if (xhr.status < 200 || xhr.status >= 300) {
            return option.onError(getError(option, xhr), getBody(xhr));
        }

        option.onSuccess(getBody(xhr), xhr);
    };

    option.method = option.method || 'POST';
    xhr.open(option.method, option.action, true);

    // In Internet Explorer, the timeout property may be set only after calling the open() method and before calling the send() method.
    // see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout
    var timeout = option.timeout;

    if (typeof timeout === 'number' && timeout > 0) {
        xhr.timeout = timeout;
        xhr.ontimeout = function () {
            var msg = 'Upload abort for exceeding time (timeout: ' + timeout + 'ms)';
            option.onError(getError(option, xhr, msg), getBody(xhr));
        };
    }

    // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179
    if (option.withCredentials && 'withCredentials' in xhr) {
        xhr.withCredentials = true;
    }

    var headers = option.headers || {};

    // when set headers['X-Requested-With'] = null , can close default XHR header
    // see https://github.com/react-component/upload/issues/33
    if (headers['X-Requested-With'] !== null) {
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    }

    for (var h in headers) {
        if (headers.hasOwnProperty(h) && headers[h] !== null) {
            xhr.setRequestHeader(h, headers[h]);
        }
    }
    xhr.send(formData);

    return {
        abort: function abort() {
            xhr.abort();
        }
    };
}
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps; /* istanbul ignore file */

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = __webpack_require__(13);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(41);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var INPUT_STYLE = {
    position: 'absolute',
    top: 0,
    right: 0,
    fontSize: 9999,
    zIndex: 9999,
    opacity: 0,
    outline: 'none',
    cursor: 'pointer'
};

var IframeUploader = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(IframeUploader, _React$Component);

    function IframeUploader(props) {
        (0, _classCallCheck3.default)(this, IframeUploader);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        _this.domain = typeof document !== 'undefined' && document.domain ? document.domain : '';
        _this.uid = (0, _util2.uid)();
        return _this;
    }

    IframeUploader.prototype.componentDidMount = function componentDidMount() {
        this.updateInputWH();
    };

    IframeUploader.prototype.componentDidUpdate = function componentDidUpdate() {
        this.updateInputWH();
    };

    IframeUploader.prototype.startUpload = function startUpload() {
        this.upload(this.file);
    };

    IframeUploader.prototype.upload = function upload(file) {
        var _this2 = this;

        if (!this.state.uploading) {
            // eslint-disable-next-line
            this.state.uploading = true;
            this.setState({ uploading: true });
        }

        var _props = this.props,
            beforeUpload = _props.beforeUpload,
            action = _props.action,
            name = _props.name,
            data = _props.data;

        if (!beforeUpload) {
            return this.post(file);
        }
        var requestData = {
            action: action,
            name: name,
            data: data
        };
        var before = beforeUpload(file, requestData);
        if (before && before.then) {
            before.then(function (data) {
                _this2.post(file, data);
            }, function () {
                _this2.endUpload();
            });
        } else if (before !== false) {
            this.post(file, _util.obj.isPlainObject(before) ? before : undefined);
        } else {
            this.endUpload();
        }
    };

    IframeUploader.prototype.endUpload = function endUpload() {
        this.file = {};
        if (this.state.uploading) {
            // eslint-disable-next-line
            this.state.uploading = false;
            this.setState({ uploading: false });
        }
    };

    IframeUploader.prototype.updateInputWH = function updateInputWH() {
        var rootNode = _reactDom2.default.findDOMNode(this);
        var inputNode = this.inputEl;
        inputNode.style.height = rootNode.offsetHeight + 'px';
        inputNode.style.width = rootNode.offsetWidth + 'px';
    };

    IframeUploader.prototype.abort = function abort(file) {
        if (file) {
            var _uid = file;
            if (file && file.uid) {
                _uid = file.uid;
            }
            if (_uid === this.file.uid) {
                this.endUpload();
            }
        } else {
            this.endUpload();
        }
    };

    IframeUploader.prototype.post = function post(file) {
        var requestOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var formNode = this.formEl;
        var dataSpan = this.dataEl;
        var fileInput = this.inputEl;

        var propsData = this.props.data;
        if (typeof propsData === 'function') {
            propsData = propsData(file);
        }

        var action = requestOption.action,
            name = requestOption.name,
            data = requestOption.data;

        if (name) {
            fileInput.setAttribute('name', name);
        }

        if (action) {
            formNode.setAttribute('action', action);
        }

        if (data) {
            propsData = data;
        }

        var inputs = document.createDocumentFragment();
        for (var key in propsData) {
            if (data.hasOwnProperty(key)) {
                var input = document.createElement('input');
                input.setAttribute('name', key);
                input.value = propsData[key];
                inputs.appendChild(input);
            }
        }
        dataSpan.appendChild(inputs);
        formNode.submit();
        dataSpan.innerHTML = '';
        this.props.onStart(file);
    };

    IframeUploader.prototype.render = function render() {
        var _props2 = this.props,
            disabled = _props2.disabled,
            className = _props2.className,
            children = _props2.children,
            accept = _props2.accept,
            name = _props2.name,
            style = _props2.style;
        var uid = this.uid;

        var iframeName = name + '-' + uid + '-iframe';

        return _react2.default.createElement('span', {
            className: className,
            style: (0, _extends3.default)({
                position: 'relative',
                zIndex: 0,
                display: 'inline-block'
            }, style)
        }, !disabled ? _react2.default.createElement('iframe', {
            ref: this.saveIFrameRef,
            name: iframeName,
            onLoad: this.onLoad,
            style: { display: 'none' }
        }) : null, _react2.default.createElement('form', {
            ref: this.saveFormRef,
            method: 'post',
            action: this.props.action,
            encType: 'multipart/form-data',
            target: iframeName
        }, _react2.default.createElement('input', { name: '_documentDomain', value: this.domain, type: 'hidden' }), _react2.default.createElement('span', { ref: this.saveDataRef }), _react2.default.createElement('input', {
            ref: this.saveInputRef,
            type: 'file',
            accept: accept,
            name: name,
            onChange: this.onSelect,
            style: INPUT_STYLE
        })), children);
    };

    return IframeUploader;
}(_react2.default.Component), _class.propTypes = {
    style: _propTypes2.default.object,
    action: _propTypes2.default.string.isRequired,
    name: _propTypes2.default.string.isRequired,
    data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    disabled: _propTypes2.default.bool,
    className: _propTypes2.default.string,
    children: _propTypes2.default.node,
    headers: _propTypes2.default.object,
    autoUpload: _propTypes2.default.bool,
    onSelect: _propTypes2.default.func,
    beforeUpload: _propTypes2.default.func,
    onStart: _propTypes2.default.func,
    onSuccess: _propTypes2.default.func,
    onError: _propTypes2.default.func,
    accept: _propTypes2.default.string
}, _class.defaultProps = {
    name: 'file',
    onSelect: _util.func.noop,
    beforeUpload: _util.func.noop,
    onStart: _util.func.noop,
    onSuccess: _util.func.noop,
    onError: _util.func.noop,
    onAbort: _util.func.noop
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.state = {
        uploading: false
    };
    this.file = {};
    this.uid = '';

    this.onLoad = function () {
        if (!_this3.state.uploading) {
            return;
        }
        var props = _this3.props,
            file = _this3.file;

        var response = void 0;
        try {
            var doc = _this3.iFrameEl.contentDocument;
            var script = doc.getElementsByTagName('script')[0];
            if (script && script.parentNode === doc.body) {
                doc.body.removeChild(script);
            }
            response = doc.body.innerHTML;
            props.onSuccess(response, file);
        } catch (err) {
            _util.log.warning('cross domain error for Upload. Maybe server should return document.domain script.');
            response = 'cross-domain';
            props.onError(err, null, file);
        }
        _this3.endUpload();
    };

    this.onSelect = function (e) {
        _this3.file = {
            uid: (0, _util2.uid)(),
            name: e.target.value
        };
        _this3.props.onSelect([_this3.file]);
    };

    this.saveIFrameRef = function (ref) {
        _this3.iFrameEl = ref;
    };

    this.saveFormRef = function (ref) {
        _this3.formEl = ref;
    };

    this.saveDataRef = function (ref) {
        _this3.dataEl = ref;
    };

    this.saveInputRef = function (ref) {
        _this3.inputEl = ref;
    };
}, _temp);
IframeUploader.displayName = 'IframeUploader';
exports.default = IframeUploader;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _reactLifecyclesCompat = __webpack_require__(11);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _base = __webpack_require__(192);

var _base2 = _interopRequireDefault(_base);

var _list = __webpack_require__(106);

var _list2 = _interopRequireDefault(_list);

var _upload = __webpack_require__(104);

var _upload2 = _interopRequireDefault(_upload);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Upload.Card
 * @description 继承 Upload 的 API，除非特别说明
 */
var Card = (_temp = _class = function (_Base) {
    (0, _inherits3.default)(Card, _Base);

    function Card(props) {
        (0, _classCallCheck3.default)(this, Card);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Base.call(this, props));

        _initialiseProps.call(_this);

        var value = void 0;
        /* istanbul ignore else */
        if ('value' in props) {
            value = props.value;
        } else {
            value = props.defaultValue;
        }

        _this.state = {
            value: !Array.isArray(value) ? [] : value,
            uploaderRef: _this.uploaderRef
        };
        return _this;
    }

    Card.prototype.componentDidMount = function componentDidMount() {
        this.updateUploaderRef(this.uploaderRef);
    };

    Card.prototype.componentDidUpdate = function componentDidUpdate() {
        var uploaderRef = this.state.uploaderRef;

        if (!uploaderRef && this.uploaderRef) {
            this.updateUploaderRef(this.uploaderRef);
        }
    };

    Card.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
        var isUploading = prevState.uploaderRef && prevState.uploaderRef.isUploading();
        if ('value' in nextProps && nextProps.value !== prevState.value && !isUploading) {
            return {
                value: !Array.isArray(nextProps.value) ? [] : [].concat(nextProps.value)
            };
        }

        return null;
    };

    Card.prototype.isUploading = function isUploading() {
        return this.uploaderRef.isUploading();
    };

    Card.prototype.saveRef = function saveRef(ref) {
        this.saveUploaderRef(ref);
    };

    Card.prototype.updateUploaderRef = function updateUploaderRef(uploaderRef) {
        this.setState({ uploaderRef: uploaderRef });
    };

    Card.prototype.render = function render() {
        var _classNames,
            _this2 = this;

        var _props = this.props,
            action = _props.action,
            disabled = _props.disabled,
            prefix = _props.prefix,
            locale = _props.locale,
            className = _props.className,
            style = _props.style,
            limit = _props.limit,
            onPreview = _props.onPreview,
            onRemove = _props.onRemove,
            onCancel = _props.onCancel,
            timeout = _props.timeout,
            isPreview = _props.isPreview,
            renderPreview = _props.renderPreview,
            itemRender = _props.itemRender,
            reUpload = _props.reUpload,
            showDownload = _props.showDownload;

        var isExceedLimit = this.state.value.length >= limit;
        var uploadButtonCls = (0, _classnames2.default)((_classNames = {}, _classNames[prefix + 'upload-list-item'] = true, _classNames[prefix + 'hidden'] = isExceedLimit, _classNames));

        var children = this.props.children || locale.card.addPhoto;

        var onRemoveFunc = disabled ? _util.func.prevent : onRemove;
        var othersForList = _util.obj.pickOthers(Card.propTypes, this.props);
        var othersForUpload = _util.obj.pickOthers(_list2.default.propTypes, othersForList);

        if (isPreview) {
            if (typeof renderPreview === 'function') {
                var _classNames2;

                var previewCls = (0, _classnames2.default)((_classNames2 = {}, _classNames2[prefix + 'form-preview'] = true, _classNames2[className] = !!className, _classNames2));
                return _react2.default.createElement('div', { style: style, className: previewCls }, renderPreview(this.state.value, this.props));
            }
        }

        return _react2.default.createElement(_list2.default, (0, _extends3.default)({
            className: className,
            style: style,
            listType: 'card',
            closable: true,
            locale: locale,
            value: this.state.value,
            onRemove: onRemoveFunc,
            onCancel: onCancel,
            onPreview: onPreview,
            itemRender: itemRender,
            isPreview: isPreview,
            uploader: this.uploaderRef,
            reUpload: reUpload,
            showDownload: showDownload
        }, othersForList), _react2.default.createElement(_upload2.default, (0, _extends3.default)({}, othersForUpload, {
            shape: 'card',
            prefix: prefix,
            disabled: disabled,
            action: action,
            timeout: timeout,
            isPreview: isPreview,
            value: this.state.value,
            onProgress: this.onProgress,
            onChange: this.onChange,
            ref: function ref(_ref) {
                return _this2.saveRef(_ref);
            },
            className: uploadButtonCls
        }), children));
    };

    return Card;
}(_base2.default), _class.displayName = 'Card', _class.propTypes = {
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    children: _propTypes2.default.object,
    value: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    /**
     * 点击图片回调
     */
    onPreview: _propTypes2.default.func,
    /**
     * 改变时候的回调
     */
    onChange: _propTypes2.default.func,
    /**
     * 点击移除的回调
     */
    onRemove: _propTypes2.default.func,
    /**
     * 取消上传的回调
     */
    onCancel: _propTypes2.default.func,
    /**
     * 自定义成功和失败的列表渲染方式
     * @param {File} file 文件对象
     * @param {Object} obj {remove: 删除回调}
     * @retuns {ReactNode} React元素
     * @version 1.21
     */
    itemRender: _propTypes2.default.func,
    /**
     * 选择新文件上传并替换
     * @version 1.24
     */
    reUpload: _propTypes2.default.bool,
    /**
     * 展示下载按钮
     * @version 1.24
     */
    showDownload: _propTypes2.default.bool,
    /**
     * 上传中
     */
    onProgress: _propTypes2.default.func,
    isPreview: _propTypes2.default.bool,
    renderPreview: _propTypes2.default.func
}, _class.defaultProps = {
    prefix: 'next-',
    locale: _zhCn2.default.Upload,
    showDownload: true,
    onChange: _util.func.noop,
    onPreview: _util.func.noop,
    onProgress: _util.func.noop
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.onProgress = function (value, targetItem) {
        _this3.setState({
            value: value
        });

        _this3.props.onProgress(value, targetItem);
    };

    this.onChange = function (value, file) {
        if (!('value' in _this3.props)) {
            _this3.setState({
                value: value
            });
        }
        _this3.props.onChange(value, file);
    };
}, _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(Card);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

var _util = __webpack_require__(4);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _upload = __webpack_require__(104);

var _upload2 = _interopRequireDefault(_upload);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

/**
 * Upload.Dragger
 * @description IE10+ 支持。继承 Upload 的 API，除非特别说明
 */
var Dragger = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(Dragger, _React$Component);

    function Dragger() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, Dragger);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            dragOver: false
        }, _this.onDragOver = function (e) {
            if (!_this.state.dragOver) {
                _this.setState({
                    dragOver: true
                });
            }

            _this.props.onDragOver(e);
        }, _this.onDragLeave = function (e) {
            _this.setState({
                dragOver: false
            });
            _this.props.onDragLeave(e);
        }, _this.onDrop = function (e) {
            _this.setState({
                dragOver: false
            });
            _this.props.onDrop(e);
        }, _this.saveUploaderRef = function (ref) {
            /* istanbul ignore if */
            if (ref && typeof ref.getInstance === 'function') {
                _this.uploaderRef = ref.getInstance();
            } else {
                _this.uploaderRef = ref;
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    /* istanbul ignore next */
    Dragger.prototype.abort = function abort(file) {
        /* istanbul ignore next */
        this.uploaderRef.abort(file);
    };
    /* istanbul ignore next */

    Dragger.prototype.startUpload = function startUpload() {
        /* istanbul ignore next */
        this.uploaderRef.startUpload();
    };

    Dragger.prototype.render = function render() {
        var _classNames;

        var _props = this.props,
            className = _props.className,
            style = _props.style,
            shape = _props.shape,
            locale = _props.locale,
            prefix = _props.prefix,
            listType = _props.listType,
            others = (0, _objectWithoutProperties3.default)(_props, ['className', 'style', 'shape', 'locale', 'prefix', 'listType']);

        var prefixCls = prefix + 'upload-drag';
        var cls = (0, _classnames2.default)((_classNames = {}, _classNames['' + prefixCls] = true, _classNames[prefixCls + '-over'] = this.state.dragOver, _classNames[className] = !!className, _classNames));

        var children = this.props.children || _react2.default.createElement('div', { className: cls }, _react2.default.createElement('p', { className: prefixCls + '-icon' }, _react2.default.createElement(_icon2.default, { size: 'large', className: prefixCls + '-upload-icon' })), _react2.default.createElement('p', { className: prefixCls + '-text' }, locale.drag.text), _react2.default.createElement('p', { className: prefixCls + '-hint' }, locale.drag.hint));

        return _react2.default.createElement(_upload2.default, (0, _extends3.default)({}, others, {
            prefix: prefix,
            shape: shape,
            listType: listType,
            dragable: true,
            style: style,
            onDragOver: this.onDragOver,
            onDragLeave: this.onDragLeave,
            onDrop: this.onDrop,
            ref: this.saveUploaderRef
        }), children);
    };

    return Dragger;
}(_react2.default.Component), _class.propTypes = {
    /**
     * 样式前缀
     */
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    shape: _propTypes2.default.string,
    onDragOver: _propTypes2.default.func,
    onDragLeave: _propTypes2.default.func,
    onDrop: _propTypes2.default.func,
    limit: _propTypes2.default.number,
    className: _propTypes2.default.string,
    style: _propTypes2.default.object,
    defaultValue: _propTypes2.default.array,
    children: _propTypes2.default.node,
    listType: _propTypes2.default.string,
    timeout: _propTypes2.default.number
}, _class.defaultProps = {
    prefix: 'next-',
    onDragOver: _util.func.noop,
    onDragLeave: _util.func.noop,
    onDrop: _util.func.noop,
    locale: _zhCn2.default.Upload
}, _temp2);
Dragger.displayName = 'Dragger';
exports.default = Dragger;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var react_dom_1 = tslib_1.__importDefault(__webpack_require__(13));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var animate_1 = tslib_1.__importDefault(__webpack_require__(21));
var message_1 = tslib_1.__importDefault(__webpack_require__(94));
var guid_1 = tslib_1.__importDefault(__webpack_require__(125));
var config_1 = tslib_1.__importDefault(__webpack_require__(457));
var getAnimation = function getAnimation(placement) {
    switch (placement) {
        case 'tl':
        case 'bl':
            return 'slideInLeft';
        case 'tr':
        case 'br':
            return 'slideInRight';
        default:
            return undefined;
    }
};
// let instance: Notification;
var instance;
var mounting = false;
var waitOpens = [];
function close(key) {
    if (!instance) {
        var index = waitOpens.findIndex(function (item) {
            return item.key === key;
        });
        waitOpens.splice(index, 1);
        return;
    }
    instance.close(key);
}
var Notification = /** @class */function (_super) {
    tslib_1.__extends(Notification, _super);
    function Notification(props) {
        var _this = _super.call(this, props) || this;
        _this.close = function (key) {
            var notifications = _this.state.notifications;
            var index = notifications.findIndex(function (notification) {
                return notification.key === key;
            });
            if (index === -1) return;
            var _a = notifications[index],
                onClose = _a.onClose,
                timer = _a.timer;
            notifications.splice(index, 1);
            var timerIndex = _this.timers.findIndex(function (v) {
                return v === timer;
            });
            if (timerIndex !== -1) {
                _this.timers.splice(timerIndex, 1);
            }
            if (timer) {
                clearTimeout(timer);
            }
            _this.setState({
                notifications: notifications
            });
            if (onClose) {
                onClose();
            }
        };
        _this.open = function (_a) {
            var key = _a.key,
                duration = _a.duration,
                others = tslib_1.__rest(_a, ["key", "duration"]);
            var notifications = tslib_1.__spreadArray([], tslib_1.__read(_this.state.notifications), false);
            if (!key) {
                key = (0, guid_1.default)('notification-');
            }
            var index = notifications.findIndex(function (notification) {
                return notification.key === key;
            });
            if (index !== -1) {
                notifications[index] = tslib_1.__assign(tslib_1.__assign({}, notifications[index]), others);
            } else {
                var timer = void 0;
                if (duration && duration > 0) {
                    timer = window.setTimeout(function () {
                        _this.close(key);
                    }, duration);
                    _this.timers.push(timer);
                }
                notifications.push(tslib_1.__assign(tslib_1.__assign({}, others), { key: key, timer: timer }));
            }
            if (config_1.default.maxCount > 0 && config_1.default.maxCount < notifications.length) {
                while (notifications.length > config_1.default.maxCount) {
                    var key_1 = notifications[0].key;
                    _this.close(key_1);
                    notifications.splice(0, 1);
                }
            }
            _this.setState({
                notifications: notifications
            });
            return key;
        };
        _this.state = {
            notifications: []
        };
        _this.timers = [];
        return _this;
    }
    Notification.prototype.componentWillUnmount = function () {
        this.timers.forEach(function (timer) {
            if (!timer) return;
            clearTimeout(timer);
        });
    };
    Notification.prototype.render = function () {
        var _a;
        var prefix = this.props.prefix;
        var notifications = this.state.notifications;
        return react_1.default.createElement("div", { className: "".concat(prefix, "notification"), style: (_a = {}, _a[config_1.default.placement.indexOf('b') === 0 ? 'bottom' : 'top'] = config_1.default.offset[1], _a[config_1.default.placement.indexOf('l') !== -1 ? 'left' : 'right'] = config_1.default.offset[0], _a) }, react_1.default.createElement(animate_1.default, { animationAppear: true, animation: {
                enter: getAnimation(config_1.default.placement),
                leave: "".concat(prefix, "notification-fade-leave")
            }, singleMode: false }, notifications.map(function (_a) {
            var key = _a.key,
                type = _a.type,
                title = _a.title,
                content = _a.content,
                icon = _a.icon,
                onClick = _a.onClick,
                style = _a.style,
                className = _a.className;
            return react_1.default.createElement(message_1.default, { key: key, shape: "toast", type: type, title: title, iconType: icon, closeable: true, animation: false, size: config_1.default.size, visible: true, style: style, className: className, onClick: onClick, onClose: function onClose() {
                    return close(key);
                } }, content);
        })));
    };
    Notification.propTypes = {
        prefix: prop_types_1.default.string
    };
    Notification.defaultProps = {
        prefix: 'next-'
    };
    return Notification;
}(react_1.Component);
var ConfigedNotification = config_provider_1.default.config(Notification, {
    exportNames: ['open', 'close']
});
function open(options) {
    if (options === void 0) {
        options = {};
    }
    if (!options.title && !options.content) return;
    var duration = !options.duration && options.duration !== 0 ? config_1.default.duration : options.duration;
    if (!instance) {
        if (!options.key) {
            options.key = (0, guid_1.default)('notification-');
        }
        waitOpens.push(tslib_1.__assign(tslib_1.__assign({}, options), { duration: duration }));
        if (!mounting) {
            mounting = true;
            var div = document.createElement('div');
            if (config_1.default.getContainer) {
                var root = config_1.default.getContainer();
                root.appendChild(div);
            } else {
                document.body.appendChild(div);
            }
            // 类型提示使用 createRoot，考虑到兼容性，暂时不处理
            // eslint-disable-next-line react/no-deprecated
            react_dom_1.default.render(react_1.default.createElement(config_provider_1.default, tslib_1.__assign({}, config_provider_1.default.getContext()), react_1.default.createElement(ConfigedNotification, { ref: function ref(_ref) {
                    instance = _ref;
                } })), div, function () {
                waitOpens.forEach(function (item) {
                    return instance.open(item);
                });
                waitOpens = [];
                mounting = false;
            });
        }
        return options.key;
    }
    var key = instance.open(tslib_1.__assign(tslib_1.__assign({}, options), { duration: duration }));
    return key;
}
function destroy() {
    var _a, _b;
    if (!instance) return;
    var mountNode = (_a = react_dom_1.default.findDOMNode(instance)) === null || _a === void 0 ? void 0 : _a.parentNode;
    if (mountNode) {
        // eslint-disable-next-line react/no-deprecated
        react_dom_1.default.unmountComponentAtNode(mountNode);
        (_b = mountNode.parentNode) === null || _b === void 0 ? void 0 : _b.removeChild(mountNode);
    }
}
var levels = {};
['success', 'error', 'warning', 'notice', 'help'].forEach(function (type) {
    levels[type] = function (options) {
        if (options === void 0) {
            options = {};
        }
        return open(tslib_1.__assign(tslib_1.__assign({}, options), { type: type }));
    };
});
exports.default = tslib_1.__assign({ config: function config() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return Object.assign.apply(Object, tslib_1.__spreadArray([config_1.default], tslib_1.__read(args), false));
    }, open: open, close: close, destroy: destroy }, levels);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    offset: [30, 30],
    maxCount: 0,
    size: 'large',
    placement: 'tr',
    duration: 4500,
    getContainer: function getContainer() {
        return document.body;
    }
};
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var util_1 = __webpack_require__(4);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
/**
 * Divider
 */
var Divider = /** @class */function (_super) {
    tslib_1.__extends(Divider, _super);
    function Divider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            dashed = _b.dashed,
            direction = _b.direction,
            orientation = _b.orientation,
            children = _b.children;
        var others = util_1.obj.pickOthers(Divider.propTypes, this.props);
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "divider")] = true, _a["".concat(prefix, "divider-dashed")] = !!dashed, _a["".concat(prefix, "divider-").concat(direction)] = !!direction, _a["".concat(prefix, "divider-with-text-").concat(orientation)] = !!orientation && children, _a), className);
        return react_1.default.createElement("div", tslib_1.__assign({ role: "separator", className: cls }, others), children && react_1.default.createElement("span", { className: "".concat(prefix, "divider-inner-text") }, children));
    };
    Divider.propTypes = {
        prefix: prop_types_1.default.string,
        children: prop_types_1.default.any,
        className: prop_types_1.default.string,
        dashed: prop_types_1.default.bool,
        direction: prop_types_1.default.oneOf(['hoz', 'ver']),
        orientation: prop_types_1.default.oneOf(['left', 'right', 'center'])
    };
    Divider.defaultProps = {
        prefix: 'next-',
        direction: 'hoz',
        orientation: 'center',
        dashed: false
    };
    return Divider;
}(react_1.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(Divider));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
var icon_1 = tslib_1.__importDefault(__webpack_require__(12));
var util_1 = __webpack_require__(4);
/**
 * Avatar
 */
var Avatar = /** @class */function (_super) {
    tslib_1.__extends(Avatar, _super);
    function Avatar() {
        var _this = _super.apply(this, tslib_1.__spreadArray([], tslib_1.__read(arguments), false)) || this;
        _this.state = {
            isImgExist: true
        };
        _this.handleImgLoadError = function () {
            var onError = _this.props.onError;
            var errorFlag = onError ? onError() : undefined;
            if (errorFlag !== false) {
                _this.setState({ isImgExist: false });
            }
        };
        _this.getIconSize = function (avatarSize) {
            return typeof avatarSize === 'number' ? avatarSize / 2 : avatarSize;
        };
        return _this;
    }
    Avatar.prototype.componentDidUpdate = function (prevProps) {
        if (prevProps.src !== this.props.src) {
            // eslint-disable-next-line react/no-did-update-set-state
            this.setState({ isImgExist: true });
        }
    };
    Avatar.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            className = _b.className,
            style = _b.style,
            size = _b.size,
            icon = _b.icon,
            alt = _b.alt,
            srcSet = _b.srcSet,
            shape = _b.shape,
            src = _b.src,
            imgProps = _b.imgProps;
        var isImgExist = this.state.isImgExist;
        var children = this.props.children;
        var others = util_1.obj.pickOthers(Avatar.propTypes, this.props);
        var cls = (0, classnames_1.default)((_a = {}, _a["".concat(prefix, "avatar")] = true, _a["".concat(prefix, "avatar-").concat(shape)] = !!shape, _a["".concat(prefix, "avatar-image")] = src && isImgExist, _a["".concat(prefix, "avatar-").concat(size)] = typeof size === 'string', _a), className);
        var sizeStyle = typeof size === 'number' ? {
            width: size,
            height: size,
            lineHeight: "".concat(size, "px"),
            fontSize: icon ? size / 2 : 18
        } : {};
        var iconSize = this.getIconSize(size);
        if (src) {
            if (isImgExist) {
                children = react_1.default.createElement("img", tslib_1.__assign({}, imgProps, { src: src, srcSet: srcSet, onError: this.handleImgLoadError, alt: alt }));
            } else {
                children = react_1.default.createElement(icon_1.default, { type: 'picture', size: iconSize });
            }
        } else if (typeof icon === 'string') {
            children = react_1.default.createElement(icon_1.default, { type: icon, size: iconSize });
        } else if (icon) {
            var newIconSize = 'size' in icon.props ? icon.props.size : iconSize;
            children = react_1.default.cloneElement(icon, { size: newIconSize });
        }
        return react_1.default.createElement("span", tslib_1.__assign({}, others, { className: cls, style: tslib_1.__assign(tslib_1.__assign({}, sizeStyle), style) }), children);
    };
    Avatar.propTypes = {
        prefix: prop_types_1.default.string,
        children: prop_types_1.default.any,
        className: prop_types_1.default.string,
        size: prop_types_1.default.oneOfType([prop_types_1.default.oneOf(['small', 'medium', 'large']), prop_types_1.default.number]),
        shape: prop_types_1.default.oneOf(['circle', 'square']),
        icon: prop_types_1.default.oneOfType([prop_types_1.default.node, prop_types_1.default.string]),
        src: prop_types_1.default.string,
        onError: prop_types_1.default.func,
        alt: prop_types_1.default.string,
        srcSet: prop_types_1.default.string
    };
    Avatar.defaultProps = {
        prefix: 'next-',
        size: 'medium',
        shape: 'circle'
    };
    return Avatar;
}(react_1.Component);
exports.default = config_provider_1.default.config(Avatar);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var list_1 = tslib_1.__importDefault(__webpack_require__(461));
var item_1 = tslib_1.__importDefault(__webpack_require__(462));
var component_1 = __webpack_require__(22);
var ListWithItem = (0, component_1.assignSubComponent)(list_1.default, { Item: item_1.default });
exports.default = ListWithItem;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var loading_1 = tslib_1.__importDefault(__webpack_require__(98));
var zh_cn_1 = tslib_1.__importDefault(__webpack_require__(14));
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
/**
 * List
 */
var List = /** @class */function (_super) {
    tslib_1.__extends(List, _super);
    function List() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    List.prototype.render = function () {
        var _a;
        var _b = this.props,
            prefix = _b.prefix,
            header = _b.header,
            footer = _b.footer,
            size = _b.size,
            divider = _b.divider,
            className = _b.className,
            children = _b.children,
            rtl = _b.rtl,
            dataSource = _b.dataSource,
            renderItem = _b.renderItem,
            locale = _b.locale,
            loading = _b.loading,
            _c = _b.loadingComponent,
            LoadingComponent = _c === void 0 ? loading_1.default : _c,
            emptyContent = _b.emptyContent,
            others = tslib_1.__rest(_b, ["prefix", "header", "footer", "size", "divider", "className", "children", "rtl", "dataSource", "renderItem", "locale", "loading", "loadingComponent", "emptyContent"]);
        if (rtl) {
            others.dir = 'rtl';
        }
        var dSValid = Array.isArray(dataSource);
        var classes = (0, classnames_1.default)("".concat(prefix, "list"), (_a = {}, _a["".concat(prefix, "list-").concat(size)] = size, _a["".concat(prefix, "list-divider")] = divider, _a), className);
        var customContent = dSValid && renderItem && dataSource.map(function (one, index) {
            return renderItem(one, index);
        });
        var content = react_1.default.createElement("div", tslib_1.__assign({}, others, { className: classes }), header ? react_1.default.createElement("div", { className: "".concat(prefix, "list-header") }, header) : null, !(dSValid && dataSource.length > 0) && !children ? react_1.default.createElement("div", { className: "".concat(prefix, "list-empty") }, emptyContent || (locale === null || locale === void 0 ? void 0 : locale.empty)) : react_1.default.createElement("ul", { key: "list-body", className: "".concat(prefix, "list-items") }, customContent, children), footer ? react_1.default.createElement("div", { className: "".concat(prefix, "list-footer") }, footer) : null);
        if (loading) {
            var loadingClassName = "".concat(prefix, "list-loading");
            return react_1.default.createElement(LoadingComponent, { className: loadingClassName }, content);
        }
        return content;
    };
    List.propTypes = {
        prefix: prop_types_1.default.string,
        rtl: prop_types_1.default.bool,
        header: prop_types_1.default.node,
        footer: prop_types_1.default.node,
        size: prop_types_1.default.oneOf(['medium', 'small']),
        divider: prop_types_1.default.bool,
        dataSource: prop_types_1.default.array,
        renderItem: prop_types_1.default.func,
        loading: prop_types_1.default.bool,
        loadingComponent: prop_types_1.default.func,
        emptyContent: prop_types_1.default.node,
        className: prop_types_1.default.string,
        children: prop_types_1.default.any,
        locale: prop_types_1.default.object
    };
    List.defaultProps = {
        rtl: false,
        size: 'medium',
        divider: true,
        prefix: 'next-',
        locale: zh_cn_1.default.List,
        renderItem: function renderItem(item) {
            return item;
        },
        loading: false
    };
    return List;
}(react_1.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(List));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = __webpack_require__(9);
var react_1 = tslib_1.__importStar(__webpack_require__(0));
var prop_types_1 = tslib_1.__importDefault(__webpack_require__(1));
var classnames_1 = tslib_1.__importDefault(__webpack_require__(7));
var react_lifecycles_compat_1 = __webpack_require__(11);
var config_provider_1 = tslib_1.__importDefault(__webpack_require__(8));
/**
 * List.Item
 */
var ListItem = /** @class */function (_super) {
    tslib_1.__extends(ListItem, _super);
    function ListItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ListItem.prototype.render = function () {
        var _a = this.props,
            prefix = _a.prefix,
            title = _a.title,
            description = _a.description,
            media = _a.media,
            extra = _a.extra,
            className = _a.className,
            children = _a.children,
            others = tslib_1.__rest(_a, ["prefix", "title", "description", "media", "extra", "className", "children"]);
        var classes = (0, classnames_1.default)("".concat(prefix, "list-item"), className);
        return react_1.default.createElement("li", tslib_1.__assign({}, others, { className: classes }), media ? react_1.default.createElement("div", { className: "".concat(prefix, "list-item-media") }, media) : null, react_1.default.createElement("div", { className: "".concat(prefix, "list-item-content") }, title ? react_1.default.createElement("div", { className: "".concat(prefix, "list-item-title") }, title) : null, description ? react_1.default.createElement("div", { className: "".concat(prefix, "list-item-description") }, description) : null, children), extra ? react_1.default.createElement("div", { className: "".concat(prefix, "list-item-extra") }, extra) : null);
    };
    ListItem.propTypes = {
        prefix: prop_types_1.default.string,
        /**
         * 列表元素的标题
         */
        title: prop_types_1.default.node,
        /**
         * 列表元素的描述内容
         */
        description: prop_types_1.default.node,
        /**
         * 列表元素的头像 / 图标 / 图片内容
         */
        media: prop_types_1.default.node,
        /**
         * 额外内容
         */
        extra: prop_types_1.default.node,
        className: prop_types_1.default.any
    };
    ListItem.defaultProps = {
        prefix: 'next-'
    };
    return ListItem;
}(react_1.Component);
exports.default = config_provider_1.default.config((0, react_lifecycles_compat_1.polyfill)(ListItem));
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _timePicker = __webpack_require__(464);

var _timePicker2 = _interopRequireDefault(_timePicker);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var ConfigTimePicker = _configProvider2.default.config(_timePicker2.default);

ConfigTimePicker.RangePicker = _react2.default.forwardRef(function (props, ref) {
  return _react2.default.createElement(ConfigTimePicker, (0, _extends3.default)({ ref: ref }, props, { type: 'range' }));
});
ConfigTimePicker.RangePicker.displayName = 'RangePicker';

exports.default = ConfigTimePicker;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _panel = __webpack_require__(195);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(196);

var _propTypes3 = __webpack_require__(107);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _util2 = __webpack_require__(42);

var _footerPanel = __webpack_require__(197);

var _footerPanel2 = _interopRequireDefault(_footerPanel);

var _dateInput = __webpack_require__(466);

var _dateInput2 = _interopRequireDefault(_dateInput);

var _constant = __webpack_require__(108);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;
var noop = _util.func.noop,
    checkDate = _util.func.checkDate,
    checkRangeDate = _util.func.checkRangeDate;

var timePickerLocale = _zhCn2.default.TimePicker;

var presetPropType = _propTypes2.default.shape((0, _extends3.default)({
    label: _propTypes2.default.string,
    value: _propTypes2.default.oneOfType([_propTypes2.default.func, _utils.checkDateValue])
}, _button2.default.propTypes));

var TimePicker2 = (_temp = _class = function (_Component) {
    (0, _inherits3.default)(TimePicker2, _Component);

    function TimePicker2(props, context) {
        (0, _classCallCheck3.default)(this, TimePicker2);

        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props, context));

        _initialiseProps.call(_this);

        var isRange = props.type === _constant.TIME_PICKER_TYPE.RANGE;

        _this.state = {};
        if (isRange) {
            var _this$getInitRangeInp = _this.getInitRangeInputState(),
                inputType = _this$getInitRangeInp.inputType,
                justBeginInput = _this$getInitRangeInp.justBeginInput;

            _this.state = {
                inputType: inputType,
                justBeginInput: justBeginInput
            };
        }

        var _this$props = _this.props,
            format = _this$props.format,
            visible = _this$props.visible,
            defaultVisible = _this$props.defaultVisible,
            prefix = _this$props.prefix;

        var value = _this.getInitValue();

        // const value = formatInputTimeValue(props.value || props.defaultValue, props.format, isRange);
        _this.state = (0, _extends3.default)({}, _this.state, {
            isRange: isRange,
            inputStr: '', // 输入框的输入值， string类型
            value: value, // 确定值 dayjs类型
            curValue: value, // 临时值 dayjs类型
            preValue: value, // 上个值 dayjs类型
            inputValue: (0, _util2.fmtValue)(value, format),
            inputing: false,
            visible: 'visible' in _this.props ? visible : defaultVisible
        });
        _this.prefixCls = prefix + 'time-picker2';
        return _this;
    }

    TimePicker2.getDerivedStateFromProps = function getDerivedStateFromProps(props, prevState) {
        var disabled = props.disabled,
            type = props.type,
            format = props.format,
            propsValue = props.value;

        var isRange = type === _constant.TIME_PICKER_TYPE.RANGE;
        var state = {
            isRange: isRange
        };

        if ('value' in props) {
            // checkDate function doesn't support hh:mm:ss format, convert to valid dayjs value in advance
            var formatter = function formatter(v) {
                return typeof v === 'string' ? (0, _util.datejs)(v, format) : v;
            };
            var formattedValue = Array.isArray(propsValue) ? propsValue.map(function (v) {
                return formatter(v);
            }) : formatter(propsValue);
            var value = isRange ? checkRangeDate(formattedValue, state.inputType, disabled) : checkDate(formattedValue);
            if ((0, _util2.isValueChanged)(value, state.preValue)) {
                state = (0, _extends3.default)({}, state, {
                    value: value,
                    preValue: value
                });
                if (isRange && !prevState.selecting) {
                    state.inputValue = (0, _util2.fmtValue)(value, format);
                    state.curValue = formattedValue || [];
                }
            }
        }

        if ('visible' in props) {
            state.visible = props.visible;
        }

        return state;
    };

    /**
     * 获取初始值
     */

    /**
     * 获取 RangePicker 输入框初始输入状态
     * @returns {Object} inputState
     * @returns {boolean} inputState.justBeginInput 是否初始输入
     * @returns {number} inputState.inputType 当前输入框
     */

    /**
     * 处理点击文档区域导致的弹层收起逻辑
     * @param {boolean} visible 是否可见
     * @param {string} type 事件类型
     */

    /**
     * 获取 `onChange` 和 `onOk` 方法的输出参数
     * @param {Dayjs} value
     * @returns 默认返回 `Dayjs` 实例和 `format` 格式化的值
     *          如果传了了 `outputFormat` 属性则返回 `outputFormat` 格式化的值
     */

    /**
     * 获取输入框的禁用状态
     * @param {Number} idx
     * @returns {Boolean}
     */

    TimePicker2.prototype.renderPreview = function renderPreview(others) {
        var _props = this.props,
            prefix = _props.prefix,
            format = _props.format,
            className = _props.className,
            renderPreview = _props.renderPreview;
        var value = this.state.value;

        var previewCls = (0, _classnames4.default)(className, prefix + 'form-preview');

        var label = '';
        if (value) {
            var valueArr = Array.isArray(value) ? value : [value];
            label = valueArr.map(function (v) {
                return v ? v.format(format) : '';
            }).join('-');
        }
        if (typeof renderPreview === 'function') {
            return _react2.default.createElement('div', (0, _extends3.default)({}, others, { className: previewCls }), renderPreview(value, this.props));
        }

        return _react2.default.createElement('p', (0, _extends3.default)({}, others, { className: previewCls }), label);
    };

    TimePicker2.prototype.render = function render() {
        var _classnames,
            _this2 = this,
            _classnames2;

        var _props2 = this.props,
            prefix = _props2.prefix,
            label = _props2.label,
            state = _props2.state,
            placeholder = _props2.placeholder,
            size = _props2.size,
            format = _props2.format,
            hasClear = _props2.hasClear,
            hourStep = _props2.hourStep,
            minuteStep = _props2.minuteStep,
            secondStep = _props2.secondStep,
            disabledHours = _props2.disabledHours,
            disabledMinutes = _props2.disabledMinutes,
            disabledSeconds = _props2.disabledSeconds,
            renderTimeMenuItems = _props2.renderTimeMenuItems,
            inputProps = _props2.inputProps,
            popupAlign = _props2.popupAlign,
            popupTriggerType = _props2.popupTriggerType,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupProps = _props2.popupProps,
            popupComponent = _props2.popupComponent,
            followTrigger = _props2.followTrigger,
            disabled = _props2.disabled,
            hasBorder = _props2.hasBorder,
            className = _props2.className,
            locale = _props2.locale,
            rtl = _props2.rtl,
            isPreview = _props2.isPreview,
            preset = _props2.preset,
            others = (0, _objectWithoutProperties3.default)(_props2, ['prefix', 'label', 'state', 'placeholder', 'size', 'format', 'hasClear', 'hourStep', 'minuteStep', 'secondStep', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'renderTimeMenuItems', 'inputProps', 'popupAlign', 'popupTriggerType', 'popupContainer', 'popupStyle', 'popupClassName', 'popupProps', 'popupComponent', 'followTrigger', 'disabled', 'hasBorder', 'className', 'locale', 'rtl', 'isPreview', 'preset']);
        var _state = this.state,
            value = _state.value,
            inputStr = _state.inputStr,
            inputValue = _state.inputValue,
            curValue = _state.curValue,
            inputing = _state.inputing,
            visible = _state.visible,
            isRange = _state.isRange,
            inputType = _state.inputType;

        var triggerCls = (0, _classnames4.default)((_classnames = {}, _classnames[this.prefixCls + '-trigger'] = true, _classnames));

        if (rtl) {
            others.dir = 'rtl';
        }

        if (isPreview) {
            return this.renderPreview(_util.obj.pickOthers(others, TimePicker2.PropTypes));
        }

        var sharedInputProps = (0, _extends3.default)({
            prefix: prefix,
            locale: locale,
            label: label,
            state: state,
            placeholder: placeholder
        }, inputProps, {
            size: size,
            disabled: disabled,
            // RangePicker 有临时输入态在 inputValue 里面
            value: inputing ? inputStr : isRange ? inputValue : (0, _util2.fmtValue)(value, format) || '',
            hasClear: value && hasClear,
            inputType: inputType,
            isRange: isRange,
            focus: visible,
            onInputTypeChange: this.onInputTypeChange,
            onInput: this.handleInput,
            onKeyDown: this.onKeyDown,
            ref: function ref(el) {
                return _this2.dateInput = el;
            }
        });

        var triggerInput = _react2.default.createElement('div', { className: triggerCls }, _react2.default.createElement(_dateInput2.default, (0, _extends3.default)({}, sharedInputProps, {
            label: label,
            state: state,
            onClick: this.onClick,
            hasBorder: hasBorder,
            placeholder: placeholder || locale.placeholder,
            className: (0, _classnames4.default)(this.prefixCls + '-input')
        })));

        var panelProps = {
            prefix: prefix,
            locale: locale,
            value: inputing ? this.checkValue(inputStr) : curValue,
            // value: curValue,
            isRange: isRange,
            disabled: disabled,
            showHour: format.indexOf('H') > -1,
            showSecond: format.indexOf('s') > -1,
            showMinute: format.indexOf('m') > -1,
            hourStep: hourStep,
            minuteStep: minuteStep,
            secondStep: secondStep,
            disabledHours: disabledHours,
            disabledMinutes: disabledMinutes,
            disabledSeconds: disabledSeconds,
            renderTimeMenuItems: renderTimeMenuItems,
            onSelect: this.handleChange
        };

        var classNames = (0, _classnames4.default)((_classnames2 = {}, _classnames2['' + this.prefixCls] = true, _classnames2[this.prefixCls + '-' + size] = size, _classnames2[prefix + 'disabled'] = disabled, _classnames2), className);

        var PopupComponent = popupComponent ? popupComponent : Popup;
        var oKable = !!(isRange ? inputValue && inputValue[inputType] : inputValue);

        return _react2.default.createElement('div', (0, _extends3.default)({}, _util.obj.pickOthers(TimePicker2.propTypes, others), { className: classNames }), _react2.default.createElement(PopupComponent, (0, _extends3.default)({
            align: popupAlign
        }, popupProps, {
            followTrigger: followTrigger,
            visible: visible,
            onVisibleChange: this.handleVisibleChange,
            trigger: triggerInput,
            container: popupContainer,
            disabled: disabled,
            triggerType: popupTriggerType,
            style: popupStyle,
            className: popupClassName
        }), _react2.default.createElement('div', { dir: others.dir, className: this.prefixCls + '-wrapper' }, _react2.default.createElement('div', { className: this.prefixCls + '-body' }, _react2.default.createElement(_panel2.default, panelProps), preset || isRange ? _react2.default.createElement(_footerPanel2.default, {
            prefix: prefix,
            className: this.prefixCls + '-footer',
            showTime: true,
            locale: locale,
            oKable: oKable,
            showOk: isRange,
            onOk: this.onOk,
            onChange: this.handleChange,
            preset: preset
        }) : null))));
    };

    return TimePicker2;
}(_react.Component), _class.propTypes = (0, _extends3.default)({}, _configProvider2.default.propTypes, {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    /**
     * 按钮的文案
     */
    label: _propTypes2.default.node,
    /**
     * 输入框状态
     */
    state: _propTypes2.default.oneOf(['error', 'success']),
    /**
     * 输入框提示
     */
    placeholder: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),
    /**
     * 时间值，dayjs格式或者2020-01-01字符串格式，受控状态使用
     */
    value: _propTypes4.default.value,
    /**
     * 时间初值，dayjs格式或者2020-01-01字符串格式，非受控状态使用
     */
    defaultValue: _propTypes4.default.value,
    /**
     * 时间选择框的尺寸
     */
    size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
    /**
     * 是否允许清空时间
     */
    hasClear: _propTypes2.default.bool,
    /**
     * 时间的格式
     * https://dayjs.gitee.io/docs/zh-CN/display/format
     */
    format: _propTypes2.default.string,
    /**
     * 小时选项步长
     */
    hourStep: _propTypes2.default.number,
    /**
     * 分钟选项步长
     */
    minuteStep: _propTypes2.default.number,
    /**
     * 秒钟选项步长
     */
    secondStep: _propTypes2.default.number,
    /**
     * 禁用小时函数
     * @param {Number} index 时 0 - 23
     * @return {Boolean} 是否禁用
     */
    disabledHours: _propTypes2.default.func,
    /**
     * 禁用分钟函数
     * @param {Number} index 分 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledMinutes: _propTypes2.default.func,
    /**
     * 禁用秒钟函数
     * @param {Number} index 秒 0 - 59
     * @return {Boolean} 是否禁用
     */
    disabledSeconds: _propTypes2.default.func,
    /**
     * 渲染的可选择时间列表
     * [{
     *  label: '01',
     *  value: 1
     * }]
     * @param {Array} list 默认渲染的列表
     * @param {String} mode 渲染的菜单 hour, minute, second
     * @param {dayjs} value 当前时间，可能为 null
     * @return {Array} 返回需要渲染的数据
     */
    renderTimeMenuItems: _propTypes2.default.func,
    /**
     * 弹层是否显示（受控）
     */
    visible: _propTypes2.default.bool,
    /**
     * 弹层默认是否显示（非受控）
     */
    defaultVisible: _propTypes2.default.bool,
    /**
     * 弹层容器
     * @param {Object} target 目标节点
     * @return {ReactNode} 容器节点
     */
    popupContainer: _propTypes2.default.any,
    /**
     * 弹层对齐方式, 详情见Overlay 文档
     */
    popupAlign: _propTypes2.default.string,
    /**
     * 弹层触发方式
     */
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    /**
     * 弹层展示状态变化时的回调
     * @param {Boolean} visible 弹层是否隐藏和显示
     * @param {String} type 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发
     */
    onVisibleChange: _propTypes2.default.func,
    /**
     * 弹层自定义样式
     */
    popupStyle: _propTypes2.default.object,
    /**
     * 弹层自定义样式类
     */
    popupClassName: _propTypes2.default.string,
    /**
     * 弹层属性
     */
    popupProps: _propTypes2.default.object,
    /**
     * 是否跟随滚动
     */
    followTrigger: _propTypes2.default.bool,
    /**
     * 是否禁用
     */
    disabled: _propTypes2.default.bool,
    /**
     * 输入框是否有边框
     */
    hasBorder: _propTypes2.default.bool,
    /**
     * 是否为预览态
     */
    isPreview: _propTypes2.default.bool,
    /**
     * 预览态模式下渲染的内容
     * @param {DayjsObject|DayjsObject[]} value 时间
     */
    renderPreview: _propTypes2.default.func,
    /**
     * 时间值改变时的回调
     * @param {DayjsObject} date dayjs时间对象
     * @param {Object|String} dateString 时间对象或时间字符串
     */
    onChange: _propTypes2.default.func,
    className: _propTypes2.default.string,
    name: _propTypes2.default.string,
    /**
     * 预设值，会显示在时间面板下面
     */
    preset: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(presetPropType), presetPropType]),
    inputProps: _propTypes2.default.shape(_input2.default.propTypes),
    popupComponent: _propTypes2.default.elementType,
    type: _propTypes2.default.oneOf(['time', 'range'])
}), _class.defaultProps = {
    prefix: 'next-',
    rtl: false,
    locale: timePickerLocale,
    size: 'medium',
    format: 'HH:mm:ss',
    hasClear: true,
    disabled: false,
    hasBorder: true,
    type: 'time',
    popupAlign: 'tl bl',
    popupTriggerType: 'click',
    onChange: noop,
    onVisibleChange: noop
}, _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.getInitValue = function () {
        var props = _this3.props;
        var type = props.type,
            value = props.value,
            defaultValue = props.defaultValue;

        var val = type === _constant.TIME_PICKER_TYPE.RANGE ? [null, null] : null;

        val = 'value' in props ? value : 'defaultValue' in props ? defaultValue : val;

        return _this3.checkValue(val);
    };

    this.getInitRangeInputState = function () {
        return {
            justBeginInput: _this3.isEnabled(),
            inputType: _this3.isEnabled(0) ? _constant.TIME_INPUT_TYPE.BEGIN : _constant.TIME_INPUT_TYPE.END
        };
    };

    this.onKeyDown = function (e) {
        if (e.keyCode === _util.KEYCODE.ENTER) {
            var inputValue = _this3.state.inputValue;

            _this3.handleChange(inputValue, 'KEYDOWN_ENTER');
            _this3.onClick();
            return;
        }

        var _state2 = _this3.state,
            value = _state2.value,
            inputStr = _state2.inputStr,
            inputType = _state2.inputType,
            isRange = _state2.isRange;
        var _props3 = _this3.props,
            format = _props3.format,
            _props3$hourStep = _props3.hourStep,
            hourStep = _props3$hourStep === undefined ? 1 : _props3$hourStep,
            _props3$minuteStep = _props3.minuteStep,
            minuteStep = _props3$minuteStep === undefined ? 1 : _props3$minuteStep,
            _props3$secondStep = _props3.secondStep,
            secondStep = _props3$secondStep === undefined ? 1 : _props3$secondStep,
            disabledMinutes = _props3.disabledMinutes,
            disabledSeconds = _props3.disabledSeconds;

        var unit = 'second';

        if (disabledSeconds) {
            unit = disabledMinutes ? 'hour' : 'minute';
        }

        var timeStr = (0, _utils.onTimeKeydown)(e, {
            format: format,
            timeInputStr: isRange ? inputStr[inputType] : inputStr,
            steps: {
                hour: hourStep,
                minute: minuteStep,
                second: secondStep
            },
            value: value
        }, unit);

        if (!timeStr) return;
        var newInputStr = timeStr;
        if (isRange) {
            newInputStr = inputStr;
            newInputStr[inputType] = timeStr;
        }

        _this3.handleChange(newInputStr, 'KEYDOWN_CODE');
    };

    this.onVisibleChange = function (visible, type) {
        if (!('visible' in _this3.props)) {
            _this3.setState({
                visible: visible
            });
        }
        _this3.props.onVisibleChange(visible, type);
    };

    this.onClick = function () {
        var _state3 = _this3.state,
            visible = _state3.visible,
            inputType = _state3.inputType;

        if (!visible) {
            _this3.onVisibleChange(true);
            _this3.handleInputFocus(inputType);
        }
    };

    this.handleVisibleChange = function (visible, targetType) {
        if (targetType === 'docClick') {
            // 弹层收起 触发 Change 逻辑
            if (!visible) {
                _this3.handleChange(_this3.state.curValue, 'VISIBLE_CHANGE');
            }
            _this3.onVisibleChange(visible);
        }
    };

    this.handleInputFocus = function (inputType) {
        var inputEl = _this3.dateInput && _this3.dateInput.input;

        if (_this3.state.isRange) {
            inputEl = inputEl && inputEl[inputType];
        }

        inputEl && inputEl.focus();
    };

    this.onOk = function () {
        var curValue = _this3.state.curValue;

        var checkedValue = _this3.checkValue(curValue);

        _util.func.invoke(_this3.props, 'onOk', _this3.getOutputArgs(checkedValue));

        _this3.setState({ value: checkedValue });
        _this3.handleChange(checkedValue, 'CLICK_OK');
    };

    this.onInputTypeChange = function (idx) {
        var _state4 = _this3.state,
            inputType = _state4.inputType,
            visible = _state4.visible;

        if (idx !== inputType) {
            _this3.setState({
                inputType: idx,
                justBeginInput: !(idx !== null && visible)
            });
        }
    };

    this.checkValue = function (value, strictly) {
        var inputType = _this3.state.inputType;
        var _props4 = _this3.props,
            format = _props4.format,
            type = _props4.type,
            disabled = _props4.disabled;

        var formatter = function formatter(v) {
            return typeof v === 'string' ? (0, _util.datejs)(v, format) : v;
        };
        var formattedValue = Array.isArray(value) ? value.map(function (v) {
            return formatter(v);
        }) : formatter(value);

        return type === _constant.TIME_PICKER_TYPE.RANGE ? checkRangeDate(formattedValue, inputType, disabled, strictly) : checkDate(formattedValue);
    };

    this.getOutputArgs = function (value) {
        var format = _this3.props.format;

        return [value, (0, _util2.fmtValue)(value, format)];
    };

    this.onChange = function (v) {
        var state = _this3.state,
            props = _this3.props;
        var format = props.format;

        var nextValue = v === undefined ? state.value : v;
        var value = _this3.checkValue(nextValue);

        _this3.setState({
            curValue: value,
            preValue: value,
            inputStr: (0, _util2.fmtValue)(value, format),
            inputValue: (0, _util2.fmtValue)(value, format)
        });

        _util.func.invoke(_this3.props, 'onChange', _this3.getOutputArgs(nextValue));
    };

    this.shouldSwitchInput = function (value) {
        var _state5 = _this3.state,
            inputType = _state5.inputType,
            justBeginInput = _state5.justBeginInput;

        var idx = justBeginInput ? (0, _util2.switchInputType)(inputType) : value.indexOf(null);

        if (idx !== -1 && _this3.isEnabled(idx)) {
            _this3.onInputTypeChange(idx);
            _this3.handleInputFocus(idx);
            return true;
        }

        return false;
    };

    this.handleChange = function (v, eventType) {
        var format = _this3.props.format;
        var _state6 = _this3.state,
            isRange = _state6.isRange,
            value = _state6.value,
            preValue = _state6.preValue;

        var forceEvents = ['KEYDOWN_ENTER', 'CLICK_PRESET', 'CLICK_OK', 'INPUT_CLEAR', 'VISIBLE_CHANGE'];
        var isTemporary = isRange && !forceEvents.includes(eventType);

        // 面板收起时候，将值设置为确认值
        v = eventType === 'VISIBLE_CHANGE' ? value : _this3.checkValue(v, !isTemporary);

        var stringV = (0, _util2.fmtValue)(v, format);

        _this3.setState({
            curValue: v,
            inputStr: stringV,
            inputValue: stringV,
            inputing: false,
            selecting: eventType === 'start' || eventType === 'end'
        });

        if (!isTemporary) {
            _this3.setState({
                value: v
            }, function () {
                // 判断当前选择结束，收起面板：
                // 1. 非 Range 选择
                // 2. 非 选择预设时间、面板收起、清空输入 操作
                // 3. 不需要切换输入框
                var shouldHidePanel = ['CLICK_PRESET', 'VISIBLE_CHANGE', 'KEYDOWN_ENTER', 'INPUT_CLEAR', 'CLICK_OK'].includes(eventType) || isRange && !_this3.shouldSwitchInput(v);
                if (shouldHidePanel) {
                    _this3.onVisibleChange(false);
                }

                if ((0, _util2.isValueChanged)(v, preValue)) {
                    _this3.onChange(v);
                }
            });
        }
    };

    this.isEnabled = function (idx) {
        var disabled = _this3.props.disabled;

        return Array.isArray(disabled) ? idx === undefined ? !disabled[0] && !disabled[1] : !disabled[idx] : !disabled;
    };

    this.handleClear = function () {
        /**
         * 清空输入之后 input 组件内部会让第二个输入框获得焦点
         * 所以这里需要设置 setTimeout 才能让第一个 input 获得焦点
         */
        _this3.clearTimeoutId = setTimeout(function () {
            _this3.handleInputFocus(0);
        });

        _this3.setState({
            inputType: _constant.TIME_INPUT_TYPE.BEGIN,
            justBeginInput: _this3.isEnabled()
        });
    };

    this.handleInput = function (v, eventType) {
        var isRange = _this3.state.isRange;

        if (eventType === 'clear') {
            _this3.handleChange(v, 'INPUT_CLEAR');

            if (isRange) {
                _this3.handleClear();
            }
        } else {
            _this3.setState({
                inputStr: v,
                inputValue: v,
                curValue: _this3.checkValue(v),
                inputing: true,
                visible: true
            });
        }
    };
}, _temp);
TimePicker2.displayName = 'TimePicker2';
exports.default = (0, _reactLifecyclesCompat.polyfill)(TimePicker2);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _utils = __webpack_require__(196);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function scrollTo(element, to, duration) {
    var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {
        return setTimeout(arguments.length <= 0 ? undefined : arguments[0], 10);
    };

    if (duration <= 0) {
        element.scrollTop = to;
        return;
    }

    var difference = to - element.scrollTop;
    var perTick = difference / duration * 10;

    requestAnimationFrame(function () {
        element.scrollTop = element.scrollTop + perTick;

        if (element.scrollTop === to) {
            return;
        }

        scrollTo(element, to, duration - 10);
    });
}

var noop = function noop() {};

var TimeMenu = (_temp2 = _class = function (_React$Component) {
    (0, _inherits3.default)(TimeMenu, _React$Component);

    function TimeMenu() {
        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, TimeMenu);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.prefixCls = _this.props.prefix + 'time-picker2', _this._menuRefHandler = function (ref) {
            _this.menu = ref;
        }, _this._menuWrapperRefHandler = function (ref) {
            _this.menuWrapper = ref;
        }, _this.createMenuItems = function (list) {
            var _this$props = _this.props,
                prefix = _this$props.prefix,
                mode = _this$props.mode,
                disabled = _this$props.disabled,
                disabledItems = _this$props.disabledItems,
                activeIndex = _this$props.activeIndex,
                onSelect = _this$props.onSelect,
                renderTimeMenuItems = _this$props.renderTimeMenuItems,
                timeValue = _this$props.value;

            list = renderTimeMenuItems(list, mode, timeValue) || list;

            return list.map(function (_ref) {
                var _classnames;

                var label = _ref.label,
                    value = _ref.value;

                var isDisabled = disabled || disabledItems(value);
                var itemCls = (0, _classnames3.default)((_classnames = {}, _classnames[_this.prefixCls + '-menu-item'] = true, _classnames[prefix + 'disabled'] = isDisabled, _classnames[prefix + 'selected'] = value === activeIndex, _classnames));
                var onClick = isDisabled ? noop : function () {
                    return onSelect(value, mode);
                };
                return _react2.default.createElement('li', {
                    role: 'option',
                    'aria-selected': String(value === activeIndex),
                    key: value,
                    title: value,
                    className: itemCls,
                    onClick: onClick
                }, label);
            });
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    TimeMenu.prototype.componentDidMount = function componentDidMount() {
        this.scrollToSelected(0);
    };

    TimeMenu.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        if (prevProps.activeIndex !== this.props.activeIndex) {
            this.scrollToSelected(120);
        }
    };

    TimeMenu.prototype.scrollToSelected = function scrollToSelected() {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _props = this.props,
            activeIndex = _props.activeIndex,
            step = _props.step;

        var targetIndex = Math.floor((activeIndex || 0) / step);
        var firstItem = this.menu.children[targetIndex];
        var offsetTo = firstItem.offsetTop;
        scrollTo(this.menu, offsetTo, duration);
    };

    TimeMenu.prototype.render = function render() {
        var _props2 = this.props,
            mode = _props2.mode,
            step = _props2.step;

        var total = mode === 'hour' ? 24 : 60;
        var list = [];
        for (var i = 0; i < total; i++) {
            if (i % step === 0) {
                list.push({
                    label: i,
                    value: i
                });
            }
        }

        return _react2.default.createElement('div', { className: this.prefixCls + '-menu', ref: this._menuWrapperRefHandler }, _react2.default.createElement('ul', { role: 'listbox', className: this.prefixCls + '-menu-' + mode, ref: this._menuRefHandler }, this.createMenuItems(list)));
    };

    return TimeMenu;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    title: _propTypes2.default.node,
    mode: _propTypes2.default.oneOf(['hour', 'minute', 'second']),
    step: _propTypes2.default.number,
    activeIndex: _propTypes2.default.number,
    value: _utils.checkDayjsObj,
    disabledItems: _propTypes2.default.func,
    renderTimeMenuItems: _propTypes2.default.func,
    onSelect: _propTypes2.default.func,
    disabled: _propTypes2.default.bool
}, _class.defaultProps = {
    step: 1,
    disabledItems: function disabledItems() {
        return false;
    },
    renderTimeMenuItems: function renderTimeMenuItems(list) {
        return list;
    },
    onSelect: function onSelect() {},
    disabled: false
}, _temp2);
TimeMenu.displayName = 'TimeMenu';
exports.default = TimeMenu;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _propTypes3 = __webpack_require__(107);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _constant = __webpack_require__(108);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(42);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DateInput = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(DateInput, _React$Component);

    function DateInput(props) {
        (0, _classCallCheck3.default)(this, DateInput);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.setInputRef = function (el, index) {
            if (_this.props.isRange) {
                if (!_this.input) {
                    _this.input = [];
                }
                _this.input[index] = el;
            } else {
                _this.input = el;
            }
        };

        _this.setValue = function (v) {
            var _this$props = _this.props,
                isRange = _this$props.isRange,
                inputType = _this$props.inputType,
                value = _this$props.value;

            var newVal = v;

            if (isRange) {
                newVal = [].concat(value);
                newVal[inputType] = v;
            }

            return newVal;
        };

        _this.formatter = function (v) {
            var format = _this.props.format;

            return typeof format === 'function' ? format(v) : v.format(format);
        };

        _this.onInput = function (v, e, eventType) {
            v = _this.setValue(v);

            if (eventType === 'clear') {
                v = null;
                e.stopPropagation();
            }

            _util.func.invoke(_this.props, 'onInput', [v, eventType]);
        };

        _this.handleTypeChange = function (inputType) {
            if (inputType !== _this.props.inputType) {
                _util.func.invoke(_this.props, 'onInputTypeChange', [inputType]);
            }
        };

        _this.getPlaceholder = function () {
            var isRange = _this.props.isRange;

            var holder = _this.props.placeholder;

            if (isRange && !Array.isArray(holder)) {
                holder = Array(2).fill(holder);
            }

            return holder;
        };

        _this.getHtmlSize = function () {
            var _this$props2 = _this.props,
                isRange = _this$props2.isRange,
                format = _this$props2.format,
                hasBorder = _this$props2.hasBorder;

            var value = '12:12:12';
            var size = 0;

            if (isRange) {
                var fmtStr = (0, _util2.fmtValue)([value, value].map(_util.datejs), format);
                size = Math.max.apply(Math, fmtStr.map(function (s) {
                    return s && s.length || 0;
                }));
            } else {
                var _fmtStr = (0, _util2.fmtValue)((0, _util.datejs)(value), format);
                size = _fmtStr && _fmtStr.length || 0;
            }

            return String(Math.max(size, hasBorder ? 12 : 8));
        };

        _this.prefixCls = props.prefix + 'time-picker2-input';
        return _this;
    }

    /**
     * 根据 format 计算输入框 htmlSize
     */

    DateInput.prototype.render = function render() {
        var _classnames2;

        var onInput = this.onInput,
            setInputRef = this.setInputRef,
            handleTypeChange = this.handleTypeChange,
            prefixCls = this.prefixCls;
        var _props = this.props,
            autoFocus = _props.autoFocus,
            readOnly = _props.readOnly,
            isRange = _props.isRange,
            value = _props.value,
            onBlur = _props.onBlur,
            hasClear = _props.hasClear,
            inputType = _props.inputType,
            size = _props.size,
            focus = _props.focus,
            prefix = _props.prefix,
            hasBorder = _props.hasBorder,
            separator = _props.separator,
            disabled = _props.disabled,
            inputProps = _props.inputProps,
            state = _props.state,
            label = _props.label,
            onClick = _props.onClick,
            onKeyDown = _props.onKeyDown,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['autoFocus', 'readOnly', 'isRange', 'value', 'onBlur', 'hasClear', 'inputType', 'size', 'focus', 'prefix', 'hasBorder', 'separator', 'disabled', 'inputProps', 'state', 'label', 'onClick', 'onKeyDown']);

        var placeholder = this.getPlaceholder();
        var htmlSize = this.getHtmlSize();

        var sharedProps = (0, _extends3.default)({}, _util.obj.pickProps(restProps, _input2.default), inputProps, {
            size: size,
            prefix: prefix,
            htmlSize: htmlSize,
            readOnly: readOnly,
            hasBorder: hasBorder,
            onBlur: onBlur,
            onChange: onInput,
            onClick: onClick,
            onKeyDown: onKeyDown
        });

        var rangeProps = void 0;
        if (isRange) {
            rangeProps = [_constant.TIME_INPUT_TYPE.BEGIN, _constant.TIME_INPUT_TYPE.END].map(function (idx) {
                var _classnames;

                var _disabled = Array.isArray(disabled) ? disabled[idx] : disabled;

                return (0, _extends3.default)({}, sharedProps, {
                    autoFocus: autoFocus,
                    placeholder: placeholder[idx],
                    value: value[idx] || '',
                    disabled: _disabled,
                    ref: function ref(_ref) {
                        return setInputRef(_ref, idx);
                    },
                    onFocus: _disabled ? undefined : function () {
                        return handleTypeChange(idx);
                    },
                    className: (0, _classnames4.default)((_classnames = {}, _classnames[prefixCls + '-active'] = inputType === idx, _classnames))
                });
            });
        }

        var className = (0, _classnames4.default)([prefixCls, prefixCls + '-' + size, prefixCls + '-' + (isRange ? 'range' : 'time')], (_classnames2 = {}, _classnames2[prefixCls + '-focus'] = focus, _classnames2[prefixCls + '-noborder'] = !hasBorder, _classnames2[prefixCls + '-disabled'] = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled, _classnames2[prefixCls + '-error'] = state === 'error', _classnames2));

        var calendarIcon = _react2.default.createElement(_icon2.default, { type: 'clock', className: this.prefixCls + '-symbol-clock-icon' });

        return _react2.default.createElement('div', { className: className }, isRange ? _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, rangeProps[0], {
            label: label,
            hasBorder: false,
            autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
        })), _react2.default.createElement('div', { className: prefixCls + '-separator' }, separator), _react2.default.createElement(_input2.default, (0, _extends3.default)({}, rangeProps[1], {
            state: state,
            hasBorder: false,
            hasClear: !state && hasClear,
            hint: state ? null : calendarIcon
        }))) : _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedProps, {
            label: label,
            state: state,
            disabled: disabled,
            hasClear: !state && hasClear,
            placeholder: placeholder,
            autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
            , ref: setInputRef,
            value: value || '',
            hint: state ? null : calendarIcon
        })));
    };

    return DateInput;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    value: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),
    inputType: _propTypes4.default.inputType,
    format: _propTypes4.default.format,
    isRange: _propTypes2.default.bool,
    hasClear: _propTypes2.default.bool,
    onInputTypeChange: _propTypes2.default.func,
    autoFocus: _propTypes2.default.bool,
    readOnly: _propTypes4.default.readOnly,
    placeholder: _propTypes4.default.placeholder,
    size: _propTypes4.default.size,
    focus: _propTypes2.default.bool,
    hasBorder: _propTypes2.default.bool,
    onKeyDown: _propTypes2.default.func,
    onClick: _propTypes2.default.func,
    separator: _propTypes2.default.node,
    disabled: _propTypes4.default.disabled,
    inputProps: _propTypes2.default.object,
    label: _propTypes2.default.node
}, _class.defaultProps = {
    autoFocus: false,
    readOnly: false,
    hasClear: true,
    separator: '-',
    hasBorder: true,
    size: 'medium'
}, _temp);
DateInput.displayName = 'DateInput';
exports.default = (0, _reactLifecyclesCompat.polyfill)(DateInput);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _MODE2FORMAT;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _configProvider = __webpack_require__(8);

var _configProvider2 = _interopRequireDefault(_configProvider);

var _picker = __webpack_require__(468);

var _picker2 = _interopRequireDefault(_picker);

var _constant = __webpack_require__(43);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DATE = _constant.DATE_PICKER_MODE.DATE,
    WEEK = _constant.DATE_PICKER_MODE.WEEK,
    MONTH = _constant.DATE_PICKER_MODE.MONTH,
    QUARTER = _constant.DATE_PICKER_MODE.QUARTER,
    YEAR = _constant.DATE_PICKER_MODE.YEAR;

var MODE2FORMAT = (_MODE2FORMAT = {}, _MODE2FORMAT[DATE] = 'YYYY-MM-DD', _MODE2FORMAT[WEEK] = 'gggg-wo', _MODE2FORMAT[MONTH] = 'YYYY-MM', _MODE2FORMAT[QUARTER] = 'YYYY-[Q]Q', _MODE2FORMAT[YEAR] = 'YYYY', _MODE2FORMAT);

/* istanbul ignore next */
var transform = function transform(props, deprecated) {
    var footerRender = props.footerRender,
        onVisibleMonthChange = props.onVisibleMonthChange,
        defaultVisibleMonth = props.defaultVisibleMonth,
        ranges = props.ranges,
        newProps = (0, _objectWithoutProperties3.default)(props, ['footerRender', 'onVisibleMonthChange', 'defaultVisibleMonth', 'ranges']);

    var mode = props.mode || DATE;

    if ('footerRender' in props) {
        deprecated('footerRender', 'extraFooterRender', 'DatePicker');
        newProps.extraFooterRender = footerRender;
    }

    if (onVisibleMonthChange) {
        deprecated('onVisibleMonthChange', 'onPanelChange', 'DatePicker');
        newProps.onPanelChange = onVisibleMonthChange;
    }

    if (defaultVisibleMonth) {
        deprecated('defaultVisibleMonth', 'defaultPanelValue', 'DatePicker');
        newProps.defaultPanelValue = onVisibleMonthChange;
    }

    if ('ranges' in props) {
        deprecated('ranges', 'preset: PT.oneOfType([PT.array, PT.object])', 'DatePicker');
        newProps.preset = ranges;
    }

    if ([WEEK, MONTH, QUARTER, YEAR].includes(mode)) {
        delete newProps.showTime;
    } else if ((0, _typeof3.default)(props.showTime) === 'object') {
        deprecated('showTime: object', 'showTime && timePanelProps', 'DatePicker');
        newProps.timePanelProps = props.showTime;
        newProps.showTime = true;
    }

    if (!newProps.format) {
        newProps.format = MODE2FORMAT[mode] + (newProps.showTime ? ' HH:mm:ss' : '');
    } else if (mode === WEEK && typeof newProps.format === 'string' && newProps.format.includes('YYYY')) {
        // see https://github.com/alibaba-fusion/next/issues/3727
        newProps.format = newProps.format.replace('YYYY', 'gggg');
    }

    return newProps;
};

var ConfigPicker = _configProvider2.default.config(_picker2.default, {
    componentName: 'DatePicker2',
    transform: transform
});
var generatePicker = function generatePicker(mode) {
    return _react2.default.forwardRef(function (props, ref) {
        return _react2.default.createElement(ConfigPicker, (0, _extends3.default)({ ref: ref }, props, { mode: mode }));
    });
};

var DatePicker2 = generatePicker();
DatePicker2.displayName = 'DatePicker2';

DatePicker2.MonthPicker = generatePicker(MONTH);
DatePicker2.MonthPicker.displayName = 'MonthPicker2';

DatePicker2.YearPicker = generatePicker(YEAR);
DatePicker2.YearPicker.displayName = 'YearPicker2';

DatePicker2.WeekPicker = generatePicker(WEEK);
DatePicker2.WeekPicker.displayName = 'WeekPicker2';

DatePicker2.QuarterPicker = generatePicker(QUARTER);
DatePicker2.QuarterPicker.displayName = 'QuarterPicker2';

DatePicker2.RangePicker = _react2.default.forwardRef(function (props, ref) {
    return _react2.default.createElement(ConfigPicker, (0, _extends3.default)({ ref: ref }, props, { type: 'range' }));
});
DatePicker2.RangePicker.displayName = 'RangePicker2';

exports.default = DatePicker2;
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(42);

var _constant = __webpack_require__(43);

var _overlay = __webpack_require__(16);

var _overlay2 = _interopRequireDefault(_overlay);

var _dateInput = __webpack_require__(469);

var _dateInput2 = _interopRequireDefault(_dateInput);

var _datePanel = __webpack_require__(470);

var _datePanel2 = _interopRequireDefault(_datePanel);

var _rangePanel = __webpack_require__(474);

var _rangePanel2 = _interopRequireDefault(_rangePanel);

var _footerPanel = __webpack_require__(197);

var _footerPanel2 = _interopRequireDefault(_footerPanel);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var Popup = _overlay2.default.Popup;
var pickProps = _util.obj.pickProps,
    pickOthers = _util.obj.pickOthers;
var renderNode = _util.func.renderNode,
    checkDate = _util.func.checkDate,
    checkRangeDate = _util.func.checkRangeDate;
var Picker = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Picker, _React$Component);

    function Picker(props) {
        (0, _classCallCheck3.default)(this, Picker);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        var prefix = props.prefix,
            type = props.type,
            format = props.format,
            mode = props.mode,
            defaultVisible = props.defaultVisible;

        _this.state = {
            panelMode: mode,
            visible: defaultVisible
        };

        if (type === _constant.DATE_PICKER_TYPE.RANGE) {
            var _this$getInitRangeInp = _this.getInitRangeInputState(),
                inputType = _this$getInitRangeInp.inputType,
                justBeginInput = _this$getInitRangeInp.justBeginInput;

            _this.state = (0, _extends3.default)({
                inputType: inputType,
                justBeginInput: justBeginInput
            }, _this.state);
        }

        var value = _this.getInitValue();

        _this.state = (0, _extends3.default)({
            value: value, // 确定值
            curValue: value, // 临时值
            preValue: value, // 上个值
            inputValue: (0, _util2.fmtValue)(value, format)
        }, _this.state);

        _this.prefixCls = prefix + 'date-picker2';

        _this.popupRef = _react2.default.createRef();
        return _this;
    }

    Picker.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var type = props.type,
            showTime = props.showTime,
            showOk = props.showOk,
            disabled = props.disabled,
            format = props.format,
            mode = props.mode;

        var isRange = type === _constant.DATE_PICKER_TYPE.RANGE;

        var newState = {
            isRange: isRange,
            showOk: !!(showOk || showTime)
        };

        /**
         * 如果当前输入框可能被 disabled
         * 且另一个输入框非 disabled 则切换到另一个输入框
         */
        if (isRange) {
            var inputType = state.inputType;

            var _disabled = Array.isArray(disabled) ? disabled : [disabled, disabled];

            if (_disabled[inputType]) {
                var otherType = (0, _util2.switchInputType)(state.inputType);

                if (!_disabled[otherType]) {
                    inputType = otherType;
                }
            }

            newState.inputType = inputType;
        }

        if ('value' in props) {
            var value = isRange ? checkRangeDate(props.value, state.inputType, disabled) : checkDate(props.value);

            if ((0, _util2.isValueChanged)(value, state.preValue)) {
                newState = (0, _extends3.default)({}, newState, {
                    value: value,
                    curValue: value,
                    preValue: value,
                    inputValue: (0, _util2.fmtValue)(value, format)
                });
            }

            if ('mode' in props) {
                if (mode !== state.panelMode) {
                    newState = (0, _extends3.default)({}, newState, {
                        panelMode: mode,
                        inputValue: (0, _util2.fmtValue)(value, format)
                    });
                }
            }

            if ('showTime' in props) {
                if (showTime !== state.showTime) {
                    newState = (0, _extends3.default)({}, newState, {
                        showTime: !!showTime,
                        inputValue: (0, _util2.fmtValue)(value, format)
                    });
                }
            }
        }

        return newState;
    };

    Picker.prototype.componentWillUnmount = function componentWillUnmount() {
        [this.clearTimeoutId, this.timeoutId].forEach(function (id) {
            return id && clearTimeout(id);
        });
    };

    /**
     * 获取初始值
     */

    /**
     * 获取 RangePicker 输入框初始输入状态
     * @returns {Object} inputState
     * @returns {boolean} inputState.justBeginInput 是否初始输入
     * @returns {number} inputState.inputType 当前输入框
     */

    /**
     * 处理点击文档区域导致的弹层收起逻辑
     * @param {boolean} visible 是否可见
     * @param {string} type 事件类型
     */

    Picker.prototype.onVisibleChange = function onVisibleChange(visible) {
        var _this2 = this;

        if (visible !== this.state.visible) {
            var callback = function callback() {
                _this2.setState({
                    visible: visible,
                    justBeginInput: _this2.isEnabled()
                });
            };

            if (this.timeoutId) {
                clearTimeout(this.timeoutId);
                this.timeoutId = null;
            }

            if (visible) {
                callback();
            } else {
                this.timeoutId = setTimeout(callback, 0);
            }

            _util.func.invoke(this.props, 'onVisibleChange', [visible]);
        }
    };

    /**
     * 获取输入框的禁用状态
     * @param {Number} idx
     * @returns {Boolean}
     */

    /**
     * check if value has disabled value
     *
     * @param {string|string[]|Dayjs|Dayjs[]} val
     * @returns {Boolean}
     */

    /**
     * 获取 `onChange` 和 `onOk` 方法的输出参数
     * @param {Dayjs} value
     * @returns 默认返回 `Dayjs` 实例和 `format` 格式化的值
     *          如果传了了 `outputFormat` 属性则返回 `outputFormat` 格式化的值
     */

    Picker.prototype.render = function render() {
        var _this3 = this,
            _classnames;

        var prefixCls = this.prefixCls,
            handleChange = this.handleChange,
            handleMouseDown = this.handleMouseDown,
            handleVisibleChange = this.handleVisibleChange,
            onOk = this.onOk,
            onClick = this.onClick,
            handleInput = this.handleInput,
            onInputTypeChange = this.onInputTypeChange,
            onPanelChange = this.onPanelChange,
            onKeyDown = this.onKeyDown,
            onCalendarChange = this.onCalendarChange;
        var _props = this.props,
            rtl = _props.rtl,
            locale = _props.locale,
            prefix = _props.prefix,
            inputReadOnly = _props.inputReadOnly,
            showTime = _props.showTime,
            preset = _props.preset,
            mode = _props.mode,
            format = _props.format,
            trigger = _props.trigger,
            disabledDate = _props.disabledDate,
            extraFooterRender = _props.extraFooterRender,
            timePanelProps = _props.timePanelProps,
            resetTime = _props.resetTime,
            placeholder = _props.placeholder,
            disabledTime = _props.disabledTime,
            dateCellRender = _props.dateCellRender,
            disabled = _props.disabled,
            isPreview = _props.isPreview,
            className = _props.className,
            defaultPanelValue = _props.defaultPanelValue,
            renderPreview = _props.renderPreview,
            label = _props.label,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['rtl', 'locale', 'prefix', 'inputReadOnly', 'showTime', 'preset', 'mode', 'format', 'trigger', 'disabledDate', 'extraFooterRender', 'timePanelProps', 'resetTime', 'placeholder', 'disabledTime', 'dateCellRender', 'disabled', 'isPreview', 'className', 'defaultPanelValue', 'renderPreview', 'label']);
        var _state = this.state,
            isRange = _state.isRange,
            inputType = _state.inputType,
            justBeginInput = _state.justBeginInput,
            panelMode = _state.panelMode,
            showOk = _state.showOk,
            align = _state.align;
        var _state2 = this.state,
            inputValue = _state2.inputValue,
            curValue = _state2.curValue;

        var _getPopupOffsetLeft = this.getPopupOffsetLeft(),
            arrowLeft = _getPopupOffsetLeft.arrowLeft,
            panelLeft = _getPopupOffsetLeft.panelLeft;

        // 预览态


        if (isPreview) {
            var previewCls = (0, _classnames3.default)(className, prefix + 'form-preview');

            return _react2.default.createElement('div', { className: previewCls }, renderNode(renderPreview, isRange ? inputValue.join('-') : inputValue, [curValue, this.props]));
        }

        var visible = 'visible' in this.props ? this.props.visible : this.state.visible;
        var allDisabled = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled;
        var sharedProps = {
            rtl: rtl,
            prefix: prefix,
            locale: locale,
            mode: mode,
            format: format,
            showTime: showTime,
            inputType: inputType
        };

        // 输入框
        var inputProps = (0, _extends3.default)({}, pickProps(_dateInput2.default.propTypes, restProps), sharedProps, {
            value: inputValue,
            label: label,
            isRange: isRange,
            disabled: disabled,
            placeholder: placeholder,
            onInputTypeChange: onInputTypeChange,
            focus: visible,
            onInput: handleInput,
            readOnly: inputReadOnly,
            inputProps: this.props.inputProps,
            ref: function ref(el) {
                return _this3.dateInput = el;
            }
        });

        // 禁用状态下 不允许清空
        if (!this.isEnabled()) {
            inputProps.hasClear = false;
        }

        var triggerNode = renderNode(trigger, _react2.default.createElement(_dateInput2.default, inputProps), inputProps);

        // 日期
        var panelProps = (0, _extends3.default)({}, sharedProps, {
            panelMode: panelMode,
            value: curValue,
            disabledDate: disabledDate,
            onPanelChange: onPanelChange,
            timePanelProps: timePanelProps,
            disabledTime: disabledTime,
            resetTime: resetTime,
            dateCellRender: dateCellRender,
            defaultPanelValue: defaultPanelValue,
            onSelect: handleChange
        });

        var DateNode = isRange ? _react2.default.createElement(_rangePanel2.default, (0, _extends3.default)({ justBeginInput: justBeginInput, onCalendarChange: onCalendarChange }, panelProps)) : _react2.default.createElement(_datePanel2.default, panelProps);

        // 底部节点
        var oKable = !!(isRange ? inputValue && inputValue[inputType] : inputValue);
        var shouldShowFooter = showOk || preset || extraFooterRender;

        var footerNode = shouldShowFooter ? _react2.default.createElement(_footerPanel2.default, {
            oKable: oKable,
            onOk: onOk,
            showOk: showOk,
            onChange: handleChange,
            preset: preset,
            locale: locale,
            prefix: prefix,
            extraRender: extraFooterRender
        }) : null;

        var triggerProps = void 0;
        if (!allDisabled) {
            triggerProps = { onKeyDown: onKeyDown, onClick: onClick };
        }

        // popup
        var _props2 = this.props,
            followTrigger = _props2.followTrigger,
            popupTriggerType = _props2.popupTriggerType,
            popupAlign = _props2.popupAlign,
            popupContainer = _props2.popupContainer,
            popupStyle = _props2.popupStyle,
            popupClassName = _props2.popupClassName,
            popupComponent = _props2.popupComponent,
            popupProps = _props2.popupProps;

        var popupCls = (0, _classnames3.default)(popupClassName || popupProps && popupProps.className, (_classnames = {}, _classnames[prefixCls + '-overlay'] = true, _classnames[prefixCls + '-' + (align || []).join('-')] = align, _classnames[prefixCls + '-overlay-range'] = isRange, _classnames));
        var PopupComp = popupComponent || Popup;

        return _react2.default.createElement('div', (0, _extends3.default)({}, pickOthers(Picker.propTypes, restProps), {
            dir: rtl ? 'rtl' : undefined,
            className: (0, _classnames3.default)(className, prefixCls),
            style: this.props.style
        }), _react2.default.createElement(PopupComp, (0, _extends3.default)({
            rtl: rtl,
            key: 'date-picker-popup',
            visible: visible,
            align: popupAlign,
            container: popupContainer,
            followTrigger: followTrigger,
            triggerType: popupTriggerType,
            style: popupStyle,
            onVisibleChange: handleVisibleChange,
            disabled: allDisabled,
            trigger: _react2.default.createElement('div', (0, _extends3.default)({}, triggerProps, { role: 'button', tabIndex: '0', style: { width: '100%' } }), triggerNode),
            onPosition: this.getCurrentAlign,
            canCloseByTrigger: false
        }, popupProps, {
            className: popupCls
        }), _react2.default.createElement('div', { onMouseDown: handleMouseDown, style: { marginLeft: panelLeft } }, _react2.default.createElement('div', { dir: rtl ? 'rtl' : undefined, className: prefixCls + '-wrapper', ref: this.popupRef }, isRange ? this.renderArrow(arrowLeft) : null, DateNode, this.state.panelMode !== this.props.mode ? null : footerNode))));
    };

    return Picker;
}(_react2.default.Component), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    name: _propTypes2.default.string,

    // calendar
    mode: _propTypes4.default.mode,
    type: _propTypes4.default.type,
    value: _propTypes4.default.value,
    defaultValue: _propTypes4.default.value,
    defaultPanelValue: _propTypes4.default.date,
    disabledDate: _propTypes2.default.func,
    visible: _propTypes2.default.bool,
    defaultVisible: _propTypes2.default.bool,
    dateCellRender: _propTypes2.default.func,

    // event
    onOk: _propTypes2.default.func,
    onChange: _propTypes2.default.func,
    onVisibleChange: _propTypes2.default.func,
    onPanelChange: _propTypes2.default.func,
    onCalendarChange: _propTypes2.default.func,

    // time
    showTime: _propTypes2.default.bool,
    resetTime: _propTypes2.default.bool,
    timePanelProps: _propTypes2.default.object,
    disabledTime: _propTypes2.default.object,

    // header
    titleRender: _propTypes2.default.func,

    // footer
    preset: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    extraFooterRender: _propTypes4.default.render,
    showOk: _propTypes2.default.bool,

    // input
    trigger: _propTypes4.default.render,
    hasBorder: _propTypes2.default.bool,
    inputProps: _propTypes2.default.object,
    hasClear: _propTypes2.default.bool,
    placeholder: _propTypes4.default.placeholder,
    disabled: _propTypes4.default.disabled,
    inputReadOnly: _propTypes4.default.readOnly,
    /**
     * 日期显示格式
     */
    format: _propTypes4.default.format,
    label: _propTypes2.default.node,
    separator: _propTypes2.default.node,
    /**
     * 输出格式：控制 onChange、onOk 事件的输出值格式
     *  - string 类型：根据时间格式进行转换
     *  - function 类型：((date: Dayjs, dateStr: string) => any)
     *
     * @version 1.23
     */
    outputFormat: _propTypes4.default.format,

    // popup
    followTrigger: _propTypes2.default.bool,
    popupTriggerType: _propTypes2.default.oneOf(['click', 'hover']),
    popupAlign: _propTypes2.default.string,
    popupContainer: _propTypes2.default.any,
    popupStyle: _propTypes2.default.object,
    popupClassName: _propTypes2.default.string,
    popupComponent: _propTypes2.default.elementType,
    popupProps: _propTypes2.default.object,

    // preview
    isPreview: _propTypes2.default.bool,
    renderPreview: _propTypes2.default.func,

    // ariaLabel
    dateInputAriaLabel: _propTypes4.default.ariaLabel
}, _class.defaultProps = {
    rtl: false,
    prefix: 'next-',
    popupTriggerType: 'click',
    locale: _zhCn2.default.DatePicker,
    defaultVisible: false,
    type: _constant.DATE_PICKER_TYPE.DATE,
    mode: _constant.DATE_PICKER_MODE.DATE,
    format: 'YYYY-MM-DD'
}, _initialiseProps = function _initialiseProps() {
    var _this4 = this;

    this.getInitValue = function () {
        var props = _this4.props;
        var type = props.type,
            value = props.value,
            defaultValue = props.defaultValue;

        var val = type === _constant.DATE_PICKER_TYPE.RANGE ? [null, null] : null;

        val = 'value' in props ? value : 'defaultValue' in props ? defaultValue : val;

        return _this4.checkValue(val);
    };

    this.getInitRangeInputState = function () {
        return {
            justBeginInput: _this4.isEnabled(),
            inputType: _this4.isEnabled(0) ? _constant.DATE_INPUT_TYPE.BEGIN : _constant.DATE_INPUT_TYPE.END
        };
    };

    this.handleVisibleChange = function (visible, targetType) {
        if (['docClick', 'fromTrigger'].indexOf(targetType) > -1) {
            // 弹层收起 触发 Change 逻辑
            if (!visible) {
                _this4.handleChange(_this4.state.curValue, 'VISIBLE_CHANGE');
            }
            _this4.onVisibleChange(visible);
        }
    };

    this.checkValue = function (value, strictly, format) {
        return _this4.props.type === _constant.DATE_PICKER_TYPE.RANGE ? checkRangeDate(value, _this4.state.inputType, _this4.props.disabled, strictly, format) : checkDate(value, format);
    };

    this.handleInputFocus = function (inputType) {
        var inputEl = _this4.dateInput && _this4.dateInput.input;

        if (_this4.state.isRange) {
            inputEl = inputEl && inputEl[inputType];
        }

        inputEl && inputEl.focus();
    };

    this.handleMouseDown = function (e) {
        e.preventDefault();
    };

    this.handleInput = function (v, eventType) {
        if (eventType === 'clear') {
            _this4.handleChange(v, 'INPUT_CLEAR');

            if (_this4.state.isRange) {
                _this4.handleClear();
            }
        } else {
            var newState = {
                inputValue: v,
                visible: true
            };
            var curValue = _this4.checkValue(v, true, _this4.props.format);
            if (curValue !== null) {
                newState.curValue = curValue;
            }
            _this4.setState(newState);
        }
    };

    this.onPanelChange = function (value, mode) {
        _this4.setState({
            panelMode: mode
        });
        _util.func.invoke(_this4.props, 'onPanelChange', [value, mode]);
    };

    this.handleClear = function () {
        /**
         * 清空输入之后 input 组件内部会让第二个输入框获得焦点
         * 所以这里需要设置 setTimeout 才能让第一个 input 获得焦点
         */
        _this4.clearTimeoutId = setTimeout(function () {
            _this4.handleInputFocus(0);
        });

        _this4.setState({
            inputType: _constant.DATE_INPUT_TYPE.BEGIN,
            justBeginInput: _this4.isEnabled()
        });

        _this4.onCalendarChange(null);
    };

    this.shouldSwitchInput = function (value) {
        var _state3 = _this4.state,
            inputType = _state3.inputType,
            justBeginInput = _state3.justBeginInput;

        var idx = justBeginInput ? (0, _util2.switchInputType)(inputType) : value.indexOf(null);

        if (idx !== -1 && _this4.isEnabled(idx)) {
            _this4.onInputTypeChange(idx);
            _this4.handleInputFocus(idx);
            return true;
        }

        return false;
    };

    this.isEnabled = function (idx) {
        var disabled = _this4.props.disabled;

        return Array.isArray(disabled) ? idx === undefined ? !disabled[0] && !disabled[1] : !disabled[idx] : !disabled;
    };

    this.checkValueDisabled = function (val) {
        var disabledDate = _this4.props.disabledDate;
        var panelMode = _this4.state.panelMode;

        var values = (Array.isArray(val) ? val : [val]).map(function (value) {
            return checkDate(value);
        });

        if (!disabledDate) {
            return false;
        }

        return values.some(function (value) {
            return disabledDate(value, panelMode);
        });
    };

    this.onKeyDown = function (e) {
        switch (e.keyCode) {
            case _util.KEYCODE.ENTER:
                {
                    var inputValue = _this4.state.inputValue;

                    _this4.onClick();
                    if (_this4.checkValueDisabled(inputValue)) {
                        // reset inputValue when current inputValue is disabled
                        _this4.handleChange(inputValue, 'VISIBLE_CHANGE');
                        return;
                    }
                    _this4.handleChange(inputValue, 'KEYDOWN_ENTER');
                    break;
                }
            default:
                return;
        }
    };

    this.handleChange = function (v, eventType) {
        var format = _this4.props.format;
        var _state4 = _this4.state,
            isRange = _state4.isRange,
            showOk = _state4.showOk,
            value = _state4.value,
            preValue = _state4.preValue;

        var forceEvents = ['KEYDOWN_ENTER', 'CLICK_PRESET', 'CLICK_OK', 'INPUT_CLEAR', 'VISIBLE_CHANGE'];
        var isTemporary = showOk && !forceEvents.includes(eventType);

        // 面板收起时候，将值设置为确认值
        v = eventType === 'VISIBLE_CHANGE' ? value : _this4.checkValue(v, !isTemporary);

        _this4.setState({
            curValue: v,
            inputValue: (0, _util2.fmtValue)(v, format)
        });

        if (!isTemporary) {
            _this4.setState({
                value: v
            }, function () {
                // 判断当前选择结束，收起面板：
                // 1. 非 Range 选择
                // 2. 非 选择预设时间、面板收起、清空输入 操作
                // 3. 不需要切换输入框
                var shouldHidePanel = !isRange || ['CLICK_PRESET', 'VISIBLE_CHANGE', 'INPUT_CLEAR'].includes(eventType) || !_this4.shouldSwitchInput(v);

                if (shouldHidePanel) {
                    _this4.onVisibleChange(false);

                    if ((0, _util2.isValueChanged)(v, preValue)) {
                        _this4.onChange();
                    }
                }
            });
        }
    };

    this.onChange = function () {
        var state = _this4.state,
            props = _this4.props;
        var format = props.format;

        var value = _this4.checkValue('value' in props ? props.value : state.value);

        _this4.setState({
            curValue: value,
            preValue: value,
            inputValue: (0, _util2.fmtValue)(value, format)
        });

        _util.func.invoke(_this4.props, 'onChange', _this4.getOutputArgs(state.value));
    };

    this.onCalendarChange = function (values) {
        var _props3 = _this4.props,
            format = _props3.format,
            onCalendarChange = _props3.onCalendarChange;

        if (onCalendarChange) {
            var startValue = values && values[0];
            var endValue = values && values[1];
            var startStr = startValue ? (0, _util2.fmtValue)(values[0], format) : '';
            var endStr = endValue ? (0, _util2.fmtValue)(values[1], format) : '';

            onCalendarChange(values, [startStr, endStr]);
        }
    };

    this.onOk = function () {
        var inputValue = _this4.state.inputValue;

        var checkedValue = _this4.checkValue(inputValue, true, _this4.props.format);

        _util.func.invoke(_this4.props, 'onOk', _this4.getOutputArgs(checkedValue));

        _this4.setState({ value: checkedValue });
        _this4.handleChange(checkedValue, 'CLICK_OK');
    };

    this.onInputTypeChange = function (idx) {
        var _state5 = _this4.state,
            inputType = _state5.inputType,
            visible = _state5.visible;

        if (idx !== inputType) {
            _this4.setState({
                inputType: idx,
                justBeginInput: !(idx !== null && visible)
            });
        }
    };

    this.onClick = function () {
        var _state6 = _this4.state,
            visible = _state6.visible,
            inputType = _state6.inputType;

        if (!visible) {
            _this4.handleInputFocus(inputType);
        }
    };

    this.getOutputArgs = function (value) {
        var _props4 = _this4.props,
            outputFormat = _props4.outputFormat,
            format = _props4.format;

        if (outputFormat) {
            return [(0, _util2.fmtValue)(value, outputFormat)];
        }
        return [value, (0, _util2.fmtValue)(value, format)];
    };

    this.getCurrentAlign = function (_ref) {
        var align = _ref.align;

        _this4.setState({
            align: align
        });
    };

    this.getRangeInputOffsetLeft = function () {
        var left = _this4.dateInput && _this4.dateInput.input && _this4.dateInput.input[_this4.state.inputType] && _this4.dateInput.input[_this4.state.inputType].getInputNode().offsetLeft;

        return left;
    };

    this.getPopupOffsetLeft = function () {
        var inputOffsetLeft = _this4.getRangeInputOffsetLeft();
        var popupElement = _this4.popupRef.current;
        var popupElementWidth = popupElement ? popupElement.offsetWidth : 0;

        // 弹层宽度大于输入元素长度，只偏移 arrow
        if (popupElementWidth > 1.2 * inputOffsetLeft) {
            return {
                arrowLeft: inputOffsetLeft,
                panelLeft: 0
            };
        } else {
            // 否则 panel 整体偏移，arrow 随 panel 整体偏移
            return {
                arrowLeft: 0,
                panelLeft: inputOffsetLeft
            };
        }
    };

    this.renderArrow = function (left) {
        return _react2.default.createElement('div', { key: 'arrow', className: _this4.props.prefix + 'range-picker2-arrow', style: { left: left } });
    };
}, _temp);
Picker.displayName = 'Picker';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Picker);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _constant = __webpack_require__(43);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(42);

var _input = __webpack_require__(19);

var _input2 = _interopRequireDefault(_input);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DATE = _constant.DATE_PICKER_MODE.DATE,
    WEEK = _constant.DATE_PICKER_MODE.WEEK,
    MONTH = _constant.DATE_PICKER_MODE.MONTH,
    QUARTER = _constant.DATE_PICKER_MODE.QUARTER,
    YEAR = _constant.DATE_PICKER_MODE.YEAR;
var DateInput = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(DateInput, _React$Component);

    function DateInput(props) {
        (0, _classCallCheck3.default)(this, DateInput);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.setInputRef = function (el, index) {
            if (_this.props.isRange) {
                if (!_this.input) {
                    _this.input = [];
                }
                _this.input[index] = el;
            } else {
                _this.input = el;
            }
        };

        _this.setValue = function (v) {
            var _this$props = _this.props,
                isRange = _this$props.isRange,
                inputType = _this$props.inputType,
                value = _this$props.value;

            var newVal = v;

            if (isRange) {
                newVal = [].concat(value);
                newVal[inputType] = v;
            }

            return newVal;
        };

        _this.formatter = function (v) {
            var format = _this.props.format;

            return typeof format === 'function' ? format(v) : v.format(format);
        };

        _this.onInput = function (v, e, eventType) {
            v = _this.setValue(v);

            if (eventType === 'clear') {
                v = null;
                e.stopPropagation();
            }

            _util.func.invoke(_this.props, 'onInput', [v, eventType]);
        };

        _this.handleTypeChange = function (inputType) {
            if (inputType !== _this.props.inputType) {
                _util.func.invoke(_this.props, 'onInputTypeChange', [inputType]);
            }
        };

        _this.getPlaceholder = function () {
            var _mode2placeholder;

            var _this$props2 = _this.props,
                locale = _this$props2.locale,
                isRange = _this$props2.isRange,
                mode = _this$props2.mode;
            var placeholder = locale.placeholder,
                selectDate = locale.selectDate,
                monthPlaceholder = locale.monthPlaceholder,
                weekPlaceholder = locale.weekPlaceholder,
                yearPlaceholder = locale.yearPlaceholder,
                startPlaceholder = locale.startPlaceholder,
                quarterPlaceholder = locale.quarterPlaceholder,
                endPlaceholder = locale.endPlaceholder;

            var mode2placeholder = (_mode2placeholder = {}, _mode2placeholder[DATE] = selectDate, _mode2placeholder[WEEK] = weekPlaceholder, _mode2placeholder[MONTH] = monthPlaceholder, _mode2placeholder[QUARTER] = quarterPlaceholder, _mode2placeholder[YEAR] = yearPlaceholder, _mode2placeholder);

            var holder = _this.props.placeholder;

            holder = holder || (isRange ? [startPlaceholder, endPlaceholder] : mode2placeholder[mode] || placeholder);

            if (isRange && !Array.isArray(holder)) {
                holder = Array(2).fill(holder);
            }

            return holder;
        };

        _this.getHtmlSize = function () {
            var _this$props3 = _this.props,
                isRange = _this$props3.isRange,
                format = _this$props3.format,
                hasBorder = _this$props3.hasBorder;

            var value = '2020-12-12 12:12:12';
            var size = 0;

            if (isRange) {
                var fmtStr = (0, _util2.fmtValue)([value, value].map(_util.datejs), format);
                size = Math.max.apply(Math, fmtStr.map(function (s) {
                    return s && s.length || 0;
                }));
            } else {
                var _fmtStr = (0, _util2.fmtValue)((0, _util.datejs)(value), format);
                (0, _util2.fmtValue)((0, _util.datejs)(value), format);
                size = _fmtStr && _fmtStr.length || 0;
            }

            return String(Math.max(size, hasBorder ? 12 : 8));
        };

        _this.prefixCls = props.prefix + 'date-picker2-input';
        return _this;
    }

    /**
     * 根据 format 计算输入框 htmlSize
     */

    DateInput.prototype.render = function render() {
        var _classnames2;

        var onInput = this.onInput,
            setInputRef = this.setInputRef,
            handleTypeChange = this.handleTypeChange,
            prefixCls = this.prefixCls;
        var _props = this.props,
            autoFocus = _props.autoFocus,
            readOnly = _props.readOnly,
            isRange = _props.isRange,
            value = _props.value,
            prefix = _props.prefix,
            hasClear = _props.hasClear,
            inputType = _props.inputType,
            size = _props.size,
            focus = _props.focus,
            hasBorder = _props.hasBorder,
            separator = _props.separator,
            disabled = _props.disabled,
            inputProps = _props.inputProps,
            dateInputAriaLabel = _props.dateInputAriaLabel,
            state = _props.state,
            label = _props.label,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['autoFocus', 'readOnly', 'isRange', 'value', 'prefix', 'hasClear', 'inputType', 'size', 'focus', 'hasBorder', 'separator', 'disabled', 'inputProps', 'dateInputAriaLabel', 'state', 'label']);

        var placeholder = this.getPlaceholder();
        var htmlSize = this.getHtmlSize();

        var sharedProps = (0, _extends3.default)({}, _util.obj.pickProps(restProps, _input2.default), inputProps, {
            size: size,
            htmlSize: htmlSize,
            readOnly: readOnly,
            hasBorder: false,
            onChange: onInput
        });

        var rangeProps = void 0;
        if (isRange) {
            rangeProps = [_constant.DATE_INPUT_TYPE.BEGIN, _constant.DATE_INPUT_TYPE.END].map(function (idx) {
                var _classnames;

                var _disabled = Array.isArray(disabled) ? disabled[idx] : disabled;

                return (0, _extends3.default)({}, sharedProps, {
                    autoFocus: autoFocus,
                    placeholder: placeholder[idx],
                    value: value[idx] || '',
                    'aria-label': Array.isArray(dateInputAriaLabel) ? dateInputAriaLabel[idx] : dateInputAriaLabel,
                    disabled: _disabled,
                    ref: function ref(_ref) {
                        return setInputRef(_ref, idx);
                    },
                    onFocus: _disabled ? undefined : function () {
                        return handleTypeChange(idx);
                    },
                    className: (0, _classnames4.default)((_classnames = {}, _classnames[prefixCls + '-active'] = inputType === idx, _classnames))
                });
            });
        }

        var className = (0, _classnames4.default)([prefixCls, prefixCls + '-' + size, prefixCls + '-' + (isRange ? 'range' : 'date')], (_classnames2 = {}, _classnames2[prefixCls + '-focus'] = focus, _classnames2[prefixCls + '-noborder'] = !hasBorder, _classnames2[prefixCls + '-disabled'] = isRange && Array.isArray(disabled) ? disabled.every(function (v) {
            return v;
        }) : disabled, _classnames2[prefixCls + '-error'] = state === 'error', _classnames2));

        var calendarIcon = _react2.default.createElement(_icon2.default, { type: 'calendar', className: prefix + 'date-picker2-symbol-calendar-icon' });

        return _react2.default.createElement('div', { className: className }, isRange ? _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement(_input2.default, (0, _extends3.default)({}, rangeProps[0], {
            label: label,
            autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
        })), _react2.default.createElement('div', { className: prefixCls + '-separator' }, separator), _react2.default.createElement(_input2.default, (0, _extends3.default)({}, rangeProps[1], {
            state: state,
            hasClear: !state && hasClear,
            hint: state ? null : calendarIcon
        }))) : _react2.default.createElement(_input2.default, (0, _extends3.default)({}, sharedProps, {
            label: label,
            state: state,
            disabled: disabled,
            hasClear: !state && hasClear,
            placeholder: placeholder,
            autoFocus: autoFocus // eslint-disable-line jsx-a11y/no-autofocus
            , ref: setInputRef,
            'aria-label': dateInputAriaLabel,
            value: value || '',
            hint: state ? null : calendarIcon
        })));
    };

    return DateInput;
}(_react2.default.Component), _class.propTypes = {
    prefix: _propTypes2.default.string,
    rtl: _propTypes2.default.bool,
    locale: _propTypes2.default.object,
    value: _propTypes4.default.inputValue,
    inputType: _propTypes4.default.inputType,
    format: _propTypes4.default.format,
    isRange: _propTypes2.default.bool,
    hasClear: _propTypes2.default.bool,
    onInputTypeChange: _propTypes2.default.func,
    autoFocus: _propTypes2.default.bool,
    readOnly: _propTypes4.default.readOnly,
    placeholder: _propTypes4.default.placeholder,
    size: _propTypes4.default.size,
    focus: _propTypes2.default.bool,
    hasBorder: _propTypes2.default.bool,
    separator: _propTypes2.default.node,
    disabled: _propTypes4.default.disabled,
    inputProps: _propTypes2.default.object,
    dateInputAriaLabel: _propTypes4.default.ariaLabel,
    label: _propTypes2.default.node,
    state: _propTypes2.default.string
}, _class.defaultProps = {
    autoFocus: false,
    readOnly: false,
    hasClear: true,
    separator: '-',
    hasBorder: true,
    size: 'medium'
}, _temp);
DateInput.displayName = 'DateInput';
exports.default = (0, _reactLifecyclesCompat.polyfill)(DateInput);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__(15);

var _typeof3 = _interopRequireDefault(_typeof2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(42);

var _calendar = __webpack_require__(109);

var _calendar2 = _interopRequireDefault(_calendar);

var _timePanel = __webpack_require__(199);

var _timePanel2 = _interopRequireDefault(_timePanel);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DatePanel = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(DatePanel, _React$Component);

    function DatePanel(props) {
        (0, _classCallCheck3.default)(this, DatePanel);

        // 默认时间
        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        var _props$timePanelProps = props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps;

        var defaultTime = timePanelProps.defaultValue;

        if (defaultTime) {
            // fix: https://github.com/alibaba-fusion/next/issues/3203
            defaultTime = (0, _util.datejs)(defaultTime, typeof defaultTime === 'string' ? timePanelProps.format || 'HH:mm:ss' : undefined);
        }

        _this.state = {
            defaultTime: defaultTime
        };
        return _this;
    }

    DatePanel.prototype.render = function render() {
        var _classnames;

        var _props = this.props,
            mode = _props.mode,
            panelMode = _props.panelMode,
            prefix = _props.prefix,
            showTime = _props.showTime,
            value = _props.value,
            disabledDate = _props.disabledDate,
            disabledTime = _props.disabledTime,
            timePanelProps = _props.timePanelProps,
            dateCellRender = _props.dateCellRender,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['mode', 'panelMode', 'prefix', 'showTime', 'value', 'disabledDate', 'disabledTime', 'timePanelProps', 'dateCellRender']);

        var className = (0, _classnames3.default)(prefix + 'date-picker2-panel', (_classnames = {}, _classnames[prefix + 'date-time-picker2-panel'] = showTime, _classnames));

        // 禁用时间
        var _disabledTime = void 0;
        if (showTime && mode === panelMode && disabledTime) {
            _disabledTime = typeof disabledTime === 'function' ? disabledTime(value) : disabledTime;
            if ((typeof _disabledTime === 'undefined' ? 'undefined' : (0, _typeof3.default)(_disabledTime)) !== 'object') {
                _disabledTime = null;
            }
        }

        return _react2.default.createElement('div', { className: className }, _react2.default.createElement(_calendar2.default, (0, _extends3.default)({}, _util.obj.pickProps(_calendar2.default.propTypes, restProps), {
            shape: 'panel',
            value: value,
            panelMode: mode,
            colNum: showTime ? 6 : undefined,
            onSelect: this.handleSelect,
            onPanelChange: this.handlePanelChange,
            disabledDate: disabledDate,
            dateCellRender: dateCellRender
        })), showTime && mode === panelMode ? _react2.default.createElement(_timePanel2.default, (0, _extends3.default)({}, _util.obj.pickProps(_timePanel2.default.propTypes, restProps), {
            prefix: prefix,
            value: value || this.state.defaultTime,
            onSelect: this.onTimeSelect,
            disabledTime: disabledTime,
            timePanelProps: (0, _extends3.default)({}, _disabledTime, timePanelProps)
        })) : null);
    };

    return DatePanel;
}(_react2.default.Component), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    mode: _propTypes4.default.mode,
    panelMode: _propTypes2.default.any,
    value: _propTypes4.default.date,
    disabledDate: _propTypes2.default.func,
    showTime: _propTypes2.default.bool,
    resetTime: _propTypes2.default.bool,
    timePanelProps: _propTypes2.default.object,
    disabledTime: _propTypes4.default.disabledTime,
    dateCellRender: _propTypes2.default.func
}, _class.defaultProps = {
    showTime: false,
    resetTime: false
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.onTimeSelect = function (v) {
        _this2.handleSelect(v, true);
    };

    this.handleSelect = function (v, fromTimeChange) {
        var defaultTime = _this2.state.defaultTime;

        var timeVal = null;

        if (!_this2.props.resetTime && !fromTimeChange) {
            timeVal = _this2.props.value || defaultTime || (0, _util.datejs)();
        }

        v = (0, _util2.setTime)(v, timeVal);

        _util.func.invoke(_this2.props, 'onSelect', [v]);
    };

    this.handlePanelChange = function (v, mode) {
        _util.func.invoke(_this2.props, 'onPanelChange', [v, mode]);
    };
}, _temp);
DatePanel.displayName = 'DatePanel';
exports.default = (0, _reactLifecyclesCompat.polyfill)(DatePanel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__(7);

var _classnames2 = _interopRequireDefault(_classnames);

var _zhCn = __webpack_require__(14);

var _zhCn2 = _interopRequireDefault(_zhCn);

var _util = __webpack_require__(4);

var _propTypes3 = __webpack_require__(198);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _constant = __webpack_require__(51);

var _headerPanel = __webpack_require__(472);

var _headerPanel2 = _interopRequireDefault(_headerPanel);

var _dateTable = __webpack_require__(473);

var _dateTable2 = _interopRequireDefault(_dateTable);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var pickProps = _util.obj.pickProps,
    pickOthers = _util.obj.pickOthers;

// CALENDAR_MODE => DATE_PANEL_MODE

function getPanelMode(mode) {
    return mode && (mode === _constant.CALENDAR_MODE.YEAR ? _constant.DATE_PANEL_MODE.MONTH : _constant.DATE_PANEL_MODE.DATE);
}

function isValueChanged(newVal, oldVal) {
    return newVal !== oldVal && !(0, _util.datejs)(newVal).isSame((0, _util.datejs)(oldVal));
}

var Calendar = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(Calendar, _React$Component);

    function Calendar(props) {
        (0, _classCallCheck3.default)(this, Calendar);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        var defaultValue = props.defaultValue,
            mode = props.mode,
            _props$defaultPanelVa = props.defaultPanelValue,
            defaultPanelValue = _props$defaultPanelVa === undefined ? (0, _util.datejs)() : _props$defaultPanelVa;

        var value = 'value' in props ? props.value : defaultValue;
        var panelValue = (0, _util.datejs)('panelValue' in props ? props.panelValue : value || defaultPanelValue);
        var panelMode = props.panelMode || getPanelMode(mode) || _constant.DATE_PANEL_MODE.DATE;

        _this.state = {
            mode: mode,
            value: value,
            panelMode: panelMode,
            panelValue: panelValue.isValid() ? panelValue : (0, _util.datejs)()
        };
        return _this;
    }

    Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        var newState = null;
        var value = void 0;
        var panelValue = void 0;

        if ('value' in props && isValueChanged(props.value, state.value)) {
            value = props.value;
            panelValue = (0, _util.datejs)(value);
        }

        if ('panelValue' in props) {
            panelValue = (0, _util.datejs)(props.panelValue);
        }

        // panelValue不能是无效值
        if (panelValue) {
            panelValue = panelValue.isValid() ? panelValue : (0, _util.datejs)();
            newState = {
                panelValue: panelValue
            };
        }
        if (value) {
            newState.value = value;
        }

        return newState;
    };

    Calendar.prototype.render = function render() {
        var value = 'value' in this.props ? (0, _util.datejs)(this.props.value) : this.state.value;
        var _state = this.state,
            panelMode = _state.panelMode,
            mode = _state.mode,
            panelValue = _state.panelValue;
        var _props = this.props,
            prefix = _props.prefix,
            shape = _props.shape,
            rtl = _props.rtl,
            className = _props.className,
            restProps = (0, _objectWithoutProperties3.default)(_props, ['prefix', 'shape', 'rtl', 'className']);

        var sharedProps = {
            rtl: rtl,
            prefix: prefix,
            shape: shape,
            value: value,
            panelValue: panelValue
        };

        var headerPanelProps = (0, _extends3.default)({}, pickProps(_headerPanel2.default.propTypes, restProps), sharedProps, {
            mode: mode,
            panelMode: panelMode,
            onPanelValueChange: this.onPanelValueChange,
            onModeChange: this.onModeChange,
            onPanelModeChange: this.onPanelModeChange,
            showModeSwitch: this.props.mode !== _constant.CALENDAR_MODE.YEAR
        });

        var dateTableProps = (0, _extends3.default)({}, pickProps(_dateTable2.default.propTypes, restProps), sharedProps, {
            mode: panelMode,
            onSelect: this.onDateSelect
        });

        var classNames = (0, _classnames2.default)([prefix + 'calendar2', prefix + 'calendar2-' + shape, className]);

        return _react2.default.createElement('div', (0, _extends3.default)({}, pickOthers(Calendar.propTypes, restProps), { dir: rtl ? 'rtl' : undefined, className: classNames }), _react2.default.createElement(_headerPanel2.default, headerPanelProps), _react2.default.createElement('div', { className: prefix + 'calendar2-body' }, _react2.default.createElement(_dateTable2.default, dateTableProps)));
    };

    return Calendar;
}(_react2.default.Component), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    name: _propTypes2.default.string,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    /**
     * 展现形态
     */
    shape: _propTypes4.default.shape,
    /*
     * 日期模式: month | year
     */
    mode: _propTypes4.default.mode,
    /**
     * 默认选中的日期（受控）
     */
    value: _propTypes4.default.date,
    /**
     * 默认选中的日期
     */
    defaultValue: _propTypes4.default.date,
    /**
     * 面板显示的日期（受控）
     */
    panelValue: _propTypes4.default.date,
    /**
     * 面板默认显示的日期
     */
    defaultPanelValue: _propTypes4.default.date,
    /**
     * 不可选择的日期
     */
    disabledDate: _propTypes2.default.func,
    /**
     * 可显示的日期范围
     */
    validRange: _propTypes2.default.arrayOf(_propTypes4.default.date),
    /**
     * 自定义日期渲染
     */
    dateCellRender: _propTypes2.default.func,
    quarterCellRender: _propTypes2.default.func,
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func,
    /**
     * 自定义头部渲染
     */
    headerRender: _propTypes2.default.func,
    /**
     * 日期变化回调
     */
    onChange: _propTypes2.default.func,
    /**
     * 点击选择日期回调
     */
    onSelect: _propTypes2.default.func,
    /**
     * 日期面板变化回调
     */
    onPanelChange: _propTypes2.default.func,
    cellProps: _propTypes2.default.object,
    cellClassName: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
    panelMode: _propTypes2.default.any,
    onPrev: _propTypes2.default.func,
    onNext: _propTypes2.default.func,
    onSuperPrev: _propTypes2.default.func,
    onSuperNext: _propTypes2.default.func,
    colNum: _propTypes2.default.number
}, _class.defaultProps = {
    rtl: false,
    prefix: 'next-',
    locale: _zhCn2.default.Calendar,
    shape: _constant.CALENDAR_SHAPE.FULLSCREEN,
    mode: _constant.CALENDAR_MODE.MONTH
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.switchPanelMode = function (mode) {
        var MONTH = _constant.DATE_PANEL_MODE.MONTH,
            YEAR = _constant.DATE_PANEL_MODE.YEAR,
            DECADE = _constant.DATE_PANEL_MODE.DECADE;

        var originalPanelMode = _this2.props.panelMode || getPanelMode(mode);

        switch (mode) {
            case YEAR:
                return MONTH;
            case DECADE:
                return YEAR;
            default:
                return originalPanelMode;
        }
    };

    this.shouldSwitchPanelMode = function () {
        var _props2 = _this2.props,
            mode = _props2.mode,
            shape = _props2.shape;
        var panelMode = _this2.state.panelMode;

        var originalPanelMode = _this2.props.panelMode || getPanelMode(mode);
        return shape === _constant.CALENDAR_SHAPE.PANEL && panelMode !== originalPanelMode;
    };

    this.onDateSelect = function (value, _, _ref) {
        var isCurrent = _ref.isCurrent;
        var panelMode = _this2.state.panelMode;

        var unit = panelMode === 'date' ? 'day' : panelMode;

        if (_this2.shouldSwitchPanelMode()) {
            _this2.onPanelChange(value, _this2.switchPanelMode(panelMode), 'DATESELECT_VALUE_SWITCH_MODE');
        } else {
            isCurrent || _this2.onPanelValueChange(value, 'DATESELECT');
            value.isSame(_this2.state.value, unit) || _this2.onChange(value);

            _util.func.invoke(_this2.props, 'onSelect', [value]);
        }
    };

    this.onModeChange = function (mode, reason) {
        _this2.setState({
            mode: mode
        });
        var panelMode = getPanelMode(mode);

        if (_this2.state.panelMode !== panelMode) {
            _this2.onPanelModeChange(panelMode, reason);
        }
    };

    this.onPanelValueChange = function (panelValue, reason) {
        _this2.onPanelChange(panelValue, _this2.state.panelMode, reason);
    };

    this.onPanelModeChange = function (panelMode, reason) {
        _this2.onPanelChange(_this2.state.panelValue, panelMode, reason);
    };

    this.onPanelChange = function (value, mode, reason) {
        _this2.setState({
            panelMode: mode,
            panelValue: value
        });

        _util.func.invoke(_this2.props, 'onPanelChange', [value, mode, reason]);
    };

    this.onChange = function (value) {
        _this2.setState({
            value: value,
            panelValue: value
        });
        _util.func.invoke(_this2.props, 'onChange', [value]);
    };
}, _temp);
Calendar.displayName = 'Calendar';
exports.default = (0, _reactLifecyclesCompat.polyfill)(Calendar);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends2 = __webpack_require__(2);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _util = __webpack_require__(4);

var _constant = __webpack_require__(51);

var _radio = __webpack_require__(49);

var _radio2 = _interopRequireDefault(_radio);

var _select = __webpack_require__(30);

var _select2 = _interopRequireDefault(_select);

var _button = __webpack_require__(18);

var _button2 = _interopRequireDefault(_button);

var _icon = __webpack_require__(12);

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var renderNode = _util.func.renderNode;
var DATE = _constant.DATE_PANEL_MODE.DATE,
    WEEK = _constant.DATE_PANEL_MODE.WEEK,
    QUARTER = _constant.DATE_PANEL_MODE.QUARTER,
    MONTH = _constant.DATE_PANEL_MODE.MONTH,
    YEAR = _constant.DATE_PANEL_MODE.YEAR,
    DECADE = _constant.DATE_PANEL_MODE.DECADE;
var HeaderPanel = (_temp = _class = function (_React$PureComponent) {
    (0, _inherits3.default)(HeaderPanel, _React$PureComponent);

    function HeaderPanel(props) {
        (0, _classCallCheck3.default)(this, HeaderPanel);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.call(this, props));

        _this.createPanelBtns = function (_ref) {
            var unit = _ref.unit,
                _ref$num = _ref.num,
                num = _ref$num === undefined ? 1 : _ref$num,
                _ref$isSuper = _ref.isSuper,
                isSuper = _ref$isSuper === undefined ? true : _ref$isSuper;

            var value = _this.props.panelValue.clone();
            var prefixCls = _this.prefixCls;

            var iconTypes = isSuper ? ['arrow-double-left', 'arrow-double-right'] : ['arrow-left', 'arrow-right'];

            return [_react2.default.createElement(_button2.default, {
                text: true,
                className: prefixCls + '-btn  ' + prefixCls + '-left-btn',
                onClick: function onClick() {
                    return _this.handleClick(value, { num: num, unit: unit, isSuper: isSuper, isNext: false });
                },
                key: 'prev-btn-' + unit
            }, _react2.default.createElement(_icon2.default, { type: iconTypes[0] })), _react2.default.createElement(_button2.default, {
                text: true,
                className: prefixCls + '-btn ' + prefixCls + '-right-btn',
                onClick: function onClick() {
                    return _this.handleClick(value, { num: num, unit: unit, isSuper: isSuper, isNext: true });
                },
                key: 'next-btn-' + unit
            }, _react2.default.createElement(_icon2.default, { type: iconTypes[1] }))];
        };

        _this.renderModeSwitch = function () {
            var _this$props = _this.props,
                mode = _this$props.mode,
                locale = _this$props.locale,
                onModeChange = _this$props.onModeChange;

            return _react2.default.createElement(_radio2.default.Group, { key: 'mode-switch', shape: 'button', value: mode, onChange: onModeChange }, _react2.default.createElement(_radio2.default, { value: _constant.CALENDAR_MODE.MONTH }, locale.month), _react2.default.createElement(_radio2.default, { value: _constant.CALENDAR_MODE.YEAR }, locale.year));
        };

        _this.renderMonthSelect = function () {
            var prefixCls = _this.prefixCls;
            var _this$props2 = _this.props,
                panelValue = _this$props2.panelValue,
                onPanelValueChange = _this$props2.onPanelValueChange;

            var curMonth = panelValue.month();
            var dataSource = _util.datejs.monthsShort().map(function (label, value) {
                return {
                    label: label,
                    value: value
                };
            });

            return _react2.default.createElement(_select2.default, {
                className: prefixCls + '-select-month',
                popupClassName: prefixCls + '-select-month-popup',
                value: curMonth,
                dataSource: dataSource,
                onChange: function onChange(v) {
                    return onPanelValueChange(panelValue.month(v));
                }
            });
        };

        _this.prefixCls = props.prefix + 'calendar2-header';
        return _this;
    }

    HeaderPanel.prototype.handleClick = function handleClick(value, _ref2) {
        var unit = _ref2.unit,
            num = _ref2.num,
            isSuper = _ref2.isSuper,
            isNext = _ref2.isNext;
        var _props = this.props,
            onPanelValueChange = _props.onPanelValueChange,
            onPrev = _props.onPrev,
            onSuperPrev = _props.onSuperPrev,
            onNext = _props.onNext,
            onSuperNext = _props.onSuperNext;

        var handler = void 0;

        if (isSuper) {
            handler = isNext ? onSuperNext : onSuperPrev;
        } else {
            handler = isNext ? onNext : onPrev;
        }

        if (handler) {
            handler(value, { unit: unit, num: num });
        } else {
            var m = isNext ? 'add' : 'subtract';
            onPanelValueChange(value[m](num, unit), 'PANEL');
        }
    };

    HeaderPanel.prototype.renderYearSelect = function renderYearSelect() {
        var prefixCls = this.prefixCls;
        var _props2 = this.props,
            validValue = _props2.validValue,
            panelValue = _props2.panelValue,
            onPanelValueChange = _props2.onPanelValueChange;

        var curYear = panelValue.year();

        var beginYear = void 0;
        var endYear = void 0;

        // TODO 有效区间
        if (validValue) {
            var begin = validValue[0],
                end = validValue[1];

            beginYear = begin.year();
            endYear = end.year();
        } else {
            for (var i = 0; i < 20; i++) {
                beginYear = curYear - 10;
                endYear = curYear + 10;
            }
        }
        var dataSource = [];
        for (var _i = beginYear; _i < endYear; _i++) {
            dataSource.push({ label: _i, value: _i });
        }

        return _react2.default.createElement(_select2.default, {
            key: 'year-select',
            className: prefixCls + '-select-year',
            popupClassName: prefixCls + '-select-year-popup',
            value: curYear,
            dataSource: dataSource,
            onChange: function onChange(v) {
                return onPanelValueChange(panelValue.year(v));
            }
        });
    };

    HeaderPanel.prototype.renderTextField = function renderTextField() {
        var prefixCls = this.prefixCls;
        var _props3 = this.props,
            panelValue = _props3.panelValue,
            locale = _props3.locale,
            panelMode = _props3.panelMode,
            onPanelModeChange = _props3.onPanelModeChange;

        var monthBeforeYear = locale.monthBeforeYear || false;
        var localeData = _util.datejs.localeData();

        var year = panelValue.year() + (locale && locale.year === '年' ? '年' : '');
        var month = localeData.monthsShort()[panelValue.month()];
        var DATE = _constant.DATE_PANEL_MODE.DATE,
            WEEK = _constant.DATE_PANEL_MODE.WEEK,
            QUARTER = _constant.DATE_PANEL_MODE.QUARTER,
            MONTH = _constant.DATE_PANEL_MODE.MONTH,
            YEAR = _constant.DATE_PANEL_MODE.YEAR,
            DECADE = _constant.DATE_PANEL_MODE.DECADE;

        var nodes = void 0;
        var yearNode = _react2.default.createElement(_button2.default, {
            text: true,
            key: 'year-btn',
            tabIndex: -1,
            className: prefixCls + '-btn',
            onClick: function onClick() {
                return onPanelModeChange(YEAR);
            }
        }, year);

        switch (panelMode) {
            case DATE:
            case WEEK:
                {
                    var monthNode = _react2.default.createElement(_button2.default, {
                        text: true,
                        key: 'month-btn',
                        tabIndex: -1,
                        className: prefixCls + '-btn',
                        onClick: function onClick() {
                            return onPanelModeChange(MONTH);
                        }
                    }, month);
                    nodes = monthBeforeYear ? [monthNode, yearNode] : [yearNode, monthNode];
                    break;
                }

            case MONTH:
            case QUARTER:
                {
                    nodes = yearNode;
                    break;
                }

            case YEAR:
                {
                    var curYear = panelValue.year();
                    var start = curYear - curYear % 10;
                    var end = start + 9;
                    nodes = _react2.default.createElement(_button2.default, {
                        text: true,
                        key: 'decade-btn',
                        tabIndex: -1,
                        className: prefixCls + '-btn',
                        onClick: function onClick() {
                            return onPanelModeChange(DECADE);
                        }
                    }, this.props.rtl ? end + '-' + start : start + '-' + end);
                    break;
                }
            case DECADE:
                {
                    var _curYear = panelValue.year();
                    var _start = _curYear - _curYear % 100;
                    var _end = _start + 99;

                    nodes = this.props.rtl ? _end + '-' + _start : _start + '-' + _end;
                    break;
                }
        }

        return _react2.default.createElement('div', { key: 'header-text-field', className: prefixCls + '-text-field' }, nodes);
    };

    HeaderPanel.prototype.renderPanelHeader = function renderPanelHeader() {
        var createPanelBtns = this.createPanelBtns;
        var panelMode = this.props.panelMode;

        var nodes = [];

        var textFieldNode = this.renderTextField();

        switch (panelMode) {
            case DATE:
            case WEEK:
                {
                    var _createPanelBtns = createPanelBtns({
                        unit: 'month',
                        isSuper: false
                    }),
                        preMonthBtn = _createPanelBtns[0],
                        nextMonthBtn = _createPanelBtns[1];

                    var _createPanelBtns2 = createPanelBtns({
                        unit: 'year'
                    }),
                        preYearBtn = _createPanelBtns2[0],
                        nextYearBtn = _createPanelBtns2[1];

                    nodes = [preYearBtn, preMonthBtn, textFieldNode, nextMonthBtn, nextYearBtn];
                    break;
                }
            case QUARTER:
            case MONTH:
                {
                    var _createPanelBtns3 = createPanelBtns({
                        unit: 'year'
                    }),
                        _preYearBtn = _createPanelBtns3[0],
                        _nextYearBtn = _createPanelBtns3[1];

                    nodes = [_preYearBtn, textFieldNode, _nextYearBtn];
                    break;
                }
            case YEAR:
                {
                    var _createPanelBtns4 = createPanelBtns({
                        unit: 'year',
                        num: 10
                    }),
                        preDecadeBtn = _createPanelBtns4[0],
                        nextDecadeBtn = _createPanelBtns4[1];

                    nodes = [preDecadeBtn, textFieldNode, nextDecadeBtn];
                    break;
                }
            case DECADE:
                {
                    var _createPanelBtns5 = createPanelBtns({
                        unit: 'year',
                        num: 100
                    }),
                        preCenturyBtn = _createPanelBtns5[0],
                        nextCenturyBtn = _createPanelBtns5[1];

                    nodes = [preCenturyBtn, textFieldNode, nextCenturyBtn];
                    break;
                }
        }

        return nodes;
    };

    HeaderPanel.prototype.renderInner = function renderInner() {
        var prefixCls = this.prefixCls;
        var _props4 = this.props,
            shape = _props4.shape,
            showTitle = _props4.showTitle,
            value = _props4.value,
            mode = _props4.mode,
            showModeSwitch = _props4.showModeSwitch;

        var nodes = [];

        if (shape === _constant.CALENDAR_SHAPE.PANEL) {
            return this.renderPanelHeader();
        } else {
            if (showTitle) {
                nodes.push(_react2.default.createElement('div', { key: 'title', className: prefixCls + '-title' }, renderNode(this.props.titleRender, value.format(), [value])));
            }
            nodes.push(_react2.default.createElement('div', { key: 'actions', className: prefixCls + '-actions' }, this.renderYearSelect(), mode !== _constant.CALENDAR_MODE.YEAR ? this.renderMonthSelect() : null, showModeSwitch ? this.renderModeSwitch() : null, this.props.renderHeaderExtra && this.props.renderHeaderExtra((0, _extends3.default)({}, this.props))));
        }

        return nodes;
    };

    HeaderPanel.prototype.render = function render() {
        return _react2.default.createElement('div', { className: '' + this.prefixCls }, renderNode(this.props.headerRender, this.renderInner(), (0, _extends3.default)({}, this.props)));
    };

    return HeaderPanel;
}(_react2.default.PureComponent), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    mode: _propTypes2.default.any,
    shape: _propTypes2.default.string,
    value: _propTypes2.default.any,
    panelMode: _propTypes2.default.any,
    panelValue: _propTypes2.default.any,
    validValue: _propTypes2.default.any,
    showTitle: _propTypes2.default.bool,
    showModeSwitch: _propTypes2.default.bool,
    onModeChange: _propTypes2.default.func,
    onPanelValueChange: _propTypes2.default.func,
    onPanelModeChange: _propTypes2.default.func,
    onPrev: _propTypes2.default.func,
    onNext: _propTypes2.default.func,
    onSuperPrev: _propTypes2.default.func,
    onSuperNext: _propTypes2.default.func,
    titleRender: _propTypes2.default.func,
    /**
     * 扩展操作区域渲染
     */
    renderHeaderExtra: _propTypes2.default.func,
    /**
     * 自定义头部渲染
     */
    headerRender: _propTypes2.default.func
}, _class.defaultProps = {
    showTitle: false
}, _temp);
exports.default = (0, _reactLifecyclesCompat.polyfill)(HeaderPanel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _extends3 = __webpack_require__(2);

var _extends4 = _interopRequireDefault(_extends3);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _mode2Rows, _class, _temp;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames2 = __webpack_require__(7);

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _propTypes3 = __webpack_require__(198);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _constant = __webpack_require__(51);

var _util = __webpack_require__(4);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var bindCtx = _util.func.bindCtx,
    renderNode = _util.func.renderNode;
var DATE = _constant.DATE_PANEL_MODE.DATE,
    WEEK = _constant.DATE_PANEL_MODE.WEEK,
    MONTH = _constant.DATE_PANEL_MODE.MONTH,
    QUARTER = _constant.DATE_PANEL_MODE.QUARTER,
    YEAR = _constant.DATE_PANEL_MODE.YEAR,
    DECADE = _constant.DATE_PANEL_MODE.DECADE;

// 面板行数

var mode2Rows = (_mode2Rows = {}, _mode2Rows[DATE] = 7, _mode2Rows[WEEK] = 7, _mode2Rows[MONTH] = 4, _mode2Rows[QUARTER] = 4, _mode2Rows[YEAR] = 4, _mode2Rows[DECADE] = 3, _mode2Rows);

var DateTable = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(DateTable, _React$Component);

    function DateTable(props) {
        (0, _classCallCheck3.default)(this, DateTable);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _this.getCustomRender = function (mode) {
            var _mode2RenderName;

            var mode2RenderName = (_mode2RenderName = {}, _mode2RenderName[DATE] = 'dateCellRender', _mode2RenderName[QUARTER] = 'quarterCellRender', _mode2RenderName[MONTH] = 'monthCellRender', _mode2RenderName[YEAR] = 'yearCellRender', _mode2RenderName);

            return _this.props[mode2RenderName[mode]];
        };

        _this.prefixCls = props.prefix + 'calendar2';

        bindCtx(_this, ['getDateCellData', 'getMonthCellData', 'getQuarterCellData', 'getYearCellData', 'getDecadeData', 'handleKeyDown', 'handleSelect', 'handleMouseEnter', 'handleMouseLeave']);

        _this.state = {
            hoverValue: null
        };
        return _this;
    }

    DateTable.prototype.handleSelect = function handleSelect(v, e, args) {
        _util.func.invoke(this.props, 'onSelect', [v, e, args]);
    };

    DateTable.prototype.handleKeyDown = function handleKeyDown(v, e, args) {
        switch (e.keyCode) {
            case _util.KEYCODE.ENTER:
                this.handleSelect(v, e, args);
                break;
            case _util.KEYCODE.RIGHT:
                break;
        }
        // e.preventDefault();
    };

    DateTable.prototype.handleMouseEnter = function handleMouseEnter(v, e, args) {
        _util.func.invoke(this.props.cellProps, 'onMouseEnter', [v, e, args]);
    };

    DateTable.prototype.handleMouseLeave = function handleMouseLeave(v, e, args) {
        _util.func.invoke(this.props.cellProps, 'onMouseLeave', [v, e, args]);
    };

    DateTable.prototype.isSame = function isSame(curDate, date, mode) {
        switch (mode) {
            case DATE:
                return curDate.isSame(date, 'day');
            case WEEK:
                return curDate.isSame(date, 'week');
            case QUARTER:
                return curDate.isSame(date, 'quarter');
            case MONTH:
                return curDate.isSame(date, 'month');
            case YEAR:
                return curDate.isSame(date, 'year');
            case DECADE:
                {
                    var curYear = curDate.year();
                    var targetYear = date.year();
                    return curYear <= targetYear && targetYear < curYear + 10;
                }
        }
    };

    /**
     * 渲染日期面板
     * @param {Object[]} cellData - 单元格数据
     * @param {String}   cellData[].label - 单元格显示文本
     * @param {Object}   cellData[].value - 日期对象
     * @param {Boolean}  cellData[].isCurrent - 是否是当前面板时间范围内的值
     */
    DateTable.prototype.renderCellContent = function renderCellContent(cellData) {
        var _this2 = this;

        var props = this.props;
        var mode = props.mode,
            hoveredState = props.hoveredState,
            cellClassName = props.cellClassName;
        var hoverValue = this.state.hoverValue;

        var cellContent = [];
        var cellCls = this.prefixCls + '-cell';

        var now = (0, _util.datejs)();
        var rowLen = mode2Rows[mode];

        for (var i = 0; i < cellData.length;) {
            var children = [];

            var isCurrentWeek = void 0;

            var _loop = function _loop(j) {
                var _extends2;

                var _cellData = cellData[i++],
                    label = _cellData.label,
                    value = _cellData.value,
                    key = _cellData.key,
                    isCurrent = _cellData.isCurrent;

                var v = value.startOf(mode);

                var isDisabled = props.disabledDate && props.disabledDate(v, mode);
                var hoverState = hoverValue && hoveredState && hoveredState(hoverValue);
                var className = (0, _classnames3.default)(cellCls, (0, _extends4.default)((_extends2 = {}, _extends2[cellCls + '-current'] = isCurrent, _extends2[cellCls + '-today'] = mode === WEEK ? _this2.isSame(value, now, DATE) : _this2.isSame(v, now, mode), _extends2[cellCls + '-selected'] = _this2.isSame(v, props.value, mode), _extends2[cellCls + '-disabled'] = isDisabled, _extends2[cellCls + '-range-hover'] = hoverState, _extends2), cellClassName && cellClassName(v)));

                var onEvents = null;

                if (!isDisabled) {
                    onEvents = {
                        onClick: function onClick(e) {
                            return _this2.handleSelect(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onKeyDown: function onKeyDown(e) {
                            return _this2.handleKeyDown(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onMouseEnter: function onMouseEnter(e) {
                            return _this2.handleMouseEnter(v, e, { isCurrent: isCurrent, label: label });
                        },
                        onMouseLeave: function onMouseLeave(e) {
                            return _this2.handleMouseLeave(v, e, { isCurrent: isCurrent, label: label });
                        }
                    };
                }

                if (mode === WEEK && j === 0) {
                    var week = v.week();

                    children.push(_react2.default.createElement('td', { key: 'w-' + week, className: '' + cellCls }, _react2.default.createElement('div', { className: cellCls + '-inner' }, week)));
                    isCurrentWeek = isCurrent;
                }

                var customRender = _this2.getCustomRender(mode);

                children.push(_react2.default.createElement('td', (0, _extends4.default)({ key: key, title: key }, onEvents, { className: className }), _react2.default.createElement('div', { className: cellCls + '-inner' }, renderNode(customRender, _react2.default.createElement('div', { className: cellCls + '-value' }, label), [v]))));
            };

            for (var j = 0; j < rowLen; j++) {
                _loop(j);
            }

            var className = void 0;
            if (mode === WEEK) {
                var _classnames;

                className = (0, _classnames3.default)(this.prefixCls + '-week', (_classnames = {}, _classnames[this.prefixCls + '-week-current'] = isCurrentWeek, _classnames));
            }

            cellContent.push(_react2.default.createElement('tr', { key: i, className: className }, children));
        }

        return cellContent;
    };

    // 星期几


    DateTable.prototype.renderWeekdaysHead = function renderWeekdaysHead() {
        var weekdaysMin = _util.datejs.weekdaysMin();
        var firstDayOfWeek = _util.datejs.localeData().firstDayOfWeek();

        // 默认一周的第一天是周日，否则需要调整
        if (firstDayOfWeek !== 0) {
            weekdaysMin = weekdaysMin.slice(firstDayOfWeek).concat(weekdaysMin.slice(0, firstDayOfWeek));
        }

        return _react2.default.createElement('thead', null, _react2.default.createElement('tr', null, this.props.mode === WEEK ? _react2.default.createElement('th', { className: this.prefixCls + '-cell-week' }) : null, weekdaysMin.map(function (d) {
            return _react2.default.createElement('th', { key: d }, d);
        })));
    };

    DateTable.prototype.getDateCellData = function getDateCellData() {
        var _props = this.props,
            panelValue = _props.panelValue,
            colNum = _props.colNum;

        var firstDayOfMonth = panelValue.clone().startOf('month');
        var weekOfFirstDay = firstDayOfMonth.day(); // 当月第一天星期几
        var daysOfCurMonth = panelValue.endOf('month').date(); // 当月天数
        var firstDayOfWeek = _util.datejs.localeData().firstDayOfWeek(); // 一周的第一天是星期几

        var cellData = [];
        var preDays = (weekOfFirstDay - firstDayOfWeek + 7) % 7;
        var nextDays = colNum ? colNum * mode2Rows[DATE] - preDays - daysOfCurMonth : (7 - (preDays + daysOfCurMonth) % 7) % 7;

        // 上个月日期
        for (var i = preDays; i > 0; i--) {
            cellData.push(firstDayOfMonth.clone().subtract(i, 'day'));
        }

        // 本月日期
        for (var _i = 0; _i < daysOfCurMonth; _i++) {
            cellData.push(firstDayOfMonth.clone().add(_i, 'day'));
        }

        // 下个月日期
        for (var _i2 = 0; _i2 < nextDays; _i2++) {
            cellData.push(firstDayOfMonth.clone().add(daysOfCurMonth + _i2, 'day'));
        }

        return cellData.map(function (value) {
            return {
                value: value,
                label: value.date(),
                isCurrent: value.isSame(firstDayOfMonth, 'month'),
                key: value.format('YYYY-MM-DD')
            };
        });
    };

    DateTable.prototype.getMonthCellData = function getMonthCellData() {
        var panelValue = this.props.panelValue;

        return _util.datejs.monthsShort().map(function (label, index) {
            var value = panelValue.clone().month(index);

            return {
                label: label,
                value: value,
                isCurrent: true,
                key: value.format('YYYY-MM')
            };
        });
    };

    DateTable.prototype.getQuarterCellData = function getQuarterCellData() {
        var panelValue = this.props.panelValue;

        return [1, 2, 3, 4].map(function (i) {
            return {
                label: 'Q' + i,
                value: panelValue.clone().quarter(i),
                isCurrent: true,
                key: 'Q' + i
            };
        });
    };

    DateTable.prototype.getYearCellData = function getYearCellData() {
        var panelValue = this.props.panelValue;

        var curYear = panelValue.year();
        var startYear = curYear - curYear % 10 - 1;
        var cellData = [];

        for (var i = 0; i < 12; i++) {
            var y = startYear + i;

            cellData.push({
                value: panelValue.clone().year(y),
                label: y,
                isCurrent: i > 0 && i < 11,
                key: y
            });
        }

        return cellData;
    };

    DateTable.prototype.getDecadeData = function getDecadeData() {
        var panelValue = this.props.panelValue;

        var curYear = panelValue.year();
        var startYear = curYear - curYear % 100 - 10;
        var cellData = [];

        for (var i = 0; i < 12; i++) {
            var y = startYear + i * 10;

            cellData.push({
                value: panelValue.clone().year(y),
                label: y + '-' + (y + 9),
                isCurrent: i > 0 && i < 11,
                key: y + '-' + (y + 9)
            });
        }

        return cellData;
    };

    DateTable.prototype.render = function render() {
        var _mode2Data;

        var mode = this.props.mode;

        var mode2Data = (_mode2Data = {}, _mode2Data[DATE] = this.getDateCellData, _mode2Data[WEEK] = this.getDateCellData, _mode2Data[MONTH] = this.getMonthCellData, _mode2Data[QUARTER] = this.getQuarterCellData, _mode2Data[YEAR] = this.getYearCellData, _mode2Data[DECADE] = this.getDecadeData, _mode2Data);

        return _react2.default.createElement('table', { className: this.prefixCls + '-table ' + this.prefixCls + '-table-' + mode }, [DATE, WEEK].includes(mode) ? this.renderWeekdaysHead() : null, _react2.default.createElement('tbody', null, this.renderCellContent(mode2Data[mode]())));
    };

    return DateTable;
}(_react2.default.Component), _class.propTypes = {
    mode: _propTypes4.default.panelMode,
    value: _propTypes4.default.date,
    panelValue: _propTypes4.default.date,
    dateCellRender: _propTypes2.default.func,
    quarterCellRender: _propTypes2.default.func,
    monthCellRender: _propTypes2.default.func,
    yearCellRender: _propTypes2.default.func,
    disabledDate: _propTypes2.default.func,
    selectedState: _propTypes2.default.func,
    hoveredState: _propTypes2.default.func,
    onSelect: _propTypes2.default.func,
    onDateSelect: _propTypes2.default.func,
    startOnSunday: _propTypes2.default.bool,
    cellClassName: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
    colNum: _propTypes2.default.number,
    cellProps: _propTypes2.default.object
}, _temp);
DateTable.displayName = 'DateTable';
exports.default = (0, _reactLifecyclesCompat.polyfill)(DateTable);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _objectWithoutProperties2 = __webpack_require__(10);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends3 = __webpack_require__(2);

var _extends4 = _interopRequireDefault(_extends3);

var _classCallCheck2 = __webpack_require__(3);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(5);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(6);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp, _initialiseProps;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactLifecyclesCompat = __webpack_require__(11);

var _classnames3 = __webpack_require__(7);

var _classnames4 = _interopRequireDefault(_classnames3);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _propTypes3 = __webpack_require__(44);

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _util = __webpack_require__(4);

var _util2 = __webpack_require__(42);

var _constant = __webpack_require__(43);

var _constant2 = __webpack_require__(51);

var _calendar = __webpack_require__(109);

var _calendar2 = _interopRequireDefault(_calendar);

var _timePanel = __webpack_require__(199);

var _timePanel2 = _interopRequireDefault(_timePanel);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var DATE = _constant2.DATE_PANEL_MODE.DATE,
    WEEK = _constant2.DATE_PANEL_MODE.WEEK,
    MONTH = _constant2.DATE_PANEL_MODE.MONTH,
    QUARTER = _constant2.DATE_PANEL_MODE.QUARTER,
    YEAR = _constant2.DATE_PANEL_MODE.YEAR;
var UN_SELECTED = _constant2.CALENDAR_CELL_STATE.UN_SELECTED,
    SELECTED = _constant2.CALENDAR_CELL_STATE.SELECTED,
    SELECTED_BEGIN = _constant2.CALENDAR_CELL_STATE.SELECTED_BEGIN,
    SELECTED_END = _constant2.CALENDAR_CELL_STATE.SELECTED_END;
var BEGIN = _constant.DATE_INPUT_TYPE.BEGIN,
    END = _constant.DATE_INPUT_TYPE.END;

var operate = function operate(mode, value, operator) {
    var newVal = value.clone();

    switch (mode) {
        case DATE:
        case WEEK:
            return newVal[operator](1, 'month');
        case QUARTER:
        case MONTH:
            return newVal[operator](1, 'year');
        case YEAR:
            return newVal[operator](10, 'year');
    }
};

var isSamePanel = function isSamePanel(a, b, mode) {
    switch (mode) {
        case DATE:
        case WEEK:
            return a.isSame(b, 'month');
        case QUARTER:
        case MONTH:
            return a.isSame(b, 'year');
        case YEAR:
            {
                var begin = a.year() - a.year() % 20;
                var byear = b.year();

                return byear >= begin && byear < begin + 20;
            }
    }
};

// 计算 面板日期
var getPanelValue = function getPanelValue(_ref, defaultValue) {
    var mode = _ref.mode,
        value = _ref.value,
        inputType = _ref.inputType,
        showTime = _ref.showTime;
    var begin = value[0],
        end = value[1];

    var otherType = inputType === BEGIN ? END : BEGIN;
    var _inputType = inputType;

    if (!value[inputType] && value[otherType]) {
        _inputType = otherType;
    }

    var panelValue = value[_inputType] || (0, _util.datejs)(defaultValue);

    // https://github.com/alibaba-fusion/next/issues/3186
    if (!showTime && _inputType === END && end && (begin && !isSamePanel(begin, end, mode) || !begin)) {
        panelValue = operate(mode, panelValue, 'subtract');
    }

    return panelValue && panelValue.isValid() ? panelValue : (0, _util.datejs)();
};

var RangePanel = (_temp = _class = function (_React$Component) {
    (0, _inherits3.default)(RangePanel, _React$Component);

    function RangePanel(props) {
        (0, _classCallCheck3.default)(this, RangePanel);

        var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call(this, props));

        _initialiseProps.call(_this);

        var mode = props.mode,
            defaultPanelValue = props.defaultPanelValue,
            _props$timePanelProps = props.timePanelProps,
            timePanelProps = _props$timePanelProps === undefined ? {} : _props$timePanelProps;

        // 默认时间

        var defaultTime = timePanelProps.defaultValue || [];
        if (!Array.isArray(defaultTime)) {
            defaultTime = [defaultTime, defaultTime];
        }
        defaultTime = defaultTime.map(function (t) {
            return (0, _util.datejs)(t, timePanelProps.format || 'HH:mm:ss');
        });

        _this.state = {
            mode: mode,
            panelValue: getPanelValue(props, defaultPanelValue),
            inputType: props.inputType,
            curHoverValue: null,
            defaultTime: defaultTime
        };
        return _this;
    }

    RangePanel.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
        if (props.inputType !== state.inputType) {
            return {
                inputType: props.inputType,
                panelValue: getPanelValue(props, state.panelValue)
            };
        }
        return null;
    };

    RangePanel.prototype.componentWillUnmount = function componentWillUnmount() {
        this.currentRaf && window.cancelAnimationFrame(this.currentRaf);
    };

    // 日期面板显示的日期区间


    RangePanel.prototype.getRanges = function getRanges() {
        var mode = this.props.mode;
        var v = this.state.panelValue;

        var begin = v.clone();
        var end = operate(mode, v, 'add');

        return [begin, end];
    };

    // 日期cell状态
    RangePanel.prototype.handleCellState = function handleCellState(v, value) {
        var mode = this.props.mode;
        var begin = value[0],
            end = value[1];

        var unit = this.getUnitByMode(mode);

        return begin && begin.isSame(v, unit) ? SELECTED_BEGIN : end && end.isSame(v, unit) ? SELECTED_END : begin && end && v.isAfter(begin, unit) && v.isBefore(end, unit) ? SELECTED : UN_SELECTED;
    };

    RangePanel.prototype.getUnitByMode = function getUnitByMode(mode) {
        return mode === DATE ? 'day' : mode;
    };

    // 头部面板日期切换点击事件


    RangePanel.prototype.renderRange = function renderRange(sharedProps) {
        var _classnames;

        var handlePanelChange = this.handlePanelChange,
            handleCanlendarClick = this.handleCanlendarClick,
            hasModeChanged = this.hasModeChanged;
        var _props = this.props,
            value = _props.value,
            prefix = _props.prefix;

        var ranges = this.getRanges();

        var calendarProps = function calendarProps(idx) {
            return (0, _extends4.default)({}, sharedProps, {
                value: value[idx],
                panelValue: ranges[idx],
                onPanelChange: function onPanelChange(v, m) {
                    return handlePanelChange(v, m, idx);
                }
            });
        };

        var calendarNodes = [_react2.default.createElement(_calendar2.default, (0, _extends4.default)({}, calendarProps(0), { className: prefix + 'range-picker-left', key: 'range-panel-calendar-left' })), _react2.default.createElement(_calendar2.default, (0, _extends4.default)({}, calendarProps(1), {
            className: prefix + 'range-picker-right',
            key: 'range-panel-calendar-right',
            onNext: handleCanlendarClick,
            onSuperNext: handleCanlendarClick
        }))];

        var className = (0, _classnames4.default)(prefix + 'range-picker2-panel', (_classnames = {}, _classnames[prefix + 'range-picker2-panel-single'] = hasModeChanged, _classnames));

        return _react2.default.createElement('div', { key: 'range-panel', className: className }, !this.hasModeChanged ? calendarNodes : calendarNodes[this.state.calendarIdx]);
    };

    RangePanel.prototype.render = function render() {
        var handleSelect = this.handleSelect,
            getCellClassName = this.getCellClassName,
            handleMouseEnter = this.handleMouseEnter,
            handleMouseLeave = this.handleMouseLeave;
        var _props2 = this.props,
            mode = _props2.mode,
            justBeginInput = _props2.justBeginInput,
            dateCellRender = _props2.dateCellRender,
            restProps = (0, _objectWithoutProperties3.default)(_props2, ['mode', 'justBeginInput', 'dateCellRender']);

        // 切换面板mode

        this.hasModeChanged = this.state.mode !== this.props.mode;

        var sharedProps = (0, _extends4.default)({}, _util.obj.pickProps(_calendar2.default.propTypes, restProps), {
            shape: 'panel',
            panelMode: mode,
            dateCellRender: dateCellRender
        });

        sharedProps.disabledDate = justBeginInput ? this.props.disabledDate : this.disabledDate;

        // 日期面板固定列数 保证对齐
        if ([DATE, WEEK].includes(mode)) {
            sharedProps.colNum = 6;
        }

        if (!this.hasModeChanged) {
            sharedProps = (0, _extends4.default)({}, sharedProps, {
                onSelect: handleSelect,
                cellClassName: getCellClassName,
                cellProps: {
                    onMouseEnter: handleMouseEnter,
                    onMouseLeave: handleMouseLeave
                }
            });
        }

        return this.props.showTime ? this.renderRangeTime(sharedProps) : this.renderRange(sharedProps);
    };

    return RangePanel;
}(_react2.default.Component), _class.propTypes = {
    rtl: _propTypes2.default.bool,
    prefix: _propTypes2.default.string,
    locale: _propTypes2.default.object,
    mode: _propTypes4.default.mode,
    value: _propTypes2.default.arrayOf(_propTypes4.default.date),
    inputType: _propTypes4.default.inputType,
    handleCellState: _propTypes2.default.func,
    disabledDate: _propTypes2.default.func,
    justBeginInput: _propTypes2.default.bool,
    resetTime: _propTypes2.default.bool,
    showTime: _propTypes2.default.bool,
    timePanelProps: _propTypes2.default.object,
    disabledTime: _propTypes2.default.object,
    dateCellRender: _propTypes2.default.func,
    onCalendarChange: _propTypes2.default.func
}, _class.defaultProps = {
    disabledDate: function disabledDate() {
        return false;
    },
    justBeginInput: true
}, _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.disabledDate = function (v) {
        var _props3 = _this2.props,
            mode = _props3.mode,
            inputType = _props3.inputType,
            disabledDate = _props3.disabledDate,
            _props3$value = _props3.value,
            begin = _props3$value[0],
            end = _props3$value[1];

        var unit = (0, _util2.mode2unit)(mode);

        return disabledDate(v, mode) || inputType === END && begin && begin.isAfter(v, unit) || inputType === BEGIN && end && end.isBefore(v, unit);
    };

    this.onTimeSelect = function (v) {
        var _props4 = _this2.props,
            value = _props4.value,
            inputType = _props4.inputType;
        var begin = value[0],
            end = value[1];

        var curDateVal = value[inputType];
        if (!curDateVal) {
            curDateVal = inputType === BEGIN && end ? end : inputType === END && begin ? begin : (0, _util.datejs)();
        }
        curDateVal = (0, _util2.setTime)(curDateVal, v);

        _this2.handleSelect(curDateVal, true);
    };

    this.handleSelect = function (v, fromTimeChange) {
        var _props5 = _this2.props,
            value = _props5.value,
            inputType = _props5.inputType,
            resetTime = _props5.resetTime,
            onCalendarChange = _props5.onCalendarChange;

        var otherType = (0, _util2.switchInputType)(inputType);
        var newValue = [].concat(value);

        var defaultTime = _this2.state.defaultTime[inputType];
        var timeVal = null;

        // 如果不是选择时间面板触发的时间改变或不需要重置时间
        // 则需要设置时间值，优先级如下：
        // - 目前这个日期时间
        // - 默认时间
        // - 另一日期时间
        // - 当前时间
        if (!fromTimeChange && !resetTime) {
            timeVal = value[inputType] || defaultTime || value[otherType] || (0, _util.datejs)();
        }

        newValue[inputType === BEGIN ? 0 : 1] = (0, _util2.setTime)(v, timeVal);
        onCalendarChange(newValue);

        _util.func.invoke(_this2.props, 'onSelect', [newValue]);
    };

    this.handlePanelChange = function (v, mode, idx) {
        _this2.setState({
            mode: mode,
            panelValue: v,
            calendarIdx: idx
        });

        _util.func.invoke(_this2.props, 'onPanelChange', [v, mode]);
    };

    this.handleMouseEnter = function (value) {
        _this2.currentRaf && window.cancelAnimationFrame(_this2.currentRaf);
        _this2.currentRaf = window.requestAnimationFrame(function () {
            _this2.setState({
                curHoverValue: value
            });
        });
    };

    this.handleMouseLeave = function () {
        _this2.currentRaf && window.cancelAnimationFrame(_this2.currentRaf);
        _this2.setState({
            curHoverValue: null
        });
    };

    this.handleEdgeState = function (value, mode) {
        var unit = _this2.getUnitByMode(mode);

        switch (mode) {
            case DATE:
                {
                    var endDate = value.endOf('month');
                    var beginDate = value.startOf('month');
                    return beginDate.isSame(value, unit) ? 1 : endDate.isSame(value, unit) ? 2 : 0;
                }
            case YEAR:
                {
                    var year = value.year();

                    var beginYear = value.year() - value.year() % 10;
                    var endYear = beginYear + 9;
                    return year === beginYear ? 1 : year === endYear ? 2 : 0;
                }
            default:
                return 0;
        }
    };

    this.getCellClassName = function (value) {
        var _extends2;

        var _props6 = _this2.props,
            prefix = _props6.prefix,
            inputType = _props6.inputType,
            mode = _props6.mode;
        var curHoverValue = _this2.state.curHoverValue;
        var _props$value = _this2.props.value,
            begin = _props$value[0],
            end = _props$value[1];

        var unit = _this2.getUnitByMode(mode);

        var state = _this2.handleCellState(value, _this2.props.value);
        var prefixCls = prefix + 'calendar2-cell';

        var hoverClassName = void 0;
        if (curHoverValue) {
            var hoverValue = [].concat(_this2.props.value);
            hoverValue[inputType] = curHoverValue;
            var hoverBegin = hoverValue[0],
                hoverEnd = hoverValue[1];

            if (hoverBegin && hoverEnd && hoverBegin.isBefore(hoverEnd, unit)) {
                var _hoverClassName;

                var hoverState = _this2.handleCellState(value, hoverValue);

                hoverClassName = (_hoverClassName = {}, _hoverClassName[prefixCls + '-hover'] = hoverState >= SELECTED, _hoverClassName[prefixCls + '-hover-begin'] = hoverState === SELECTED_BEGIN, _hoverClassName[prefixCls + '-hover-end'] = hoverState === SELECTED_END, _hoverClassName[prefixCls + '-hover-end'] = hoverState === SELECTED_END, _hoverClassName);
            }
        }

        var rangeClassName = void 0;
        if (!_this2.hasModeChanged) {
            var _ref2, _ref3;

            var edgeState = _this2.handleEdgeState(value, mode);
            var isIllegal = end && begin && begin.isAfter(end);

            rangeClassName = mode === WEEK ? (_ref2 = {}, _ref2[prefixCls + '-week-range-begin'] = state === SELECTED_BEGIN, _ref2[prefixCls + '-week-range-end'] = state === SELECTED_END, _ref2) : (_ref3 = {}, _ref3[prefixCls + '-range-begin'] = state === SELECTED_BEGIN, _ref3[prefixCls + '-range-end'] = state === SELECTED_END, _ref3[prefixCls + '-range-begin-single'] = state >= SELECTED && (!end || end.isSame(begin, unit) || isIllegal), _ref3[prefixCls + '-range-end-single'] = state >= SELECTED && (!begin || begin.isSame(end, unit) || isIllegal), _ref3[prefixCls + '-edge-begin'] = edgeState === 1, _ref3[prefixCls + '-edge-end'] = edgeState === 2, _ref3);
        }

        return (0, _extends4.default)((_extends2 = {}, _extends2[prefixCls + '-selected'] = state >= SELECTED, _extends2), rangeClassName, hoverClassName);
    };

    this.handleCanlendarClick = function (_, _ref4) {
        var unit = _ref4.unit,
            num = _ref4.num;

        _this2.setState({
            panelValue: _this2.state.panelValue.clone().add(num, unit)
        });
    };

    this.renderRangeTime = function (sharedProps) {
        var _classnames2;

        var _props7 = _this2.props,
            value = _props7.value,
            prefix = _props7.prefix,
            showTime = _props7.showTime,
            inputType = _props7.inputType,
            _props7$timePanelProp = _props7.timePanelProps,
            timePanelProps = _props7$timePanelProp === undefined ? {} : _props7$timePanelProp,
            disabledTime = _props7.disabledTime;

        var className = (0, _classnames4.default)(prefix + 'range-picker2-panel', (_classnames2 = {}, _classnames2[prefix + 'range-picker2-panel-single'] = _this2.hasModeChanged, _classnames2));

        // 禁用时间
        var _disabledTime = void 0;
        if (showTime && !_this2.hasModeChanged && disabledTime) {
            _disabledTime = typeof disabledTime === 'function' ? disabledTime(value, inputType) : disabledTime;
        }

        return _react2.default.createElement('div', { key: 'range-time-panel', className: className }, _react2.default.createElement(_calendar2.default, (0, _extends4.default)({
            panelValue: _this2.state.panelValue
        }, sharedProps, {
            value: value[inputType],
            onPanelChange: _this2.handlePanelChange
        })), showTime && !_this2.hasModeChanged ? _react2.default.createElement(_timePanel2.default, {
            prefix: prefix,
            inputType: inputType,
            value: value[inputType] || _this2.state.defaultTime[inputType],
            onSelect: _this2.onTimeSelect,
            disabledTime: disabledTime,
            timePanelProps: (0, _extends4.default)({}, _disabledTime, timePanelProps)
        }) : null);
    };
}, _temp);
RangePanel.displayName = 'RangePanel';
exports.default = (0, _reactLifecyclesCompat.polyfill)(RangePanel);
module.exports = exports.default;
module.exports.default = exports.default;

/***/ }),
/* 475 */,
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(477);
module.exports = __webpack_require__(200);


/***/ }),
/* 477 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);
});